{"expireTime":9007200904342770000,"key":"transformer-remark-markdown-html-ast-272c80f954b42c4db7c4c181e4c4ca63--","val":{"type":"root","children":[{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":4,"offset":4}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"description: Review","position":{"start":{"line":4,"column":4,"offset":9},"end":{"line":4,"column":23,"offset":28}}}],"position":{"start":{"line":4,"column":1,"offset":6},"end":{"line":4,"column":23,"offset":28}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Review-Of-Previous-Concepts","position":{"start":{"line":6,"column":3,"offset":32},"end":{"line":6,"column":30,"offset":59}}}],"position":{"start":{"line":6,"column":1,"offset":30},"end":{"line":6,"column":30,"offset":59}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Review of Concepts","position":{"start":{"line":8,"column":5,"offset":65},"end":{"line":8,"column":23,"offset":83}}}],"position":{"start":{"line":8,"column":1,"offset":61},"end":{"line":8,"column":23,"offset":83}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Running JS Locally Concepts","position":{"start":{"line":10,"column":5,"offset":89},"end":{"line":10,"column":32,"offset":116}}}],"position":{"start":{"line":10,"column":1,"offset":85},"end":{"line":10,"column":32,"offset":116}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Match the commands ","position":{"start":{"line":12,"column":3,"offset":120},"end":{"line":12,"column":22,"offset":139}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ls"}],"position":{"start":{"line":12,"column":22,"offset":139},"end":{"line":12,"column":26,"offset":143}}},{"type":"text","value":", ","position":{"start":{"line":12,"column":26,"offset":143},"end":{"line":12,"column":28,"offset":145}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"cd"}],"position":{"start":{"line":12,"column":28,"offset":145},"end":{"line":12,"column":32,"offset":149}}},{"type":"text","value":", ","position":{"start":{"line":12,"column":32,"offset":149},"end":{"line":12,"column":34,"offset":151}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"pwd"}],"position":{"start":{"line":12,"column":34,"offset":151},"end":{"line":12,"column":39,"offset":156}}},{"type":"text","value":" to their descriptions","position":{"start":{"line":12,"column":39,"offset":156},"end":{"line":12,"column":61,"offset":178}}}],"position":{"start":{"line":12,"column":3,"offset":120},"end":{"line":12,"column":61,"offset":178}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ls"}],"position":{"start":{"line":13,"column":7,"offset":185},"end":{"line":13,"column":11,"offset":189}}},{"type":"text","value":" lists contents of current directory","position":{"start":{"line":13,"column":11,"offset":189},"end":{"line":13,"column":47,"offset":225}}}],"position":{"start":{"line":13,"column":5,"offset":183},"end":{"line":13,"column":47,"offset":225}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"cd"}],"position":{"start":{"line":14,"column":7,"offset":232},"end":{"line":14,"column":11,"offset":236}}},{"type":"text","value":" changes current directory","position":{"start":{"line":14,"column":11,"offset":236},"end":{"line":14,"column":37,"offset":262}}}],"position":{"start":{"line":14,"column":7,"offset":232},"end":{"line":14,"column":37,"offset":262}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"cd .."}],"position":{"start":{"line":15,"column":11,"offset":273},"end":{"line":15,"column":18,"offset":280}}},{"type":"text","value":" takes you up one level","position":{"start":{"line":15,"column":18,"offset":280},"end":{"line":15,"column":41,"offset":303}}}],"position":{"start":{"line":15,"column":9,"offset":271},"end":{"line":15,"column":41,"offset":303}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"cd"}],"position":{"start":{"line":16,"column":11,"offset":314},"end":{"line":16,"column":15,"offset":318}}},{"type":"text","value":" alone takes you back home","position":{"start":{"line":16,"column":15,"offset":318},"end":{"line":16,"column":41,"offset":344}}}],"position":{"start":{"line":16,"column":9,"offset":312},"end":{"line":16,"column":41,"offset":344}}},{"type":"text","value":"\n"}],"position":{"start":{"line":15,"column":9,"offset":271},"end":{"line":16,"column":41,"offset":344}}},{"type":"text","value":"\n"}],"position":{"start":{"line":14,"column":5,"offset":230},"end":{"line":16,"column":41,"offset":344}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"pwd"}],"position":{"start":{"line":17,"column":7,"offset":351},"end":{"line":17,"column":12,"offset":356}}},{"type":"text","value":" returns current directory","position":{"start":{"line":17,"column":12,"offset":356},"end":{"line":17,"column":38,"offset":382}}}],"position":{"start":{"line":17,"column":5,"offset":349},"end":{"line":17,"column":38,"offset":382}}},{"type":"text","value":"\n"}],"position":{"start":{"line":13,"column":5,"offset":183},"end":{"line":17,"column":38,"offset":382}}},{"type":"text","value":"\n"}],"position":{"start":{"line":12,"column":1,"offset":118},"end":{"line":17,"column":38,"offset":382}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Given a folder structure diagram, a list of 'cd ","position":{"start":{"line":18,"column":3,"offset":385},"end":{"line":18,"column":51,"offset":433}}},{"type":"text","value":"(","position":{"start":{"line":18,"column":51,"offset":433},"end":{"line":18,"column":53,"offset":435}}},{"type":"text","value":"path","position":{"start":{"line":18,"column":53,"offset":435},"end":{"line":18,"column":57,"offset":439}}},{"type":"text","value":")","position":{"start":{"line":18,"column":57,"offset":439},"end":{"line":18,"column":59,"offset":441}}},{"type":"text","value":"' commands and target files, match the paths to the target files.","position":{"start":{"line":18,"column":59,"offset":441},"end":{"line":18,"column":124,"offset":506}}}],"position":{"start":{"line":18,"column":1,"offset":383},"end":{"line":18,"column":124,"offset":506}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Use VSCode to create a folder. Within the folder create a .js file containing ","position":{"start":{"line":19,"column":3,"offset":509},"end":{"line":19,"column":81,"offset":587}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"console.log('hello new world');"}],"position":{"start":{"line":19,"column":81,"offset":587},"end":{"line":19,"column":114,"offset":620}}},{"type":"text","value":" and save it.","position":{"start":{"line":19,"column":114,"offset":620},"end":{"line":19,"column":127,"offset":633}}}],"position":{"start":{"line":19,"column":1,"offset":507},"end":{"line":19,"column":127,"offset":633}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Use node to execute a JavaScript file in the terminal","position":{"start":{"line":20,"column":3,"offset":636},"end":{"line":20,"column":56,"offset":689}}}],"position":{"start":{"line":20,"column":1,"offset":634},"end":{"line":20,"column":56,"offset":689}}},{"type":"text","value":"\n"}],"position":{"start":{"line":12,"column":1,"offset":118},"end":{"line":20,"column":56,"offset":689}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Plain Old JS Object Lesson Concepts","position":{"start":{"line":22,"column":5,"offset":695},"end":{"line":22,"column":40,"offset":730}}}],"position":{"start":{"line":22,"column":1,"offset":691},"end":{"line":22,"column":40,"offset":730}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Label variables as either Primitive vs. Reference","position":{"start":{"line":24,"column":3,"offset":734},"end":{"line":24,"column":52,"offset":783}}}],"position":{"start":{"line":24,"column":3,"offset":734},"end":{"line":24,"column":52,"offset":783}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"primitives: strings, booleans, numbers, null and undefined","position":{"start":{"line":25,"column":7,"offset":790},"end":{"line":25,"column":65,"offset":848}}}],"position":{"start":{"line":25,"column":7,"offset":790},"end":{"line":25,"column":65,"offset":848}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"primitives are immutable","position":{"start":{"line":26,"column":11,"offset":859},"end":{"line":26,"column":35,"offset":883}}}],"position":{"start":{"line":26,"column":9,"offset":857},"end":{"line":26,"column":35,"offset":883}}},{"type":"text","value":"\n"}],"position":{"start":{"line":26,"column":9,"offset":857},"end":{"line":26,"column":35,"offset":883}}},{"type":"text","value":"\n"}],"position":{"start":{"line":25,"column":5,"offset":788},"end":{"line":26,"column":35,"offset":883}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"refereces: objects ","position":{"start":{"line":27,"column":7,"offset":890},"end":{"line":27,"column":26,"offset":909}}},{"type":"text","value":"(","position":{"start":{"line":27,"column":26,"offset":909},"end":{"line":27,"column":28,"offset":911}}},{"type":"text","value":"including arrays","position":{"start":{"line":27,"column":28,"offset":911},"end":{"line":27,"column":44,"offset":927}}},{"type":"text","value":")","position":{"start":{"line":27,"column":44,"offset":927},"end":{"line":27,"column":46,"offset":929}}}],"position":{"start":{"line":27,"column":7,"offset":890},"end":{"line":27,"column":46,"offset":929}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"references are mutable","position":{"start":{"line":28,"column":11,"offset":940},"end":{"line":28,"column":33,"offset":962}}}],"position":{"start":{"line":28,"column":9,"offset":938},"end":{"line":28,"column":33,"offset":962}}},{"type":"text","value":"\n"}],"position":{"start":{"line":28,"column":9,"offset":938},"end":{"line":28,"column":33,"offset":962}}},{"type":"text","value":"\n"}],"position":{"start":{"line":27,"column":5,"offset":888},"end":{"line":28,"column":33,"offset":962}}},{"type":"text","value":"\n"}],"position":{"start":{"line":25,"column":5,"offset":788},"end":{"line":28,"column":33,"offset":962}}},{"type":"text","value":"\n"}],"position":{"start":{"line":24,"column":1,"offset":732},"end":{"line":28,"column":33,"offset":962}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Identify when to use ","position":{"start":{"line":29,"column":3,"offset":965},"end":{"line":29,"column":24,"offset":986}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"."}],"position":{"start":{"line":29,"column":24,"offset":986},"end":{"line":29,"column":27,"offset":989}}},{"type":"text","value":" vs ","position":{"start":{"line":29,"column":27,"offset":989},"end":{"line":29,"column":31,"offset":993}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"[]"}],"position":{"start":{"line":29,"column":31,"offset":993},"end":{"line":29,"column":35,"offset":997}}},{"type":"text","value":" when accessing values of an object","position":{"start":{"line":29,"column":35,"offset":997},"end":{"line":29,"column":70,"offset":1032}}}],"position":{"start":{"line":29,"column":3,"offset":965},"end":{"line":29,"column":70,"offset":1032}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"dot syntax ","position":{"start":{"line":30,"column":7,"offset":1039},"end":{"line":30,"column":18,"offset":1050}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"object.key"}],"position":{"start":{"line":30,"column":18,"offset":1050},"end":{"line":30,"column":30,"offset":1062}}}],"position":{"start":{"line":30,"column":7,"offset":1039},"end":{"line":30,"column":30,"offset":1062}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"easier to read","position":{"start":{"line":31,"column":11,"offset":1073},"end":{"line":31,"column":25,"offset":1087}}}],"position":{"start":{"line":31,"column":9,"offset":1071},"end":{"line":31,"column":25,"offset":1087}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"easier to write","position":{"start":{"line":32,"column":11,"offset":1098},"end":{"line":32,"column":26,"offset":1113}}}],"position":{"start":{"line":32,"column":9,"offset":1096},"end":{"line":32,"column":26,"offset":1113}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"cannot use variables as keys","position":{"start":{"line":33,"column":11,"offset":1124},"end":{"line":33,"column":39,"offset":1152}}}],"position":{"start":{"line":33,"column":9,"offset":1122},"end":{"line":33,"column":39,"offset":1152}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"keys cannot begin with a number","position":{"start":{"line":34,"column":11,"offset":1163},"end":{"line":34,"column":42,"offset":1194}}}],"position":{"start":{"line":34,"column":9,"offset":1161},"end":{"line":34,"column":42,"offset":1194}}},{"type":"text","value":"\n"}],"position":{"start":{"line":31,"column":9,"offset":1071},"end":{"line":34,"column":42,"offset":1194}}},{"type":"text","value":"\n"}],"position":{"start":{"line":30,"column":5,"offset":1037},"end":{"line":34,"column":42,"offset":1194}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"bracket notation ","position":{"start":{"line":35,"column":7,"offset":1201},"end":{"line":35,"column":24,"offset":1218}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"object[\"key]"}],"position":{"start":{"line":35,"column":24,"offset":1218},"end":{"line":35,"column":38,"offset":1232}}}],"position":{"start":{"line":35,"column":7,"offset":1201},"end":{"line":35,"column":38,"offset":1232}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"allows variables as keys","position":{"start":{"line":36,"column":11,"offset":1243},"end":{"line":36,"column":35,"offset":1267}}}],"position":{"start":{"line":36,"column":9,"offset":1241},"end":{"line":36,"column":35,"offset":1267}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"strings that start with numbers can be use as keys","position":{"start":{"line":37,"column":11,"offset":1278},"end":{"line":37,"column":61,"offset":1328}}}],"position":{"start":{"line":37,"column":9,"offset":1276},"end":{"line":37,"column":61,"offset":1328}}},{"type":"text","value":"\n"}],"position":{"start":{"line":36,"column":9,"offset":1241},"end":{"line":37,"column":61,"offset":1328}}},{"type":"text","value":"\n"}],"position":{"start":{"line":35,"column":5,"offset":1199},"end":{"line":37,"column":61,"offset":1328}}},{"type":"text","value":"\n"}],"position":{"start":{"line":30,"column":5,"offset":1037},"end":{"line":37,"column":61,"offset":1328}}},{"type":"text","value":"\n"}],"position":{"start":{"line":29,"column":1,"offset":963},"end":{"line":37,"column":61,"offset":1328}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Write an object literal with a variable key using interpolation","position":{"start":{"line":38,"column":3,"offset":1331},"end":{"line":38,"column":66,"offset":1394}}}],"position":{"start":{"line":38,"column":3,"offset":1331},"end":{"line":38,"column":66,"offset":1394}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"put it in brackets to access the value of the variable, rather than just make the value that string","position":{"start":{"line":40,"column":7,"offset":1402},"end":{"line":40,"column":106,"offset":1501}}}],"position":{"start":{"line":40,"column":7,"offset":1402},"end":{"line":40,"column":106,"offset":1501}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"let a = 'b';\nlet obj = { a: 'letter_a', [a]: 'letter b' };\n"}],"position":{"start":{"line":42,"column":9,"offset":1511},"end":{"line":45,"column":12,"offset":1603}}}],"position":{"start":{"line":42,"column":9,"offset":1511},"end":{"line":45,"column":12,"offset":1603}}},{"type":"text","value":"\n"}],"position":{"start":{"line":40,"column":5,"offset":1400},"end":{"line":45,"column":12,"offset":1603}}},{"type":"text","value":"\n"}],"position":{"start":{"line":40,"column":5,"offset":1400},"end":{"line":45,"column":12,"offset":1603}}},{"type":"text","value":"\n"}],"position":{"start":{"line":38,"column":1,"offset":1329},"end":{"line":46,"column":1,"offset":1604}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Use the ","position":{"start":{"line":47,"column":3,"offset":1607},"end":{"line":47,"column":11,"offset":1615}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"obj[key] !== undefined"}],"position":{"start":{"line":47,"column":11,"offset":1615},"end":{"line":47,"column":35,"offset":1639}}},{"type":"text","value":" pattern to check if a given variable that contains a key exists in an object","position":{"start":{"line":47,"column":35,"offset":1639},"end":{"line":47,"column":112,"offset":1716}}}],"position":{"start":{"line":47,"column":1,"offset":1605},"end":{"line":47,"column":112,"offset":1716}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"can also use ","position":{"start":{"line":48,"column":5,"offset":1721},"end":{"line":48,"column":18,"offset":1734}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"(key in object)"}],"position":{"start":{"line":48,"column":18,"offset":1734},"end":{"line":48,"column":35,"offset":1751}}},{"type":"text","value":" syntax interchangeably ","position":{"start":{"line":48,"column":35,"offset":1751},"end":{"line":48,"column":59,"offset":1775}}},{"type":"text","value":"(","position":{"start":{"line":48,"column":59,"offset":1775},"end":{"line":48,"column":61,"offset":1777}}},{"type":"text","value":"returns a boolean","position":{"start":{"line":48,"column":61,"offset":1777},"end":{"line":48,"column":78,"offset":1794}}},{"type":"text","value":")","position":{"start":{"line":48,"column":78,"offset":1794},"end":{"line":48,"column":80,"offset":1796}}}],"position":{"start":{"line":48,"column":3,"offset":1719},"end":{"line":48,"column":80,"offset":1796}}},{"type":"text","value":"\n"}],"position":{"start":{"line":48,"column":3,"offset":1719},"end":{"line":48,"column":80,"offset":1796}}},{"type":"text","value":"\n"}],"position":{"start":{"line":48,"column":1,"offset":1717},"end":{"line":48,"column":80,"offset":1796}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Utilize Object.keys and Object.values in a function","position":{"start":{"line":49,"column":3,"offset":1799},"end":{"line":49,"column":54,"offset":1850}}}],"position":{"start":{"line":49,"column":3,"offset":1799},"end":{"line":49,"column":54,"offset":1850}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Object.keys(obj)"}],"position":{"start":{"line":50,"column":7,"offset":1857},"end":{"line":50,"column":25,"offset":1875}}},{"type":"text","value":" returns an array of all the keys in ","position":{"start":{"line":50,"column":25,"offset":1875},"end":{"line":50,"column":62,"offset":1912}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"obj"}],"position":{"start":{"line":50,"column":62,"offset":1912},"end":{"line":50,"column":67,"offset":1917}}}],"position":{"start":{"line":50,"column":5,"offset":1855},"end":{"line":50,"column":67,"offset":1917}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Object.values(obj)"}],"position":{"start":{"line":51,"column":7,"offset":1924},"end":{"line":51,"column":27,"offset":1944}}},{"type":"text","value":" returns an array of the values in ","position":{"start":{"line":51,"column":27,"offset":1944},"end":{"line":51,"column":62,"offset":1979}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"obj"}],"position":{"start":{"line":51,"column":62,"offset":1979},"end":{"line":51,"column":67,"offset":1984}}}],"position":{"start":{"line":51,"column":5,"offset":1922},"end":{"line":51,"column":67,"offset":1984}}},{"type":"text","value":"\n"}],"position":{"start":{"line":50,"column":5,"offset":1855},"end":{"line":51,"column":67,"offset":1984}}},{"type":"text","value":"\n"}],"position":{"start":{"line":49,"column":1,"offset":1797},"end":{"line":51,"column":67,"offset":1984}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Iterate through an object using a ","position":{"start":{"line":52,"column":3,"offset":1987},"end":{"line":52,"column":37,"offset":2021}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"for in"}],"position":{"start":{"line":52,"column":37,"offset":2021},"end":{"line":52,"column":45,"offset":2029}}},{"type":"text","value":" loop","position":{"start":{"line":52,"column":45,"offset":2029},"end":{"line":52,"column":50,"offset":2034}}}],"position":{"start":{"line":52,"column":3,"offset":1987},"end":{"line":52,"column":50,"offset":2034}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"let printValues = function (obj) {\n    for (let key in obj) {\n        let value = obj[key];\n        console.log(value);\n    }\n};\n"}],"position":{"start":{"line":54,"column":5,"offset":2040},"end":{"line":61,"column":8,"offset":2206}}}],"position":{"start":{"line":54,"column":5,"offset":2040},"end":{"line":61,"column":8,"offset":2206}}},{"type":"text","value":"\n"}],"position":{"start":{"line":52,"column":1,"offset":1985},"end":{"line":62,"column":1,"offset":2207}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define a function that utilizes ","position":{"start":{"line":63,"column":3,"offset":2210},"end":{"line":63,"column":35,"offset":2242}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"...rest"}],"position":{"start":{"line":63,"column":35,"offset":2242},"end":{"line":63,"column":44,"offset":2251}}},{"type":"text","value":" syntax to accept an arbitrary number of arguments","position":{"start":{"line":63,"column":44,"offset":2251},"end":{"line":63,"column":94,"offset":2301}}}],"position":{"start":{"line":63,"column":3,"offset":2210},"end":{"line":63,"column":94,"offset":2301}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"...rest"}],"position":{"start":{"line":65,"column":7,"offset":2309},"end":{"line":65,"column":16,"offset":2318}}},{"type":"text","value":" syntax will store all additional arguments in an array","position":{"start":{"line":65,"column":16,"offset":2318},"end":{"line":65,"column":71,"offset":2373}}}],"position":{"start":{"line":65,"column":5,"offset":2307},"end":{"line":65,"column":71,"offset":2373}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"array will be empty if there are no additional arguments","position":{"start":{"line":66,"column":7,"offset":2380},"end":{"line":66,"column":63,"offset":2436}}}],"position":{"start":{"line":66,"column":7,"offset":2380},"end":{"line":66,"column":63,"offset":2436}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"let myFunction = function (str, ...strs) {\n    console.log('The first string is ' + str);\n    console.log('The rest of the strings are:');\n    strs.forEach(function (str) {\n        console.log(str);\n    });\n};\n"}],"position":{"start":{"line":68,"column":9,"offset":2446},"end":{"line":76,"column":12,"offset":2729}}}],"position":{"start":{"line":68,"column":9,"offset":2446},"end":{"line":76,"column":12,"offset":2729}}},{"type":"text","value":"\n"}],"position":{"start":{"line":66,"column":5,"offset":2378},"end":{"line":76,"column":12,"offset":2729}}},{"type":"text","value":"\n"}],"position":{"start":{"line":65,"column":5,"offset":2307},"end":{"line":76,"column":12,"offset":2729}}},{"type":"text","value":"\n"}],"position":{"start":{"line":63,"column":1,"offset":2208},"end":{"line":76,"column":12,"offset":2729}}},{"type":"text","value":"\n"}],"position":{"start":{"line":24,"column":1,"offset":732},"end":{"line":76,"column":12,"offset":2729}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[],"position":{"start":{"line":78,"column":1,"offset":2731},"end":{"line":78,"column":4,"offset":2734}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Use ","position":{"start":{"line":80,"column":3,"offset":2738},"end":{"line":80,"column":7,"offset":2742}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"...spread"}],"position":{"start":{"line":80,"column":7,"offset":2742},"end":{"line":80,"column":18,"offset":2753}}},{"type":"text","value":" syntax for Object literals and Array literals","position":{"start":{"line":80,"column":18,"offset":2753},"end":{"line":80,"column":64,"offset":2799}}}],"position":{"start":{"line":80,"column":3,"offset":2738},"end":{"line":80,"column":64,"offset":2799}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"let arr1 = ['a', 'b', 'c'];\nlet longer = [...arr1, 'd', 'e']; // [\"a\", \"b\", \"c\", \"d\", \"e\"]\n// without spread syntax, this would give you a nested array\nlet withoutRest = [arr1, 'd', 'e']; // [[\"a\", \"b\", \"c\"], \"d\", \"e\"]\n"}],"position":{"start":{"line":82,"column":5,"offset":2805},"end":{"line":87,"column":8,"offset":3053}}}],"position":{"start":{"line":82,"column":5,"offset":2805},"end":{"line":87,"column":8,"offset":3053}}},{"type":"text","value":"\n"}],"position":{"start":{"line":80,"column":1,"offset":2736},"end":{"line":88,"column":1,"offset":3054}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Destructure an array to reference specific elements","position":{"start":{"line":89,"column":3,"offset":3057},"end":{"line":89,"column":54,"offset":3108}}}],"position":{"start":{"line":89,"column":3,"offset":3057},"end":{"line":89,"column":54,"offset":3108}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"`","position":{"start":{"line":91,"column":5,"offset":3114},"end":{"line":91,"column":7,"offset":3116}}},{"type":"text","value":"`","position":{"start":{"line":91,"column":7,"offset":3116},"end":{"line":91,"column":9,"offset":3118}}},{"type":"text","value":"`","position":{"start":{"line":91,"column":9,"offset":3118},"end":{"line":91,"column":11,"offset":3120}}},{"type":"text","value":"javascript","position":{"start":{"line":91,"column":11,"offset":3120},"end":{"line":91,"column":21,"offset":3130}}}],"position":{"start":{"line":91,"column":5,"offset":3114},"end":{"line":91,"column":21,"offset":3130}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"let array = ","position":{"start":{"line":93,"column":5,"offset":3136},"end":{"line":93,"column":17,"offset":3148}}},{"type":"text","value":"[","position":{"start":{"line":93,"column":17,"offset":3148},"end":{"line":93,"column":19,"offset":3150}}},{"type":"text","value":"35,9","position":{"start":{"line":93,"column":19,"offset":3150},"end":{"line":93,"column":23,"offset":3154}}},{"type":"text","value":"]","position":{"start":{"line":93,"column":23,"offset":3154},"end":{"line":93,"column":25,"offset":3156}}},{"type":"text","value":";","position":{"start":{"line":93,"column":25,"offset":3156},"end":{"line":93,"column":26,"offset":3157}}}],"position":{"start":{"line":93,"column":5,"offset":3136},"end":{"line":93,"column":26,"offset":3157}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"let ","position":{"start":{"line":95,"column":5,"offset":3163},"end":{"line":95,"column":9,"offset":3167}}},{"type":"text","value":"[","position":{"start":{"line":95,"column":9,"offset":3167},"end":{"line":95,"column":11,"offset":3169}}},{"type":"text","value":"firstEl, secondEl","position":{"start":{"line":95,"column":11,"offset":3169},"end":{"line":95,"column":28,"offset":3186}}},{"type":"text","value":"]","position":{"start":{"line":95,"column":28,"offset":3186},"end":{"line":95,"column":30,"offset":3188}}},{"type":"text","value":" = array;","position":{"start":{"line":95,"column":30,"offset":3188},"end":{"line":95,"column":39,"offset":3197}}}],"position":{"start":{"line":95,"column":5,"offset":3163},"end":{"line":95,"column":39,"offset":3197}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"console.log","position":{"start":{"line":97,"column":5,"offset":3203},"end":{"line":97,"column":16,"offset":3214}}},{"type":"text","value":"(","position":{"start":{"line":97,"column":16,"offset":3214},"end":{"line":97,"column":18,"offset":3216}}},{"type":"text","value":"firstEl","position":{"start":{"line":97,"column":18,"offset":3216},"end":{"line":97,"column":25,"offset":3223}}},{"type":"text","value":")","position":{"start":{"line":97,"column":25,"offset":3223},"end":{"line":97,"column":27,"offset":3225}}},{"type":"text","value":"; // =","position":{"start":{"line":97,"column":27,"offset":3225},"end":{"line":97,"column":33,"offset":3231}}},{"type":"text","value":">","position":{"start":{"line":97,"column":33,"offset":3231},"end":{"line":97,"column":37,"offset":3235}}},{"type":"text","value":" 35","position":{"start":{"line":97,"column":37,"offset":3235},"end":{"line":97,"column":40,"offset":3238}}}],"position":{"start":{"line":97,"column":5,"offset":3203},"end":{"line":97,"column":40,"offset":3238}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"console.log","position":{"start":{"line":99,"column":5,"offset":3244},"end":{"line":99,"column":16,"offset":3255}}},{"type":"text","value":"(","position":{"start":{"line":99,"column":16,"offset":3255},"end":{"line":99,"column":18,"offset":3257}}},{"type":"text","value":"secondEl","position":{"start":{"line":99,"column":18,"offset":3257},"end":{"line":99,"column":26,"offset":3265}}},{"type":"text","value":")","position":{"start":{"line":99,"column":26,"offset":3265},"end":{"line":99,"column":28,"offset":3267}}},{"type":"text","value":"; // =","position":{"start":{"line":99,"column":28,"offset":3267},"end":{"line":99,"column":34,"offset":3273}}},{"type":"text","value":">","position":{"start":{"line":99,"column":34,"offset":3273},"end":{"line":99,"column":38,"offset":3277}}},{"type":"text","value":" 9","position":{"start":{"line":99,"column":38,"offset":3277},"end":{"line":99,"column":40,"offset":3279}}}],"position":{"start":{"line":99,"column":5,"offset":3244},"end":{"line":99,"column":40,"offset":3279}}},{"type":"text","value":"\n"}],"position":{"start":{"line":89,"column":1,"offset":3055},"end":{"line":99,"column":40,"offset":3279}}},{"type":"text","value":"\n"}],"position":{"start":{"line":80,"column":1,"offset":2736},"end":{"line":99,"column":40,"offset":3279}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"// can also destructure using ... syntax let array = ","position":{"start":{"line":101,"column":1,"offset":3281},"end":{"line":101,"column":54,"offset":3334}}},{"type":"text","value":"[","position":{"start":{"line":101,"column":54,"offset":3334},"end":{"line":101,"column":56,"offset":3336}}},{"type":"text","value":"35,9,14","position":{"start":{"line":101,"column":56,"offset":3336},"end":{"line":101,"column":63,"offset":3343}}},{"type":"text","value":"]","position":{"start":{"line":101,"column":63,"offset":3343},"end":{"line":101,"column":65,"offset":3345}}},{"type":"text","value":"; let ","position":{"start":{"line":101,"column":65,"offset":3345},"end":{"line":101,"column":71,"offset":3351}}},{"type":"text","value":"[","position":{"start":{"line":101,"column":71,"offset":3351},"end":{"line":101,"column":73,"offset":3353}}},{"type":"text","value":"head, ...tail","position":{"start":{"line":101,"column":73,"offset":3353},"end":{"line":101,"column":86,"offset":3366}}},{"type":"text","value":"]","position":{"start":{"line":101,"column":86,"offset":3366},"end":{"line":101,"column":88,"offset":3368}}},{"type":"text","value":" = array; console.log","position":{"start":{"line":101,"column":88,"offset":3368},"end":{"line":101,"column":109,"offset":3389}}},{"type":"text","value":"(","position":{"start":{"line":101,"column":109,"offset":3389},"end":{"line":101,"column":111,"offset":3391}}},{"type":"text","value":"head","position":{"start":{"line":101,"column":111,"offset":3391},"end":{"line":101,"column":115,"offset":3395}}},{"type":"text","value":")","position":{"start":{"line":101,"column":115,"offset":3395},"end":{"line":101,"column":117,"offset":3397}}},{"type":"text","value":"; // =","position":{"start":{"line":101,"column":117,"offset":3397},"end":{"line":101,"column":123,"offset":3403}}},{"type":"text","value":">","position":{"start":{"line":101,"column":123,"offset":3403},"end":{"line":101,"column":127,"offset":3407}}},{"type":"text","value":" 35 console.log","position":{"start":{"line":101,"column":127,"offset":3407},"end":{"line":101,"column":142,"offset":3422}}},{"type":"text","value":"(","position":{"start":{"line":101,"column":142,"offset":3422},"end":{"line":101,"column":144,"offset":3424}}},{"type":"text","value":"tail","position":{"start":{"line":101,"column":144,"offset":3424},"end":{"line":101,"column":148,"offset":3428}}},{"type":"text","value":")","position":{"start":{"line":101,"column":148,"offset":3428},"end":{"line":101,"column":150,"offset":3430}}},{"type":"text","value":"; // =","position":{"start":{"line":101,"column":150,"offset":3430},"end":{"line":101,"column":156,"offset":3436}}},{"type":"text","value":">","position":{"start":{"line":101,"column":156,"offset":3436},"end":{"line":101,"column":160,"offset":3440}}},{"type":"text","value":" ","position":{"start":{"line":101,"column":160,"offset":3440},"end":{"line":101,"column":161,"offset":3441}}},{"type":"text","value":"[","position":{"start":{"line":101,"column":161,"offset":3441},"end":{"line":101,"column":163,"offset":3443}}},{"type":"text","value":"9, 14","position":{"start":{"line":101,"column":163,"offset":3443},"end":{"line":101,"column":168,"offset":3448}}},{"type":"text","value":"]","position":{"start":{"line":101,"column":168,"offset":3448},"end":{"line":101,"column":170,"offset":3450}}}],"position":{"start":{"line":101,"column":1,"offset":3281},"end":{"line":101,"column":170,"offset":3450}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"- Destructure an object to reference specific values\n   - if you want to use variable names that don't match the keys, you can use aliasing\n      - `let { oldkeyname: newkeyname } = object`\n   - rule of thumb—only destructure values from objects that are two levels deep\n```js\nlet obj = {\n   name: \"Wilfred\",\n   appearance: [\"short\", \"mustache\"],\n   favorites: {\n      color: \"mauve\",\n      food: \"spaghetti squash\",\n      number: 3\n   }\n}\n// with variable names that match keys\nlet { name, appearance } = obj;\nconsole.log(name); // \"Wilfred\"\nconsole.log(appearance); // [\"short\", \"mustache\"]\n\n// with new variable names (aliasing)\nlet {name: myName, appearance: myAppearance} = obj;\n\nconsole.log(myName); // \"Wilfred\"\nconsole.log(myAppearance); // [\"short\", \"mustache\"]\n\n// in a function call\nlet sayHello = function({name}) {\nconsole.log(\"Hello, \" + name); // \"Hello Wilfred\"\n}\n\n// nested objects + aliasing\nlet { favorites: {color, food: vegetable} } = obj;\nconsole.log(color, vegetable); //=> mauve spaghetti squash\n"}],"position":{"start":{"line":103,"column":1,"offset":3452},"end":{"line":137,"column":4,"offset":4481}}}],"position":{"start":{"line":103,"column":1,"offset":3452},"end":{"line":137,"column":4,"offset":4481}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Write a function that accepts a array as an argument and returns an object representing the count of each character in the array","position":{"start":{"line":139,"column":3,"offset":4485},"end":{"line":139,"column":131,"offset":4613}}}],"position":{"start":{"line":139,"column":3,"offset":4485},"end":{"line":139,"column":131,"offset":4613}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"//\nlet elementCounts = function (array) {\n    let obj = {};\n    array.forEach(function (el) {\n        if (el in obj) obj[el] += 1;\n        else obj[el] = 1;\n    });\n    return obj;\n};\nconsole.log(elementCounts(['e', 'f', 'g', 'f'])); // => Object {e: 1, f: 2, g: 1}\n"}],"position":{"start":{"line":141,"column":5,"offset":4619},"end":{"line":152,"column":8,"offset":4938}}}],"position":{"start":{"line":141,"column":5,"offset":4619},"end":{"line":152,"column":8,"offset":4938}}},{"type":"text","value":"\n"}],"position":{"start":{"line":139,"column":1,"offset":4483},"end":{"line":152,"column":8,"offset":4938}}},{"type":"text","value":"\n"}],"position":{"start":{"line":139,"column":1,"offset":4483},"end":{"line":152,"column":8,"offset":4938}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Callbacks Lesson Concepts","position":{"start":{"line":154,"column":5,"offset":4944},"end":{"line":154,"column":30,"offset":4969}}}],"position":{"start":{"line":154,"column":1,"offset":4940},"end":{"line":154,"column":30,"offset":4969}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given multiple plausible reasons, identify why functions are called \"First Class Objects\" in JavaScript.","position":{"start":{"line":156,"column":3,"offset":4973},"end":{"line":156,"column":107,"offset":5077}}}],"position":{"start":{"line":156,"column":3,"offset":4973},"end":{"line":156,"column":107,"offset":5077}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"they can be stored in variables, passed as arguments to other functions, and serve as return value for a function","position":{"start":{"line":157,"column":7,"offset":5084},"end":{"line":157,"column":120,"offset":5197}}}],"position":{"start":{"line":157,"column":5,"offset":5082},"end":{"line":157,"column":120,"offset":5197}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"supports same basic operations as other types ","position":{"start":{"line":158,"column":7,"offset":5204},"end":{"line":158,"column":53,"offset":5250}}},{"type":"text","value":"(","position":{"start":{"line":158,"column":53,"offset":5250},"end":{"line":158,"column":55,"offset":5252}}},{"type":"text","value":"strings, bools, numbers","position":{"start":{"line":158,"column":55,"offset":5252},"end":{"line":158,"column":78,"offset":5275}}},{"type":"text","value":")","position":{"start":{"line":158,"column":78,"offset":5275},"end":{"line":158,"column":80,"offset":5277}}}],"position":{"start":{"line":158,"column":5,"offset":5202},"end":{"line":158,"column":80,"offset":5277}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"higher-order functions take functions as arguments or return functions as values","position":{"start":{"line":159,"column":7,"offset":5284},"end":{"line":159,"column":87,"offset":5364}}}],"position":{"start":{"line":159,"column":5,"offset":5282},"end":{"line":159,"column":87,"offset":5364}}},{"type":"text","value":"\n"}],"position":{"start":{"line":157,"column":5,"offset":5082},"end":{"line":159,"column":87,"offset":5364}}},{"type":"text","value":"\n"}],"position":{"start":{"line":156,"column":1,"offset":4971},"end":{"line":159,"column":87,"offset":5364}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Given a code snippet containing an anonymous callback, a named callback, and multiple ","position":{"start":{"line":160,"column":3,"offset":5367},"end":{"line":160,"column":89,"offset":5453}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"console.log"}],"position":{"start":{"line":160,"column":89,"offset":5453},"end":{"line":160,"column":102,"offset":5466}}},{"type":"text","value":"s, predict what will be printed","position":{"start":{"line":160,"column":102,"offset":5466},"end":{"line":160,"column":133,"offset":5497}}}],"position":{"start":{"line":160,"column":1,"offset":5365},"end":{"line":160,"column":133,"offset":5497}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"what is this referring to?","position":{"start":{"line":161,"column":5,"offset":5502},"end":{"line":161,"column":31,"offset":5528}}}],"position":{"start":{"line":161,"column":3,"offset":5500},"end":{"line":161,"column":31,"offset":5528}}},{"type":"text","value":"\n"}],"position":{"start":{"line":161,"column":3,"offset":5500},"end":{"line":161,"column":31,"offset":5528}}},{"type":"text","value":"\n"}],"position":{"start":{"line":161,"column":1,"offset":5498},"end":{"line":161,"column":31,"offset":5528}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Write a function that takes in a value and two callbacks. The function should return the result of the callback that is greater.","position":{"start":{"line":162,"column":3,"offset":5531},"end":{"line":162,"column":131,"offset":5659}}}],"position":{"start":{"line":162,"column":1,"offset":5529},"end":{"line":162,"column":131,"offset":5659}}},{"type":"text","value":"\n"}],"position":{"start":{"line":156,"column":1,"offset":4971},"end":{"line":162,"column":131,"offset":5659}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"let greaterCB = function (val, callback1, callback2) {\n    if (callback1(val) > callback2(val)) {\n        return callback1(val);\n    }\n    return callback2(val);\n};\n\nlet greaterCB = function (val, callback1, callback2) {\n    if (callback1(val) > callback2(val)) {\n        return callback1(val);\n    }\n    return callback2(val);\n};\n"}],"position":{"start":{"line":164,"column":1,"offset":5661},"end":{"line":178,"column":4,"offset":6001}}}],"position":{"start":{"line":164,"column":1,"offset":5661},"end":{"line":178,"column":4,"offset":6001}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"// shorter version let greaterCB = function","position":{"start":{"line":180,"column":1,"offset":6003},"end":{"line":180,"column":44,"offset":6046}}},{"type":"text","value":"(","position":{"start":{"line":180,"column":44,"offset":6046},"end":{"line":180,"column":46,"offset":6048}}},{"type":"text","value":"val, callback1, callback2","position":{"start":{"line":180,"column":46,"offset":6048},"end":{"line":180,"column":71,"offset":6073}}},{"type":"text","value":")","position":{"start":{"line":180,"column":71,"offset":6073},"end":{"line":180,"column":73,"offset":6075}}},{"type":"text","value":" { return Math.max","position":{"start":{"line":180,"column":73,"offset":6075},"end":{"line":180,"column":91,"offset":6093}}},{"type":"text","value":"(","position":{"start":{"line":180,"column":91,"offset":6093},"end":{"line":180,"column":93,"offset":6095}}},{"type":"text","value":"callback1","position":{"start":{"line":180,"column":93,"offset":6095},"end":{"line":180,"column":102,"offset":6104}}},{"type":"text","value":"(","position":{"start":{"line":180,"column":102,"offset":6104},"end":{"line":180,"column":104,"offset":6106}}},{"type":"text","value":"val","position":{"start":{"line":180,"column":104,"offset":6106},"end":{"line":180,"column":107,"offset":6109}}},{"type":"text","value":")","position":{"start":{"line":180,"column":107,"offset":6109},"end":{"line":180,"column":109,"offset":6111}}},{"type":"text","value":", callback2","position":{"start":{"line":180,"column":109,"offset":6111},"end":{"line":180,"column":120,"offset":6122}}},{"type":"text","value":"(","position":{"start":{"line":180,"column":120,"offset":6122},"end":{"line":180,"column":122,"offset":6124}}},{"type":"text","value":"val","position":{"start":{"line":180,"column":122,"offset":6124},"end":{"line":180,"column":125,"offset":6127}}},{"type":"text","value":")","position":{"start":{"line":180,"column":125,"offset":6127},"end":{"line":180,"column":127,"offset":6129}}},{"type":"text","value":")","position":{"start":{"line":180,"column":127,"offset":6129},"end":{"line":180,"column":129,"offset":6131}}},{"type":"text","value":"; } // even shorter, cause why not let greaterCB = ","position":{"start":{"line":180,"column":129,"offset":6131},"end":{"line":180,"column":180,"offset":6182}}},{"type":"text","value":"(","position":{"start":{"line":180,"column":180,"offset":6182},"end":{"line":180,"column":182,"offset":6184}}},{"type":"text","value":"val, cb1, cb2","position":{"start":{"line":180,"column":182,"offset":6184},"end":{"line":180,"column":195,"offset":6197}}},{"type":"text","value":")","position":{"start":{"line":180,"column":195,"offset":6197},"end":{"line":180,"column":197,"offset":6199}}},{"type":"text","value":" =","position":{"start":{"line":180,"column":197,"offset":6199},"end":{"line":180,"column":199,"offset":6201}}},{"type":"text","value":">","position":{"start":{"line":180,"column":199,"offset":6201},"end":{"line":180,"column":203,"offset":6205}}},{"type":"text","value":" Math.max","position":{"start":{"line":180,"column":203,"offset":6205},"end":{"line":180,"column":212,"offset":6214}}},{"type":"text","value":"(","position":{"start":{"line":180,"column":212,"offset":6214},"end":{"line":180,"column":214,"offset":6216}}},{"type":"text","value":"cb1","position":{"start":{"line":180,"column":214,"offset":6216},"end":{"line":180,"column":217,"offset":6219}}},{"type":"text","value":"(","position":{"start":{"line":180,"column":217,"offset":6219},"end":{"line":180,"column":219,"offset":6221}}},{"type":"text","value":"val","position":{"start":{"line":180,"column":219,"offset":6221},"end":{"line":180,"column":222,"offset":6224}}},{"type":"text","value":")","position":{"start":{"line":180,"column":222,"offset":6224},"end":{"line":180,"column":224,"offset":6226}}},{"type":"text","value":", cb2","position":{"start":{"line":180,"column":224,"offset":6226},"end":{"line":180,"column":229,"offset":6231}}},{"type":"text","value":"(","position":{"start":{"line":180,"column":229,"offset":6231},"end":{"line":180,"column":231,"offset":6233}}},{"type":"text","value":"val","position":{"start":{"line":180,"column":231,"offset":6233},"end":{"line":180,"column":234,"offset":6236}}},{"type":"text","value":")","position":{"start":{"line":180,"column":234,"offset":6236},"end":{"line":180,"column":236,"offset":6238}}},{"type":"text","value":")","position":{"start":{"line":180,"column":236,"offset":6238},"end":{"line":180,"column":238,"offset":6240}}},{"type":"text","value":";","position":{"start":{"line":180,"column":238,"offset":6240},"end":{"line":180,"column":239,"offset":6241}}}],"position":{"start":{"line":180,"column":1,"offset":6003},"end":{"line":180,"column":239,"offset":6241}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"- Write a function, myMap, that takes in an array and a callback as arguments. The function should mimic the behavior of `Array#map`.\n```js\nlet myMap = function(array, callback) {\n   let newArr = [];\n   for (let i = 0; i < array.length; i ++) {\n      mapped = callback(array[i], i, array);\n      newArr.push(mapped);\n   }\n   return newArr;\n}\nconsole.log( myMap([16,25,36], Math.sqrt)); // => [4, 5, 6];\n\nlet myMapArrow = (array, callback) => {\n   let newArr = [];\n   array.forEach( (ele, ind, array) => {\n      newArr.push(callback(ele, ind, array));\n   })\n   return newArr;\n}\nconsole.log(myMapArrow([16,25,36], Math.sqrt)); // => [4, 5, 6];\n"}],"position":{"start":{"line":182,"column":1,"offset":6243},"end":{"line":203,"column":4,"offset":6894}}}],"position":{"start":{"line":182,"column":1,"offset":6243},"end":{"line":203,"column":4,"offset":6894}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Write a function, myFilter, that takes in an array and a callback as arguments. The function should mimic the behavior of ","position":{"start":{"line":205,"column":3,"offset":6898},"end":{"line":205,"column":125,"offset":7020}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Array#filter"}],"position":{"start":{"line":205,"column":125,"offset":7020},"end":{"line":205,"column":139,"offset":7034}}},{"type":"text","value":".","position":{"start":{"line":205,"column":139,"offset":7034},"end":{"line":205,"column":140,"offset":7035}}}],"position":{"start":{"line":205,"column":3,"offset":6898},"end":{"line":205,"column":140,"offset":7035}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"let myFilter = function (array, callback) {\n    let filtered = [];\n    for (let i = 0; i < array.length; i++) {\n        if (callback(array[i])) {\n            filtered.push(array[i], i, array);\n        }\n    }\n};\n"}],"position":{"start":{"line":207,"column":5,"offset":7041},"end":{"line":216,"column":8,"offset":7298}}}],"position":{"start":{"line":207,"column":5,"offset":7041},"end":{"line":216,"column":8,"offset":7298}}},{"type":"text","value":"\n"}],"position":{"start":{"line":205,"column":1,"offset":6896},"end":{"line":217,"column":1,"offset":7299}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Write a function, myEvery, that takes in an array and a callback as arguments. The function should mimic the behavior of ","position":{"start":{"line":218,"column":3,"offset":7302},"end":{"line":218,"column":124,"offset":7423}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Array#every"}],"position":{"start":{"line":218,"column":124,"offset":7423},"end":{"line":218,"column":137,"offset":7436}}},{"type":"text","value":".","position":{"start":{"line":218,"column":137,"offset":7436},"end":{"line":218,"column":138,"offset":7437}}}],"position":{"start":{"line":218,"column":3,"offset":7302},"end":{"line":218,"column":138,"offset":7437}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"let myEvery = function (array, callback) {\n    for (let i = 0; i < array.length; i++) {\n        if (!callback(array[i], i, array)) {\n            return false;\n        }\n    }\n    return true;\n};\n// with arrow function syntax\nlet myEvery = (array, callback) => {\n    for (let i = 0; i < array.length; i++) {\n        if (!callback(array[i])) {\n            return false;\n        }\n    }\n    return true;\n};\n"}],"position":{"start":{"line":220,"column":5,"offset":7443},"end":{"line":238,"column":8,"offset":7928}}}],"position":{"start":{"line":220,"column":5,"offset":7443},"end":{"line":238,"column":8,"offset":7928}}},{"type":"text","value":"\n"}],"position":{"start":{"line":218,"column":1,"offset":7300},"end":{"line":238,"column":8,"offset":7928}}},{"type":"text","value":"\n"}],"position":{"start":{"line":205,"column":1,"offset":6896},"end":{"line":238,"column":8,"offset":7928}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Scope Lesson Concepts","position":{"start":{"line":240,"column":5,"offset":7934},"end":{"line":240,"column":26,"offset":7955}}}],"position":{"start":{"line":240,"column":1,"offset":7930},"end":{"line":240,"column":26,"offset":7955}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Identify the difference between ","position":{"start":{"line":242,"column":3,"offset":7959},"end":{"line":242,"column":35,"offset":7991}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}],"position":{"start":{"line":242,"column":35,"offset":7991},"end":{"line":242,"column":42,"offset":7998}}},{"type":"text","value":", ","position":{"start":{"line":242,"column":42,"offset":7998},"end":{"line":242,"column":44,"offset":8000}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"let"}],"position":{"start":{"line":242,"column":44,"offset":8000},"end":{"line":242,"column":49,"offset":8005}}},{"type":"text","value":", and ","position":{"start":{"line":242,"column":49,"offset":8005},"end":{"line":242,"column":55,"offset":8011}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"var"}],"position":{"start":{"line":242,"column":55,"offset":8011},"end":{"line":242,"column":60,"offset":8016}}},{"type":"text","value":" declarations","position":{"start":{"line":242,"column":60,"offset":8016},"end":{"line":242,"column":73,"offset":8029}}}],"position":{"start":{"line":242,"column":3,"offset":7959},"end":{"line":242,"column":73,"offset":8029}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}],"position":{"start":{"line":243,"column":7,"offset":8036},"end":{"line":243,"column":14,"offset":8043}}},{"type":"text","value":" - cannot reassign variable, scoped to block","position":{"start":{"line":243,"column":14,"offset":8043},"end":{"line":243,"column":58,"offset":8087}}}],"position":{"start":{"line":243,"column":5,"offset":8034},"end":{"line":243,"column":58,"offset":8087}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"let"}],"position":{"start":{"line":244,"column":7,"offset":8094},"end":{"line":244,"column":12,"offset":8099}}},{"type":"text","value":" - can reassign variable, scoped to block","position":{"start":{"line":244,"column":12,"offset":8099},"end":{"line":244,"column":53,"offset":8140}}}],"position":{"start":{"line":244,"column":5,"offset":8092},"end":{"line":244,"column":53,"offset":8140}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"var"}],"position":{"start":{"line":245,"column":7,"offset":8147},"end":{"line":245,"column":12,"offset":8152}}},{"type":"text","value":" - outdated, may or may not be reassigned, scoped to function. can be not just reassigned, but also redeclared!","position":{"start":{"line":245,"column":12,"offset":8152},"end":{"line":245,"column":123,"offset":8263}}}],"position":{"start":{"line":245,"column":5,"offset":8145},"end":{"line":245,"column":123,"offset":8263}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"a variable will always evaluate to the value it contains regardless of how it was declared","position":{"start":{"line":246,"column":7,"offset":8270},"end":{"line":246,"column":97,"offset":8360}}}],"position":{"start":{"line":246,"column":5,"offset":8268},"end":{"line":246,"column":97,"offset":8360}}},{"type":"text","value":"\n"}],"position":{"start":{"line":243,"column":5,"offset":8034},"end":{"line":246,"column":97,"offset":8360}}},{"type":"text","value":"\n"}],"position":{"start":{"line":242,"column":1,"offset":7957},"end":{"line":246,"column":97,"offset":8360}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Explain the difference between ","position":{"start":{"line":247,"column":3,"offset":8363},"end":{"line":247,"column":34,"offset":8394}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}],"position":{"start":{"line":247,"column":34,"offset":8394},"end":{"line":247,"column":41,"offset":8401}}},{"type":"text","value":", ","position":{"start":{"line":247,"column":41,"offset":8401},"end":{"line":247,"column":43,"offset":8403}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"let"}],"position":{"start":{"line":247,"column":43,"offset":8403},"end":{"line":247,"column":48,"offset":8408}}},{"type":"text","value":", and ","position":{"start":{"line":247,"column":48,"offset":8408},"end":{"line":247,"column":54,"offset":8414}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"var"}],"position":{"start":{"line":247,"column":54,"offset":8414},"end":{"line":247,"column":59,"offset":8419}}},{"type":"text","value":" declarations","position":{"start":{"line":247,"column":59,"offset":8419},"end":{"line":247,"column":72,"offset":8432}}}],"position":{"start":{"line":247,"column":3,"offset":8363},"end":{"line":247,"column":72,"offset":8432}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"var"}],"position":{"start":{"line":248,"column":7,"offset":8439},"end":{"line":248,"column":12,"offset":8444}}},{"type":"text","value":" is function scoped—so if you declare it anywhere in a function, the declaration ","position":{"start":{"line":248,"column":12,"offset":8444},"end":{"line":248,"column":93,"offset":8525}}},{"type":"text","value":"(","position":{"start":{"line":248,"column":93,"offset":8525},"end":{"line":248,"column":95,"offset":8527}}},{"type":"text","value":"but not assignment","position":{"start":{"line":248,"column":95,"offset":8527},"end":{"line":248,"column":113,"offset":8545}}},{"type":"text","value":")","position":{"start":{"line":248,"column":113,"offset":8545},"end":{"line":248,"column":115,"offset":8547}}},{"type":"text","value":" is \"hoisted\"","position":{"start":{"line":248,"column":115,"offset":8547},"end":{"line":248,"column":128,"offset":8560}}}],"position":{"start":{"line":248,"column":7,"offset":8439},"end":{"line":248,"column":128,"offset":8560}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"so it will exist in memory as \"undefined\" which is bad and unpredictable","position":{"start":{"line":249,"column":11,"offset":8571},"end":{"line":249,"column":83,"offset":8643}}}],"position":{"start":{"line":249,"column":9,"offset":8569},"end":{"line":249,"column":83,"offset":8643}}},{"type":"text","value":"\n"}],"position":{"start":{"line":249,"column":9,"offset":8569},"end":{"line":249,"column":83,"offset":8643}}},{"type":"text","value":"\n"}],"position":{"start":{"line":248,"column":5,"offset":8437},"end":{"line":249,"column":83,"offset":8643}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"var"}],"position":{"start":{"line":250,"column":7,"offset":8650},"end":{"line":250,"column":12,"offset":8655}}},{"type":"text","value":" will also allow you to redeclare a variable, while ","position":{"start":{"line":250,"column":12,"offset":8655},"end":{"line":250,"column":64,"offset":8707}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"let"}],"position":{"start":{"line":250,"column":64,"offset":8707},"end":{"line":250,"column":69,"offset":8712}}},{"type":"text","value":" or ","position":{"start":{"line":250,"column":69,"offset":8712},"end":{"line":250,"column":73,"offset":8716}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}],"position":{"start":{"line":250,"column":73,"offset":8716},"end":{"line":250,"column":80,"offset":8723}}},{"type":"text","value":" will raise a syntax error. you shouldn't be able to do that!","position":{"start":{"line":250,"column":80,"offset":8723},"end":{"line":250,"column":141,"offset":8784}}}],"position":{"start":{"line":250,"column":5,"offset":8648},"end":{"line":250,"column":141,"offset":8784}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}],"position":{"start":{"line":251,"column":7,"offset":8791},"end":{"line":251,"column":14,"offset":8798}}},{"type":"text","value":" won't let you reassign a variable, but if it points to a mutable object, you will still be able to change the value by mutating the object","position":{"start":{"line":251,"column":14,"offset":8798},"end":{"line":251,"column":153,"offset":8937}}}],"position":{"start":{"line":251,"column":5,"offset":8789},"end":{"line":251,"column":153,"offset":8937}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"block-scoped variables allow new variables with the same name in new scopes","position":{"start":{"line":252,"column":7,"offset":8944},"end":{"line":252,"column":82,"offset":9019}}}],"position":{"start":{"line":252,"column":5,"offset":8942},"end":{"line":252,"column":82,"offset":9019}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"block-scoped still performs hoisting of all variables within the block, but it doesn't initialize to the value of ","position":{"start":{"line":253,"column":7,"offset":9026},"end":{"line":253,"column":121,"offset":9140}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"undefined"}],"position":{"start":{"line":253,"column":121,"offset":9140},"end":{"line":253,"column":132,"offset":9151}}},{"type":"text","value":" like ","position":{"start":{"line":253,"column":132,"offset":9151},"end":{"line":253,"column":138,"offset":9157}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"var"}],"position":{"start":{"line":253,"column":138,"offset":9157},"end":{"line":253,"column":143,"offset":9162}}},{"type":"text","value":" does, so it throws a specific reference error if you try to access the value before it has been declared","position":{"start":{"line":253,"column":143,"offset":9162},"end":{"line":253,"column":248,"offset":9267}}}],"position":{"start":{"line":253,"column":5,"offset":9024},"end":{"line":253,"column":248,"offset":9267}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"if you do not use ","position":{"start":{"line":254,"column":7,"offset":9274},"end":{"line":254,"column":25,"offset":9292}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"var"}],"position":{"start":{"line":254,"column":25,"offset":9292},"end":{"line":254,"column":30,"offset":9297}}},{"type":"text","value":" or ","position":{"start":{"line":254,"column":30,"offset":9297},"end":{"line":254,"column":34,"offset":9301}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"let"}],"position":{"start":{"line":254,"column":34,"offset":9301},"end":{"line":254,"column":39,"offset":9306}}},{"type":"text","value":" or ","position":{"start":{"line":254,"column":39,"offset":9306},"end":{"line":254,"column":43,"offset":9310}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}],"position":{"start":{"line":254,"column":43,"offset":9310},"end":{"line":254,"column":50,"offset":9317}}},{"type":"text","value":" when initializing, it will be declared as global—THIS IS BAD","position":{"start":{"line":254,"column":50,"offset":9317},"end":{"line":254,"column":111,"offset":9378}}}],"position":{"start":{"line":254,"column":7,"offset":9274},"end":{"line":254,"column":111,"offset":9378}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"if you assign a value without a declaration, it exists in the global scope ","position":{"start":{"line":255,"column":11,"offset":9389},"end":{"line":255,"column":86,"offset":9464}}},{"type":"text","value":"(","position":{"start":{"line":255,"column":86,"offset":9464},"end":{"line":255,"column":88,"offset":9466}}},{"type":"text","value":"so then it would be accessible by all outer scopes, so bad","position":{"start":{"line":255,"column":88,"offset":9466},"end":{"line":255,"column":146,"offset":9524}}},{"type":"text","value":")","position":{"start":{"line":255,"column":146,"offset":9524},"end":{"line":255,"column":148,"offset":9526}}},{"type":"text","value":". however, there's no hoisting, so it doesn't exist in the scope until after the line is run","position":{"start":{"line":255,"column":148,"offset":9526},"end":{"line":255,"column":240,"offset":9618}}}],"position":{"start":{"line":255,"column":9,"offset":9387},"end":{"line":255,"column":240,"offset":9618}}},{"type":"text","value":"\n"}],"position":{"start":{"line":255,"column":9,"offset":9387},"end":{"line":255,"column":240,"offset":9618}}},{"type":"text","value":"\n"}],"position":{"start":{"line":254,"column":5,"offset":9272},"end":{"line":255,"column":240,"offset":9618}}},{"type":"text","value":"\n"}],"position":{"start":{"line":248,"column":5,"offset":8437},"end":{"line":255,"column":240,"offset":9618}}},{"type":"text","value":"\n"}],"position":{"start":{"line":247,"column":1,"offset":8361},"end":{"line":255,"column":240,"offset":9618}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Predict the evaluation of code that utilizes function scope, block scope, lexical scope, and scope chaining","position":{"start":{"line":256,"column":3,"offset":9621},"end":{"line":256,"column":110,"offset":9728}}}],"position":{"start":{"line":256,"column":3,"offset":9621},"end":{"line":256,"column":110,"offset":9728}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"scope of a program means the set of variables that are available for use within the program","position":{"start":{"line":257,"column":7,"offset":9735},"end":{"line":257,"column":98,"offset":9826}}}],"position":{"start":{"line":257,"column":5,"offset":9733},"end":{"line":257,"column":98,"offset":9826}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"global scope is represented by the ","position":{"start":{"line":258,"column":7,"offset":9833},"end":{"line":258,"column":42,"offset":9868}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"window"}],"position":{"start":{"line":258,"column":42,"offset":9868},"end":{"line":258,"column":50,"offset":9876}}},{"type":"text","value":" object in the browser and the ","position":{"start":{"line":258,"column":50,"offset":9876},"end":{"line":258,"column":81,"offset":9907}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"global"}],"position":{"start":{"line":258,"column":81,"offset":9907},"end":{"line":258,"column":89,"offset":9915}}},{"type":"text","value":" object in Node.js","position":{"start":{"line":258,"column":89,"offset":9915},"end":{"line":258,"column":107,"offset":9933}}}],"position":{"start":{"line":258,"column":7,"offset":9833},"end":{"line":258,"column":107,"offset":9933}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"global variables are available everywhere, and so increase the risk of name collisions","position":{"start":{"line":259,"column":11,"offset":9944},"end":{"line":259,"column":97,"offset":10030}}}],"position":{"start":{"line":259,"column":9,"offset":9942},"end":{"line":259,"column":97,"offset":10030}}},{"type":"text","value":"\n"}],"position":{"start":{"line":259,"column":9,"offset":9942},"end":{"line":259,"column":97,"offset":10030}}},{"type":"text","value":"\n"}],"position":{"start":{"line":258,"column":5,"offset":9831},"end":{"line":259,"column":97,"offset":10030}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"local scope is the set of variables available for use within the function","position":{"start":{"line":260,"column":7,"offset":10037},"end":{"line":260,"column":80,"offset":10110}}}],"position":{"start":{"line":260,"column":7,"offset":10037},"end":{"line":260,"column":80,"offset":10110}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"when we enter a function, we enter a new scope","position":{"start":{"line":261,"column":11,"offset":10121},"end":{"line":261,"column":57,"offset":10167}}}],"position":{"start":{"line":261,"column":9,"offset":10119},"end":{"line":261,"column":57,"offset":10167}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"includes functions arguments, local variables declared inside function, and any variables that were already declared when the function is defined ","position":{"start":{"line":262,"column":11,"offset":10178},"end":{"line":262,"column":157,"offset":10324}}},{"type":"text","value":"(","position":{"start":{"line":262,"column":157,"offset":10324},"end":{"line":262,"column":159,"offset":10326}}},{"type":"text","value":"hmm about that last one","position":{"start":{"line":262,"column":159,"offset":10326},"end":{"line":262,"column":182,"offset":10349}}},{"type":"text","value":")","position":{"start":{"line":262,"column":182,"offset":10349},"end":{"line":262,"column":184,"offset":10351}}}],"position":{"start":{"line":262,"column":9,"offset":10176},"end":{"line":262,"column":184,"offset":10351}}},{"type":"text","value":"\n"}],"position":{"start":{"line":261,"column":9,"offset":10119},"end":{"line":262,"column":184,"offset":10351}}},{"type":"text","value":"\n"}],"position":{"start":{"line":260,"column":5,"offset":10035},"end":{"line":262,"column":184,"offset":10351}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"for blocks ","position":{"start":{"line":263,"column":7,"offset":10358},"end":{"line":263,"column":18,"offset":10369}}},{"type":"text","value":"(","position":{"start":{"line":263,"column":18,"offset":10369},"end":{"line":263,"column":20,"offset":10371}}},{"type":"text","value":"denoted by curly braces ","position":{"start":{"line":263,"column":20,"offset":10371},"end":{"line":263,"column":44,"offset":10395}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"{}"}],"position":{"start":{"line":263,"column":44,"offset":10395},"end":{"line":263,"column":48,"offset":10399}}},{"type":"text","value":", as in conditionals or ","position":{"start":{"line":263,"column":48,"offset":10399},"end":{"line":263,"column":72,"offset":10423}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"for"}],"position":{"start":{"line":263,"column":72,"offset":10423},"end":{"line":263,"column":77,"offset":10428}}},{"type":"text","value":" loops","position":{"start":{"line":263,"column":77,"offset":10428},"end":{"line":263,"column":83,"offset":10434}}},{"type":"text","value":")","position":{"start":{"line":263,"column":83,"offset":10434},"end":{"line":263,"column":85,"offset":10436}}},{"type":"text","value":", variables can be block scoped","position":{"start":{"line":263,"column":85,"offset":10436},"end":{"line":263,"column":116,"offset":10467}}}],"position":{"start":{"line":263,"column":5,"offset":10356},"end":{"line":263,"column":116,"offset":10467}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"inner scope does not have access to variables in the outer scope","position":{"start":{"line":264,"column":7,"offset":10474},"end":{"line":264,"column":71,"offset":10538}}}],"position":{"start":{"line":264,"column":7,"offset":10474},"end":{"line":264,"column":71,"offset":10538}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"scope chaining—if a given variable is not found in immediate scope, javascript will search all accessible outer scopes until variable is found","position":{"start":{"line":265,"column":11,"offset":10549},"end":{"line":265,"column":153,"offset":10691}}}],"position":{"start":{"line":265,"column":9,"offset":10547},"end":{"line":265,"column":153,"offset":10691}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"so an inner scope can access outer scope variables","position":{"start":{"line":266,"column":11,"offset":10702},"end":{"line":266,"column":61,"offset":10752}}}],"position":{"start":{"line":266,"column":9,"offset":10700},"end":{"line":266,"column":61,"offset":10752}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"but an outer scope can never access inner scope variables","position":{"start":{"line":267,"column":11,"offset":10763},"end":{"line":267,"column":68,"offset":10820}}}],"position":{"start":{"line":267,"column":9,"offset":10761},"end":{"line":267,"column":68,"offset":10820}}},{"type":"text","value":"\n"}],"position":{"start":{"line":265,"column":9,"offset":10547},"end":{"line":267,"column":68,"offset":10820}}},{"type":"text","value":"\n"}],"position":{"start":{"line":264,"column":5,"offset":10472},"end":{"line":267,"column":68,"offset":10820}}},{"type":"text","value":"\n"}],"position":{"start":{"line":257,"column":5,"offset":9733},"end":{"line":267,"column":68,"offset":10820}}},{"type":"text","value":"\n"}],"position":{"start":{"line":256,"column":1,"offset":9619},"end":{"line":267,"column":68,"offset":10820}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define an arrow function","position":{"start":{"line":268,"column":3,"offset":10823},"end":{"line":268,"column":27,"offset":10847}}}],"position":{"start":{"line":268,"column":3,"offset":10823},"end":{"line":268,"column":27,"offset":10847}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"`","position":{"start":{"line":270,"column":5,"offset":10853},"end":{"line":270,"column":7,"offset":10855}}},{"type":"text","value":"`","position":{"start":{"line":270,"column":7,"offset":10855},"end":{"line":270,"column":9,"offset":10857}}},{"type":"text","value":"`","position":{"start":{"line":270,"column":9,"offset":10857},"end":{"line":270,"column":11,"offset":10859}}},{"type":"text","value":"javascript","position":{"start":{"line":270,"column":11,"offset":10859},"end":{"line":270,"column":21,"offset":10869}}}],"position":{"start":{"line":270,"column":5,"offset":10853},"end":{"line":270,"column":21,"offset":10869}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"let arrowFunction = ","position":{"start":{"line":272,"column":5,"offset":10875},"end":{"line":272,"column":25,"offset":10895}}},{"type":"text","value":"(","position":{"start":{"line":272,"column":25,"offset":10895},"end":{"line":272,"column":27,"offset":10897}}},{"type":"text","value":"param1, param2","position":{"start":{"line":272,"column":27,"offset":10897},"end":{"line":272,"column":41,"offset":10911}}},{"type":"text","value":")","position":{"start":{"line":272,"column":41,"offset":10911},"end":{"line":272,"column":43,"offset":10913}}},{"type":"text","value":" =","position":{"start":{"line":272,"column":43,"offset":10913},"end":{"line":272,"column":45,"offset":10915}}},{"type":"text","value":">","position":{"start":{"line":272,"column":45,"offset":10915},"end":{"line":272,"column":49,"offset":10919}}},{"type":"text","value":" {","position":{"start":{"line":272,"column":49,"offset":10919},"end":{"line":272,"column":51,"offset":10921}}}],"position":{"start":{"line":272,"column":5,"offset":10875},"end":{"line":272,"column":51,"offset":10921}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"let sum = param1 + param2;","position":{"start":{"line":274,"column":5,"offset":10927},"end":{"line":274,"column":31,"offset":10953}}}],"position":{"start":{"line":274,"column":5,"offset":10927},"end":{"line":274,"column":31,"offset":10953}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"return sum;","position":{"start":{"line":276,"column":5,"offset":10959},"end":{"line":276,"column":16,"offset":10970}}}],"position":{"start":{"line":276,"column":5,"offset":10959},"end":{"line":276,"column":16,"offset":10970}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"}","position":{"start":{"line":278,"column":5,"offset":10976},"end":{"line":278,"column":6,"offset":10977}}}],"position":{"start":{"line":278,"column":5,"offset":10976},"end":{"line":278,"column":6,"offset":10977}}},{"type":"text","value":"\n"}],"position":{"start":{"line":268,"column":1,"offset":10821},"end":{"line":278,"column":6,"offset":10977}}},{"type":"text","value":"\n"}],"position":{"start":{"line":242,"column":1,"offset":7957},"end":{"line":278,"column":6,"offset":10977}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"// with 1 param you can remove parens around parameters let arrowFunction = param =","position":{"start":{"line":280,"column":1,"offset":10979},"end":{"line":280,"column":84,"offset":11062}}},{"type":"text","value":">","position":{"start":{"line":280,"column":84,"offset":11062},"end":{"line":280,"column":88,"offset":11066}}},{"type":"text","value":" { param += 1; return param; }","position":{"start":{"line":280,"column":88,"offset":11066},"end":{"line":280,"column":118,"offset":11096}}}],"position":{"start":{"line":280,"column":1,"offset":10979},"end":{"line":280,"column":118,"offset":11096}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"// if your return statement is one line, you can use implied return let arrowFunction = param =","position":{"start":{"line":282,"column":1,"offset":11098},"end":{"line":282,"column":96,"offset":11193}}},{"type":"text","value":">","position":{"start":{"line":282,"column":96,"offset":11193},"end":{"line":282,"column":100,"offset":11197}}},{"type":"text","value":" param + 1;","position":{"start":{"line":282,"column":100,"offset":11197},"end":{"line":282,"column":111,"offset":11208}}}],"position":{"start":{"line":282,"column":1,"offset":11098},"end":{"line":282,"column":111,"offset":11208}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"// you don't have to assign to variable, can be anonymous // if you never need to use it again param =","position":{"start":{"line":284,"column":1,"offset":11210},"end":{"line":284,"column":103,"offset":11312}}},{"type":"text","value":">","position":{"start":{"line":284,"column":103,"offset":11312},"end":{"line":284,"column":107,"offset":11316}}},{"type":"text","value":" param + 1;","position":{"start":{"line":284,"column":107,"offset":11316},"end":{"line":284,"column":118,"offset":11327}}}],"position":{"start":{"line":284,"column":1,"offset":11210},"end":{"line":284,"column":118,"offset":11327}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"`","position":{"start":{"line":286,"column":1,"offset":11329},"end":{"line":286,"column":3,"offset":11331}}},{"type":"text","value":"`","position":{"start":{"line":286,"column":3,"offset":11331},"end":{"line":286,"column":5,"offset":11333}}},{"type":"text","value":"`","position":{"start":{"line":286,"column":5,"offset":11333},"end":{"line":286,"column":7,"offset":11335}}}],"position":{"start":{"line":286,"column":1,"offset":11329},"end":{"line":286,"column":7,"offset":11335}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given an arrow function, deduce the value of ","position":{"start":{"line":288,"column":3,"offset":11339},"end":{"line":288,"column":48,"offset":11384}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":288,"column":48,"offset":11384},"end":{"line":288,"column":54,"offset":11390}}},{"type":"text","value":" without executing the code","position":{"start":{"line":288,"column":54,"offset":11390},"end":{"line":288,"column":81,"offset":11417}}}],"position":{"start":{"line":288,"column":3,"offset":11339},"end":{"line":288,"column":81,"offset":11417}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"arrow functions are automatically bound to the context they were declared in","position":{"start":{"line":290,"column":7,"offset":11425},"end":{"line":290,"column":83,"offset":11501}}}],"position":{"start":{"line":290,"column":5,"offset":11423},"end":{"line":290,"column":83,"offset":11501}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"unlike regular function which use the context they are invoked in ","position":{"start":{"line":291,"column":7,"offset":11508},"end":{"line":291,"column":73,"offset":11574}}},{"type":"text","value":"(","position":{"start":{"line":291,"column":73,"offset":11574},"end":{"line":291,"column":75,"offset":11576}}},{"type":"text","value":"unless they have been bound using ","position":{"start":{"line":291,"column":75,"offset":11576},"end":{"line":291,"column":109,"offset":11610}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Function#bind"}],"position":{"start":{"line":291,"column":109,"offset":11610},"end":{"line":291,"column":124,"offset":11625}}},{"type":"text","value":")","position":{"start":{"line":291,"column":124,"offset":11625},"end":{"line":291,"column":126,"offset":11627}}}],"position":{"start":{"line":291,"column":5,"offset":11506},"end":{"line":291,"column":126,"offset":11627}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"if you implement an arrow function as a method in an object the context it will be bound to is NOT the object itself, but the global context","position":{"start":{"line":292,"column":7,"offset":11634},"end":{"line":292,"column":147,"offset":11774}}}],"position":{"start":{"line":292,"column":5,"offset":11632},"end":{"line":292,"column":147,"offset":11774}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"so you can't use an arrow function to define a method directly","position":{"start":{"line":293,"column":7,"offset":11781},"end":{"line":293,"column":69,"offset":11843}}}],"position":{"start":{"line":293,"column":7,"offset":11781},"end":{"line":293,"column":69,"offset":11843}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"`","position":{"start":{"line":295,"column":9,"offset":11853},"end":{"line":295,"column":11,"offset":11855}}},{"type":"text","value":"`","position":{"start":{"line":295,"column":11,"offset":11855},"end":{"line":295,"column":13,"offset":11857}}},{"type":"text","value":"`","position":{"start":{"line":295,"column":13,"offset":11857},"end":{"line":295,"column":15,"offset":11859}}},{"type":"text","value":"javascript","position":{"start":{"line":295,"column":15,"offset":11859},"end":{"line":295,"column":25,"offset":11869}}}],"position":{"start":{"line":295,"column":9,"offset":11853},"end":{"line":295,"column":25,"offset":11869}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"let obj = {","position":{"start":{"line":297,"column":9,"offset":11879},"end":{"line":297,"column":20,"offset":11890}}}],"position":{"start":{"line":297,"column":9,"offset":11879},"end":{"line":297,"column":20,"offset":11890}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"name: \"my object\",","position":{"start":{"line":299,"column":9,"offset":11900},"end":{"line":299,"column":27,"offset":11918}}}],"position":{"start":{"line":299,"column":9,"offset":11900},"end":{"line":299,"column":27,"offset":11918}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"unboundFunc: function ","position":{"start":{"line":301,"column":9,"offset":11928},"end":{"line":301,"column":31,"offset":11950}}},{"type":"text","value":"(","position":{"start":{"line":301,"column":31,"offset":11950},"end":{"line":301,"column":33,"offset":11952}}},{"type":"text","value":")","position":{"start":{"line":301,"column":33,"offset":11952},"end":{"line":301,"column":35,"offset":11954}}},{"type":"text","value":" {","position":{"start":{"line":301,"column":35,"offset":11954},"end":{"line":301,"column":37,"offset":11956}}}],"position":{"start":{"line":301,"column":9,"offset":11928},"end":{"line":301,"column":37,"offset":11956}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"return this.name;","position":{"start":{"line":303,"column":9,"offset":11966},"end":{"line":303,"column":26,"offset":11983}}}],"position":{"start":{"line":303,"column":9,"offset":11966},"end":{"line":303,"column":26,"offset":11983}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"// this function will be able to be called on different objects","position":{"start":{"line":305,"column":9,"offset":11993},"end":{"line":305,"column":72,"offset":12056}}}],"position":{"start":{"line":305,"column":9,"offset":11993},"end":{"line":305,"column":72,"offset":12056}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"},","position":{"start":{"line":307,"column":9,"offset":12066},"end":{"line":307,"column":11,"offset":12068}}}],"position":{"start":{"line":307,"column":9,"offset":12066},"end":{"line":307,"column":11,"offset":12068}}},{"type":"text","value":"\n"}],"position":{"start":{"line":293,"column":5,"offset":11779},"end":{"line":307,"column":11,"offset":12068}}},{"type":"text","value":"\n"}],"position":{"start":{"line":290,"column":5,"offset":11423},"end":{"line":307,"column":11,"offset":12068}}},{"type":"text","value":"\n"}],"position":{"start":{"line":288,"column":1,"offset":11337},"end":{"line":307,"column":11,"offset":12068}}},{"type":"text","value":"\n"}],"position":{"start":{"line":288,"column":1,"offset":11337},"end":{"line":307,"column":11,"offset":12068}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[],"position":{"start":{"line":309,"column":1,"offset":12070},"end":{"line":309,"column":4,"offset":12073}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"boundToGlobal: ","position":{"start":{"line":311,"column":1,"offset":12075},"end":{"line":311,"column":16,"offset":12090}}},{"type":"text","value":"(","position":{"start":{"line":311,"column":16,"offset":12090},"end":{"line":311,"column":18,"offset":12092}}},{"type":"text","value":")","position":{"start":{"line":311,"column":18,"offset":12092},"end":{"line":311,"column":20,"offset":12094}}},{"type":"text","value":" =","position":{"start":{"line":311,"column":20,"offset":12094},"end":{"line":311,"column":22,"offset":12096}}},{"type":"text","value":">","position":{"start":{"line":311,"column":22,"offset":12096},"end":{"line":311,"column":26,"offset":12100}}},{"type":"text","value":" { return this.name; // this function, no matter how you call it, will be called // on the global object, and it cannot be rebound // this is because it was defined using arrow syntax },","position":{"start":{"line":311,"column":26,"offset":12100},"end":{"line":311,"column":212,"offset":12286}}}],"position":{"start":{"line":311,"column":1,"offset":12075},"end":{"line":311,"column":212,"offset":12286}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"makeFuncBoundToObj: function () {\n    return () => {\n        return this.name;\n    }\n    // this function will return a function that will be bound\n    // to the object where we call the outer method\n    // because the arrow syntax is nested inside one of this\n    // function's methods, it cannot be rebound\n},\n\nmakeUnboundFunc: function () {\n    return function () {\n        return this.name;\n    }\n    //this function will return a function that will still be unbound\n},\n\nimmediatelyInvokedFunc: function () {\n    return this.name;\n}(), // this property will be set to the return value of this anonymous function,\n// which is invoked during the object definition;\n// basically, it's a way to check the context inside of an object, at this moment\n\ninnerObj: {\n    name: \"inner object\",\n    innerArrowFunc: () =>  {\n        return this.name;\n    } // the context inside a nested object is not the parent, it's still\n    // the global object. entering an object definition doesn't change the context\n},\n\nlet otherObj = { name: \"my other object\" }\n// call unboundFunc on obj, we get \"my object\" console.log(\"unboundFunc: \", obj.unboundFunc()); // => \"my object\" // assign unboundFunc to a variable and call it let newFunc = obj.unboundFunc; // this newFunc will default to being called on global object console.log(\"newFunc: \",newFunc()); // => undefined // but you could bind it directly to a different object if you wanted console.log(\"newFunc: \", newFunc.bind(otherObj)()); // \"my other object\"\n// meanwhile, obj.boundToGlobal will only ever be called on global object console.log(\"boundToGlobal: \", obj.boundToGlobal()); //=> undefined let newBoundFunc = obj.boundToGlobal; console.log(\"newBoundFunc: \", newBoundFunc()); // => undefined // even if you try to directly bind to another object, it won't work! console.log(\"newBoundFunc: \", newBoundFunc.bind(otherObj)()); // => undefined\n// let's make a new function that will always be bound to the context // where we call our function maker let boundFunc = obj.makeFuncBoundToObj();// note that we're invoking, not just assigning console.log(\"boundFunc: \", boundFunc()); // => \"my object\" // we can't rebind this function console.log(\"boundFunc: \", boundFunc.bind(otherObj)()) // =>\"my object\"\n// but if I call makeFuncBoundToObj on another context // the new bound function is stuck with that other context let boundToOther = obj.makeFuncBoundToObj.bind(otherObj)(); console.log(\"boundToOther: \", boundToOther()); // => \"my other object\" console.log(\"boundToOther: \", boundToOther.bind(obj)()) // \"my other object\"\n// the return value of my immediately invoked function // shows that the context inside of the object is the // global object, not the object itself // context only changes inside a function that is called // on an object console.log(\"immediatelyInvokedFunc: \", obj.immediatelyInvokedFunc); // => undefined\n// even though we're inside a nested object, the context is // still the same as it was outside the outer object // in this case, the global object console.log(\"innerArrowFunc: \", obj.innerObj.innerArrowFunc()); // => undefined\n"}],"position":{"start":{"line":313,"column":1,"offset":12288},"end":{"line":352,"column":4,"offset":15401}}}],"position":{"start":{"line":313,"column":1,"offset":12288},"end":{"line":352,"column":4,"offset":15401}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"}","position":{"start":{"line":354,"column":1,"offset":15403},"end":{"line":354,"column":2,"offset":15404}}}],"position":{"start":{"line":354,"column":1,"offset":15403},"end":{"line":354,"column":2,"offset":15404}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"- Implement a closure and explain how the closure effects scope\n   - a closure is \"the combination of a function and the lexical environment within which that function was declared\"\n      - alternatively, \"when an inner function uses or changes variables in an outer function\"\n   - closures have access to any variables within their own scope + scope of outer functions + global scope — the set of all these available variables is \"lexical environemnt\"\n   - closure keeps reference to all variables **even if the outer function has returned**\n      - each function has a private mutable state that cannot be accessed externally\n      - the inner function will maintain a reference to the scope in which it was declared. so it has access to variables that were initialized in any outer scope—even if that scope\n      - if a variable exists in the scope of what could have been accessed by a function (e.g. global scope, outer function, etc), does that variable wind up in the closure even if it never got accessed?\n      - if you change the value of a variable (e.g. i++) you will change the value of that variable in the scope that it was declared in\n\n---\n\n\n```js\n\n\nfunction createCounter() {\n   // this function starts a counter at 0, then returns a\n   // new function that can access and change that counter\n   //\n   // each new counter you create will have a single internal\n   // state, that can be changed only by calling the function.\n   // you can't access that state from outside of the function,\n   // even though the count variable in question is initialized\n   // by the outer function, and it remains accessible to the\n   // inner function after the outer function returns.\n   let count = 0;\n   return function() {\n      count ++;\n      return count;\n   }\n}\n\nlet counter = createCounter();\nconsole.log(counter()); //=> 1\nconsole.log(counter()); //=> 2\n// so the closure here comes into play because\n// an inner function is accessing and changing\n// a variable from an outer function\n\n// the closure is the combination of the counter\n// function and the all the variables that existed\n// in the scope that it was declared in. because\n// inner blocks/functions have access to outer\n// scopes, that includes the scope of the outer\n// function.\n\n// so counter variable is a closure, in that\n// it contains the inner count value that was\n// initialized by the outer createCounter() function\n// count has been captured or closed over\n\n// this state is private, so if i run createCounter again\n// i get a totally separate count that doesn't interact\n// with the previous one and each of the new functions\n// will have their own internal state based on the\n// initial declaration in the now-closed outer function\n\nlet counter2 = createCounter();\nconsole.log(counter2()); // => 1\n\n// if i set a new function equal to my existing counter\n// the internal state is shared with the new function\nlet counter3 = counter2;\nconsole.log(counter3());\n"}],"position":{"start":{"line":356,"column":1,"offset":15406},"end":{"line":422,"column":4,"offset":18359}}}],"position":{"start":{"line":356,"column":1,"offset":15406},"end":{"line":422,"column":4,"offset":18359}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define a method that references ","position":{"start":{"line":424,"column":3,"offset":18363},"end":{"line":424,"column":35,"offset":18395}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":424,"column":35,"offset":18395},"end":{"line":424,"column":41,"offset":18401}}},{"type":"text","value":" on an object literal","position":{"start":{"line":424,"column":41,"offset":18401},"end":{"line":424,"column":62,"offset":18422}}}],"position":{"start":{"line":424,"column":3,"offset":18363},"end":{"line":424,"column":62,"offset":18422}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"when we use ","position":{"start":{"line":425,"column":7,"offset":18429},"end":{"line":425,"column":19,"offset":18441}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":425,"column":19,"offset":18441},"end":{"line":425,"column":25,"offset":18447}}},{"type":"text","value":" in a method it refers to the object that the method is invoked on","position":{"start":{"line":425,"column":25,"offset":18447},"end":{"line":425,"column":91,"offset":18513}}}],"position":{"start":{"line":425,"column":7,"offset":18429},"end":{"line":425,"column":91,"offset":18513}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"it will let you access other pieces of information from within that object, or even other methods","position":{"start":{"line":426,"column":11,"offset":18524},"end":{"line":426,"column":108,"offset":18621}}}],"position":{"start":{"line":426,"column":9,"offset":18522},"end":{"line":426,"column":108,"offset":18621}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"method style invocation - ","position":{"start":{"line":427,"column":11,"offset":18632},"end":{"line":427,"column":37,"offset":18658}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"object.method(args)"}],"position":{"start":{"line":427,"column":37,"offset":18658},"end":{"line":427,"column":58,"offset":18679}}},{"type":"text","value":" ","position":{"start":{"line":427,"column":58,"offset":18679},"end":{"line":427,"column":59,"offset":18680}}},{"type":"text","value":"(","position":{"start":{"line":427,"column":59,"offset":18680},"end":{"line":427,"column":61,"offset":18682}}},{"type":"text","value":"e.g. built in examples like ","position":{"start":{"line":427,"column":61,"offset":18682},"end":{"line":427,"column":89,"offset":18710}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Array#push"}],"position":{"start":{"line":427,"column":89,"offset":18710},"end":{"line":427,"column":101,"offset":18722}}},{"type":"text","value":", or ","position":{"start":{"line":427,"column":101,"offset":18722},"end":{"line":427,"column":106,"offset":18727}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"String#toUpperCase"}],"position":{"start":{"line":427,"column":106,"offset":18727},"end":{"line":427,"column":126,"offset":18747}}},{"type":"text","value":")","position":{"start":{"line":427,"column":126,"offset":18747},"end":{"line":427,"column":128,"offset":18749}}}],"position":{"start":{"line":427,"column":9,"offset":18630},"end":{"line":427,"column":128,"offset":18749}}},{"type":"text","value":"\n"}],"position":{"start":{"line":426,"column":9,"offset":18522},"end":{"line":427,"column":128,"offset":18749}}},{"type":"text","value":"\n"}],"position":{"start":{"line":425,"column":5,"offset":18427},"end":{"line":427,"column":128,"offset":18749}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"context is set every time we invoke a function","position":{"start":{"line":428,"column":7,"offset":18756},"end":{"line":428,"column":53,"offset":18802}}}],"position":{"start":{"line":428,"column":5,"offset":18754},"end":{"line":428,"column":53,"offset":18802}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"function style invocation sets the context to the global object no matter what","position":{"start":{"line":429,"column":7,"offset":18809},"end":{"line":429,"column":85,"offset":18887}}}],"position":{"start":{"line":429,"column":5,"offset":18807},"end":{"line":429,"column":85,"offset":18887}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"being inside an object does not make the context that object! you still have to use method-style invocation","position":{"start":{"line":430,"column":7,"offset":18894},"end":{"line":430,"column":114,"offset":19001}}}],"position":{"start":{"line":430,"column":5,"offset":18892},"end":{"line":430,"column":114,"offset":19001}}},{"type":"text","value":"\n"}],"position":{"start":{"line":425,"column":5,"offset":18427},"end":{"line":430,"column":114,"offset":19001}}},{"type":"text","value":"\n"}],"position":{"start":{"line":424,"column":1,"offset":18361},"end":{"line":430,"column":114,"offset":19001}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Utilize the built in ","position":{"start":{"line":431,"column":3,"offset":19004},"end":{"line":431,"column":24,"offset":19025}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Function#bind"}],"position":{"start":{"line":431,"column":24,"offset":19025},"end":{"line":431,"column":39,"offset":19040}}},{"type":"text","value":" on a callback to maintain the context of this","position":{"start":{"line":431,"column":39,"offset":19040},"end":{"line":431,"column":85,"offset":19086}}}],"position":{"start":{"line":431,"column":3,"offset":19004},"end":{"line":431,"column":85,"offset":19086}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"when we call bind on a function, we get an exotic function back—so the context will always be the same for that new function","position":{"start":{"line":433,"column":7,"offset":19094},"end":{"line":433,"column":131,"offset":19218}}}],"position":{"start":{"line":433,"column":5,"offset":19092},"end":{"line":433,"column":131,"offset":19218}}},{"type":"text","value":"\n"}],"position":{"start":{"line":433,"column":5,"offset":19092},"end":{"line":433,"column":131,"offset":19218}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"let cat = {\npurr: function () {\nconsole.log(\"meow\");\n},\npurrMore: function () {\nthis.purr();\n},\n};\nlet sayMeow = cat.purrMore; console.log(sayMeow()); // TypeError: this.purr is not a function\n\n// we can use the built in Function.bind to ensure our context, our this, // is the cat object let boundCat = sayMeow.bind(cat);\nboundCat(); // prints \"meow\"\n"}],"position":{"start":{"line":435,"column":5,"offset":19224},"end":{"line":448,"column":8,"offset":19635}}}],"position":{"start":{"line":435,"column":5,"offset":19224},"end":{"line":448,"column":8,"offset":19635}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"`","position":{"start":{"line":450,"column":5,"offset":19641},"end":{"line":450,"column":7,"offset":19643}}},{"type":"text","value":"`","position":{"start":{"line":450,"column":7,"offset":19643},"end":{"line":450,"column":9,"offset":19645}}}],"position":{"start":{"line":450,"column":5,"offset":19641},"end":{"line":450,"column":9,"offset":19645}}},{"type":"text","value":"\n"}],"position":{"start":{"line":431,"column":1,"offset":19002},"end":{"line":450,"column":9,"offset":19645}}},{"type":"text","value":"\n"}],"position":{"start":{"line":424,"column":1,"offset":18361},"end":{"line":450,"column":9,"offset":19645}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[],"position":{"start":{"line":452,"column":1,"offset":19647},"end":{"line":452,"column":4,"offset":19650}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[],"position":{"start":{"line":454,"column":1,"offset":19652},"end":{"line":454,"column":4,"offset":19655}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"   - `bind` can also work with arguments, so you can have a version of a function with particular arguments and a particular context. the first arg will be the context aka the `this` you want it to use. the next arguments will be the functions arguments that you are binding\n      - if you just want to bind it to those arguments in particular, you can use `null` as the first argument, so the context won't be bound, just the arguments\n- Given a code snippet, identify what `this` refers to\n   - important to recognize the difference between scope and context\n      - scope works like a dictionary that has all the variables that are available within a given block, plus a pointer back the next outer scope (which itself has pointers to new scopes until you reach the global scope. so you can think about a whole given block's scope as a kind of linked list of dictionaries) (also, this is not to say that scope is actually implemented in this way, that is just the schema that i can use to understand it)\n      - context refers to the value of the `this` keyword\n   - the keyword `this` exists in every function and it evaluates to the object that is currently invoking that function\n   - so the context is fairly straightforward when we talk about methods being called on specific objects\n   - you could, however, call an object's method on something other than that object, and then this would refer to the context where/how it was called, e.g.\n```js\nlet dog = {\n   name: \"Bowser\",\n   changeName: function () {\n      this.name = \"Layla\";\n  },\n};\n\n// note this is **not invoked** - we are assigning the function itself\nlet change = dog.changeName;\nconsole.log(change()); // undefined\n\n// our dog still has the same name\nconsole.log(dog); // { name: 'Bowser', changeName: [Function: changeName] }\n\n// instead of changing the dog we changed the global name!!!\nconsole.log(this); // Object [global] {etc, etc, etc,  name: 'Layla'}\n"}],"position":{"start":{"line":456,"column":1,"offset":19657},"end":{"line":483,"column":4,"offset":21597}}}],"position":{"start":{"line":456,"column":1,"offset":19657},"end":{"line":483,"column":4,"offset":21597}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"CALLING SOMETHING IN THE WRONG CONTEXT CAN MESS YOU UP!","position":{"start":{"line":485,"column":3,"offset":21601},"end":{"line":485,"column":58,"offset":21656}}}],"position":{"start":{"line":485,"column":3,"offset":21601},"end":{"line":485,"column":58,"offset":21656}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"could throw an error if it expects this to have some other method or whatever that doesn't exist","position":{"start":{"line":486,"column":7,"offset":21663},"end":{"line":486,"column":103,"offset":21759}}}],"position":{"start":{"line":486,"column":5,"offset":21661},"end":{"line":486,"column":103,"offset":21759}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"you could also overwrite values or assign values to exist in a space where they should not exist","position":{"start":{"line":487,"column":7,"offset":21766},"end":{"line":487,"column":103,"offset":21862}}}],"position":{"start":{"line":487,"column":5,"offset":21764},"end":{"line":487,"column":103,"offset":21862}}},{"type":"text","value":"\n"}],"position":{"start":{"line":486,"column":5,"offset":21661},"end":{"line":487,"column":103,"offset":21862}}},{"type":"text","value":"\n"}],"position":{"start":{"line":485,"column":1,"offset":21599},"end":{"line":487,"column":103,"offset":21862}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"if you call a function as a callback, it will set ","position":{"start":{"line":488,"column":3,"offset":21865},"end":{"line":488,"column":53,"offset":21915}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":488,"column":53,"offset":21915},"end":{"line":488,"column":59,"offset":21921}}},{"type":"text","value":" to be the outer function itself, even if the function you were calling is a method that was called on a particular object","position":{"start":{"line":488,"column":59,"offset":21921},"end":{"line":488,"column":181,"offset":22043}}}],"position":{"start":{"line":488,"column":3,"offset":21865},"end":{"line":488,"column":181,"offset":22043}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"let cat = {\npurr: function () {\nconsole.log(\"meow\");\n},\npurrMore: function () {\nthis.purr();\n},\n};\nglobal.setTimeout(cat.purrMore, 5000); // 5 seconds later: TypeError: this.purr is not a function\n"}],"position":{"start":{"line":490,"column":5,"offset":22049},"end":{"line":500,"column":8,"offset":22297}}}],"position":{"start":{"line":490,"column":5,"offset":22049},"end":{"line":500,"column":8,"offset":22297}}},{"type":"text","value":"\n"}],"position":{"start":{"line":488,"column":1,"offset":21863},"end":{"line":500,"column":8,"offset":22297}}},{"type":"text","value":"\n"}],"position":{"start":{"line":485,"column":1,"offset":21599},"end":{"line":500,"column":8,"offset":22297}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"we can use strict mode with ","position":{"start":{"line":502,"column":1,"offset":22299},"end":{"line":502,"column":29,"offset":22327}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"\"use strict\";"}],"position":{"start":{"line":502,"column":29,"offset":22327},"end":{"line":502,"column":44,"offset":22342}}},{"type":"text","value":" this will prevent you from accessing the global object with ","position":{"start":{"line":502,"column":44,"offset":22342},"end":{"line":502,"column":105,"offset":22403}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":502,"column":105,"offset":22403},"end":{"line":502,"column":111,"offset":22409}}},{"type":"text","value":" in functions, so if you try to call ","position":{"start":{"line":502,"column":111,"offset":22409},"end":{"line":502,"column":148,"offset":22446}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":502,"column":148,"offset":22446},"end":{"line":502,"column":154,"offset":22452}}},{"type":"text","value":" in the global context and change a value, you will get a type error, and the things you try to access will be undefined","position":{"start":{"line":502,"column":154,"offset":22452},"end":{"line":502,"column":274,"offset":22572}}}],"position":{"start":{"line":502,"column":1,"offset":22299},"end":{"line":502,"column":274,"offset":22572}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[],"position":{"start":{"line":504,"column":1,"offset":22574},"end":{"line":504,"column":4,"offset":22577}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"let sayMeow = cat.purrMore; console.log","position":{"start":{"line":506,"column":1,"offset":22579},"end":{"line":506,"column":40,"offset":22618}}},{"type":"text","value":"(","position":{"start":{"line":506,"column":40,"offset":22618},"end":{"line":506,"column":42,"offset":22620}}},{"type":"text","value":"sayMeow","position":{"start":{"line":506,"column":42,"offset":22620},"end":{"line":506,"column":49,"offset":22627}}},{"type":"text","value":"(","position":{"start":{"line":506,"column":49,"offset":22627},"end":{"line":506,"column":51,"offset":22629}}},{"type":"text","value":")","position":{"start":{"line":506,"column":51,"offset":22629},"end":{"line":506,"column":53,"offset":22631}}},{"type":"text","value":")","position":{"start":{"line":506,"column":53,"offset":22631},"end":{"line":506,"column":55,"offset":22633}}},{"type":"text","value":"; // TypeError: this.purr is not a function","position":{"start":{"line":506,"column":55,"offset":22633},"end":{"line":506,"column":98,"offset":22676}}}],"position":{"start":{"line":506,"column":1,"offset":22579},"end":{"line":506,"column":98,"offset":22676}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"// we can use the built in Function.bind to ensure our context, our ","position":{"start":{"line":508,"column":1,"offset":22678},"end":{"line":508,"column":69,"offset":22746}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":508,"column":69,"offset":22746},"end":{"line":508,"column":75,"offset":22752}}},{"type":"text","value":", // is the cat object let boundCat = sayMeow.bind","position":{"start":{"line":508,"column":75,"offset":22752},"end":{"line":508,"column":125,"offset":22802}}},{"type":"text","value":"(","position":{"start":{"line":508,"column":125,"offset":22802},"end":{"line":508,"column":127,"offset":22804}}},{"type":"text","value":"cat","position":{"start":{"line":508,"column":127,"offset":22804},"end":{"line":508,"column":130,"offset":22807}}},{"type":"text","value":")","position":{"start":{"line":508,"column":130,"offset":22807},"end":{"line":508,"column":132,"offset":22809}}},{"type":"text","value":";","position":{"start":{"line":508,"column":132,"offset":22809},"end":{"line":508,"column":133,"offset":22810}}}],"position":{"start":{"line":508,"column":1,"offset":22678},"end":{"line":508,"column":133,"offset":22810}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"boundCat","position":{"start":{"line":510,"column":1,"offset":22812},"end":{"line":510,"column":9,"offset":22820}}},{"type":"text","value":"(","position":{"start":{"line":510,"column":9,"offset":22820},"end":{"line":510,"column":11,"offset":22822}}},{"type":"text","value":")","position":{"start":{"line":510,"column":11,"offset":22822},"end":{"line":510,"column":13,"offset":22824}}},{"type":"text","value":"; // prints \"meow\"","position":{"start":{"line":510,"column":13,"offset":22824},"end":{"line":510,"column":31,"offset":22842}}}],"position":{"start":{"line":510,"column":1,"offset":22812},"end":{"line":510,"column":31,"offset":22842}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"   - `bind` can also work with arguments, so you can have a version of a function with particular arguments and a particular context. the first arg will be the context aka the `this` you want it to use. the next arguments will be the functions arguments that you are binding\n      - if you just want to bind it to those arguments in particular, you can use `null` as the first argument, so the context won't be bound, just the arguments\n- Given a code snippet, identify what `this` refers to\n   - important to recognize the difference between scope and context\n      - scope works like a dictionary that has all the variables that are available within a given block, plus a pointer back the next outer scope (which itself has pointers to new scopes until you reach the global scope. so you can think about a whole given block's scope as a kind of linked list of dictionaries) (also, this is not to say that scope is actually implemented in this way, that is just the schema that i can use to understand it)\n      - context refers to the value of the `this` keyword\n   - the keyword `this` exists in every function and it evaluates to the object that is currently invoking that function\n   - so the context is fairly straightforward when we talk about methods being called on specific objects\n   - you could, however, call an object's method on something other than that object, and then this would refer to the context where/how it was called, e.g.\n```js\nlet dog = {\n   name: \"Bowser\",\n   changeName: function () {\n      this.name = \"Layla\";\n  },\n};\n\n// note this is **not invoked** - we are assigning the function itself\nlet change = dog.changeName;\nconsole.log(change()); // undefined\n\n// our dog still has the same name\nconsole.log(dog); // { name: 'Bowser', changeName: [Function: changeName] }\n\n// instead of changing the dog we changed the global name!!!\nconsole.log(this); // Object [global] {etc, etc, etc,  name: 'Layla'}\n"}],"position":{"start":{"line":512,"column":1,"offset":22844},"end":{"line":539,"column":4,"offset":24786}}}],"position":{"start":{"line":512,"column":1,"offset":22844},"end":{"line":539,"column":4,"offset":24786}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"CALLING SOMETHING IN THE WRONG CONTEXT CAN MESS YOU UP!","position":{"start":{"line":541,"column":3,"offset":24790},"end":{"line":541,"column":58,"offset":24845}}}],"position":{"start":{"line":541,"column":3,"offset":24790},"end":{"line":541,"column":58,"offset":24845}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"could throw an error if it expects this to have some other method or whatever that doesn't exist","position":{"start":{"line":542,"column":7,"offset":24852},"end":{"line":542,"column":103,"offset":24948}}}],"position":{"start":{"line":542,"column":5,"offset":24850},"end":{"line":542,"column":103,"offset":24948}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"you could also overwrite values or assign values to exist in a space where they should not exist","position":{"start":{"line":543,"column":7,"offset":24955},"end":{"line":543,"column":103,"offset":25051}}}],"position":{"start":{"line":543,"column":5,"offset":24953},"end":{"line":543,"column":103,"offset":25051}}},{"type":"text","value":"\n"}],"position":{"start":{"line":542,"column":5,"offset":24850},"end":{"line":543,"column":103,"offset":25051}}},{"type":"text","value":"\n"}],"position":{"start":{"line":541,"column":1,"offset":24788},"end":{"line":543,"column":103,"offset":25051}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"if you call a function as a callback, it will set ","position":{"start":{"line":544,"column":3,"offset":25054},"end":{"line":544,"column":53,"offset":25104}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":544,"column":53,"offset":25104},"end":{"line":544,"column":59,"offset":25110}}},{"type":"text","value":" to be the outer function itself, even if the function you were calling is a method that was called on a particular object","position":{"start":{"line":544,"column":59,"offset":25110},"end":{"line":544,"column":181,"offset":25232}}}],"position":{"start":{"line":544,"column":3,"offset":25054},"end":{"line":544,"column":181,"offset":25232}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"`","position":{"start":{"line":546,"column":5,"offset":25238},"end":{"line":546,"column":7,"offset":25240}}},{"type":"text","value":"`","position":{"start":{"line":546,"column":7,"offset":25240},"end":{"line":546,"column":9,"offset":25242}}},{"type":"text","value":"`","position":{"start":{"line":546,"column":9,"offset":25242},"end":{"line":546,"column":11,"offset":25244}}},{"type":"text","value":"javascript","position":{"start":{"line":546,"column":11,"offset":25244},"end":{"line":546,"column":21,"offset":25254}}}],"position":{"start":{"line":546,"column":5,"offset":25238},"end":{"line":546,"column":21,"offset":25254}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"let cat = {","position":{"start":{"line":548,"column":5,"offset":25260},"end":{"line":548,"column":16,"offset":25271}}}],"position":{"start":{"line":548,"column":5,"offset":25260},"end":{"line":548,"column":16,"offset":25271}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"purr: function ","position":{"start":{"line":550,"column":5,"offset":25277},"end":{"line":550,"column":20,"offset":25292}}},{"type":"text","value":"(","position":{"start":{"line":550,"column":20,"offset":25292},"end":{"line":550,"column":22,"offset":25294}}},{"type":"text","value":")","position":{"start":{"line":550,"column":22,"offset":25294},"end":{"line":550,"column":24,"offset":25296}}},{"type":"text","value":" {","position":{"start":{"line":550,"column":24,"offset":25296},"end":{"line":550,"column":26,"offset":25298}}}],"position":{"start":{"line":550,"column":5,"offset":25277},"end":{"line":550,"column":26,"offset":25298}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"console.log","position":{"start":{"line":552,"column":5,"offset":25304},"end":{"line":552,"column":16,"offset":25315}}},{"type":"text","value":"(","position":{"start":{"line":552,"column":16,"offset":25315},"end":{"line":552,"column":18,"offset":25317}}},{"type":"text","value":"\"meow\"","position":{"start":{"line":552,"column":18,"offset":25317},"end":{"line":552,"column":24,"offset":25323}}},{"type":"text","value":")","position":{"start":{"line":552,"column":24,"offset":25323},"end":{"line":552,"column":26,"offset":25325}}},{"type":"text","value":";","position":{"start":{"line":552,"column":26,"offset":25325},"end":{"line":552,"column":27,"offset":25326}}}],"position":{"start":{"line":552,"column":5,"offset":25304},"end":{"line":552,"column":27,"offset":25326}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"},","position":{"start":{"line":554,"column":5,"offset":25332},"end":{"line":554,"column":7,"offset":25334}}}],"position":{"start":{"line":554,"column":5,"offset":25332},"end":{"line":554,"column":7,"offset":25334}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"purrMore: function ","position":{"start":{"line":556,"column":5,"offset":25340},"end":{"line":556,"column":24,"offset":25359}}},{"type":"text","value":"(","position":{"start":{"line":556,"column":24,"offset":25359},"end":{"line":556,"column":26,"offset":25361}}},{"type":"text","value":")","position":{"start":{"line":556,"column":26,"offset":25361},"end":{"line":556,"column":28,"offset":25363}}},{"type":"text","value":" {","position":{"start":{"line":556,"column":28,"offset":25363},"end":{"line":556,"column":30,"offset":25365}}}],"position":{"start":{"line":556,"column":5,"offset":25340},"end":{"line":556,"column":30,"offset":25365}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"this.purr","position":{"start":{"line":558,"column":5,"offset":25371},"end":{"line":558,"column":14,"offset":25380}}},{"type":"text","value":"(","position":{"start":{"line":558,"column":14,"offset":25380},"end":{"line":558,"column":16,"offset":25382}}},{"type":"text","value":")","position":{"start":{"line":558,"column":16,"offset":25382},"end":{"line":558,"column":18,"offset":25384}}},{"type":"text","value":";","position":{"start":{"line":558,"column":18,"offset":25384},"end":{"line":558,"column":19,"offset":25385}}}],"position":{"start":{"line":558,"column":5,"offset":25371},"end":{"line":558,"column":19,"offset":25385}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"},","position":{"start":{"line":560,"column":5,"offset":25391},"end":{"line":560,"column":7,"offset":25393}}}],"position":{"start":{"line":560,"column":5,"offset":25391},"end":{"line":560,"column":7,"offset":25393}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"};","position":{"start":{"line":562,"column":5,"offset":25399},"end":{"line":562,"column":7,"offset":25401}}}],"position":{"start":{"line":562,"column":5,"offset":25399},"end":{"line":562,"column":7,"offset":25401}}},{"type":"text","value":"\n"}],"position":{"start":{"line":544,"column":1,"offset":25052},"end":{"line":562,"column":7,"offset":25401}}},{"type":"text","value":"\n"}],"position":{"start":{"line":541,"column":1,"offset":24788},"end":{"line":562,"column":7,"offset":25401}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"global.setTimeout","position":{"start":{"line":564,"column":1,"offset":25403},"end":{"line":564,"column":18,"offset":25420}}},{"type":"text","value":"(","position":{"start":{"line":564,"column":18,"offset":25420},"end":{"line":564,"column":20,"offset":25422}}},{"type":"text","value":"cat.purrMore, 5000","position":{"start":{"line":564,"column":20,"offset":25422},"end":{"line":564,"column":38,"offset":25440}}},{"type":"text","value":")","position":{"start":{"line":564,"column":38,"offset":25440},"end":{"line":564,"column":40,"offset":25442}}},{"type":"text","value":"; // 5 seconds later: TypeError: this.purr is not a function","position":{"start":{"line":564,"column":40,"offset":25442},"end":{"line":564,"column":100,"offset":25502}}}],"position":{"start":{"line":564,"column":1,"offset":25403},"end":{"line":564,"column":100,"offset":25502}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"`","position":{"start":{"line":566,"column":1,"offset":25504},"end":{"line":566,"column":3,"offset":25506}}},{"type":"text","value":"`","position":{"start":{"line":566,"column":3,"offset":25506},"end":{"line":566,"column":5,"offset":25508}}},{"type":"text","value":"`","position":{"start":{"line":566,"column":5,"offset":25508},"end":{"line":566,"column":7,"offset":25510}}}],"position":{"start":{"line":566,"column":1,"offset":25504},"end":{"line":566,"column":7,"offset":25510}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"we can use strict mode with ","position":{"start":{"line":568,"column":3,"offset":25514},"end":{"line":568,"column":31,"offset":25542}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"\"use strict\";"}],"position":{"start":{"line":568,"column":31,"offset":25542},"end":{"line":568,"column":46,"offset":25557}}},{"type":"text","value":" this will prevent you from accessing the global object with ","position":{"start":{"line":568,"column":46,"offset":25557},"end":{"line":568,"column":107,"offset":25618}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":568,"column":107,"offset":25618},"end":{"line":568,"column":113,"offset":25624}}},{"type":"text","value":" in functions, so if you try to call ","position":{"start":{"line":568,"column":113,"offset":25624},"end":{"line":568,"column":150,"offset":25661}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":568,"column":150,"offset":25661},"end":{"line":568,"column":156,"offset":25667}}},{"type":"text","value":" in the global context and change a value, you will get a type error, and the things you try to access will be undefined","position":{"start":{"line":568,"column":156,"offset":25667},"end":{"line":568,"column":276,"offset":25787}}}],"position":{"start":{"line":568,"column":1,"offset":25512},"end":{"line":568,"column":276,"offset":25787}}},{"type":"text","value":"\n"}],"position":{"start":{"line":568,"column":1,"offset":25512},"end":{"line":568,"column":276,"offset":25787}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"POJOs","position":{"start":{"line":570,"column":5,"offset":25793},"end":{"line":570,"column":10,"offset":25798}}}],"position":{"start":{"line":570,"column":1,"offset":25789},"end":{"line":570,"column":10,"offset":25798}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"1. Label variables as either Primitive vs. Reference","position":{"start":{"line":572,"column":6,"offset":25805},"end":{"line":572,"column":58,"offset":25857}}}],"position":{"start":{"line":572,"column":1,"offset":25800},"end":{"line":572,"column":58,"offset":25857}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Javascript considers most data types to be 'primitive', these data types are immutable, and are passed by value. The more complex data types: Array and Object are mutable, are considered 'reference' data types, and are passed by reference.","position":{"start":{"line":574,"column":1,"offset":25859},"end":{"line":574,"column":240,"offset":26098}}}],"position":{"start":{"line":574,"column":1,"offset":25859},"end":{"line":574,"column":240,"offset":26098}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Boolean - Primitive","position":{"start":{"line":576,"column":3,"offset":26102},"end":{"line":576,"column":22,"offset":26121}}}],"position":{"start":{"line":576,"column":1,"offset":26100},"end":{"line":576,"column":22,"offset":26121}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Null - Primitive","position":{"start":{"line":577,"column":3,"offset":26124},"end":{"line":577,"column":19,"offset":26140}}}],"position":{"start":{"line":577,"column":1,"offset":26122},"end":{"line":577,"column":19,"offset":26140}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Undefined - Primitive","position":{"start":{"line":578,"column":3,"offset":26143},"end":{"line":578,"column":24,"offset":26164}}}],"position":{"start":{"line":578,"column":1,"offset":26141},"end":{"line":578,"column":24,"offset":26164}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Number - Primitive","position":{"start":{"line":579,"column":3,"offset":26167},"end":{"line":579,"column":21,"offset":26185}}}],"position":{"start":{"line":579,"column":1,"offset":26165},"end":{"line":579,"column":21,"offset":26185}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"String - Primitive","position":{"start":{"line":580,"column":3,"offset":26188},"end":{"line":580,"column":21,"offset":26206}}}],"position":{"start":{"line":580,"column":1,"offset":26186},"end":{"line":580,"column":21,"offset":26206}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Array - Reference","position":{"start":{"line":581,"column":3,"offset":26209},"end":{"line":581,"column":20,"offset":26226}}}],"position":{"start":{"line":581,"column":1,"offset":26207},"end":{"line":581,"column":20,"offset":26226}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Object - Reference","position":{"start":{"line":582,"column":3,"offset":26229},"end":{"line":582,"column":21,"offset":26247}}}],"position":{"start":{"line":582,"column":1,"offset":26227},"end":{"line":582,"column":21,"offset":26247}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Function - Reference","position":{"start":{"line":583,"column":3,"offset":26250},"end":{"line":583,"column":23,"offset":26270}}}],"position":{"start":{"line":583,"column":1,"offset":26248},"end":{"line":583,"column":23,"offset":26270}}},{"type":"text","value":"\n"}],"position":{"start":{"line":576,"column":1,"offset":26100},"end":{"line":583,"column":23,"offset":26270}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"2. Identify when to use . vs ","position":{"start":{"line":585,"column":6,"offset":26277},"end":{"line":585,"column":35,"offset":26306}}},{"type":"text","value":"[","position":{"start":{"line":585,"column":35,"offset":26306},"end":{"line":585,"column":37,"offset":26308}}},{"type":"text","value":"]","position":{"start":{"line":585,"column":37,"offset":26308},"end":{"line":585,"column":39,"offset":26310}}},{"type":"text","value":" when accessing values of an object","position":{"start":{"line":585,"column":39,"offset":26310},"end":{"line":585,"column":74,"offset":26345}}}],"position":{"start":{"line":585,"column":1,"offset":26272},"end":{"line":585,"column":74,"offset":26345}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"let obj = { one: 1, two: 2 };\n\n// Choose the square brackets property accessor when the property name is determined at\n// runtime, or if the property name is not a valid identifier\nlet myKey = 'one';\nconsole.log(obj[myKey]);\n\n// Choose the dot property accessor when the property name is known ahead of time.\nconsole.log(obj.two);\n"}],"position":{"start":{"line":587,"column":1,"offset":26347},"end":{"line":597,"column":4,"offset":26687}}}],"position":{"start":{"line":587,"column":1,"offset":26347},"end":{"line":597,"column":4,"offset":26687}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"3. Write an object literal with a variable key using interpolation","position":{"start":{"line":599,"column":6,"offset":26694},"end":{"line":599,"column":72,"offset":26760}}}],"position":{"start":{"line":599,"column":1,"offset":26689},"end":{"line":599,"column":72,"offset":26760}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"let keyName = 'two';\n\n// If the key is not known, you can use an alternative `[]` syntax for\n// object initialization only\nlet obj2 = { [keyName]: 2 };\nconsole.log(obj2);\n"}],"position":{"start":{"line":601,"column":1,"offset":26762},"end":{"line":608,"column":4,"offset":26942}}}],"position":{"start":{"line":601,"column":1,"offset":26762},"end":{"line":608,"column":4,"offset":26942}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"4. Use the obj","position":{"start":{"line":610,"column":6,"offset":26949},"end":{"line":610,"column":20,"offset":26963}}},{"type":"text","value":"[","position":{"start":{"line":610,"column":20,"offset":26963},"end":{"line":610,"column":22,"offset":26965}}},{"type":"text","value":"key","position":{"start":{"line":610,"column":22,"offset":26965},"end":{"line":610,"column":25,"offset":26968}}},{"type":"text","value":"]","position":{"start":{"line":610,"column":25,"offset":26968},"end":{"line":610,"column":27,"offset":26970}}},{"type":"text","value":" !== undefined pattern to check if a given variable that contains a key exists in an object","position":{"start":{"line":610,"column":27,"offset":26970},"end":{"line":610,"column":118,"offset":27061}}}],"position":{"start":{"line":610,"column":1,"offset":26944},"end":{"line":610,"column":118,"offset":27061}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":612,"column":1,"offset":27063},"end":{"line":612,"column":4,"offset":27066}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"function doesKeyExist(obj, key) {\n    // obj[key] !== undefined\n    // or:\n    return key in obj;\n}\n\nlet course = { bootcamp: 'Lambda', course: 'Bootcamp Prep' };\nconsole.log(doesKeyExist(course, 'course')); // => true\nconsole.log(doesKeyExist(course, 'name')); // => false\n"}],"position":{"start":{"line":615,"column":1,"offset":27069},"end":{"line":627,"column":4,"offset":27354}}}],"position":{"start":{"line":615,"column":1,"offset":27069},"end":{"line":627,"column":4,"offset":27354}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"5. Utilize Object.keys and Object.values in a function","position":{"start":{"line":629,"column":6,"offset":27361},"end":{"line":629,"column":60,"offset":27415}}}],"position":{"start":{"line":629,"column":1,"offset":27356},"end":{"line":629,"column":60,"offset":27415}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":631,"column":1,"offset":27417},"end":{"line":631,"column":4,"offset":27420}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"function printKeys(object) {\n    return Object.keys(object);\n}\n\nfunction printValues(object) {\n    return Object.values(object);\n}\n\nconsole.log(printKeys({ dog: 'Strelka', dog2: 'Belka' }));\nconsole.log(printValues({ dog: 'Strelka', dog2: 'Belka' }));\n"}],"position":{"start":{"line":634,"column":1,"offset":27423},"end":{"line":647,"column":4,"offset":27686}}}],"position":{"start":{"line":634,"column":1,"offset":27423},"end":{"line":647,"column":4,"offset":27686}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"6. Iterate through an object using a for in loop","position":{"start":{"line":649,"column":6,"offset":27693},"end":{"line":649,"column":54,"offset":27741}}}],"position":{"start":{"line":649,"column":1,"offset":27688},"end":{"line":649,"column":54,"offset":27741}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"let player = { name: 'Sergey', skill: 'hockey' };\n\nfor (let key in player) {\n    console.log(key, player[key]);\n}\n\nconsole.log(Object.entries(player));\n"}],"position":{"start":{"line":651,"column":1,"offset":27743},"end":{"line":659,"column":4,"offset":27904}}}],"position":{"start":{"line":651,"column":1,"offset":27743},"end":{"line":659,"column":4,"offset":27904}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"7. Define a function that utilizes ...rest syntax to accept an arbitrary number of arguments","position":{"start":{"line":661,"column":6,"offset":27911},"end":{"line":661,"column":98,"offset":28003}}}],"position":{"start":{"line":661,"column":1,"offset":27906},"end":{"line":661,"column":98,"offset":28003}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":663,"column":1,"offset":28005},"end":{"line":663,"column":4,"offset":28008}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"function restSum(...otherNums) {\n    let sum = 0;\n    console.log(otherNums);\n    otherNums.forEach(function (num) {\n        sum += num;\n    });\n\n    return sum;\n}\n\nconsole.log(restSum(3, 5, 6)); // => 14\nconsole.log(restSum(1, 2, 3, 4, 5, 6, 7, 8, 9)); // => 45\nconsole.log(restSum(0)); // => 0\n"}],"position":{"start":{"line":666,"column":1,"offset":28011},"end":{"line":682,"column":4,"offset":28318}}}],"position":{"start":{"line":666,"column":1,"offset":28011},"end":{"line":682,"column":4,"offset":28318}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"8. Use ...spread syntax for Object literals and Array literals","position":{"start":{"line":684,"column":6,"offset":28325},"end":{"line":684,"column":68,"offset":28387}}}],"position":{"start":{"line":684,"column":1,"offset":28320},"end":{"line":684,"column":68,"offset":28387}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"let numArray = [1, 2, 3];\nlet moreNums = [...numArray, 4, 5, 6];\n\nconsole.log(moreNums);\n\nlet shoe = { color: 'red', size: 10 };\nlet newShoe = { ...shoe, brand: 'Nike', size: 12 };\nconsole.log(newShoe);\nnewShoe.color = 'black';\nconsole.log(newShoe);\n\nconsole.log(shoe);\n"}],"position":{"start":{"line":686,"column":1,"offset":28389},"end":{"line":699,"column":4,"offset":28668}}}],"position":{"start":{"line":686,"column":1,"offset":28389},"end":{"line":699,"column":4,"offset":28668}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"9. Destructure an array to reference specific elements","position":{"start":{"line":701,"column":6,"offset":28675},"end":{"line":701,"column":60,"offset":28729}}}],"position":{"start":{"line":701,"column":1,"offset":28670},"end":{"line":701,"column":60,"offset":28729}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"let arr = ['one', 'two', 'three'];\n\nlet [first] = arr;\nconsole.log(first);\n"}],"position":{"start":{"line":703,"column":1,"offset":28731},"end":{"line":708,"column":4,"offset":28815}}}],"position":{"start":{"line":703,"column":1,"offset":28731},"end":{"line":708,"column":4,"offset":28815}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"10. Destructure an object to reference specific values","position":{"start":{"line":710,"column":6,"offset":28822},"end":{"line":710,"column":60,"offset":28876}}}],"position":{"start":{"line":710,"column":1,"offset":28817},"end":{"line":710,"column":60,"offset":28876}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"let me = {\n    name: 'Ian',\n    instruments: ['bass', 'synth', 'guitar'],\n    siblings: {\n        brothers: ['Alistair'],\n        sisters: ['Meghan']\n    }\n};\n\nlet {\n    name,\n    instruments: musical_instruments,\n    siblings: { sisters }\n} = me;\n\nconsole.log(name);\nconsole.log(musical_instruments);\nconsole.log(sisters);\n"}],"position":{"start":{"line":712,"column":1,"offset":28878},"end":{"line":731,"column":4,"offset":29211}}}],"position":{"start":{"line":712,"column":1,"offset":28878},"end":{"line":731,"column":4,"offset":29211}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"11. Write a function that accepts a string as an argument and returns an object representing the count of each character in the array","position":{"start":{"line":733,"column":6,"offset":29218},"end":{"line":733,"column":139,"offset":29351}}}],"position":{"start":{"line":733,"column":1,"offset":29213},"end":{"line":733,"column":139,"offset":29351}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":735,"column":1,"offset":29353},"end":{"line":735,"column":4,"offset":29356}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"function charCount(inputString) {\n    let res = inputString.split('').reduce(function (accum, el) {\n        if (el in accum) {\n            accum[el] = accum[el] + 1;\n        } else {\n            accum[el] = 1;\n        }\n        return accum;\n    }, {});\n    return res;\n}\n\nconsole.log(charCount('aaabbbeebbcdkjfalksdfjlkasdfasdfiiidkkdingds'));\n"}],"position":{"start":{"line":738,"column":1,"offset":29359},"end":{"line":754,"column":4,"offset":29715}}}],"position":{"start":{"line":738,"column":1,"offset":29359},"end":{"line":754,"column":4,"offset":29715}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[],"position":{"start":{"line":756,"column":1,"offset":29717},"end":{"line":756,"column":4,"offset":29720}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Review of Concepts","position":{"start":{"line":758,"column":5,"offset":29726},"end":{"line":758,"column":23,"offset":29744}}}],"position":{"start":{"line":758,"column":1,"offset":29722},"end":{"line":758,"column":23,"offset":29744}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"1. Identify the difference between const, let, and var declarations","position":{"start":{"line":760,"column":6,"offset":29751},"end":{"line":760,"column":73,"offset":29818}}}],"position":{"start":{"line":760,"column":1,"offset":29746},"end":{"line":760,"column":73,"offset":29818}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"2. Explain the difference between const, let, and var declarations","position":{"start":{"line":762,"column":6,"offset":29825},"end":{"line":762,"column":72,"offset":29891}}}],"position":{"start":{"line":762,"column":1,"offset":29820},"end":{"line":762,"column":72,"offset":29891}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"var a = 'a';\n"}],"position":{"start":{"line":764,"column":1,"offset":29893},"end":{"line":766,"column":4,"offset":29915}}}],"position":{"start":{"line":764,"column":1,"offset":29893},"end":{"line":766,"column":4,"offset":29915}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"var"}],"position":{"start":{"line":768,"column":3,"offset":29919},"end":{"line":768,"column":8,"offset":29924}}},{"type":"text","value":" is the historical keyword used for variable declaration.","position":{"start":{"line":768,"column":8,"offset":29924},"end":{"line":768,"column":65,"offset":29981}}}],"position":{"start":{"line":768,"column":1,"offset":29917},"end":{"line":768,"column":65,"offset":29981}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"var"}],"position":{"start":{"line":769,"column":3,"offset":29984},"end":{"line":769,"column":8,"offset":29989}}},{"type":"text","value":" declares variables in function scope, or global scope if not inside a function.","position":{"start":{"line":769,"column":8,"offset":29989},"end":{"line":769,"column":88,"offset":30069}}}],"position":{"start":{"line":769,"column":1,"offset":29982},"end":{"line":769,"column":88,"offset":30069}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"We consider ","position":{"start":{"line":770,"column":3,"offset":30072},"end":{"line":770,"column":15,"offset":30084}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"var"}],"position":{"start":{"line":770,"column":15,"offset":30084},"end":{"line":770,"column":20,"offset":30089}}},{"type":"text","value":" to be ","position":{"start":{"line":770,"column":20,"offset":30089},"end":{"line":770,"column":27,"offset":30096}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"deprecated","position":{"start":{"line":770,"column":28,"offset":30097},"end":{"line":770,"column":38,"offset":30107}}}],"position":{"start":{"line":770,"column":27,"offset":30096},"end":{"line":770,"column":39,"offset":30108}}},{"type":"text","value":" and it is never used in this course.","position":{"start":{"line":770,"column":39,"offset":30108},"end":{"line":770,"column":76,"offset":30145}}}],"position":{"start":{"line":770,"column":1,"offset":30070},"end":{"line":770,"column":76,"offset":30145}}},{"type":"text","value":"\n"}],"position":{"start":{"line":768,"column":1,"offset":29917},"end":{"line":770,"column":76,"offset":30145}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"let b = 'b';\n"}],"position":{"start":{"line":772,"column":1,"offset":30147},"end":{"line":774,"column":4,"offset":30169}}}],"position":{"start":{"line":772,"column":1,"offset":30147},"end":{"line":774,"column":4,"offset":30169}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"let"}],"position":{"start":{"line":776,"column":3,"offset":30173},"end":{"line":776,"column":8,"offset":30178}}},{"type":"text","value":" is the keyword we use most often for variable declaration.","position":{"start":{"line":776,"column":8,"offset":30178},"end":{"line":776,"column":67,"offset":30237}}}],"position":{"start":{"line":776,"column":1,"offset":30171},"end":{"line":776,"column":67,"offset":30237}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"let"}],"position":{"start":{"line":777,"column":3,"offset":30240},"end":{"line":777,"column":8,"offset":30245}}},{"type":"text","value":" declares variables in block scope.","position":{"start":{"line":777,"column":8,"offset":30245},"end":{"line":777,"column":43,"offset":30280}}}],"position":{"start":{"line":777,"column":1,"offset":30238},"end":{"line":777,"column":43,"offset":30280}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"variables declared with ","position":{"start":{"line":778,"column":3,"offset":30283},"end":{"line":778,"column":27,"offset":30307}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"let"}],"position":{"start":{"line":778,"column":27,"offset":30307},"end":{"line":778,"column":32,"offset":30312}}},{"type":"text","value":" are re-assignable.","position":{"start":{"line":778,"column":32,"offset":30312},"end":{"line":778,"column":51,"offset":30331}}}],"position":{"start":{"line":778,"column":1,"offset":30281},"end":{"line":778,"column":51,"offset":30331}}},{"type":"text","value":"\n"}],"position":{"start":{"line":776,"column":1,"offset":30171},"end":{"line":778,"column":51,"offset":30331}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"const c = 'c';\n"}],"position":{"start":{"line":780,"column":1,"offset":30333},"end":{"line":782,"column":4,"offset":30357}}}],"position":{"start":{"line":780,"column":1,"offset":30333},"end":{"line":782,"column":4,"offset":30357}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}],"position":{"start":{"line":784,"column":3,"offset":30361},"end":{"line":784,"column":10,"offset":30368}}},{"type":"text","value":" is a specialized form of ","position":{"start":{"line":784,"column":10,"offset":30368},"end":{"line":784,"column":36,"offset":30394}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"let"}],"position":{"start":{"line":784,"column":36,"offset":30394},"end":{"line":784,"column":41,"offset":30399}}},{"type":"text","value":" that can only be used to ","position":{"start":{"line":784,"column":41,"offset":30399},"end":{"line":784,"column":67,"offset":30425}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"initialize","position":{"start":{"line":784,"column":69,"offset":30427},"end":{"line":784,"column":79,"offset":30437}}}],"position":{"start":{"line":784,"column":67,"offset":30425},"end":{"line":784,"column":81,"offset":30439}}},{"type":"text","value":" a variable.","position":{"start":{"line":784,"column":81,"offset":30439},"end":{"line":784,"column":93,"offset":30451}}}],"position":{"start":{"line":784,"column":1,"offset":30359},"end":{"line":784,"column":93,"offset":30451}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Except when it is declared, you cannot assign to a ","position":{"start":{"line":785,"column":3,"offset":30454},"end":{"line":785,"column":54,"offset":30505}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}],"position":{"start":{"line":785,"column":54,"offset":30505},"end":{"line":785,"column":61,"offset":30512}}},{"type":"text","value":" variable.","position":{"start":{"line":785,"column":61,"offset":30512},"end":{"line":785,"column":71,"offset":30522}}}],"position":{"start":{"line":785,"column":1,"offset":30452},"end":{"line":785,"column":71,"offset":30522}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}],"position":{"start":{"line":786,"column":3,"offset":30525},"end":{"line":786,"column":10,"offset":30532}}},{"type":"text","value":" scopes variables the same way that ","position":{"start":{"line":786,"column":10,"offset":30532},"end":{"line":786,"column":46,"offset":30568}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"let"}],"position":{"start":{"line":786,"column":46,"offset":30568},"end":{"line":786,"column":51,"offset":30573}}},{"type":"text","value":" does.","position":{"start":{"line":786,"column":51,"offset":30573},"end":{"line":786,"column":57,"offset":30579}}}],"position":{"start":{"line":786,"column":1,"offset":30523},"end":{"line":786,"column":57,"offset":30579}}},{"type":"text","value":"\n"}],"position":{"start":{"line":784,"column":1,"offset":30359},"end":{"line":786,"column":57,"offset":30579}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"3. Predict the evaluation of code that utilizes function scope, block scope, lexical scope, and scope chaining","position":{"start":{"line":788,"column":6,"offset":30586},"end":{"line":788,"column":116,"offset":30696}}}],"position":{"start":{"line":788,"column":1,"offset":30581},"end":{"line":788,"column":116,"offset":30696}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Consider this ","position":{"start":{"line":790,"column":1,"offset":30698},"end":{"line":790,"column":15,"offset":30712}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"run"}],"position":{"start":{"line":790,"column":15,"offset":30712},"end":{"line":790,"column":20,"offset":30717}}},{"type":"text","value":" function, inside which ","position":{"start":{"line":790,"column":20,"offset":30717},"end":{"line":790,"column":44,"offset":30741}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"foo"}],"position":{"start":{"line":790,"column":44,"offset":30741},"end":{"line":790,"column":49,"offset":30746}}},{"type":"text","value":" and ","position":{"start":{"line":790,"column":49,"offset":30746},"end":{"line":790,"column":54,"offset":30751}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"bar"}],"position":{"start":{"line":790,"column":54,"offset":30751},"end":{"line":790,"column":59,"offset":30756}}},{"type":"text","value":" have ","position":{"start":{"line":790,"column":59,"offset":30756},"end":{"line":790,"column":65,"offset":30762}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"function scope"}],"position":{"start":{"line":790,"column":65,"offset":30762},"end":{"line":790,"column":81,"offset":30778}}},{"type":"text","value":". ","position":{"start":{"line":790,"column":81,"offset":30778},"end":{"line":790,"column":83,"offset":30780}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"i"}],"position":{"start":{"line":790,"column":83,"offset":30780},"end":{"line":790,"column":86,"offset":30783}}},{"type":"text","value":" and ","position":{"start":{"line":790,"column":86,"offset":30783},"end":{"line":790,"column":91,"offset":30788}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"baz"}],"position":{"start":{"line":790,"column":91,"offset":30788},"end":{"line":790,"column":96,"offset":30793}}},{"type":"text","value":" are scoped to the block expression.","position":{"start":{"line":790,"column":96,"offset":30793},"end":{"line":790,"column":132,"offset":30829}}}],"position":{"start":{"line":790,"column":1,"offset":30698},"end":{"line":790,"column":132,"offset":30829}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"// function and block scope in this example\nfunction run() {\n    var foo = 'Foo';\n    let bar = 'Bar';\n\n    console.log(foo, bar);\n\n    {\n        console.log(foo);\n        let baz = 'Bazz';\n        console.log(baz);\n    }\n\n    console.log(baz); // ReferenceError\n}\n\nrun();\n"}],"position":{"start":{"line":792,"column":1,"offset":30831},"end":{"line":810,"column":4,"offset":31113}}}],"position":{"start":{"line":792,"column":1,"offset":30831},"end":{"line":810,"column":4,"offset":31113}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Notice that referencing ","position":{"start":{"line":812,"column":1,"offset":31115},"end":{"line":812,"column":25,"offset":31139}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"baz"}],"position":{"start":{"line":812,"column":25,"offset":31139},"end":{"line":812,"column":30,"offset":31144}}},{"type":"text","value":" from outside it's block results in JavaScript throwing a ReferenceError.","position":{"start":{"line":812,"column":30,"offset":31144},"end":{"line":812,"column":103,"offset":31217}}}],"position":{"start":{"line":812,"column":1,"offset":31115},"end":{"line":812,"column":103,"offset":31217}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Consider this ","position":{"start":{"line":814,"column":1,"offset":31219},"end":{"line":814,"column":15,"offset":31233}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"run"}],"position":{"start":{"line":814,"column":15,"offset":31233},"end":{"line":814,"column":20,"offset":31238}}},{"type":"text","value":" function, inside of which ","position":{"start":{"line":814,"column":20,"offset":31238},"end":{"line":814,"column":47,"offset":31265}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"foo"}],"position":{"start":{"line":814,"column":47,"offset":31265},"end":{"line":814,"column":52,"offset":31270}}},{"type":"text","value":" has ","position":{"start":{"line":814,"column":52,"offset":31270},"end":{"line":814,"column":57,"offset":31275}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"function scope"}],"position":{"start":{"line":814,"column":57,"offset":31275},"end":{"line":814,"column":73,"offset":31291}}},{"type":"text","value":".","position":{"start":{"line":814,"column":73,"offset":31291},"end":{"line":814,"column":74,"offset":31292}}}],"position":{"start":{"line":814,"column":1,"offset":31219},"end":{"line":814,"column":74,"offset":31292}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":816,"column":1,"offset":31294},"end":{"line":816,"column":4,"offset":31297}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"function run() {\n    console.log(foo); // undefined\n    var foo = 'Foo';\n    console.log(foo); // Foo\n}\n\nrun();\n"}],"position":{"start":{"line":819,"column":1,"offset":31300},"end":{"line":829,"column":4,"offset":31423}}}],"position":{"start":{"line":819,"column":1,"offset":31300},"end":{"line":829,"column":4,"offset":31423}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Consider this ","position":{"start":{"line":831,"column":1,"offset":31425},"end":{"line":831,"column":15,"offset":31439}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"func1"}],"position":{"start":{"line":831,"column":15,"offset":31439},"end":{"line":831,"column":22,"offset":31446}}},{"type":"text","value":" function and it's nested scopes.","position":{"start":{"line":831,"column":22,"offset":31446},"end":{"line":831,"column":55,"offset":31479}}}],"position":{"start":{"line":831,"column":1,"offset":31425},"end":{"line":831,"column":55,"offset":31479}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"// global scope\nfunction func1(arg1) {\n    // func1 scope\n\n    return function func2(arg2) {\n        // func2 scope\n\n        return function func3(arg3) {\n            // func3 scope\n\n            console.log(arg1, arg2, arg3);\n        };\n    };\n}\n"}],"position":{"start":{"line":833,"column":1,"offset":31481},"end":{"line":848,"column":4,"offset":31736}}}],"position":{"start":{"line":833,"column":1,"offset":31481},"end":{"line":848,"column":4,"offset":31736}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"6. Implement a closure and explain how the closure effects scope","position":{"start":{"line":850,"column":6,"offset":31743},"end":{"line":850,"column":70,"offset":31807}}}],"position":{"start":{"line":850,"column":1,"offset":31738},"end":{"line":850,"column":70,"offset":31807}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"const adder = (arg1) => {\n    return (arg2) => {\n        return arg1 + arg2;\n    };\n};\n\nconst func2 = adder(2);\nconst result = func2(2);\nconsole.log(result); // => 4;\n"}],"position":{"start":{"line":852,"column":1,"offset":31809},"end":{"line":862,"column":4,"offset":31985}}}],"position":{"start":{"line":852,"column":1,"offset":31809},"end":{"line":862,"column":4,"offset":31985}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"4. Define an arrow function","position":{"start":{"line":864,"column":6,"offset":31992},"end":{"line":864,"column":33,"offset":32019}}}],"position":{"start":{"line":864,"column":1,"offset":31987},"end":{"line":864,"column":33,"offset":32019}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"const returnValue = (val) => val;\n"}],"position":{"start":{"line":866,"column":1,"offset":32021},"end":{"line":868,"column":4,"offset":32064}}}],"position":{"start":{"line":866,"column":1,"offset":32021},"end":{"line":868,"column":4,"offset":32064}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This simple construct will create a function that accepts ","position":{"start":{"line":870,"column":1,"offset":32066},"end":{"line":870,"column":59,"offset":32124}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"val"}],"position":{"start":{"line":870,"column":59,"offset":32124},"end":{"line":870,"column":64,"offset":32129}}},{"type":"text","value":" as a parameter, and returns ","position":{"start":{"line":870,"column":64,"offset":32129},"end":{"line":870,"column":93,"offset":32158}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"val"}],"position":{"start":{"line":870,"column":93,"offset":32158},"end":{"line":870,"column":98,"offset":32163}}},{"type":"text","value":" immediately. We do not need to type ","position":{"start":{"line":870,"column":98,"offset":32163},"end":{"line":870,"column":135,"offset":32200}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"return val"}],"position":{"start":{"line":870,"column":135,"offset":32200},"end":{"line":870,"column":147,"offset":32212}}},{"type":"text","value":", because this is a single-line function.","position":{"start":{"line":870,"column":147,"offset":32212},"end":{"line":870,"column":188,"offset":32253}}}],"position":{"start":{"line":870,"column":1,"offset":32066},"end":{"line":870,"column":188,"offset":32253}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Identically, we could write","position":{"start":{"line":872,"column":1,"offset":32255},"end":{"line":872,"column":28,"offset":32282}}}],"position":{"start":{"line":872,"column":1,"offset":32255},"end":{"line":872,"column":28,"offset":32282}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"const returnValue = (val) => {\n    return val;\n};\n"}],"position":{"start":{"line":874,"column":1,"offset":32284},"end":{"line":878,"column":4,"offset":32343}}}],"position":{"start":{"line":874,"column":1,"offset":32284},"end":{"line":878,"column":4,"offset":32343}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"5. Given an arrow function, deduce the value of ","position":{"start":{"line":880,"column":6,"offset":32350},"end":{"line":880,"column":54,"offset":32398}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":880,"column":54,"offset":32398},"end":{"line":880,"column":60,"offset":32404}}},{"type":"text","value":" without executing the code","position":{"start":{"line":880,"column":60,"offset":32404},"end":{"line":880,"column":87,"offset":32431}}}],"position":{"start":{"line":880,"column":1,"offset":32345},"end":{"line":880,"column":87,"offset":32431}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":882,"column":1,"offset":32433},"end":{"line":882,"column":4,"offset":32436}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"function fDAdder(arr) {\n    console.log(this);\n\n    return arr.reduce((acc, ele) => {\n        return acc + ele;\n    });\n}\n\nfDAdder([1, 2, 4, 6]);\n"}],"position":{"start":{"line":885,"column":1,"offset":32439},"end":{"line":897,"column":4,"offset":32596}}}],"position":{"start":{"line":885,"column":1,"offset":32439},"end":{"line":897,"column":4,"offset":32596}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If we use a ","position":{"start":{"line":899,"column":1,"offset":32598},"end":{"line":899,"column":13,"offset":32610}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"function declaration","position":{"start":{"line":899,"column":14,"offset":32611},"end":{"line":899,"column":34,"offset":32631}}}],"position":{"start":{"line":899,"column":13,"offset":32610},"end":{"line":899,"column":35,"offset":32632}}},{"type":"text","value":" style function, the ","position":{"start":{"line":899,"column":35,"offset":32632},"end":{"line":899,"column":56,"offset":32653}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":899,"column":56,"offset":32653},"end":{"line":899,"column":62,"offset":32659}}},{"type":"text","value":" variable is set to the ","position":{"start":{"line":899,"column":62,"offset":32659},"end":{"line":899,"column":86,"offset":32683}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"global"}],"position":{"start":{"line":899,"column":86,"offset":32683},"end":{"line":899,"column":94,"offset":32691}}},{"type":"text","value":" object ","position":{"start":{"line":899,"column":94,"offset":32691},"end":{"line":899,"column":102,"offset":32699}}},{"type":"text","value":"(","position":{"start":{"line":899,"column":102,"offset":32699},"end":{"line":899,"column":104,"offset":32701}}},{"type":"text","value":"i.e. ","position":{"start":{"line":899,"column":104,"offset":32701},"end":{"line":899,"column":109,"offset":32706}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Object [global]"}],"position":{"start":{"line":899,"column":109,"offset":32706},"end":{"line":899,"column":126,"offset":32723}}},{"type":"text","value":" in Node.JS and ","position":{"start":{"line":899,"column":126,"offset":32723},"end":{"line":899,"column":142,"offset":32739}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Window"}],"position":{"start":{"line":899,"column":142,"offset":32739},"end":{"line":899,"column":150,"offset":32747}}},{"type":"text","value":" in your browser","position":{"start":{"line":899,"column":150,"offset":32747},"end":{"line":899,"column":166,"offset":32763}}},{"type":"text","value":")","position":{"start":{"line":899,"column":166,"offset":32763},"end":{"line":899,"column":168,"offset":32765}}},{"type":"text","value":".","position":{"start":{"line":899,"column":168,"offset":32765},"end":{"line":899,"column":169,"offset":32766}}}],"position":{"start":{"line":899,"column":1,"offset":32598},"end":{"line":899,"column":169,"offset":32766}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"const adder = (arr) => {\n    console.log(this);\n    arr.reduce((acc, ele) => (sum += ele));\n};\nadder([1, 2, 4, 6]);\n"}],"position":{"start":{"line":901,"column":1,"offset":32768},"end":{"line":907,"column":4,"offset":32893}}}],"position":{"start":{"line":901,"column":1,"offset":32768},"end":{"line":907,"column":4,"offset":32893}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this example, we use a ","position":{"start":{"line":909,"column":1,"offset":32895},"end":{"line":909,"column":27,"offset":32921}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"fat arrow","position":{"start":{"line":909,"column":28,"offset":32922},"end":{"line":909,"column":37,"offset":32931}}}],"position":{"start":{"line":909,"column":27,"offset":32921},"end":{"line":909,"column":38,"offset":32932}}},{"type":"text","value":" style function. Note that when we declare a funciton like this ","position":{"start":{"line":909,"column":38,"offset":32932},"end":{"line":909,"column":102,"offset":32996}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":909,"column":102,"offset":32996},"end":{"line":909,"column":108,"offset":33002}}},{"type":"text","value":" becomes","position":{"start":{"line":909,"column":108,"offset":33002},"end":{"line":909,"column":116,"offset":33010}}}],"position":{"start":{"line":909,"column":1,"offset":32895},"end":{"line":909,"column":116,"offset":33010}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"7. Define a method that references this on an object literal","position":{"start":{"line":911,"column":6,"offset":33017},"end":{"line":911,"column":66,"offset":33077}}}],"position":{"start":{"line":911,"column":1,"offset":33012},"end":{"line":911,"column":66,"offset":33077}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"const pokemon = {\n    firstname: 'Pika',\n    lastname: 'Chu',\n    getPokeName: function () {\n        const fullname = `${this.firstname} ${this.lastname}`;\n        return fullname;\n    }\n};\n\nconsole.log(pokemon.getPokeName());\n"}],"position":{"start":{"line":913,"column":1,"offset":33079},"end":{"line":924,"column":4,"offset":33315}}}],"position":{"start":{"line":913,"column":1,"offset":33079},"end":{"line":924,"column":4,"offset":33315}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"8. Utilize the built in Function","position":{"start":{"line":926,"column":6,"offset":33322},"end":{"line":926,"column":38,"offset":33354}}},{"type":"text","value":"#","position":{"start":{"line":926,"column":38,"offset":33354},"end":{"line":926,"column":40,"offset":33356}}},{"type":"text","value":"bind on a callback to maintain the context of ","position":{"start":{"line":926,"column":40,"offset":33356},"end":{"line":926,"column":86,"offset":33402}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":926,"column":86,"offset":33402},"end":{"line":926,"column":92,"offset":33408}}}],"position":{"start":{"line":926,"column":1,"offset":33317},"end":{"line":926,"column":92,"offset":33408}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"const pokemon = {\n    firstname: 'Pika',\n    lastname: 'Chu',\n    getPokeName: function () {\n        const fullname = `${this.firstname} ${this.lastname}`;\n        return fullname;\n    }\n};\n\nconst logPokemon = pokemon.getPokename.bind(pokemon);\n\nlogPokemon('sushi', 'algorithms'); // Pika Chu loves sushi and algorithms\n"}],"position":{"start":{"line":928,"column":1,"offset":33410},"end":{"line":941,"column":4,"offset":33739}}}],"position":{"start":{"line":928,"column":1,"offset":33410},"end":{"line":941,"column":4,"offset":33739}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"9. Given a code snippet, identify what ","position":{"start":{"line":943,"column":6,"offset":33746},"end":{"line":943,"column":45,"offset":33785}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":943,"column":45,"offset":33785},"end":{"line":943,"column":51,"offset":33791}}},{"type":"text","value":" refers to","position":{"start":{"line":943,"column":51,"offset":33791},"end":{"line":943,"column":61,"offset":33801}}}],"position":{"start":{"line":943,"column":1,"offset":33741},"end":{"line":943,"column":61,"offset":33801}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":945,"column":1,"offset":33803},"end":{"line":945,"column":4,"offset":33806}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"function Person(name) {\n    // this.name = name;\n    // let that = this;\n\n    setTimeout(function () {\n        // console.log(this); // => Window\n        // console.log(that); // => [Function] => Person\n        // this.sayName(); // => no method error\n        that.sayName();\n    }, 1000);\n}\n\nPerson.prototype.sayName = function () {\n    console.log(this.name);\n};\n\nconst jane = new Person('Jane');\n"}],"position":{"start":{"line":948,"column":1,"offset":33809},"end":{"line":968,"column":4,"offset":34219}}}],"position":{"start":{"line":948,"column":1,"offset":33809},"end":{"line":968,"column":4,"offset":34219}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":969,"column":1,"offset":34220}}}}