{"expireTime":9007200904342770000,"key":"transformer-remark-markdown-html-ast-86dd4ea9b3dfa946e439c5ac59c44c3b--","val":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/divide-two-integers/description/"},"children":[{"type":"text","value":"29. Divide Two Integers","position":{"start":{"line":2,"column":5,"offset":5},"end":{"line":2,"column":28,"offset":28}}}],"position":{"start":{"line":2,"column":4,"offset":4},"end":{"line":2,"column":93,"offset":93}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":93,"offset":93}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Problem:","position":{"start":{"line":4,"column":5,"offset":99},"end":{"line":4,"column":13,"offset":107}}}],"position":{"start":{"line":4,"column":1,"offset":95},"end":{"line":4,"column":13,"offset":107}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given two integers ","position":{"start":{"line":6,"column":1,"offset":109},"end":{"line":6,"column":20,"offset":128}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"dividend"}],"position":{"start":{"line":6,"column":20,"offset":128},"end":{"line":6,"column":30,"offset":138}}},{"type":"text","value":" and ","position":{"start":{"line":6,"column":30,"offset":138},"end":{"line":6,"column":35,"offset":143}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"divisor"}],"position":{"start":{"line":6,"column":35,"offset":143},"end":{"line":6,"column":44,"offset":152}}},{"type":"text","value":", divide two integers without using multiplication, division and mod operator.","position":{"start":{"line":6,"column":44,"offset":152},"end":{"line":6,"column":122,"offset":230}}}],"position":{"start":{"line":6,"column":1,"offset":109},"end":{"line":6,"column":122,"offset":230}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Return the quotient after dividing ","position":{"start":{"line":8,"column":1,"offset":232},"end":{"line":8,"column":36,"offset":267}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"dividend"}],"position":{"start":{"line":8,"column":36,"offset":267},"end":{"line":8,"column":46,"offset":277}}},{"type":"text","value":" by ","position":{"start":{"line":8,"column":46,"offset":277},"end":{"line":8,"column":50,"offset":281}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"divisor"}],"position":{"start":{"line":8,"column":50,"offset":281},"end":{"line":8,"column":59,"offset":290}}},{"type":"text","value":".","position":{"start":{"line":8,"column":59,"offset":290},"end":{"line":8,"column":60,"offset":291}}}],"position":{"start":{"line":8,"column":1,"offset":232},"end":{"line":8,"column":60,"offset":291}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The integer division should truncate toward zero.","position":{"start":{"line":10,"column":1,"offset":293},"end":{"line":10,"column":50,"offset":342}}}],"position":{"start":{"line":10,"column":1,"offset":293},"end":{"line":10,"column":50,"offset":342}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 1:","position":{"start":{"line":12,"column":3,"offset":346},"end":{"line":12,"column":13,"offset":356}}}],"position":{"start":{"line":12,"column":1,"offset":344},"end":{"line":12,"column":15,"offset":358}}}],"position":{"start":{"line":12,"column":1,"offset":344},"end":{"line":12,"column":15,"offset":358}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: dividend = 10, divisor = 3\nOutput: 3\n"}],"position":{"start":{"line":14,"column":1,"offset":360},"end":{"line":17,"column":4,"offset":411}}}],"position":{"start":{"line":14,"column":1,"offset":360},"end":{"line":17,"column":4,"offset":411}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 2:","position":{"start":{"line":19,"column":3,"offset":415},"end":{"line":19,"column":13,"offset":425}}}],"position":{"start":{"line":19,"column":1,"offset":413},"end":{"line":19,"column":15,"offset":427}}}],"position":{"start":{"line":19,"column":1,"offset":413},"end":{"line":19,"column":15,"offset":427}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: dividend = 7, divisor = -3\nOutput: -2\n"}],"position":{"start":{"line":21,"column":1,"offset":429},"end":{"line":24,"column":4,"offset":481}}}],"position":{"start":{"line":21,"column":1,"offset":429},"end":{"line":24,"column":4,"offset":481}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note:","position":{"start":{"line":26,"column":3,"offset":485},"end":{"line":26,"column":8,"offset":490}}}],"position":{"start":{"line":26,"column":1,"offset":483},"end":{"line":26,"column":10,"offset":492}}}],"position":{"start":{"line":26,"column":1,"offset":483},"end":{"line":26,"column":10,"offset":492}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Both dividend and divisor will be 32-bit signed integers.","position":{"start":{"line":28,"column":3,"offset":496},"end":{"line":28,"column":60,"offset":553}}}],"position":{"start":{"line":28,"column":1,"offset":494},"end":{"line":28,"column":60,"offset":553}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The divisor will never be 0.","position":{"start":{"line":29,"column":3,"offset":556},"end":{"line":29,"column":31,"offset":584}}}],"position":{"start":{"line":29,"column":1,"offset":554},"end":{"line":29,"column":31,"offset":584}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Assume we are dealing with an environment which could only store integers within the 32-bit signed integer range: ","position":{"start":{"line":30,"column":3,"offset":587},"end":{"line":30,"column":117,"offset":701}}},{"type":"text","value":"[−231, 231 − 1]","position":{"start":{"line":30,"column":118,"offset":702},"end":{"line":30,"column":131,"offset":715}}},{"type":"text","value":". For the purpose of this problem, assume that your function returns 231 − 1 when the division result overflows.","position":{"start":{"line":30,"column":132,"offset":716},"end":{"line":30,"column":244,"offset":828}}}],"position":{"start":{"line":30,"column":1,"offset":585},"end":{"line":30,"column":244,"offset":828}}},{"type":"text","value":"\n"}],"position":{"start":{"line":28,"column":1,"offset":494},"end":{"line":30,"column":244,"offset":828}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Solution:","position":{"start":{"line":32,"column":5,"offset":834},"end":{"line":32,"column":14,"offset":843}}}],"position":{"start":{"line":32,"column":1,"offset":830},"end":{"line":32,"column":14,"offset":843}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Every decimal number can be represented as ","position":{"start":{"line":34,"column":1,"offset":845},"end":{"line":34,"column":44,"offset":888}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"a0*2^0 + a1*2^1 + a2*2^2 + ... + an*2^n"}],"position":{"start":{"line":34,"column":44,"offset":888},"end":{"line":34,"column":85,"offset":929}}},{"type":"text","value":".","position":{"start":{"line":34,"column":85,"offset":929},"end":{"line":34,"column":86,"offset":930}}}],"position":{"start":{"line":34,"column":1,"offset":845},"end":{"line":34,"column":86,"offset":930}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Replace multiplication and division with binary shifting.","position":{"start":{"line":36,"column":1,"offset":932},"end":{"line":36,"column":58,"offset":989}}}],"position":{"start":{"line":36,"column":1,"offset":932},"end":{"line":36,"column":58,"offset":989}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"/**\n * @param {number} dividend\n * @param {number} divisor\n * @return {number}\n */\nlet divide = function (dividend, divisor) {\n    if (divisor === 0 || (divisor === -1 && dividend < -2147483647) || dividend > 2147483647 || dividend < -2147483648) {\n        return 2147483647;\n    }\n\n    const isNegative = (dividend < 0 && divisor >= 0) || (dividend >= 0 && divisor < 0);\n    const pDividend = Math.abs(dividend);\n    const pDivisor = Math.abs(divisor);\n\n    if (dividend === 0 || pDividend < pDivisor) {\n        return 0;\n    }\n\n    let doubling = pDivisor;\n    let count = 1;\n    while (doubling < pDividend && !(doubling & (1 << 30))) {\n        doubling <<= 1;\n        count <<= 1;\n    }\n    if (doubling > pDividend) {\n        doubling >>>= 1;\n        count >>>= 1;\n    }\n\n    const result = count + divide(pDividend - doubling, pDivisor);\n    return isNegative ? -result : result;\n};\n"}],"position":{"start":{"line":38,"column":1,"offset":991},"end":{"line":71,"column":4,"offset":1889}}}],"position":{"start":{"line":38,"column":1,"offset":991},"end":{"line":71,"column":4,"offset":1889}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":73,"column":1,"offset":1891},"end":{"line":73,"column":4,"offset":1894}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"☆","position":{"start":{"line":75,"column":1,"offset":1896},"end":{"line":75,"column":2,"offset":1897}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":": .｡. o(≧▽≦)o .｡.:","position":{"start":{"line":75,"column":3,"offset":1898},"end":{"line":75,"column":21,"offset":1916}}}],"position":{"start":{"line":75,"column":2,"offset":1897},"end":{"line":75,"column":22,"offset":1917}}},{"type":"text","value":"☆☆","position":{"start":{"line":75,"column":22,"offset":1917},"end":{"line":75,"column":24,"offset":1919}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":": .｡. o(≧▽≦)o .｡.:","position":{"start":{"line":75,"column":25,"offset":1920},"end":{"line":75,"column":43,"offset":1938}}}],"position":{"start":{"line":75,"column":24,"offset":1919},"end":{"line":75,"column":44,"offset":1939}}},{"type":"text","value":"☆☆","position":{"start":{"line":75,"column":44,"offset":1939},"end":{"line":75,"column":46,"offset":1941}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":": .｡. o(≧▽≦)o .｡.:","position":{"start":{"line":75,"column":47,"offset":1942},"end":{"line":75,"column":65,"offset":1960}}}],"position":{"start":{"line":75,"column":46,"offset":1941},"end":{"line":75,"column":66,"offset":1961}}},{"type":"text","value":"☆","position":{"start":{"line":75,"column":66,"offset":1961},"end":{"line":75,"column":67,"offset":1962}}}],"position":{"start":{"line":75,"column":1,"offset":1896},"end":{"line":75,"column":67,"offset":1962}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":77,"column":1,"offset":1964},"end":{"line":77,"column":4,"offset":1967}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":79,"column":1,"offset":1969},"end":{"line":79,"column":4,"offset":1972}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"☆","position":{"start":{"line":81,"column":1,"offset":1974},"end":{"line":81,"column":2,"offset":1975}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":": .｡. o(≧▽≦)o .｡.:","position":{"start":{"line":81,"column":3,"offset":1976},"end":{"line":81,"column":21,"offset":1994}}}],"position":{"start":{"line":81,"column":2,"offset":1975},"end":{"line":81,"column":22,"offset":1995}}},{"type":"text","value":"☆☆","position":{"start":{"line":81,"column":22,"offset":1995},"end":{"line":81,"column":24,"offset":1997}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":": .｡. o(≧▽≦)o .｡.:","position":{"start":{"line":81,"column":25,"offset":1998},"end":{"line":81,"column":43,"offset":2016}}}],"position":{"start":{"line":81,"column":24,"offset":1997},"end":{"line":81,"column":44,"offset":2017}}},{"type":"text","value":"☆","position":{"start":{"line":81,"column":44,"offset":2017},"end":{"line":81,"column":45,"offset":2018}}}],"position":{"start":{"line":81,"column":1,"offset":1974},"end":{"line":81,"column":45,"offset":2018}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":83,"column":1,"offset":2020},"end":{"line":83,"column":4,"offset":2023}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":84,"column":1,"offset":2024}}}}