{"expireTime":9007200904342768000,"key":"transformer-remark-markdown-ast-173a46f78ab828c39d0e0604be4633ae--","val":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Leetcode","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":11,"offset":11},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":11,"offset":11},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Data Structures & Algorithms","position":{"start":{"line":4,"column":4,"offset":16},"end":{"line":4,"column":32,"offset":44},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":13},"end":{"line":4,"column":32,"offset":44},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/Data-Structures-Algos-Codebase","children":[{"type":"text","value":"DS Algo Codebase","position":{"start":{"line":6,"column":2,"offset":47},"end":{"line":6,"column":18,"offset":63},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":46},"end":{"line":6,"column":77,"offset":122},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":46},"end":{"line":6,"column":77,"offset":122},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#115-distinct-subsequenceshttpsleetcodecomproblemsdistinct-subsequencesdescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":8,"column":2,"offset":125},"end":{"line":8,"column":142,"offset":265},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":124},"end":{"line":8,"column":227,"offset":350},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":124},"end":{"line":8,"column":227,"offset":350},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":10,"column":4,"offset":355},"end":{"line":10,"column":6,"offset":357},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/distinct-subsequences/description/","children":[{"type":"text","value":"115. Distinct Subsequences","position":{"start":{"line":10,"column":7,"offset":358},"end":{"line":10,"column":33,"offset":384},"indent":[]}}],"position":{"start":{"line":10,"column":6,"offset":357},"end":{"line":10,"column":100,"offset":451},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":352},"end":{"line":10,"column":100,"offset":451},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem:","position":{"start":{"line":12,"column":5,"offset":457},"end":{"line":12,"column":13,"offset":465},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":453},"end":{"line":12,"column":13,"offset":465},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a string ","position":{"start":{"line":14,"column":1,"offset":467},"end":{"line":14,"column":16,"offset":482},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"S","position":{"start":{"line":14,"column":18,"offset":484},"end":{"line":14,"column":19,"offset":485},"indent":[]}}],"position":{"start":{"line":14,"column":16,"offset":482},"end":{"line":14,"column":21,"offset":487},"indent":[]}},{"type":"text","value":" and a string ","position":{"start":{"line":14,"column":21,"offset":487},"end":{"line":14,"column":35,"offset":501},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"T","position":{"start":{"line":14,"column":37,"offset":503},"end":{"line":14,"column":38,"offset":504},"indent":[]}}],"position":{"start":{"line":14,"column":35,"offset":501},"end":{"line":14,"column":40,"offset":506},"indent":[]}},{"type":"text","value":", count the number of distinct subsequences of ","position":{"start":{"line":14,"column":40,"offset":506},"end":{"line":14,"column":87,"offset":553},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"S","position":{"start":{"line":14,"column":89,"offset":555},"end":{"line":14,"column":90,"offset":556},"indent":[]}}],"position":{"start":{"line":14,"column":87,"offset":553},"end":{"line":14,"column":92,"offset":558},"indent":[]}},{"type":"text","value":" which equals ","position":{"start":{"line":14,"column":92,"offset":558},"end":{"line":14,"column":106,"offset":572},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"T","position":{"start":{"line":14,"column":108,"offset":574},"end":{"line":14,"column":109,"offset":575},"indent":[]}}],"position":{"start":{"line":14,"column":106,"offset":572},"end":{"line":14,"column":111,"offset":577},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":14,"column":111,"offset":577},"end":{"line":14,"column":112,"offset":578},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":467},"end":{"line":14,"column":112,"offset":578},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A subsequence of a string is a new string which is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (ie, ","position":{"start":{"line":16,"column":1,"offset":580},"end":{"line":16,"column":209,"offset":788},"indent":[]}},{"type":"inlineCode","value":"\"ACE\"","position":{"start":{"line":16,"column":209,"offset":788},"end":{"line":16,"column":216,"offset":795},"indent":[]}},{"type":"text","value":" is a subsequence of ","position":{"start":{"line":16,"column":216,"offset":795},"end":{"line":16,"column":237,"offset":816},"indent":[]}},{"type":"inlineCode","value":"\"ABCDE\"","position":{"start":{"line":16,"column":237,"offset":816},"end":{"line":16,"column":246,"offset":825},"indent":[]}},{"type":"text","value":" while ","position":{"start":{"line":16,"column":246,"offset":825},"end":{"line":16,"column":253,"offset":832},"indent":[]}},{"type":"inlineCode","value":"\"AEC\"","position":{"start":{"line":16,"column":253,"offset":832},"end":{"line":16,"column":260,"offset":839},"indent":[]}},{"type":"text","value":" is not).","position":{"start":{"line":16,"column":260,"offset":839},"end":{"line":16,"column":269,"offset":848},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":580},"end":{"line":16,"column":269,"offset":848},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":18,"column":3,"offset":852},"end":{"line":18,"column":13,"offset":862},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":850},"end":{"line":18,"column":15,"offset":864},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":850},"end":{"line":18,"column":15,"offset":864},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: S = \"rabbbit\", T = \"rabbit\"\nOutput: 3\nExplanation:\n\nAs shown below, there are 3 ways you can generate \"rabbit\" from S.\n(The caret symbol ^ means the chosen letters)\n\nrabbbit\n^^^^ ^^\nrabbbit\n^^ ^^^^\nrabbbit\n^^^ ^^^","position":{"start":{"line":20,"column":1,"offset":866},"end":{"line":32,"column":12,"offset":1130},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":34,"column":3,"offset":1134},"end":{"line":34,"column":13,"offset":1144},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":1132},"end":{"line":34,"column":15,"offset":1146},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":1132},"end":{"line":34,"column":15,"offset":1146},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: S = \"babgbag\", T = \"bag\"\nOutput: 5\nExplanation:\n\nAs shown below, there are 5 ways you can generate \"bag\" from S.\n(The caret symbol ^ means the chosen letters)\n\nbabgbag\n^^ ^\nbabgbag\n^^    ^\nbabgbag\n^    ^^\nbabgbag\n  ^  ^^\nbabgbag\n    ^^^","position":{"start":{"line":36,"column":1,"offset":1148},"end":{"line":52,"column":12,"offset":1451},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution:","position":{"start":{"line":54,"column":5,"offset":1457},"end":{"line":54,"column":14,"offset":1466},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":1453},"end":{"line":54,"column":14,"offset":1466},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Define ","position":{"start":{"line":56,"column":1,"offset":1468},"end":{"line":56,"column":8,"offset":1475},"indent":[]}},{"type":"inlineCode","value":"f(i, j)","position":{"start":{"line":56,"column":8,"offset":1475},"end":{"line":56,"column":17,"offset":1484},"indent":[]}},{"type":"text","value":" to be the number of ways that generate ","position":{"start":{"line":56,"column":17,"offset":1484},"end":{"line":56,"column":57,"offset":1524},"indent":[]}},{"type":"inlineCode","value":"T[0...j)","position":{"start":{"line":56,"column":57,"offset":1524},"end":{"line":56,"column":67,"offset":1534},"indent":[]}},{"type":"text","value":" from ","position":{"start":{"line":56,"column":67,"offset":1534},"end":{"line":56,"column":73,"offset":1540},"indent":[]}},{"type":"inlineCode","value":"S[0...i)","position":{"start":{"line":56,"column":73,"offset":1540},"end":{"line":56,"column":83,"offset":1550},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":56,"column":83,"offset":1550},"end":{"line":56,"column":84,"offset":1551},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":1468},"end":{"line":56,"column":84,"offset":1551},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For ","position":{"start":{"line":58,"column":1,"offset":1553},"end":{"line":58,"column":5,"offset":1557},"indent":[]}},{"type":"inlineCode","value":"f(i, j)","position":{"start":{"line":58,"column":5,"offset":1557},"end":{"line":58,"column":14,"offset":1566},"indent":[]}},{"type":"text","value":" you can always skip ","position":{"start":{"line":58,"column":14,"offset":1566},"end":{"line":58,"column":35,"offset":1587},"indent":[]}},{"type":"inlineCode","value":"S[i-1]","position":{"start":{"line":58,"column":35,"offset":1587},"end":{"line":58,"column":43,"offset":1595},"indent":[]}},{"type":"text","value":", but can only take it when ","position":{"start":{"line":58,"column":43,"offset":1595},"end":{"line":58,"column":71,"offset":1623},"indent":[]}},{"type":"inlineCode","value":"S[i-1] === T[j-1]","position":{"start":{"line":58,"column":71,"offset":1623},"end":{"line":58,"column":90,"offset":1642},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":58,"column":90,"offset":1642},"end":{"line":58,"column":91,"offset":1643},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":1553},"end":{"line":58,"column":91,"offset":1643},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"f(0, j) = 0, j > 0 // nothing to delete\nf(i, 0) = 1 // delete all\nf(i, j) = f(i-1, j) + (S[i-1] === T[j-1] ? f(i-1, j-1) : 0)","position":{"start":{"line":60,"column":1,"offset":1645},"end":{"line":64,"column":4,"offset":1780},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Dynamic array can be used.","position":{"start":{"line":66,"column":1,"offset":1782},"end":{"line":66,"column":27,"offset":1808},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":1782},"end":{"line":66,"column":27,"offset":1808},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {string} s\n * @param {string} t\n * @return {number}\n */\nlet numDistinct = function (s, t) {\n    const lens = s.length;\n    const lent = t.length;\n    const dp = new Array(lent + 1).fill(0);\n    dp[0] = 1;\n    for (let i = 1; i <= lens; i++) {\n        for (let j = lent; j >= 1; j--) {\n            if (s[i - 1] === t[j - 1]) {\n                dp[j] += dp[j - 1];\n            }\n        }\n    }\n    return dp[lent];\n};","position":{"start":{"line":68,"column":1,"offset":1810},"end":{"line":88,"column":4,"offset":2249},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":90,"column":1,"offset":2251},"end":{"line":90,"column":4,"offset":2254},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Tree\": ","position":{"start":{"line":92,"column":1,"offset":2256},"end":{"line":94,"column":9,"offset":2299},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/tree","children":[{"type":"text","value":"https://leetcode.com/tag/tree","position":{"start":{"line":94,"column":9,"offset":2299},"end":{"line":94,"column":38,"offset":2328},"indent":[]}}],"position":{"start":{"line":94,"column":9,"offset":2299},"end":{"line":94,"column":38,"offset":2328},"indent":[]}},{"type":"text","value":"\n\"Depth-first Search\": ","position":{"start":{"line":94,"column":38,"offset":2328},"end":{"line":95,"column":23,"offset":2351},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/depth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/depth-first-search","position":{"start":{"line":95,"column":23,"offset":2351},"end":{"line":95,"column":66,"offset":2394},"indent":[]}}],"position":{"start":{"line":95,"column":23,"offset":2351},"end":{"line":95,"column":66,"offset":2394},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Populating Next Right Pointers in Each Node II\": ","position":{"start":{"line":95,"column":66,"offset":2394},"end":{"line":97,"column":51,"offset":2464},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii","children":[{"type":"text","value":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii","position":{"start":{"line":97,"column":51,"offset":2464},"end":{"line":97,"column":127,"offset":2540},"indent":[]}}],"position":{"start":{"line":97,"column":51,"offset":2464},"end":{"line":97,"column":127,"offset":2540},"indent":[]}},{"type":"text","value":"\n\"Binary Tree Right Side View\": ","position":{"start":{"line":97,"column":127,"offset":2540},"end":{"line":98,"column":32,"offset":2572},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/binary-tree-right-side-view","children":[{"type":"text","value":"https://leetcode.com/problems/binary-tree-right-side-view","position":{"start":{"line":98,"column":32,"offset":2572},"end":{"line":98,"column":89,"offset":2629},"indent":[]}}],"position":{"start":{"line":98,"column":32,"offset":2572},"end":{"line":98,"column":89,"offset":2629},"indent":[]}}],"position":{"start":{"line":92,"column":1,"offset":2256},"end":{"line":98,"column":89,"offset":2629},"indent":[1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":100,"column":1,"offset":2631},"end":{"line":100,"column":4,"offset":2634},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#116-populating-next-right-pointers-in-each-nodehttpsleetcodecomproblemspopulating-next-right-pointers-in-each-nodedescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":102,"column":2,"offset":2637},"end":{"line":102,"column":142,"offset":2777},"indent":[]}}],"position":{"start":{"line":102,"column":1,"offset":2636},"end":{"line":102,"column":271,"offset":2906},"indent":[]}}],"position":{"start":{"line":102,"column":1,"offset":2636},"end":{"line":102,"column":271,"offset":2906},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":104,"column":4,"offset":2911},"end":{"line":104,"column":6,"offset":2913},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node/description/","children":[{"type":"text","value":"116. Populating Next Right Pointers in Each Node","position":{"start":{"line":104,"column":7,"offset":2914},"end":{"line":104,"column":55,"offset":2962},"indent":[]}}],"position":{"start":{"line":104,"column":6,"offset":2913},"end":{"line":104,"column":144,"offset":3051},"indent":[]}}],"position":{"start":{"line":104,"column":1,"offset":2908},"end":{"line":104,"column":144,"offset":3051},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem:","position":{"start":{"line":106,"column":5,"offset":3057},"end":{"line":106,"column":13,"offset":3065},"indent":[]}}],"position":{"start":{"line":106,"column":1,"offset":3053},"end":{"line":106,"column":13,"offset":3065},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a binary tree","position":{"start":{"line":108,"column":1,"offset":3067},"end":{"line":108,"column":20,"offset":3086},"indent":[]}}],"position":{"start":{"line":108,"column":1,"offset":3067},"end":{"line":108,"column":20,"offset":3086},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"struct TreeLinkNode {\n  TreeLinkNode *left;\n  TreeLinkNode *right;\n  TreeLinkNode *next;\n}","position":{"start":{"line":110,"column":1,"offset":3088},"end":{"line":117,"column":4,"offset":3187},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Populate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to ","position":{"start":{"line":119,"column":1,"offset":3189},"end":{"line":119,"column":127,"offset":3315},"indent":[]}},{"type":"inlineCode","value":"NULL","position":{"start":{"line":119,"column":127,"offset":3315},"end":{"line":119,"column":133,"offset":3321},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":119,"column":133,"offset":3321},"end":{"line":119,"column":134,"offset":3322},"indent":[]}}],"position":{"start":{"line":119,"column":1,"offset":3189},"end":{"line":119,"column":134,"offset":3322},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Initially, all next pointers are set to ","position":{"start":{"line":121,"column":1,"offset":3324},"end":{"line":121,"column":41,"offset":3364},"indent":[]}},{"type":"inlineCode","value":"NULL","position":{"start":{"line":121,"column":41,"offset":3364},"end":{"line":121,"column":47,"offset":3370},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":121,"column":47,"offset":3370},"end":{"line":121,"column":48,"offset":3371},"indent":[]}}],"position":{"start":{"line":121,"column":1,"offset":3324},"end":{"line":121,"column":48,"offset":3371},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":123,"column":3,"offset":3375},"end":{"line":123,"column":8,"offset":3380},"indent":[]}}],"position":{"start":{"line":123,"column":1,"offset":3373},"end":{"line":123,"column":10,"offset":3382},"indent":[]}}],"position":{"start":{"line":123,"column":1,"offset":3373},"end":{"line":123,"column":10,"offset":3382},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You may only use constant extra space.","position":{"start":{"line":125,"column":3,"offset":3386},"end":{"line":125,"column":41,"offset":3424},"indent":[]}}],"position":{"start":{"line":125,"column":3,"offset":3386},"end":{"line":125,"column":41,"offset":3424},"indent":[]}}],"position":{"start":{"line":125,"column":1,"offset":3384},"end":{"line":125,"column":41,"offset":3424},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Recursive approach is fine, implicit stack space does not count as extra space for this problem.","position":{"start":{"line":126,"column":3,"offset":3427},"end":{"line":126,"column":99,"offset":3523},"indent":[]}}],"position":{"start":{"line":126,"column":3,"offset":3427},"end":{"line":126,"column":99,"offset":3523},"indent":[]}}],"position":{"start":{"line":126,"column":1,"offset":3425},"end":{"line":126,"column":99,"offset":3523},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You may assume that it is a perfect binary tree (ie, all leaves are at the same level, and every parent has two children).","position":{"start":{"line":127,"column":3,"offset":3526},"end":{"line":127,"column":125,"offset":3648},"indent":[]}}],"position":{"start":{"line":127,"column":3,"offset":3526},"end":{"line":127,"column":125,"offset":3648},"indent":[]}}],"position":{"start":{"line":127,"column":1,"offset":3524},"end":{"line":127,"column":125,"offset":3648},"indent":[]}}],"position":{"start":{"line":125,"column":1,"offset":3384},"end":{"line":127,"column":125,"offset":3648},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example:","position":{"start":{"line":129,"column":3,"offset":3652},"end":{"line":129,"column":11,"offset":3660},"indent":[]}}],"position":{"start":{"line":129,"column":1,"offset":3650},"end":{"line":129,"column":13,"offset":3662},"indent":[]}}],"position":{"start":{"line":129,"column":1,"offset":3650},"end":{"line":129,"column":13,"offset":3662},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given the following perfect binary tree,","position":{"start":{"line":131,"column":1,"offset":3664},"end":{"line":131,"column":41,"offset":3704},"indent":[]}}],"position":{"start":{"line":131,"column":1,"offset":3664},"end":{"line":131,"column":41,"offset":3704},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"     1\n   /  \\\n  2    3\n / \\  / \\\n4  5  6  7","position":{"start":{"line":133,"column":1,"offset":3706},"end":{"line":140,"column":4,"offset":3759},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"After calling your function, the tree should look like:","position":{"start":{"line":142,"column":1,"offset":3761},"end":{"line":142,"column":56,"offset":3816},"indent":[]}}],"position":{"start":{"line":142,"column":1,"offset":3761},"end":{"line":142,"column":56,"offset":3816},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"     1 -> NULL\n   /  \\\n  2 -> 3 -> NULL\n / \\  / \\\n4->5->6->7 -> NULL","position":{"start":{"line":144,"column":1,"offset":3818},"end":{"line":151,"column":4,"offset":3895},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution:","position":{"start":{"line":153,"column":5,"offset":3901},"end":{"line":153,"column":14,"offset":3910},"indent":[]}}],"position":{"start":{"line":153,"column":1,"offset":3897},"end":{"line":153,"column":14,"offset":3910},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"ONE","position":{"start":{"line":155,"column":6,"offset":3917},"end":{"line":155,"column":9,"offset":3920},"indent":[]}}],"position":{"start":{"line":155,"column":1,"offset":3912},"end":{"line":155,"column":9,"offset":3920},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Recursive.","position":{"start":{"line":157,"column":1,"offset":3922},"end":{"line":157,"column":11,"offset":3932},"indent":[]}}],"position":{"start":{"line":157,"column":1,"offset":3922},"end":{"line":157,"column":11,"offset":3932},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For every ","position":{"start":{"line":159,"column":1,"offset":3934},"end":{"line":159,"column":11,"offset":3944},"indent":[]}},{"type":"inlineCode","value":"node","position":{"start":{"line":159,"column":11,"offset":3944},"end":{"line":159,"column":17,"offset":3950},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":159,"column":17,"offset":3950},"end":{"line":159,"column":18,"offset":3951},"indent":[]}}],"position":{"start":{"line":159,"column":1,"offset":3934},"end":{"line":159,"column":18,"offset":3951},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Left child: points to ","position":{"start":{"line":161,"column":3,"offset":3955},"end":{"line":161,"column":25,"offset":3977},"indent":[]}},{"type":"inlineCode","value":"node.right","position":{"start":{"line":161,"column":25,"offset":3977},"end":{"line":161,"column":37,"offset":3989},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":161,"column":37,"offset":3989},"end":{"line":161,"column":38,"offset":3990},"indent":[]}}],"position":{"start":{"line":161,"column":3,"offset":3955},"end":{"line":161,"column":38,"offset":3990},"indent":[]}}],"position":{"start":{"line":161,"column":1,"offset":3953},"end":{"line":161,"column":38,"offset":3990},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Right child: points to ","position":{"start":{"line":162,"column":3,"offset":3993},"end":{"line":162,"column":26,"offset":4016},"indent":[]}},{"type":"inlineCode","value":"node.next.left","position":{"start":{"line":162,"column":26,"offset":4016},"end":{"line":162,"column":42,"offset":4032},"indent":[]}},{"type":"text","value":" if ","position":{"start":{"line":162,"column":42,"offset":4032},"end":{"line":162,"column":46,"offset":4036},"indent":[]}},{"type":"inlineCode","value":"node.next","position":{"start":{"line":162,"column":46,"offset":4036},"end":{"line":162,"column":57,"offset":4047},"indent":[]}},{"type":"text","value":" exists.","position":{"start":{"line":162,"column":57,"offset":4047},"end":{"line":162,"column":65,"offset":4055},"indent":[]}}],"position":{"start":{"line":162,"column":3,"offset":3993},"end":{"line":162,"column":65,"offset":4055},"indent":[]}}],"position":{"start":{"line":162,"column":1,"offset":3991},"end":{"line":162,"column":65,"offset":4055},"indent":[]}}],"position":{"start":{"line":161,"column":1,"offset":3953},"end":{"line":162,"column":65,"offset":4055},"indent":[1]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * Definition for binary tree with next pointer.\n * function TreeLinkNode(val) {\n *     this.val = val;\n *     this.left = this.right = this.next = null;\n * }\n */\n\n/**\n * @param {TreeLinkNode} root\n * @return {void} Do not return anything, modify tree in-place instead.\n */\nlet connect = function (root) {\n    if (!root) {\n        return;\n    }\n    if (root.left !== null) {\n        root.left.next = root.right;\n        connect(root.left);\n    }\n    if (root.right !== null) {\n        if (root.next !== null) {\n            root.right.next = root.next.left;\n        }\n        connect(root.right);\n    }\n};","position":{"start":{"line":164,"column":1,"offset":4057},"end":{"line":192,"column":4,"offset":4675},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"TWO","position":{"start":{"line":194,"column":6,"offset":4682},"end":{"line":194,"column":9,"offset":4685},"indent":[]}}],"position":{"start":{"line":194,"column":1,"offset":4677},"end":{"line":194,"column":9,"offset":4685},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Level order traversal.","position":{"start":{"line":196,"column":1,"offset":4687},"end":{"line":196,"column":23,"offset":4709},"indent":[]}}],"position":{"start":{"line":196,"column":1,"offset":4687},"end":{"line":196,"column":23,"offset":4709},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * Definition for binary tree with next pointer.\n * function TreeLinkNode(val) {\n *     this.val = val;\n *     this.left = this.right = this.next = null;\n * }\n */\n\n/**\n * @param {TreeLinkNode} root\n * @return {void} Do not return anything, modify tree in-place instead.\n */\nlet connect = function (root) {\n    if (!root) {\n        return;\n    }\n\n    const queue = [NaN, root];\n    while (queue.length > 1) {\n        const node = queue.shift();\n        if (node !== node) {\n            for (let i = 0; i < queue.length; i++) {\n                queue[i].next = queue[i + 1] || null;\n            }\n            queue.push(NaN);\n        } else {\n            if (node.left !== null) {\n                queue.push(node.left);\n            }\n            if (node.right !== null) {\n                queue.push(node.right);\n            }\n        }\n    }\n};","position":{"start":{"line":198,"column":1,"offset":4711},"end":{"line":234,"column":4,"offset":5567},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":236,"column":1,"offset":5569},"end":{"line":236,"column":4,"offset":5572},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Tree\": ","position":{"start":{"line":238,"column":1,"offset":5574},"end":{"line":240,"column":9,"offset":5617},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/tree","children":[{"type":"text","value":"https://leetcode.com/tag/tree","position":{"start":{"line":240,"column":9,"offset":5617},"end":{"line":240,"column":38,"offset":5646},"indent":[]}}],"position":{"start":{"line":240,"column":9,"offset":5617},"end":{"line":240,"column":38,"offset":5646},"indent":[]}},{"type":"text","value":"\n\"Depth-first Search\": ","position":{"start":{"line":240,"column":38,"offset":5646},"end":{"line":241,"column":23,"offset":5669},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/depth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/depth-first-search","position":{"start":{"line":241,"column":23,"offset":5669},"end":{"line":241,"column":66,"offset":5712},"indent":[]}}],"position":{"start":{"line":241,"column":23,"offset":5669},"end":{"line":241,"column":66,"offset":5712},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Populating Next Right Pointers in Each Node\": ","position":{"start":{"line":241,"column":66,"offset":5712},"end":{"line":243,"column":48,"offset":5779},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node","children":[{"type":"text","value":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node","position":{"start":{"line":243,"column":48,"offset":5779},"end":{"line":243,"column":121,"offset":5852},"indent":[]}}],"position":{"start":{"line":243,"column":48,"offset":5779},"end":{"line":243,"column":121,"offset":5852},"indent":[]}}],"position":{"start":{"line":238,"column":1,"offset":5574},"end":{"line":243,"column":121,"offset":5852},"indent":[1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":245,"column":1,"offset":5854},"end":{"line":245,"column":4,"offset":5857},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#117-populating-next-right-pointers-in-each-node-iihttpsleetcodecomproblemspopulating-next-right-pointers-in-each-node-iidescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":247,"column":2,"offset":5860},"end":{"line":247,"column":142,"offset":6000},"indent":[]}}],"position":{"start":{"line":247,"column":1,"offset":5859},"end":{"line":247,"column":277,"offset":6135},"indent":[]}}],"position":{"start":{"line":247,"column":1,"offset":5859},"end":{"line":247,"column":277,"offset":6135},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":249,"column":4,"offset":6140},"end":{"line":249,"column":6,"offset":6142},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii/description/","children":[{"type":"text","value":"117. Populating Next Right Pointers in Each Node II","position":{"start":{"line":249,"column":7,"offset":6143},"end":{"line":249,"column":58,"offset":6194},"indent":[]}}],"position":{"start":{"line":249,"column":6,"offset":6142},"end":{"line":249,"column":150,"offset":6286},"indent":[]}}],"position":{"start":{"line":249,"column":1,"offset":6137},"end":{"line":249,"column":150,"offset":6286},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem:","position":{"start":{"line":251,"column":5,"offset":6292},"end":{"line":251,"column":13,"offset":6300},"indent":[]}}],"position":{"start":{"line":251,"column":1,"offset":6288},"end":{"line":251,"column":13,"offset":6300},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a binary tree","position":{"start":{"line":253,"column":1,"offset":6302},"end":{"line":253,"column":20,"offset":6321},"indent":[]}}],"position":{"start":{"line":253,"column":1,"offset":6302},"end":{"line":253,"column":20,"offset":6321},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"struct TreeLinkNode {\n  TreeLinkNode *left;\n  TreeLinkNode *right;\n  TreeLinkNode *next;\n}","position":{"start":{"line":255,"column":1,"offset":6323},"end":{"line":262,"column":4,"offset":6422},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Populate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to ","position":{"start":{"line":264,"column":1,"offset":6424},"end":{"line":264,"column":127,"offset":6550},"indent":[]}},{"type":"inlineCode","value":"NULL","position":{"start":{"line":264,"column":127,"offset":6550},"end":{"line":264,"column":133,"offset":6556},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":264,"column":133,"offset":6556},"end":{"line":264,"column":134,"offset":6557},"indent":[]}}],"position":{"start":{"line":264,"column":1,"offset":6424},"end":{"line":264,"column":134,"offset":6557},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Initially, all next pointers are set to ","position":{"start":{"line":266,"column":1,"offset":6559},"end":{"line":266,"column":41,"offset":6599},"indent":[]}},{"type":"inlineCode","value":"NULL","position":{"start":{"line":266,"column":41,"offset":6599},"end":{"line":266,"column":47,"offset":6605},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":266,"column":47,"offset":6605},"end":{"line":266,"column":48,"offset":6606},"indent":[]}}],"position":{"start":{"line":266,"column":1,"offset":6559},"end":{"line":266,"column":48,"offset":6606},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":268,"column":3,"offset":6610},"end":{"line":268,"column":8,"offset":6615},"indent":[]}}],"position":{"start":{"line":268,"column":1,"offset":6608},"end":{"line":268,"column":10,"offset":6617},"indent":[]}}],"position":{"start":{"line":268,"column":1,"offset":6608},"end":{"line":268,"column":10,"offset":6617},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You may only use constant extra space.","position":{"start":{"line":270,"column":3,"offset":6621},"end":{"line":270,"column":41,"offset":6659},"indent":[]}}],"position":{"start":{"line":270,"column":3,"offset":6621},"end":{"line":270,"column":41,"offset":6659},"indent":[]}}],"position":{"start":{"line":270,"column":1,"offset":6619},"end":{"line":270,"column":41,"offset":6659},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Recursive approach is fine, implicit stack space does not count as extra space for this problem.","position":{"start":{"line":271,"column":3,"offset":6662},"end":{"line":271,"column":99,"offset":6758},"indent":[]}}],"position":{"start":{"line":271,"column":3,"offset":6662},"end":{"line":271,"column":99,"offset":6758},"indent":[]}}],"position":{"start":{"line":271,"column":1,"offset":6660},"end":{"line":271,"column":99,"offset":6758},"indent":[]}}],"position":{"start":{"line":270,"column":1,"offset":6619},"end":{"line":271,"column":99,"offset":6758},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example:","position":{"start":{"line":273,"column":3,"offset":6762},"end":{"line":273,"column":11,"offset":6770},"indent":[]}}],"position":{"start":{"line":273,"column":1,"offset":6760},"end":{"line":273,"column":13,"offset":6772},"indent":[]}}],"position":{"start":{"line":273,"column":1,"offset":6760},"end":{"line":273,"column":13,"offset":6772},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given the following binary tree,","position":{"start":{"line":275,"column":1,"offset":6774},"end":{"line":275,"column":33,"offset":6806},"indent":[]}}],"position":{"start":{"line":275,"column":1,"offset":6774},"end":{"line":275,"column":33,"offset":6806},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"     1\n   /  \\\n  2    3\n / \\    \\\n4   5    7","position":{"start":{"line":277,"column":1,"offset":6808},"end":{"line":284,"column":4,"offset":6861},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"After calling your function, the tree should look like:","position":{"start":{"line":286,"column":1,"offset":6863},"end":{"line":286,"column":56,"offset":6918},"indent":[]}}],"position":{"start":{"line":286,"column":1,"offset":6863},"end":{"line":286,"column":56,"offset":6918},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"     1 -> NULL\n   /  \\\n  2 -> 3 -> NULL\n / \\    \\\n4-> 5 -> 7 -> NULL","position":{"start":{"line":288,"column":1,"offset":6920},"end":{"line":295,"column":4,"offset":6997},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution:","position":{"start":{"line":297,"column":5,"offset":7003},"end":{"line":297,"column":14,"offset":7012},"indent":[]}}],"position":{"start":{"line":297,"column":1,"offset":6999},"end":{"line":297,"column":14,"offset":7012},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"ONE","position":{"start":{"line":299,"column":6,"offset":7019},"end":{"line":299,"column":9,"offset":7022},"indent":[]}}],"position":{"start":{"line":299,"column":1,"offset":7014},"end":{"line":299,"column":9,"offset":7022},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Recursive. See ","position":{"start":{"line":301,"column":1,"offset":7024},"end":{"line":301,"column":16,"offset":7039},"indent":[]}},{"type":"link","title":null,"url":"./116.%20Populating%20Next%20Right%20Pointers%20in%20Each%20Node.md","children":[{"type":"text","value":"116. Populating Next Right Pointers in Each Node","position":{"start":{"line":301,"column":17,"offset":7040},"end":{"line":301,"column":65,"offset":7088},"indent":[]}}],"position":{"start":{"line":301,"column":16,"offset":7039},"end":{"line":301,"column":135,"offset":7158},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":301,"column":135,"offset":7158},"end":{"line":301,"column":136,"offset":7159},"indent":[]}}],"position":{"start":{"line":301,"column":1,"offset":7024},"end":{"line":301,"column":136,"offset":7159},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The tree may not be perfect now. So keep finding ","position":{"start":{"line":303,"column":1,"offset":7161},"end":{"line":303,"column":50,"offset":7210},"indent":[]}},{"type":"inlineCode","value":"next","position":{"start":{"line":303,"column":50,"offset":7210},"end":{"line":303,"column":56,"offset":7216},"indent":[]}},{"type":"text","value":" until there is a node with children, or ","position":{"start":{"line":303,"column":56,"offset":7216},"end":{"line":303,"column":97,"offset":7257},"indent":[]}},{"type":"inlineCode","value":"null","position":{"start":{"line":303,"column":97,"offset":7257},"end":{"line":303,"column":103,"offset":7263},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":303,"column":103,"offset":7263},"end":{"line":303,"column":104,"offset":7264},"indent":[]}}],"position":{"start":{"line":303,"column":1,"offset":7161},"end":{"line":303,"column":104,"offset":7264},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This also means post-order traversal is required.","position":{"start":{"line":305,"column":1,"offset":7266},"end":{"line":305,"column":50,"offset":7315},"indent":[]}}],"position":{"start":{"line":305,"column":1,"offset":7266},"end":{"line":305,"column":50,"offset":7315},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * Definition for binary tree with next pointer.\n * function TreeLinkNode(val) {\n *     this.val = val;\n *     this.left = this.right = this.next = null;\n * }\n */\n\n/**\n * @param {TreeLinkNode} root\n * @return {void} Do not return anything, modify tree in-place instead.\n */\nlet connect = function (root) {\n    if (!root) {\n        return;\n    }\n    let next = null;\n    for (let node = root.next; node !== null; node = node.next) {\n        if (node.left !== null) {\n            next = node.left;\n            break;\n        }\n        if (node.right !== null) {\n            next = node.right;\n            break;\n        }\n    }\n    if (root.right !== null) {\n        root.right.next = next;\n    }\n    if (root.left !== null) {\n        root.left.next = root.right || next;\n    }\n    connect(root.right);\n    connect(root.left);\n};","position":{"start":{"line":307,"column":1,"offset":7317},"end":{"line":344,"column":4,"offset":8158},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"TWO","position":{"start":{"line":346,"column":6,"offset":8165},"end":{"line":346,"column":9,"offset":8168},"indent":[]}}],"position":{"start":{"line":346,"column":1,"offset":8160},"end":{"line":346,"column":9,"offset":8168},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Level order traversal. Exact same as ","position":{"start":{"line":348,"column":1,"offset":8170},"end":{"line":348,"column":38,"offset":8207},"indent":[]}},{"type":"link","title":null,"url":"./116.%20Populating%20Next%20Right%20Pointers%20in%20Each%20Node.md","children":[{"type":"text","value":"116. Populating Next Right Pointers in Each Node","position":{"start":{"line":348,"column":39,"offset":8208},"end":{"line":348,"column":87,"offset":8256},"indent":[]}}],"position":{"start":{"line":348,"column":38,"offset":8207},"end":{"line":348,"column":157,"offset":8326},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":348,"column":157,"offset":8326},"end":{"line":348,"column":158,"offset":8327},"indent":[]}}],"position":{"start":{"line":348,"column":1,"offset":8170},"end":{"line":348,"column":158,"offset":8327},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * Definition for binary tree with next pointer.\n * function TreeLinkNode(val) {\n *     this.val = val;\n *     this.left = this.right = this.next = null;\n * }\n */\n\n/**\n * @param {TreeLinkNode} root\n * @return {void} Do not return anything, modify tree in-place instead.\n */\nlet connect = function (root) {\n    if (!root) {\n        return;\n    }\n\n    const queue = [NaN, root];\n    while (queue.length > 1) {\n        const node = queue.shift();\n        if (node !== node) {\n            for (let i = 0; i < queue.length; i++) {\n                queue[i].next = queue[i + 1] || null;\n            }\n            queue.push(NaN);\n        } else {\n            if (node.left !== null) {\n                queue.push(node.left);\n            }\n            if (node.right !== null) {\n                queue.push(node.right);\n            }\n        }\n    }\n};","position":{"start":{"line":350,"column":1,"offset":8329},"end":{"line":386,"column":4,"offset":9185},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":388,"column":1,"offset":9187},"end":{"line":388,"column":4,"offset":9190},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Easy\nRelated Topics:\n\"Array\": ","position":{"start":{"line":390,"column":1,"offset":9192},"end":{"line":392,"column":10,"offset":9234},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/array","children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":392,"column":10,"offset":9234},"end":{"line":392,"column":40,"offset":9264},"indent":[]}}],"position":{"start":{"line":392,"column":10,"offset":9234},"end":{"line":392,"column":40,"offset":9264},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Pascal's Triangle II\": ","position":{"start":{"line":392,"column":40,"offset":9264},"end":{"line":394,"column":25,"offset":9308},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/pascals-triangle-ii","children":[{"type":"text","value":"https://leetcode.com/problems/pascals-triangle-ii","position":{"start":{"line":394,"column":25,"offset":9308},"end":{"line":394,"column":74,"offset":9357},"indent":[]}}],"position":{"start":{"line":394,"column":25,"offset":9308},"end":{"line":394,"column":74,"offset":9357},"indent":[]}}],"position":{"start":{"line":390,"column":1,"offset":9192},"end":{"line":394,"column":74,"offset":9357},"indent":[1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":396,"column":1,"offset":9359},"end":{"line":396,"column":4,"offset":9362},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#118-pascals-trianglehttpsleetcodecomproblemspascals-triangledescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":398,"column":2,"offset":9365},"end":{"line":398,"column":142,"offset":9505},"indent":[]}}],"position":{"start":{"line":398,"column":1,"offset":9364},"end":{"line":398,"column":217,"offset":9580},"indent":[]}}],"position":{"start":{"line":398,"column":1,"offset":9364},"end":{"line":398,"column":217,"offset":9580},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":400,"column":4,"offset":9585},"end":{"line":400,"column":6,"offset":9587},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/pascals-triangle/description/","children":[{"type":"text","value":"118. Pascal's Triangle","position":{"start":{"line":400,"column":7,"offset":9588},"end":{"line":400,"column":29,"offset":9610},"indent":[]}}],"position":{"start":{"line":400,"column":6,"offset":9587},"end":{"line":400,"column":91,"offset":9672},"indent":[]}}],"position":{"start":{"line":400,"column":1,"offset":9582},"end":{"line":400,"column":91,"offset":9672},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem:","position":{"start":{"line":402,"column":5,"offset":9678},"end":{"line":402,"column":13,"offset":9686},"indent":[]}}],"position":{"start":{"line":402,"column":1,"offset":9674},"end":{"line":402,"column":13,"offset":9686},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a non-negative integer ","position":{"start":{"line":404,"column":1,"offset":9688},"end":{"line":404,"column":30,"offset":9717},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"numRows","position":{"start":{"line":404,"column":31,"offset":9718},"end":{"line":404,"column":38,"offset":9725},"indent":[]}}],"position":{"start":{"line":404,"column":30,"offset":9717},"end":{"line":404,"column":39,"offset":9726},"indent":[]}},{"type":"text","value":", generate the first ","position":{"start":{"line":404,"column":39,"offset":9726},"end":{"line":404,"column":60,"offset":9747},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"numRows","position":{"start":{"line":404,"column":61,"offset":9748},"end":{"line":404,"column":68,"offset":9755},"indent":[]}}],"position":{"start":{"line":404,"column":60,"offset":9747},"end":{"line":404,"column":69,"offset":9756},"indent":[]}},{"type":"text","value":" of Pascal's triangle.","position":{"start":{"line":404,"column":69,"offset":9756},"end":{"line":404,"column":91,"offset":9778},"indent":[]}}],"position":{"start":{"line":404,"column":1,"offset":9688},"end":{"line":404,"column":91,"offset":9778},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://upload.wikimedia.org/wikipedia/commons/0/0d/PascalTriangleAnimated2.gif","alt":"PascalTriangleAnimated2.gif","position":{"start":{"line":406,"column":1,"offset":9780},"end":{"line":406,"column":112,"offset":9891},"indent":[]}}],"position":{"start":{"line":406,"column":1,"offset":9780},"end":{"line":406,"column":112,"offset":9891},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In Pascal's triangle, each number is the sum of the two numbers directly above it.","position":{"start":{"line":408,"column":1,"offset":9893},"end":{"line":408,"column":83,"offset":9975},"indent":[]}}],"position":{"start":{"line":408,"column":1,"offset":9893},"end":{"line":408,"column":83,"offset":9975},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example:","position":{"start":{"line":410,"column":3,"offset":9979},"end":{"line":410,"column":11,"offset":9987},"indent":[]}}],"position":{"start":{"line":410,"column":1,"offset":9977},"end":{"line":410,"column":13,"offset":9989},"indent":[]}}],"position":{"start":{"line":410,"column":1,"offset":9977},"end":{"line":410,"column":13,"offset":9989},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: 5\nOutput:\n[\n     [1],\n    [1,1],\n   [1,2,1],\n  [1,3,3,1],\n [1,4,6,4,1]\n]","position":{"start":{"line":412,"column":1,"offset":9991},"end":{"line":423,"column":4,"offset":10079},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution:","position":{"start":{"line":425,"column":5,"offset":10085},"end":{"line":425,"column":14,"offset":10094},"indent":[]}}],"position":{"start":{"line":425,"column":1,"offset":10081},"end":{"line":425,"column":14,"offset":10094},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Dynamic Programming 101.","position":{"start":{"line":427,"column":1,"offset":10096},"end":{"line":427,"column":25,"offset":10120},"indent":[]}}],"position":{"start":{"line":427,"column":1,"offset":10096},"end":{"line":427,"column":25,"offset":10120},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {number} numRows\n * @return {number[][]}\n */\nlet generate = function (numRows) {\n    if (numRows <= 0) {\n        return [];\n    }\n\n    const result = [[1]];\n    for (let i = 1; i < numRows; i++) {\n        const lastRow = result[i - 1];\n        const row = [1];\n        for (let j = 1; j < i; j++) {\n            row[j] = lastRow[j] + lastRow[j - 1];\n        }\n        row.push(1);\n        result.push(row);\n    }\n\n    return result;\n};","position":{"start":{"line":429,"column":1,"offset":10122},"end":{"line":452,"column":4,"offset":10580},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":454,"column":1,"offset":10582},"end":{"line":454,"column":4,"offset":10585},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Easy\nRelated Topics:\n\"Array\": ","position":{"start":{"line":456,"column":1,"offset":10587},"end":{"line":458,"column":10,"offset":10629},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/array","children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":458,"column":10,"offset":10629},"end":{"line":458,"column":40,"offset":10659},"indent":[]}}],"position":{"start":{"line":458,"column":10,"offset":10629},"end":{"line":458,"column":40,"offset":10659},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Pascal's Triangle\": ","position":{"start":{"line":458,"column":40,"offset":10659},"end":{"line":460,"column":22,"offset":10700},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/pascals-triangle","children":[{"type":"text","value":"https://leetcode.com/problems/pascals-triangle","position":{"start":{"line":460,"column":22,"offset":10700},"end":{"line":460,"column":68,"offset":10746},"indent":[]}}],"position":{"start":{"line":460,"column":22,"offset":10700},"end":{"line":460,"column":68,"offset":10746},"indent":[]}}],"position":{"start":{"line":456,"column":1,"offset":10587},"end":{"line":460,"column":68,"offset":10746},"indent":[1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":462,"column":1,"offset":10748},"end":{"line":462,"column":4,"offset":10751},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#119-pascals-triangle-iihttpsleetcodecomproblemspascals-triangle-iidescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":464,"column":2,"offset":10754},"end":{"line":464,"column":142,"offset":10894},"indent":[]}}],"position":{"start":{"line":464,"column":1,"offset":10753},"end":{"line":464,"column":223,"offset":10975},"indent":[]}}],"position":{"start":{"line":464,"column":1,"offset":10753},"end":{"line":464,"column":223,"offset":10975},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":466,"column":4,"offset":10980},"end":{"line":466,"column":6,"offset":10982},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/pascals-triangle-ii/description/","children":[{"type":"text","value":"119. Pascal's Triangle II","position":{"start":{"line":466,"column":7,"offset":10983},"end":{"line":466,"column":32,"offset":11008},"indent":[]}}],"position":{"start":{"line":466,"column":6,"offset":10982},"end":{"line":466,"column":97,"offset":11073},"indent":[]}}],"position":{"start":{"line":466,"column":1,"offset":10977},"end":{"line":466,"column":97,"offset":11073},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem:","position":{"start":{"line":468,"column":5,"offset":11079},"end":{"line":468,"column":13,"offset":11087},"indent":[]}}],"position":{"start":{"line":468,"column":1,"offset":11075},"end":{"line":468,"column":13,"offset":11087},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a non-negative index ","position":{"start":{"line":470,"column":1,"offset":11089},"end":{"line":470,"column":28,"offset":11116},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"k","position":{"start":{"line":470,"column":29,"offset":11117},"end":{"line":470,"column":30,"offset":11118},"indent":[]}}],"position":{"start":{"line":470,"column":28,"offset":11116},"end":{"line":470,"column":31,"offset":11119},"indent":[]}},{"type":"text","value":" where ","position":{"start":{"line":470,"column":31,"offset":11119},"end":{"line":470,"column":38,"offset":11126},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"k","position":{"start":{"line":470,"column":39,"offset":11127},"end":{"line":470,"column":40,"offset":11128},"indent":[]}}],"position":{"start":{"line":470,"column":38,"offset":11126},"end":{"line":470,"column":41,"offset":11129},"indent":[]}},{"type":"text","value":" â‰¤ 33, return the ","position":{"start":{"line":470,"column":41,"offset":11129},"end":{"line":470,"column":59,"offset":11147},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"k","position":{"start":{"line":470,"column":60,"offset":11148},"end":{"line":470,"column":61,"offset":11149},"indent":[]}}],"position":{"start":{"line":470,"column":59,"offset":11147},"end":{"line":470,"column":62,"offset":11150},"indent":[]}},{"type":"text","value":"th index row of the Pascal's triangle.","position":{"start":{"line":470,"column":62,"offset":11150},"end":{"line":470,"column":100,"offset":11188},"indent":[]}}],"position":{"start":{"line":470,"column":1,"offset":11089},"end":{"line":470,"column":100,"offset":11188},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Note that the row index starts from 0.","position":{"start":{"line":472,"column":1,"offset":11190},"end":{"line":472,"column":39,"offset":11228},"indent":[]}}],"position":{"start":{"line":472,"column":1,"offset":11190},"end":{"line":472,"column":39,"offset":11228},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://upload.wikimedia.org/wikipedia/commons/0/0d/PascalTriangleAnimated2.gif","alt":"PascalTriangleAnimated2.gif","position":{"start":{"line":474,"column":1,"offset":11230},"end":{"line":474,"column":112,"offset":11341},"indent":[]}}],"position":{"start":{"line":474,"column":1,"offset":11230},"end":{"line":474,"column":112,"offset":11341},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In Pascal's triangle, each number is the sum of the two numbers directly above it.","position":{"start":{"line":476,"column":1,"offset":11343},"end":{"line":476,"column":83,"offset":11425},"indent":[]}}],"position":{"start":{"line":476,"column":1,"offset":11343},"end":{"line":476,"column":83,"offset":11425},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example:","position":{"start":{"line":478,"column":3,"offset":11429},"end":{"line":478,"column":11,"offset":11437},"indent":[]}}],"position":{"start":{"line":478,"column":1,"offset":11427},"end":{"line":478,"column":13,"offset":11439},"indent":[]}}],"position":{"start":{"line":478,"column":1,"offset":11427},"end":{"line":478,"column":13,"offset":11439},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: 3\nOutput: [1,3,3,1]","position":{"start":{"line":480,"column":1,"offset":11441},"end":{"line":484,"column":4,"offset":11476},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Follow up:","position":{"start":{"line":486,"column":3,"offset":11480},"end":{"line":486,"column":13,"offset":11490},"indent":[]}}],"position":{"start":{"line":486,"column":1,"offset":11478},"end":{"line":486,"column":15,"offset":11492},"indent":[]}}],"position":{"start":{"line":486,"column":1,"offset":11478},"end":{"line":486,"column":15,"offset":11492},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Could you optimize your algorithm to use only ","position":{"start":{"line":488,"column":1,"offset":11494},"end":{"line":488,"column":47,"offset":11540},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"O","position":{"start":{"line":488,"column":48,"offset":11541},"end":{"line":488,"column":49,"offset":11542},"indent":[]}}],"position":{"start":{"line":488,"column":47,"offset":11540},"end":{"line":488,"column":50,"offset":11543},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":488,"column":50,"offset":11543},"end":{"line":488,"column":51,"offset":11544},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"k","position":{"start":{"line":488,"column":52,"offset":11545},"end":{"line":488,"column":53,"offset":11546},"indent":[]}}],"position":{"start":{"line":488,"column":51,"offset":11544},"end":{"line":488,"column":54,"offset":11547},"indent":[]}},{"type":"text","value":") extra space?","position":{"start":{"line":488,"column":54,"offset":11547},"end":{"line":488,"column":68,"offset":11561},"indent":[]}}],"position":{"start":{"line":488,"column":1,"offset":11494},"end":{"line":488,"column":68,"offset":11561},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution:","position":{"start":{"line":490,"column":5,"offset":11567},"end":{"line":490,"column":14,"offset":11576},"indent":[]}}],"position":{"start":{"line":490,"column":1,"offset":11563},"end":{"line":490,"column":14,"offset":11576},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Dynamic Programming 101 with dynamic array.","position":{"start":{"line":492,"column":1,"offset":11578},"end":{"line":492,"column":44,"offset":11621},"indent":[]}}],"position":{"start":{"line":492,"column":1,"offset":11578},"end":{"line":492,"column":44,"offset":11621},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"State ","position":{"start":{"line":494,"column":1,"offset":11623},"end":{"line":494,"column":7,"offset":11629},"indent":[]}},{"type":"inlineCode","value":"(i, j)","position":{"start":{"line":494,"column":7,"offset":11629},"end":{"line":494,"column":15,"offset":11637},"indent":[]}},{"type":"text","value":" depends on ","position":{"start":{"line":494,"column":15,"offset":11637},"end":{"line":494,"column":27,"offset":11649},"indent":[]}},{"type":"inlineCode","value":"(i-1, j)","position":{"start":{"line":494,"column":27,"offset":11649},"end":{"line":494,"column":37,"offset":11659},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":494,"column":37,"offset":11659},"end":{"line":494,"column":42,"offset":11664},"indent":[]}},{"type":"inlineCode","value":"(i-1, j-1)","position":{"start":{"line":494,"column":42,"offset":11664},"end":{"line":494,"column":54,"offset":11676},"indent":[]}},{"type":"text","value":". So to access ","position":{"start":{"line":494,"column":54,"offset":11676},"end":{"line":494,"column":69,"offset":11691},"indent":[]}},{"type":"inlineCode","value":"(i-1, j-1)","position":{"start":{"line":494,"column":69,"offset":11691},"end":{"line":494,"column":81,"offset":11703},"indent":[]}},{"type":"text","value":" iteration must be from right to left.","position":{"start":{"line":494,"column":81,"offset":11703},"end":{"line":494,"column":119,"offset":11741},"indent":[]}}],"position":{"start":{"line":494,"column":1,"offset":11623},"end":{"line":494,"column":119,"offset":11741},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {number} rowIndex\n * @return {number[]}\n */\nlet getRow = function (rowIndex) {\n    if (rowIndex < 0) {\n        return [];\n    }\n\n    const row = [1];\n    for (let i = 1; i <= rowIndex; i++) {\n        for (let j = i - 1; j > 0; j--) {\n            row[j] += row[j - 1];\n        }\n        row.push(1);\n    }\n\n    return row;\n};","position":{"start":{"line":496,"column":1,"offset":11743},"end":{"line":516,"column":4,"offset":12091},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":518,"column":1,"offset":12093},"end":{"line":518,"column":4,"offset":12096},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Array\": ","position":{"start":{"line":520,"column":1,"offset":12098},"end":{"line":522,"column":10,"offset":12142},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/array","children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":522,"column":10,"offset":12142},"end":{"line":522,"column":40,"offset":12172},"indent":[]}}],"position":{"start":{"line":522,"column":10,"offset":12142},"end":{"line":522,"column":40,"offset":12172},"indent":[]}},{"type":"text","value":"\n\"Dynamic Programming\": ","position":{"start":{"line":522,"column":40,"offset":12172},"end":{"line":523,"column":24,"offset":12196},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/dynamic-programming","children":[{"type":"text","value":"https://leetcode.com/tag/dynamic-programming","position":{"start":{"line":523,"column":24,"offset":12196},"end":{"line":523,"column":68,"offset":12240},"indent":[]}}],"position":{"start":{"line":523,"column":24,"offset":12196},"end":{"line":523,"column":68,"offset":12240},"indent":[]}}],"position":{"start":{"line":520,"column":1,"offset":12098},"end":{"line":523,"column":68,"offset":12240},"indent":[1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":525,"column":1,"offset":12242},"end":{"line":525,"column":4,"offset":12245},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#120-trianglehttpsleetcodecomproblemstriangledescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":527,"column":2,"offset":12248},"end":{"line":527,"column":142,"offset":12388},"indent":[]}}],"position":{"start":{"line":527,"column":1,"offset":12247},"end":{"line":527,"column":201,"offset":12447},"indent":[]}}],"position":{"start":{"line":527,"column":1,"offset":12247},"end":{"line":527,"column":201,"offset":12447},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":529,"column":4,"offset":12452},"end":{"line":529,"column":6,"offset":12454},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/triangle/description/","children":[{"type":"text","value":"120. Triangle","position":{"start":{"line":529,"column":7,"offset":12455},"end":{"line":529,"column":20,"offset":12468},"indent":[]}}],"position":{"start":{"line":529,"column":6,"offset":12454},"end":{"line":529,"column":74,"offset":12522},"indent":[]}}],"position":{"start":{"line":529,"column":1,"offset":12449},"end":{"line":529,"column":74,"offset":12522},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem:","position":{"start":{"line":531,"column":5,"offset":12528},"end":{"line":531,"column":13,"offset":12536},"indent":[]}}],"position":{"start":{"line":531,"column":1,"offset":12524},"end":{"line":531,"column":13,"offset":12536},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a triangle, find the minimum path sum from top to bottom. Each step you may move to adjacent numbers on the row below.","position":{"start":{"line":533,"column":1,"offset":12538},"end":{"line":533,"column":125,"offset":12662},"indent":[]}}],"position":{"start":{"line":533,"column":1,"offset":12538},"end":{"line":533,"column":125,"offset":12662},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For example, given the following triangle","position":{"start":{"line":535,"column":1,"offset":12664},"end":{"line":535,"column":42,"offset":12705},"indent":[]}}],"position":{"start":{"line":535,"column":1,"offset":12664},"end":{"line":535,"column":42,"offset":12705},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"[\n     [2],\n    [3,4],\n   [6,5,7],\n  [4,1,8,3]\n]","position":{"start":{"line":537,"column":1,"offset":12707},"end":{"line":545,"column":4,"offset":12764},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The minimum path sum from top to bottom is ","position":{"start":{"line":547,"column":1,"offset":12766},"end":{"line":547,"column":44,"offset":12809},"indent":[]}},{"type":"inlineCode","value":"11","position":{"start":{"line":547,"column":44,"offset":12809},"end":{"line":547,"column":48,"offset":12813},"indent":[]}},{"type":"text","value":" (i.e., ","position":{"start":{"line":547,"column":48,"offset":12813},"end":{"line":547,"column":56,"offset":12821},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"2","position":{"start":{"line":547,"column":58,"offset":12823},"end":{"line":547,"column":59,"offset":12824},"indent":[]}}],"position":{"start":{"line":547,"column":56,"offset":12821},"end":{"line":547,"column":61,"offset":12826},"indent":[]}},{"type":"text","value":" + ","position":{"start":{"line":547,"column":61,"offset":12826},"end":{"line":547,"column":64,"offset":12829},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"3","position":{"start":{"line":547,"column":66,"offset":12831},"end":{"line":547,"column":67,"offset":12832},"indent":[]}}],"position":{"start":{"line":547,"column":64,"offset":12829},"end":{"line":547,"column":69,"offset":12834},"indent":[]}},{"type":"text","value":" + ","position":{"start":{"line":547,"column":69,"offset":12834},"end":{"line":547,"column":72,"offset":12837},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"5","position":{"start":{"line":547,"column":74,"offset":12839},"end":{"line":547,"column":75,"offset":12840},"indent":[]}}],"position":{"start":{"line":547,"column":72,"offset":12837},"end":{"line":547,"column":77,"offset":12842},"indent":[]}},{"type":"text","value":" + ","position":{"start":{"line":547,"column":77,"offset":12842},"end":{"line":547,"column":80,"offset":12845},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"1","position":{"start":{"line":547,"column":82,"offset":12847},"end":{"line":547,"column":83,"offset":12848},"indent":[]}}],"position":{"start":{"line":547,"column":80,"offset":12845},"end":{"line":547,"column":85,"offset":12850},"indent":[]}},{"type":"text","value":" = 11).","position":{"start":{"line":547,"column":85,"offset":12850},"end":{"line":547,"column":92,"offset":12857},"indent":[]}}],"position":{"start":{"line":547,"column":1,"offset":12766},"end":{"line":547,"column":92,"offset":12857},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":549,"column":3,"offset":12861},"end":{"line":549,"column":8,"offset":12866},"indent":[]}}],"position":{"start":{"line":549,"column":1,"offset":12859},"end":{"line":549,"column":10,"offset":12868},"indent":[]}}],"position":{"start":{"line":549,"column":1,"offset":12859},"end":{"line":549,"column":10,"offset":12868},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Bonus point if you are able to do this using only ","position":{"start":{"line":551,"column":1,"offset":12870},"end":{"line":551,"column":51,"offset":12920},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"O","position":{"start":{"line":551,"column":52,"offset":12921},"end":{"line":551,"column":53,"offset":12922},"indent":[]}}],"position":{"start":{"line":551,"column":51,"offset":12920},"end":{"line":551,"column":54,"offset":12923},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":551,"column":54,"offset":12923},"end":{"line":551,"column":55,"offset":12924},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"n","position":{"start":{"line":551,"column":56,"offset":12925},"end":{"line":551,"column":57,"offset":12926},"indent":[]}}],"position":{"start":{"line":551,"column":55,"offset":12924},"end":{"line":551,"column":58,"offset":12927},"indent":[]}},{"type":"text","value":") extra space, where ","position":{"start":{"line":551,"column":58,"offset":12927},"end":{"line":551,"column":79,"offset":12948},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"n","position":{"start":{"line":551,"column":80,"offset":12949},"end":{"line":551,"column":81,"offset":12950},"indent":[]}}],"position":{"start":{"line":551,"column":79,"offset":12948},"end":{"line":551,"column":82,"offset":12951},"indent":[]}},{"type":"text","value":" is the total number of rows in the triangle.","position":{"start":{"line":551,"column":82,"offset":12951},"end":{"line":551,"column":127,"offset":12996},"indent":[]}}],"position":{"start":{"line":551,"column":1,"offset":12870},"end":{"line":551,"column":127,"offset":12996},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution:","position":{"start":{"line":553,"column":5,"offset":13002},"end":{"line":553,"column":14,"offset":13011},"indent":[]}}],"position":{"start":{"line":553,"column":1,"offset":12998},"end":{"line":553,"column":14,"offset":13011},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Define ","position":{"start":{"line":555,"column":1,"offset":13013},"end":{"line":555,"column":8,"offset":13020},"indent":[]}},{"type":"inlineCode","value":"f(i, j)","position":{"start":{"line":555,"column":8,"offset":13020},"end":{"line":555,"column":17,"offset":13029},"indent":[]}},{"type":"text","value":" to be the minimum path sum from ","position":{"start":{"line":555,"column":17,"offset":13029},"end":{"line":555,"column":50,"offset":13062},"indent":[]}},{"type":"inlineCode","value":"triangle[0][0]","position":{"start":{"line":555,"column":50,"offset":13062},"end":{"line":555,"column":66,"offset":13078},"indent":[]}},{"type":"text","value":" to ","position":{"start":{"line":555,"column":66,"offset":13078},"end":{"line":555,"column":70,"offset":13082},"indent":[]}},{"type":"inlineCode","value":"triangle[i][j]","position":{"start":{"line":555,"column":70,"offset":13082},"end":{"line":555,"column":86,"offset":13098},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":555,"column":86,"offset":13098},"end":{"line":555,"column":87,"offset":13099},"indent":[]}}],"position":{"start":{"line":555,"column":1,"offset":13013},"end":{"line":555,"column":87,"offset":13099},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"f(i, 0) = f(i-1, j) + triangle[i][0]\nf(i, j) = min( f(i-1, j-1), f(i-1, j) ) + triangle[i][j], 0 < j < i\nf(i, i) = f(i-1, i-1) + triangle[i][i], i > 0","position":{"start":{"line":557,"column":1,"offset":13101},"end":{"line":559,"column":50,"offset":13263},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Dynamic array can be used.","position":{"start":{"line":561,"column":1,"offset":13265},"end":{"line":561,"column":27,"offset":13291},"indent":[]}}],"position":{"start":{"line":561,"column":1,"offset":13265},"end":{"line":561,"column":27,"offset":13291},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {number[][]} triangle\n * @return {number}\n */\nlet minimumTotal = function (triangle) {\n    if (triangle.length <= 0) {\n        return 0;\n    }\n\n    const dp = [triangle[0][0]];\n    for (let i = 1; i < triangle.length; i++) {\n        dp[i] = dp[i - 1] + triangle[i][i];\n        for (let j = i - 1; j >= 1; j--) {\n            dp[j] = Math.min(dp[j], dp[j - 1]) + triangle[i][j];\n        }\n        dp[0] += triangle[i][0];\n    }\n    return Math.min(...dp);\n};","position":{"start":{"line":563,"column":1,"offset":13293},"end":{"line":583,"column":4,"offset":13773},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":585,"column":1,"offset":13775},"end":{"line":585,"column":4,"offset":13778},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Easy\nRelated Topics:\n\"Array\": ","position":{"start":{"line":587,"column":1,"offset":13780},"end":{"line":589,"column":10,"offset":13822},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/array","children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":589,"column":10,"offset":13822},"end":{"line":589,"column":40,"offset":13852},"indent":[]}}],"position":{"start":{"line":589,"column":10,"offset":13822},"end":{"line":589,"column":40,"offset":13852},"indent":[]}},{"type":"text","value":"\n\"Dynamic Programming\": ","position":{"start":{"line":589,"column":40,"offset":13852},"end":{"line":590,"column":24,"offset":13876},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/dynamic-programming","children":[{"type":"text","value":"https://leetcode.com/tag/dynamic-programming","position":{"start":{"line":590,"column":24,"offset":13876},"end":{"line":590,"column":68,"offset":13920},"indent":[]}}],"position":{"start":{"line":590,"column":24,"offset":13876},"end":{"line":590,"column":68,"offset":13920},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Maximum Subarray\": ","position":{"start":{"line":590,"column":68,"offset":13920},"end":{"line":592,"column":21,"offset":13960},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/maximum-subarray","children":[{"type":"text","value":"https://leetcode.com/problems/maximum-subarray","position":{"start":{"line":592,"column":21,"offset":13960},"end":{"line":592,"column":67,"offset":14006},"indent":[]}}],"position":{"start":{"line":592,"column":21,"offset":13960},"end":{"line":592,"column":67,"offset":14006},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock II\": ","position":{"start":{"line":592,"column":67,"offset":14006},"end":{"line":593,"column":39,"offset":14045},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii","position":{"start":{"line":593,"column":39,"offset":14045},"end":{"line":593,"column":103,"offset":14109},"indent":[]}}],"position":{"start":{"line":593,"column":39,"offset":14045},"end":{"line":593,"column":103,"offset":14109},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock III\": ","position":{"start":{"line":593,"column":103,"offset":14109},"end":{"line":594,"column":40,"offset":14149},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii","position":{"start":{"line":594,"column":40,"offset":14149},"end":{"line":594,"column":105,"offset":14214},"indent":[]}}],"position":{"start":{"line":594,"column":40,"offset":14149},"end":{"line":594,"column":105,"offset":14214},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock IV\": ","position":{"start":{"line":594,"column":105,"offset":14214},"end":{"line":595,"column":39,"offset":14253},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv","position":{"start":{"line":595,"column":39,"offset":14253},"end":{"line":595,"column":103,"offset":14317},"indent":[]}}],"position":{"start":{"line":595,"column":39,"offset":14253},"end":{"line":595,"column":103,"offset":14317},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock with Cooldown\": ","position":{"start":{"line":595,"column":103,"offset":14317},"end":{"line":596,"column":50,"offset":14367},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown","position":{"start":{"line":596,"column":50,"offset":14367},"end":{"line":596,"column":125,"offset":14442},"indent":[]}}],"position":{"start":{"line":596,"column":50,"offset":14367},"end":{"line":596,"column":125,"offset":14442},"indent":[]}}],"position":{"start":{"line":587,"column":1,"offset":13780},"end":{"line":596,"column":125,"offset":14442},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":598,"column":1,"offset":14444},"end":{"line":598,"column":4,"offset":14447},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#121-best-time-to-buy-and-sell-stockhttpsleetcodecomproblemsbest-time-to-buy-and-sell-stockdescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":600,"column":2,"offset":14450},"end":{"line":600,"column":142,"offset":14590},"indent":[]}}],"position":{"start":{"line":600,"column":1,"offset":14449},"end":{"line":600,"column":247,"offset":14695},"indent":[]}}],"position":{"start":{"line":600,"column":1,"offset":14449},"end":{"line":600,"column":247,"offset":14695},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":602,"column":4,"offset":14700},"end":{"line":602,"column":6,"offset":14702},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock/description/","children":[{"type":"text","value":"121. Best Time to Buy and Sell Stock","position":{"start":{"line":602,"column":7,"offset":14703},"end":{"line":602,"column":43,"offset":14739},"indent":[]}}],"position":{"start":{"line":602,"column":6,"offset":14702},"end":{"line":602,"column":120,"offset":14816},"indent":[]}}],"position":{"start":{"line":602,"column":1,"offset":14697},"end":{"line":602,"column":120,"offset":14816},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem:","position":{"start":{"line":604,"column":5,"offset":14822},"end":{"line":604,"column":13,"offset":14830},"indent":[]}}],"position":{"start":{"line":604,"column":1,"offset":14818},"end":{"line":604,"column":13,"offset":14830},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Say you have an array for which the ","position":{"start":{"line":606,"column":1,"offset":14832},"end":{"line":606,"column":37,"offset":14868},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"i","position":{"start":{"line":606,"column":38,"offset":14869},"end":{"line":606,"column":39,"offset":14870},"indent":[]}}],"position":{"start":{"line":606,"column":37,"offset":14868},"end":{"line":606,"column":40,"offset":14871},"indent":[]}},{"type":"text","value":"th element is the price of a given stock on day ","position":{"start":{"line":606,"column":40,"offset":14871},"end":{"line":606,"column":88,"offset":14919},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"i","position":{"start":{"line":606,"column":89,"offset":14920},"end":{"line":606,"column":90,"offset":14921},"indent":[]}}],"position":{"start":{"line":606,"column":88,"offset":14919},"end":{"line":606,"column":91,"offset":14922},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":606,"column":91,"offset":14922},"end":{"line":606,"column":92,"offset":14923},"indent":[]}}],"position":{"start":{"line":606,"column":1,"offset":14832},"end":{"line":606,"column":92,"offset":14923},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If you were only permitted to complete at most one transaction (i.e., buy one and sell one share of the stock), design an algorithm to find the maximum profit.","position":{"start":{"line":608,"column":1,"offset":14925},"end":{"line":608,"column":160,"offset":15084},"indent":[]}}],"position":{"start":{"line":608,"column":1,"offset":14925},"end":{"line":608,"column":160,"offset":15084},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Note that you cannot sell a stock before you buy one.","position":{"start":{"line":610,"column":1,"offset":15086},"end":{"line":610,"column":54,"offset":15139},"indent":[]}}],"position":{"start":{"line":610,"column":1,"offset":15086},"end":{"line":610,"column":54,"offset":15139},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":612,"column":3,"offset":15143},"end":{"line":612,"column":13,"offset":15153},"indent":[]}}],"position":{"start":{"line":612,"column":1,"offset":15141},"end":{"line":612,"column":15,"offset":15155},"indent":[]}}],"position":{"start":{"line":612,"column":1,"offset":15141},"end":{"line":612,"column":15,"offset":15155},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [7,1,5,3,6,4]\nOutput: 5\nExplanation: Buy on day 2 (price = 1) and sell on day 5 (price = 6), profit = 6-1 = 5.\n             Not 7-1 = 6, as selling price needs to be larger than buying price.","position":{"start":{"line":614,"column":1,"offset":15157},"end":{"line":620,"column":4,"offset":15364},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":622,"column":3,"offset":15368},"end":{"line":622,"column":13,"offset":15378},"indent":[]}}],"position":{"start":{"line":622,"column":1,"offset":15366},"end":{"line":622,"column":15,"offset":15380},"indent":[]}}],"position":{"start":{"line":622,"column":1,"offset":15366},"end":{"line":622,"column":15,"offset":15380},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [7,6,4,3,1]\nOutput: 0\nExplanation: In this case, no transaction is done, i.e. max profit = 0.","position":{"start":{"line":624,"column":1,"offset":15382},"end":{"line":629,"column":4,"offset":15491},"indent":[1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution:","position":{"start":{"line":631,"column":5,"offset":15497},"end":{"line":631,"column":14,"offset":15506},"indent":[]}}],"position":{"start":{"line":631,"column":1,"offset":15493},"end":{"line":631,"column":14,"offset":15506},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Only care about positive profits. Take the frist item as base and scan to the right. If we encounter an item ","position":{"start":{"line":633,"column":1,"offset":15508},"end":{"line":633,"column":110,"offset":15617},"indent":[]}},{"type":"inlineCode","value":"j","position":{"start":{"line":633,"column":110,"offset":15617},"end":{"line":633,"column":113,"offset":15620},"indent":[]}},{"type":"text","value":" whose price ","position":{"start":{"line":633,"column":113,"offset":15620},"end":{"line":633,"column":126,"offset":15633},"indent":[]}},{"type":"inlineCode","value":"price[j]","position":{"start":{"line":633,"column":126,"offset":15633},"end":{"line":633,"column":136,"offset":15643},"indent":[]}},{"type":"text","value":" is lower than the base (which means if we sell now the profit would be negative), we sell ","position":{"start":{"line":633,"column":136,"offset":15643},"end":{"line":633,"column":227,"offset":15734},"indent":[]}},{"type":"inlineCode","value":"j-1","position":{"start":{"line":633,"column":227,"offset":15734},"end":{"line":633,"column":232,"offset":15739},"indent":[]}},{"type":"text","value":" instead and make ","position":{"start":{"line":633,"column":232,"offset":15739},"end":{"line":633,"column":250,"offset":15757},"indent":[]}},{"type":"inlineCode","value":"j","position":{"start":{"line":633,"column":250,"offset":15757},"end":{"line":633,"column":253,"offset":15760},"indent":[]}},{"type":"text","value":" the new base.","position":{"start":{"line":633,"column":253,"offset":15760},"end":{"line":633,"column":267,"offset":15774},"indent":[]}}],"position":{"start":{"line":633,"column":1,"offset":15508},"end":{"line":633,"column":267,"offset":15774},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Because ","position":{"start":{"line":635,"column":1,"offset":15776},"end":{"line":635,"column":9,"offset":15784},"indent":[]}},{"type":"inlineCode","value":"price[j]","position":{"start":{"line":635,"column":9,"offset":15784},"end":{"line":635,"column":19,"offset":15794},"indent":[]}},{"type":"text","value":" is lower that the base, using ","position":{"start":{"line":635,"column":19,"offset":15794},"end":{"line":635,"column":50,"offset":15825},"indent":[]}},{"type":"inlineCode","value":"j","position":{"start":{"line":635,"column":50,"offset":15825},"end":{"line":635,"column":53,"offset":15828},"indent":[]}},{"type":"text","value":" as new base is guaranteed to gain more profit comparing to the old one.","position":{"start":{"line":635,"column":53,"offset":15828},"end":{"line":635,"column":125,"offset":15900},"indent":[]}}],"position":{"start":{"line":635,"column":1,"offset":15776},"end":{"line":635,"column":125,"offset":15900},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {number[]} prices\n * @return {number}\n */\nlet maxProfit = function (prices) {\n    let max = 0;\n    let base = prices[0];\n    for (let i = 1; i < prices.length; i++) {\n        const profit = prices[i] - base;\n        if (profit > max) {\n            max = profit;\n        } else if (profit < 0) {\n            base = prices[i];\n        }\n    }\n    return max;\n};","position":{"start":{"line":637,"column":1,"offset":15902},"end":{"line":655,"column":4,"offset":16285},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":657,"column":1,"offset":16287},"end":{"line":657,"column":4,"offset":16290},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Easy\nRelated Topics:\n\"Array\": ","position":{"start":{"line":659,"column":1,"offset":16292},"end":{"line":661,"column":10,"offset":16334},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/array","children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":661,"column":10,"offset":16334},"end":{"line":661,"column":40,"offset":16364},"indent":[]}}],"position":{"start":{"line":661,"column":10,"offset":16334},"end":{"line":661,"column":40,"offset":16364},"indent":[]}},{"type":"text","value":"\n\"Greedy\": ","position":{"start":{"line":661,"column":40,"offset":16364},"end":{"line":662,"column":11,"offset":16375},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/greedy","children":[{"type":"text","value":"https://leetcode.com/tag/greedy","position":{"start":{"line":662,"column":11,"offset":16375},"end":{"line":662,"column":42,"offset":16406},"indent":[]}}],"position":{"start":{"line":662,"column":11,"offset":16375},"end":{"line":662,"column":42,"offset":16406},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Best Time to Buy and Sell Stock\": ","position":{"start":{"line":662,"column":42,"offset":16406},"end":{"line":664,"column":36,"offset":16461},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock","position":{"start":{"line":664,"column":36,"offset":16461},"end":{"line":664,"column":97,"offset":16522},"indent":[]}}],"position":{"start":{"line":664,"column":36,"offset":16461},"end":{"line":664,"column":97,"offset":16522},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock III\": ","position":{"start":{"line":664,"column":97,"offset":16522},"end":{"line":665,"column":40,"offset":16562},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii","position":{"start":{"line":665,"column":40,"offset":16562},"end":{"line":665,"column":105,"offset":16627},"indent":[]}}],"position":{"start":{"line":665,"column":40,"offset":16562},"end":{"line":665,"column":105,"offset":16627},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock IV\": ","position":{"start":{"line":665,"column":105,"offset":16627},"end":{"line":666,"column":39,"offset":16666},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv","position":{"start":{"line":666,"column":39,"offset":16666},"end":{"line":666,"column":103,"offset":16730},"indent":[]}}],"position":{"start":{"line":666,"column":39,"offset":16666},"end":{"line":666,"column":103,"offset":16730},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock with Cooldown\": ","position":{"start":{"line":666,"column":103,"offset":16730},"end":{"line":667,"column":50,"offset":16780},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown","position":{"start":{"line":667,"column":50,"offset":16780},"end":{"line":667,"column":125,"offset":16855},"indent":[]}}],"position":{"start":{"line":667,"column":50,"offset":16780},"end":{"line":667,"column":125,"offset":16855},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock with Transaction Fee\": ","position":{"start":{"line":667,"column":125,"offset":16855},"end":{"line":668,"column":57,"offset":16912},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee","position":{"start":{"line":668,"column":57,"offset":16912},"end":{"line":668,"column":139,"offset":16994},"indent":[]}}],"position":{"start":{"line":668,"column":57,"offset":16912},"end":{"line":668,"column":139,"offset":16994},"indent":[]}}],"position":{"start":{"line":659,"column":1,"offset":16292},"end":{"line":668,"column":139,"offset":16994},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":670,"column":1,"offset":16996},"end":{"line":670,"column":4,"offset":16999},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#122-best-time-to-buy-and-sell-stock-iihttpsleetcodecomproblemsbest-time-to-buy-and-sell-stock-iidescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":672,"column":2,"offset":17002},"end":{"line":672,"column":142,"offset":17142},"indent":[]}}],"position":{"start":{"line":672,"column":1,"offset":17001},"end":{"line":672,"column":253,"offset":17253},"indent":[]}}],"position":{"start":{"line":672,"column":1,"offset":17001},"end":{"line":672,"column":253,"offset":17253},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":674,"column":4,"offset":17258},"end":{"line":674,"column":6,"offset":17260},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/description/","children":[{"type":"text","value":"122. Best Time to Buy and Sell Stock II","position":{"start":{"line":674,"column":7,"offset":17261},"end":{"line":674,"column":46,"offset":17300},"indent":[]}}],"position":{"start":{"line":674,"column":6,"offset":17260},"end":{"line":674,"column":126,"offset":17380},"indent":[]}}],"position":{"start":{"line":674,"column":1,"offset":17255},"end":{"line":674,"column":126,"offset":17380},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem:","position":{"start":{"line":676,"column":5,"offset":17386},"end":{"line":676,"column":13,"offset":17394},"indent":[]}}],"position":{"start":{"line":676,"column":1,"offset":17382},"end":{"line":676,"column":13,"offset":17394},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Say you have an array for which the ","position":{"start":{"line":678,"column":1,"offset":17396},"end":{"line":678,"column":37,"offset":17432},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"i","position":{"start":{"line":678,"column":38,"offset":17433},"end":{"line":678,"column":39,"offset":17434},"indent":[]}}],"position":{"start":{"line":678,"column":37,"offset":17432},"end":{"line":678,"column":40,"offset":17435},"indent":[]}},{"type":"text","value":"th element is the price of a given stock on day ","position":{"start":{"line":678,"column":40,"offset":17435},"end":{"line":678,"column":88,"offset":17483},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"i","position":{"start":{"line":678,"column":89,"offset":17484},"end":{"line":678,"column":90,"offset":17485},"indent":[]}}],"position":{"start":{"line":678,"column":88,"offset":17483},"end":{"line":678,"column":91,"offset":17486},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":678,"column":91,"offset":17486},"end":{"line":678,"column":92,"offset":17487},"indent":[]}}],"position":{"start":{"line":678,"column":1,"offset":17396},"end":{"line":678,"column":92,"offset":17487},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Design an algorithm to find the maximum profit. You may complete as many transactions as you like (i.e., buy one and sell one share of the stock multiple times).","position":{"start":{"line":680,"column":1,"offset":17489},"end":{"line":680,"column":162,"offset":17650},"indent":[]}}],"position":{"start":{"line":680,"column":1,"offset":17489},"end":{"line":680,"column":162,"offset":17650},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":682,"column":3,"offset":17654},"end":{"line":682,"column":8,"offset":17659},"indent":[]}}],"position":{"start":{"line":682,"column":1,"offset":17652},"end":{"line":682,"column":10,"offset":17661},"indent":[]}},{"type":"text","value":" You may not engage in multiple transactions at the same time (i.e., you must sell the stock before you buy again).","position":{"start":{"line":682,"column":10,"offset":17661},"end":{"line":682,"column":125,"offset":17776},"indent":[]}}],"position":{"start":{"line":682,"column":1,"offset":17652},"end":{"line":682,"column":125,"offset":17776},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":684,"column":3,"offset":17780},"end":{"line":684,"column":13,"offset":17790},"indent":[]}}],"position":{"start":{"line":684,"column":1,"offset":17778},"end":{"line":684,"column":15,"offset":17792},"indent":[]}}],"position":{"start":{"line":684,"column":1,"offset":17778},"end":{"line":684,"column":15,"offset":17792},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [7,1,5,3,6,4]\nOutput: 7\nExplanation: Buy on day 2 (price = 1) and sell on day 3 (price = 5), profit = 5-1 = 4.\n             Then buy on day 4 (price = 3) and sell on day 5 (price = 6), profit = 6-3 = 3.","position":{"start":{"line":686,"column":1,"offset":17794},"end":{"line":692,"column":4,"offset":18012},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":694,"column":3,"offset":18016},"end":{"line":694,"column":13,"offset":18026},"indent":[]}}],"position":{"start":{"line":694,"column":1,"offset":18014},"end":{"line":694,"column":15,"offset":18028},"indent":[]}}],"position":{"start":{"line":694,"column":1,"offset":18014},"end":{"line":694,"column":15,"offset":18028},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [1,2,3,4,5]\nOutput: 4\nExplanation: Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4.\n             Note that you cannot buy on day 1, buy on day 2 and sell them later, as you are\n             engaging multiple transactions at the same time. You must sell before buying again.","position":{"start":{"line":696,"column":1,"offset":18030},"end":{"line":703,"column":4,"offset":18344},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 3:","position":{"start":{"line":705,"column":3,"offset":18348},"end":{"line":705,"column":13,"offset":18358},"indent":[]}}],"position":{"start":{"line":705,"column":1,"offset":18346},"end":{"line":705,"column":15,"offset":18360},"indent":[]}}],"position":{"start":{"line":705,"column":1,"offset":18346},"end":{"line":705,"column":15,"offset":18360},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [7,6,4,3,1]\nOutput: 0\nExplanation: In this case, no transaction is done, i.e. max profit = 0.","position":{"start":{"line":707,"column":1,"offset":18362},"end":{"line":709,"column":76,"offset":18474},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution:","position":{"start":{"line":711,"column":5,"offset":18480},"end":{"line":711,"column":14,"offset":18489},"indent":[]}}],"position":{"start":{"line":711,"column":1,"offset":18476},"end":{"line":711,"column":14,"offset":18489},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Sell immediately after the price drops. Or in other perspective, it is the sum of all the incremental pairs (buy in then immediately sell out).","position":{"start":{"line":713,"column":1,"offset":18491},"end":{"line":713,"column":144,"offset":18634},"indent":[]}}],"position":{"start":{"line":713,"column":1,"offset":18491},"end":{"line":713,"column":144,"offset":18634},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {number[]} prices\n * @return {number}\n */\nlet maxProfit = function (prices) {\n    let max = 0;\n    for (let i = 1; i < prices.length; i++) {\n        if (prices[i] > prices[i - 1]) {\n            max += prices[i] - prices[i - 1];\n        }\n    }\n    return max;\n};","position":{"start":{"line":715,"column":1,"offset":18636},"end":{"line":729,"column":4,"offset":18922},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":731,"column":1,"offset":18924},"end":{"line":731,"column":4,"offset":18927},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Hard\nRelated Topics:\n\"Array\": ","position":{"start":{"line":733,"column":1,"offset":18929},"end":{"line":735,"column":10,"offset":18971},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/array","children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":735,"column":10,"offset":18971},"end":{"line":735,"column":40,"offset":19001},"indent":[]}}],"position":{"start":{"line":735,"column":10,"offset":18971},"end":{"line":735,"column":40,"offset":19001},"indent":[]}},{"type":"text","value":"\n\"Dynamic Programming\": ","position":{"start":{"line":735,"column":40,"offset":19001},"end":{"line":736,"column":24,"offset":19025},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/dynamic-programming","children":[{"type":"text","value":"https://leetcode.com/tag/dynamic-programming","position":{"start":{"line":736,"column":24,"offset":19025},"end":{"line":736,"column":68,"offset":19069},"indent":[]}}],"position":{"start":{"line":736,"column":24,"offset":19025},"end":{"line":736,"column":68,"offset":19069},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Best Time to Buy and Sell Stock\": ","position":{"start":{"line":736,"column":68,"offset":19069},"end":{"line":738,"column":36,"offset":19124},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock","position":{"start":{"line":738,"column":36,"offset":19124},"end":{"line":738,"column":97,"offset":19185},"indent":[]}}],"position":{"start":{"line":738,"column":36,"offset":19124},"end":{"line":738,"column":97,"offset":19185},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock II\": ","position":{"start":{"line":738,"column":97,"offset":19185},"end":{"line":739,"column":39,"offset":19224},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii","position":{"start":{"line":739,"column":39,"offset":19224},"end":{"line":739,"column":103,"offset":19288},"indent":[]}}],"position":{"start":{"line":739,"column":39,"offset":19224},"end":{"line":739,"column":103,"offset":19288},"indent":[]}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock IV\": ","position":{"start":{"line":739,"column":103,"offset":19288},"end":{"line":740,"column":39,"offset":19327},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv","children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv","position":{"start":{"line":740,"column":39,"offset":19327},"end":{"line":740,"column":103,"offset":19391},"indent":[]}}],"position":{"start":{"line":740,"column":39,"offset":19327},"end":{"line":740,"column":103,"offset":19391},"indent":[]}},{"type":"text","value":"\n\"Maximum Sum of 3 Non-Overlapping Subarrays\": ","position":{"start":{"line":740,"column":103,"offset":19391},"end":{"line":741,"column":47,"offset":19438},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/maximum-sum-of-3-non-overlapping-subarrays","children":[{"type":"text","value":"https://leetcode.com/problems/maximum-sum-of-3-non-overlapping-subarrays","position":{"start":{"line":741,"column":47,"offset":19438},"end":{"line":741,"column":119,"offset":19510},"indent":[]}}],"position":{"start":{"line":741,"column":47,"offset":19438},"end":{"line":741,"column":119,"offset":19510},"indent":[]}}],"position":{"start":{"line":733,"column":1,"offset":18929},"end":{"line":741,"column":119,"offset":19510},"indent":[1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":743,"column":1,"offset":19512},"end":{"line":743,"column":4,"offset":19515},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#123-best-time-to-buy-and-sell-stock-iiihttpsleetcodecomproblemsbest-time-to-buy-and-sell-stock-iiidescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":745,"column":2,"offset":19518},"end":{"line":745,"column":142,"offset":19658},"indent":[]}}],"position":{"start":{"line":745,"column":1,"offset":19517},"end":{"line":745,"column":255,"offset":19771},"indent":[]}}],"position":{"start":{"line":745,"column":1,"offset":19517},"end":{"line":745,"column":255,"offset":19771},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":747,"column":4,"offset":19776},"end":{"line":747,"column":6,"offset":19778},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii/description/","children":[{"type":"text","value":"123. Best Time to Buy and Sell Stock III","position":{"start":{"line":747,"column":7,"offset":19779},"end":{"line":747,"column":47,"offset":19819},"indent":[]}}],"position":{"start":{"line":747,"column":6,"offset":19778},"end":{"line":747,"column":128,"offset":19900},"indent":[]}}],"position":{"start":{"line":747,"column":1,"offset":19773},"end":{"line":747,"column":128,"offset":19900},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem:","position":{"start":{"line":749,"column":5,"offset":19906},"end":{"line":749,"column":13,"offset":19914},"indent":[]}}],"position":{"start":{"line":749,"column":1,"offset":19902},"end":{"line":749,"column":13,"offset":19914},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Say you have an array for which the ","position":{"start":{"line":751,"column":1,"offset":19916},"end":{"line":751,"column":37,"offset":19952},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"i","position":{"start":{"line":751,"column":38,"offset":19953},"end":{"line":751,"column":39,"offset":19954},"indent":[]}}],"position":{"start":{"line":751,"column":37,"offset":19952},"end":{"line":751,"column":40,"offset":19955},"indent":[]}},{"type":"text","value":"th element is the price of a given stock on day ","position":{"start":{"line":751,"column":40,"offset":19955},"end":{"line":751,"column":88,"offset":20003},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"i","position":{"start":{"line":751,"column":89,"offset":20004},"end":{"line":751,"column":90,"offset":20005},"indent":[]}}],"position":{"start":{"line":751,"column":88,"offset":20003},"end":{"line":751,"column":91,"offset":20006},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":751,"column":91,"offset":20006},"end":{"line":751,"column":92,"offset":20007},"indent":[]}}],"position":{"start":{"line":751,"column":1,"offset":19916},"end":{"line":751,"column":92,"offset":20007},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Design an algorithm to find the maximum profit. You may complete at most ","position":{"start":{"line":753,"column":1,"offset":20009},"end":{"line":753,"column":74,"offset":20082},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"two","position":{"start":{"line":753,"column":75,"offset":20083},"end":{"line":753,"column":78,"offset":20086},"indent":[]}}],"position":{"start":{"line":753,"column":74,"offset":20082},"end":{"line":753,"column":79,"offset":20087},"indent":[]}},{"type":"text","value":" transactions.","position":{"start":{"line":753,"column":79,"offset":20087},"end":{"line":753,"column":93,"offset":20101},"indent":[]}}],"position":{"start":{"line":753,"column":1,"offset":20009},"end":{"line":753,"column":93,"offset":20101},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"*","position":{"start":{"line":755,"column":1,"offset":20103},"end":{"line":755,"column":3,"offset":20105},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":755,"column":3,"offset":20105},"end":{"line":755,"column":5,"offset":20107},"indent":[]}},{"type":"text","value":"Note:","position":{"start":{"line":755,"column":5,"offset":20107},"end":{"line":755,"column":10,"offset":20112},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":755,"column":10,"offset":20112},"end":{"line":755,"column":12,"offset":20114},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":755,"column":12,"offset":20114},"end":{"line":755,"column":14,"offset":20116},"indent":[]}},{"type":"text","value":"You may not engage in multiple transactions at the same time (i.e., you must sell the stock before you buy again).","position":{"start":{"line":755,"column":14,"offset":20116},"end":{"line":755,"column":128,"offset":20230},"indent":[]}}],"position":{"start":{"line":755,"column":1,"offset":20103},"end":{"line":755,"column":128,"offset":20230},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":757,"column":3,"offset":20234},"end":{"line":757,"column":13,"offset":20244},"indent":[]}}],"position":{"start":{"line":757,"column":1,"offset":20232},"end":{"line":757,"column":15,"offset":20246},"indent":[]}}],"position":{"start":{"line":757,"column":1,"offset":20232},"end":{"line":757,"column":15,"offset":20246},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [3,3,5,0,0,3,1,4]\nOutput: 6\nExplanation: Buy on day 4 (price = 0) and sell on day 6 (price = 3), profit = 3-0 = 3.\n             Then buy on day 7 (price = 1) and sell on day 8 (price = 4), profit = 4-1 = 3.","position":{"start":{"line":759,"column":1,"offset":20248},"end":{"line":762,"column":96,"offset":20477},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":764,"column":3,"offset":20481},"end":{"line":764,"column":13,"offset":20491},"indent":[]}}],"position":{"start":{"line":764,"column":1,"offset":20479},"end":{"line":764,"column":15,"offset":20493},"indent":[]}}],"position":{"start":{"line":764,"column":1,"offset":20479},"end":{"line":764,"column":15,"offset":20493},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [1,2,3,4,5]\nOutput: 4\nExplanation: Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4.\n             Note that you cannot buy on day 1, buy on day 2 and sell them later, as you are\n             engaging multiple transactions at the same time. You must sell before buying again.","position":{"start":{"line":766,"column":1,"offset":20495},"end":{"line":773,"column":4,"offset":20809},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 3:","position":{"start":{"line":775,"column":3,"offset":20813},"end":{"line":775,"column":13,"offset":20823},"indent":[]}}],"position":{"start":{"line":775,"column":1,"offset":20811},"end":{"line":775,"column":15,"offset":20825},"indent":[]}}],"position":{"start":{"line":775,"column":1,"offset":20811},"end":{"line":775,"column":15,"offset":20825},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [7,6,4,3,1]\nOutput: 0\nExplanation: In this case, no transaction is done, i.e. max profit = 0.","position":{"start":{"line":777,"column":1,"offset":20827},"end":{"line":779,"column":76,"offset":20939},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution:","position":{"start":{"line":781,"column":5,"offset":20945},"end":{"line":781,"column":14,"offset":20954},"indent":[]}}],"position":{"start":{"line":781,"column":1,"offset":20941},"end":{"line":781,"column":14,"offset":20954},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Multiple transactions may not be engaged in at the same time. That means if we view the days that involed in the same transaction as a group, there won't be any intersection. We may complete at most ","position":{"start":{"line":783,"column":1,"offset":20956},"end":{"line":783,"column":200,"offset":21155},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"two","position":{"start":{"line":783,"column":201,"offset":21156},"end":{"line":783,"column":204,"offset":21159},"indent":[]}}],"position":{"start":{"line":783,"column":200,"offset":21155},"end":{"line":783,"column":205,"offset":21160},"indent":[]}},{"type":"text","value":" transactions, so divide the days into two groups, ","position":{"start":{"line":783,"column":205,"offset":21160},"end":{"line":783,"column":256,"offset":21211},"indent":[]}},{"type":"inlineCode","value":"[0...k]","position":{"start":{"line":783,"column":256,"offset":21211},"end":{"line":783,"column":265,"offset":21220},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":783,"column":265,"offset":21220},"end":{"line":783,"column":270,"offset":21225},"indent":[]}},{"type":"inlineCode","value":"[k...n-1]","position":{"start":{"line":783,"column":270,"offset":21225},"end":{"line":783,"column":281,"offset":21236},"indent":[]}},{"type":"text","value":". Notice ","position":{"start":{"line":783,"column":281,"offset":21236},"end":{"line":783,"column":290,"offset":21245},"indent":[]}},{"type":"inlineCode","value":"k","position":{"start":{"line":783,"column":290,"offset":21245},"end":{"line":783,"column":293,"offset":21248},"indent":[]}},{"type":"text","value":" exists in both groups because technically we can sell out then immediately buy in at the same day.","position":{"start":{"line":783,"column":293,"offset":21248},"end":{"line":783,"column":392,"offset":21347},"indent":[]}}],"position":{"start":{"line":783,"column":1,"offset":20956},"end":{"line":783,"column":392,"offset":21347},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Define ","position":{"start":{"line":785,"column":1,"offset":21349},"end":{"line":785,"column":8,"offset":21356},"indent":[]}},{"type":"inlineCode","value":"p1(i)","position":{"start":{"line":785,"column":8,"offset":21356},"end":{"line":785,"column":15,"offset":21363},"indent":[]}},{"type":"text","value":" to be the max profit of day ","position":{"start":{"line":785,"column":15,"offset":21363},"end":{"line":785,"column":44,"offset":21392},"indent":[]}},{"type":"inlineCode","value":"[0...i]","position":{"start":{"line":785,"column":44,"offset":21392},"end":{"line":785,"column":53,"offset":21401},"indent":[]}},{"type":"text","value":". This is just like the problem of ","position":{"start":{"line":785,"column":53,"offset":21401},"end":{"line":785,"column":88,"offset":21436},"indent":[]}},{"type":"link","title":null,"url":"./121.%20Best%20Time%20to%20Buy%20and%20Sell%20Stock.md","children":[{"type":"text","value":"121. Best Time to Buy and Sell Stock","position":{"start":{"line":785,"column":89,"offset":21437},"end":{"line":785,"column":125,"offset":21473},"indent":[]}}],"position":{"start":{"line":785,"column":88,"offset":21436},"end":{"line":785,"column":183,"offset":21531},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":785,"column":183,"offset":21531},"end":{"line":785,"column":184,"offset":21532},"indent":[]}}],"position":{"start":{"line":785,"column":1,"offset":21349},"end":{"line":785,"column":184,"offset":21532},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"p1(0) = 0\np1(i) = max( p1(i-1), prices[i] - min(prices[0], ..., prices[i-1]) ), 0 < i <= n-1","position":{"start":{"line":787,"column":1,"offset":21534},"end":{"line":788,"column":87,"offset":21634},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Define ","position":{"start":{"line":790,"column":1,"offset":21636},"end":{"line":790,"column":8,"offset":21643},"indent":[]}},{"type":"inlineCode","value":"p2(i)","position":{"start":{"line":790,"column":8,"offset":21643},"end":{"line":790,"column":15,"offset":21650},"indent":[]}},{"type":"text","value":" to be the max profit of day ","position":{"start":{"line":790,"column":15,"offset":21650},"end":{"line":790,"column":44,"offset":21679},"indent":[]}},{"type":"inlineCode","value":"[i...n-1]","position":{"start":{"line":790,"column":44,"offset":21679},"end":{"line":790,"column":55,"offset":21690},"indent":[]}},{"type":"text","value":". This is the mirror of ","position":{"start":{"line":790,"column":55,"offset":21690},"end":{"line":790,"column":79,"offset":21714},"indent":[]}},{"type":"inlineCode","value":"p1","position":{"start":{"line":790,"column":79,"offset":21714},"end":{"line":790,"column":83,"offset":21718},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":790,"column":83,"offset":21718},"end":{"line":790,"column":84,"offset":21719},"indent":[]}}],"position":{"start":{"line":790,"column":1,"offset":21636},"end":{"line":790,"column":84,"offset":21719},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"p2(n-1) = 0\np2(i) = max( p2(i+1), max(prices[i], ..., prices[n-1]) - prices[i] ), n-1 > i >= 0","position":{"start":{"line":792,"column":1,"offset":21721},"end":{"line":793,"column":87,"offset":21823},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Define ","position":{"start":{"line":795,"column":1,"offset":21825},"end":{"line":795,"column":8,"offset":21832},"indent":[]}},{"type":"inlineCode","value":"f(k)","position":{"start":{"line":795,"column":8,"offset":21832},"end":{"line":795,"column":14,"offset":21838},"indent":[]}},{"type":"text","value":" to be ","position":{"start":{"line":795,"column":14,"offset":21838},"end":{"line":795,"column":21,"offset":21845},"indent":[]}},{"type":"inlineCode","value":"p1(k) + p2(k)","position":{"start":{"line":795,"column":21,"offset":21845},"end":{"line":795,"column":36,"offset":21860},"indent":[]}},{"type":"text","value":". We need to get ","position":{"start":{"line":795,"column":36,"offset":21860},"end":{"line":795,"column":53,"offset":21877},"indent":[]}},{"type":"inlineCode","value":"max( f(0), ..., f(n-1) )","position":{"start":{"line":795,"column":53,"offset":21877},"end":{"line":795,"column":79,"offset":21903},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":795,"column":79,"offset":21903},"end":{"line":795,"column":80,"offset":21904},"indent":[]}}],"position":{"start":{"line":795,"column":1,"offset":21825},"end":{"line":795,"column":80,"offset":21904},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {number[]} prices\n * @return {number}\n */\nlet maxProfit = function (prices) {\n    const len = prices.length;\n    if (len <= 1) {\n        return 0;\n    }\n\n    const dp = [0];\n\n    let min = prices[0];\n    for (let i = 1; i < len; i++) {\n        dp[i] = Math.max(dp[i - 1], prices[i] - min);\n        min = Math.min(prices[i], min);\n    }\n\n    let p2 = 0;\n    let max = prices[len - 1];\n    for (let i = len - 2; i >= 0; i--) {\n        max = Math.max(prices[i], max);\n        p2 = Math.max(p2, max - prices[i]);\n        dp[i] += p2;\n    }\n\n    return Math.max(...dp);\n};","position":{"start":{"line":797,"column":1,"offset":21906},"end":{"line":826,"column":4,"offset":22497},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":828,"column":1,"offset":22499},"end":{"line":828,"column":4,"offset":22502},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Hard\nRelated Topics:\n\"Tree\": ","position":{"start":{"line":830,"column":1,"offset":22504},"end":{"line":832,"column":9,"offset":22545},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/tree","children":[{"type":"text","value":"https://leetcode.com/tag/tree","position":{"start":{"line":832,"column":9,"offset":22545},"end":{"line":832,"column":38,"offset":22574},"indent":[]}}],"position":{"start":{"line":832,"column":9,"offset":22545},"end":{"line":832,"column":38,"offset":22574},"indent":[]}},{"type":"text","value":"\n\"Depth-first Search\": ","position":{"start":{"line":832,"column":38,"offset":22574},"end":{"line":833,"column":23,"offset":22597},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/depth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/depth-first-search","position":{"start":{"line":833,"column":23,"offset":22597},"end":{"line":833,"column":66,"offset":22640},"indent":[]}}],"position":{"start":{"line":833,"column":23,"offset":22597},"end":{"line":833,"column":66,"offset":22640},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Path Sum\": ","position":{"start":{"line":833,"column":66,"offset":22640},"end":{"line":835,"column":13,"offset":22672},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/path-sum","children":[{"type":"text","value":"https://leetcode.com/problems/path-sum","position":{"start":{"line":835,"column":13,"offset":22672},"end":{"line":835,"column":51,"offset":22710},"indent":[]}}],"position":{"start":{"line":835,"column":13,"offset":22672},"end":{"line":835,"column":51,"offset":22710},"indent":[]}},{"type":"text","value":"\n\"Sum Root to Leaf Numbers\": ","position":{"start":{"line":835,"column":51,"offset":22710},"end":{"line":836,"column":29,"offset":22739},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/sum-root-to-leaf-numbers","children":[{"type":"text","value":"https://leetcode.com/problems/sum-root-to-leaf-numbers","position":{"start":{"line":836,"column":29,"offset":22739},"end":{"line":836,"column":83,"offset":22793},"indent":[]}}],"position":{"start":{"line":836,"column":29,"offset":22739},"end":{"line":836,"column":83,"offset":22793},"indent":[]}},{"type":"text","value":"\n\"Path Sum IV\": ","position":{"start":{"line":836,"column":83,"offset":22793},"end":{"line":837,"column":16,"offset":22809},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/path-sum-iv","children":[{"type":"text","value":"https://leetcode.com/problems/path-sum-iv","position":{"start":{"line":837,"column":16,"offset":22809},"end":{"line":837,"column":57,"offset":22850},"indent":[]}}],"position":{"start":{"line":837,"column":16,"offset":22809},"end":{"line":837,"column":57,"offset":22850},"indent":[]}},{"type":"text","value":"\n\"Longest Univalue Path\": ","position":{"start":{"line":837,"column":57,"offset":22850},"end":{"line":838,"column":26,"offset":22876},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/longest-univalue-path","children":[{"type":"text","value":"https://leetcode.com/problems/longest-univalue-path","position":{"start":{"line":838,"column":26,"offset":22876},"end":{"line":838,"column":77,"offset":22927},"indent":[]}}],"position":{"start":{"line":838,"column":26,"offset":22876},"end":{"line":838,"column":77,"offset":22927},"indent":[]}}],"position":{"start":{"line":830,"column":1,"offset":22504},"end":{"line":838,"column":77,"offset":22927},"indent":[1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":840,"column":1,"offset":22929},"end":{"line":840,"column":4,"offset":22932},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#124-binary-tree-maximum-path-sumhttpsleetcodecomproblemsbinary-tree-maximum-path-sumdescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":842,"column":2,"offset":22935},"end":{"line":842,"column":142,"offset":23075},"indent":[]}}],"position":{"start":{"line":842,"column":1,"offset":22934},"end":{"line":842,"column":241,"offset":23174},"indent":[]}}],"position":{"start":{"line":842,"column":1,"offset":22934},"end":{"line":842,"column":241,"offset":23174},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":844,"column":4,"offset":23179},"end":{"line":844,"column":6,"offset":23181},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/binary-tree-maximum-path-sum/description/","children":[{"type":"text","value":"124. Binary Tree Maximum Path Sum","position":{"start":{"line":844,"column":7,"offset":23182},"end":{"line":844,"column":40,"offset":23215},"indent":[]}}],"position":{"start":{"line":844,"column":6,"offset":23181},"end":{"line":844,"column":114,"offset":23289},"indent":[]}}],"position":{"start":{"line":844,"column":1,"offset":23176},"end":{"line":844,"column":114,"offset":23289},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem:","position":{"start":{"line":846,"column":5,"offset":23295},"end":{"line":846,"column":13,"offset":23303},"indent":[]}}],"position":{"start":{"line":846,"column":1,"offset":23291},"end":{"line":846,"column":13,"offset":23303},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a ","position":{"start":{"line":848,"column":1,"offset":23305},"end":{"line":848,"column":9,"offset":23313},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"non-empty","position":{"start":{"line":848,"column":11,"offset":23315},"end":{"line":848,"column":20,"offset":23324},"indent":[]}}],"position":{"start":{"line":848,"column":9,"offset":23313},"end":{"line":848,"column":22,"offset":23326},"indent":[]}},{"type":"text","value":" binary tree, find the maximum path sum.","position":{"start":{"line":848,"column":22,"offset":23326},"end":{"line":848,"column":62,"offset":23366},"indent":[]}}],"position":{"start":{"line":848,"column":1,"offset":23305},"end":{"line":848,"column":62,"offset":23366},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For this problem, a path is defined as any sequence of nodes from some starting node to any node in the tree along the parent-child connections. The path must contain ","position":{"start":{"line":850,"column":1,"offset":23368},"end":{"line":850,"column":168,"offset":23535},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"at least one node","position":{"start":{"line":850,"column":170,"offset":23537},"end":{"line":850,"column":187,"offset":23554},"indent":[]}}],"position":{"start":{"line":850,"column":168,"offset":23535},"end":{"line":850,"column":189,"offset":23556},"indent":[]}},{"type":"text","value":" and does not need to go through the root.","position":{"start":{"line":850,"column":189,"offset":23556},"end":{"line":850,"column":231,"offset":23598},"indent":[]}}],"position":{"start":{"line":850,"column":1,"offset":23368},"end":{"line":850,"column":231,"offset":23598},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":852,"column":3,"offset":23602},"end":{"line":852,"column":13,"offset":23612},"indent":[]}}],"position":{"start":{"line":852,"column":1,"offset":23600},"end":{"line":852,"column":15,"offset":23614},"indent":[]}}],"position":{"start":{"line":852,"column":1,"offset":23600},"end":{"line":852,"column":15,"offset":23614},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [1,2,3]\n\n       1\n      / \\\n     2   3\n\nOutput: 6","position":{"start":{"line":854,"column":1,"offset":23616},"end":{"line":863,"column":4,"offset":23681},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":865,"column":3,"offset":23685},"end":{"line":865,"column":13,"offset":23695},"indent":[]}}],"position":{"start":{"line":865,"column":1,"offset":23683},"end":{"line":865,"column":15,"offset":23697},"indent":[]}}],"position":{"start":{"line":865,"column":1,"offset":23683},"end":{"line":865,"column":15,"offset":23697},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [-10,9,20,null,null,15,7]\n\n   -10\n   / \\\n  9  20\n    /  \\\n   15   7\n\nOutput: 42","position":{"start":{"line":867,"column":1,"offset":23699},"end":{"line":878,"column":4,"offset":23794},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution:","position":{"start":{"line":880,"column":5,"offset":23800},"end":{"line":880,"column":14,"offset":23809},"indent":[]}}],"position":{"start":{"line":880,"column":1,"offset":23796},"end":{"line":880,"column":14,"offset":23809},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For every ","position":{"start":{"line":882,"column":1,"offset":23811},"end":{"line":882,"column":11,"offset":23821},"indent":[]}},{"type":"inlineCode","value":"node","position":{"start":{"line":882,"column":11,"offset":23821},"end":{"line":882,"column":17,"offset":23827},"indent":[]}},{"type":"text","value":", there are six possible ways to get the max path sum:","position":{"start":{"line":882,"column":17,"offset":23827},"end":{"line":882,"column":71,"offset":23881},"indent":[]}}],"position":{"start":{"line":882,"column":1,"offset":23811},"end":{"line":882,"column":71,"offset":23881},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"With ","position":{"start":{"line":884,"column":3,"offset":23885},"end":{"line":884,"column":8,"offset":23890},"indent":[]}},{"type":"inlineCode","value":"node.val","position":{"start":{"line":884,"column":8,"offset":23890},"end":{"line":884,"column":18,"offset":23900},"indent":[]}}],"position":{"start":{"line":884,"column":3,"offset":23885},"end":{"line":884,"column":18,"offset":23900},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"node.val","position":{"start":{"line":885,"column":9,"offset":23909},"end":{"line":885,"column":19,"offset":23919},"indent":[]}},{"type":"text","value":" plus the max sum of a path that ends with ","position":{"start":{"line":885,"column":19,"offset":23919},"end":{"line":885,"column":62,"offset":23962},"indent":[]}},{"type":"inlineCode","value":"node.left","position":{"start":{"line":885,"column":62,"offset":23962},"end":{"line":885,"column":73,"offset":23973},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":885,"column":73,"offset":23973},"end":{"line":885,"column":74,"offset":23974},"indent":[]}}],"position":{"start":{"line":885,"column":9,"offset":23909},"end":{"line":885,"column":74,"offset":23974},"indent":[]}}],"position":{"start":{"line":885,"column":5,"offset":23905},"end":{"line":885,"column":74,"offset":23974},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"node.val","position":{"start":{"line":886,"column":9,"offset":23983},"end":{"line":886,"column":19,"offset":23993},"indent":[]}},{"type":"text","value":" plus the max sum of a path that starts with ","position":{"start":{"line":886,"column":19,"offset":23993},"end":{"line":886,"column":64,"offset":24038},"indent":[]}},{"type":"inlineCode","value":"node.right","position":{"start":{"line":886,"column":64,"offset":24038},"end":{"line":886,"column":76,"offset":24050},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":886,"column":76,"offset":24050},"end":{"line":886,"column":77,"offset":24051},"indent":[]}}],"position":{"start":{"line":886,"column":9,"offset":23983},"end":{"line":886,"column":77,"offset":24051},"indent":[]}}],"position":{"start":{"line":886,"column":5,"offset":23979},"end":{"line":886,"column":77,"offset":24051},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"node.val","position":{"start":{"line":887,"column":9,"offset":24060},"end":{"line":887,"column":19,"offset":24070},"indent":[]}},{"type":"text","value":" plus the max sum of both paths.","position":{"start":{"line":887,"column":19,"offset":24070},"end":{"line":887,"column":51,"offset":24102},"indent":[]}}],"position":{"start":{"line":887,"column":9,"offset":24060},"end":{"line":887,"column":51,"offset":24102},"indent":[]}}],"position":{"start":{"line":887,"column":5,"offset":24056},"end":{"line":887,"column":51,"offset":24102},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Just ","position":{"start":{"line":888,"column":9,"offset":24111},"end":{"line":888,"column":14,"offset":24116},"indent":[]}},{"type":"inlineCode","value":"node.val","position":{"start":{"line":888,"column":14,"offset":24116},"end":{"line":888,"column":24,"offset":24126},"indent":[]}},{"type":"text","value":" (the max sum of both paths are negative).","position":{"start":{"line":888,"column":24,"offset":24126},"end":{"line":888,"column":66,"offset":24168},"indent":[]}}],"position":{"start":{"line":888,"column":9,"offset":24111},"end":{"line":888,"column":66,"offset":24168},"indent":[]}}],"position":{"start":{"line":888,"column":5,"offset":24107},"end":{"line":888,"column":66,"offset":24168},"indent":[]}}],"position":{"start":{"line":885,"column":5,"offset":23905},"end":{"line":888,"column":66,"offset":24168},"indent":[5,5,5]}}],"position":{"start":{"line":884,"column":1,"offset":23883},"end":{"line":888,"column":66,"offset":24168},"indent":[1,1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Without","position":{"start":{"line":889,"column":3,"offset":24171},"end":{"line":889,"column":10,"offset":24178},"indent":[]}},{"type":"inlineCode","value":"node.val","position":{"start":{"line":889,"column":10,"offset":24178},"end":{"line":889,"column":20,"offset":24188},"indent":[]}},{"type":"text","value":" (disconnected)","position":{"start":{"line":889,"column":20,"offset":24188},"end":{"line":889,"column":35,"offset":24203},"indent":[]}}],"position":{"start":{"line":889,"column":3,"offset":24171},"end":{"line":889,"column":35,"offset":24203},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The max-sum path is somewhere under the ","position":{"start":{"line":890,"column":9,"offset":24212},"end":{"line":890,"column":49,"offset":24252},"indent":[]}},{"type":"inlineCode","value":"node.left","position":{"start":{"line":890,"column":49,"offset":24252},"end":{"line":890,"column":60,"offset":24263},"indent":[]}},{"type":"text","value":" subtree.","position":{"start":{"line":890,"column":60,"offset":24263},"end":{"line":890,"column":69,"offset":24272},"indent":[]}}],"position":{"start":{"line":890,"column":9,"offset":24212},"end":{"line":890,"column":69,"offset":24272},"indent":[]}}],"position":{"start":{"line":890,"column":5,"offset":24208},"end":{"line":890,"column":69,"offset":24272},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The max-sum path is somewhere under the ","position":{"start":{"line":891,"column":9,"offset":24281},"end":{"line":891,"column":49,"offset":24321},"indent":[]}},{"type":"inlineCode","value":"node.right","position":{"start":{"line":891,"column":49,"offset":24321},"end":{"line":891,"column":61,"offset":24333},"indent":[]}},{"type":"text","value":" subtree.","position":{"start":{"line":891,"column":61,"offset":24333},"end":{"line":891,"column":70,"offset":24342},"indent":[]}}],"position":{"start":{"line":891,"column":9,"offset":24281},"end":{"line":891,"column":70,"offset":24342},"indent":[]}}],"position":{"start":{"line":891,"column":5,"offset":24277},"end":{"line":891,"column":70,"offset":24342},"indent":[]}}],"position":{"start":{"line":890,"column":5,"offset":24208},"end":{"line":891,"column":70,"offset":24342},"indent":[5]}}],"position":{"start":{"line":889,"column":1,"offset":24169},"end":{"line":891,"column":70,"offset":24342},"indent":[1,1]}}],"position":{"start":{"line":884,"column":1,"offset":23883},"end":{"line":891,"column":70,"offset":24342},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"There are two ways to implement this.","position":{"start":{"line":893,"column":1,"offset":24344},"end":{"line":893,"column":38,"offset":24381},"indent":[]}}],"position":{"start":{"line":893,"column":1,"offset":24344},"end":{"line":893,"column":38,"offset":24381},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"ONE","position":{"start":{"line":895,"column":6,"offset":24388},"end":{"line":895,"column":9,"offset":24391},"indent":[]}}],"position":{"start":{"line":895,"column":1,"offset":24383},"end":{"line":895,"column":9,"offset":24391},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Define a function that returns two values. The max sum of a path that may or may not end with ","position":{"start":{"line":897,"column":1,"offset":24393},"end":{"line":897,"column":95,"offset":24487},"indent":[]}},{"type":"inlineCode","value":"root","position":{"start":{"line":897,"column":95,"offset":24487},"end":{"line":897,"column":101,"offset":24493},"indent":[]}},{"type":"text","value":" node, and the max sum of the path that ends with ","position":{"start":{"line":897,"column":101,"offset":24493},"end":{"line":897,"column":151,"offset":24543},"indent":[]}},{"type":"inlineCode","value":"root","position":{"start":{"line":897,"column":151,"offset":24543},"end":{"line":897,"column":157,"offset":24549},"indent":[]}},{"type":"text","value":" node.","position":{"start":{"line":897,"column":157,"offset":24549},"end":{"line":897,"column":163,"offset":24555},"indent":[]}}],"position":{"start":{"line":897,"column":1,"offset":24393},"end":{"line":897,"column":163,"offset":24555},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nlet maxPathSum = function (root) {\n    return Math.max(..._maxPathSum(root));\n};\n\n/**\n * @param {TreeNode} root\n * @return {number[]}\n */\nfunction _maxPathSum(root) {\n    if (!root) {\n        return [-Infinity, -Infinity];\n    }\n\n    const left = _maxPathSum(root.left);\n    const right = _maxPathSum(root.right);\n    return [Math.max(left[0], right[0], root.val + Math.max(0, left[1], right[1], left[1] + right[1])), Math.max(left[1], right[1], 0) + root.val];\n}","position":{"start":{"line":899,"column":1,"offset":24557},"end":{"line":928,"column":4,"offset":25224},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"TWO","position":{"start":{"line":930,"column":6,"offset":25231},"end":{"line":930,"column":9,"offset":25234},"indent":[]}}],"position":{"start":{"line":930,"column":1,"offset":25226},"end":{"line":930,"column":9,"offset":25234},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Just return the later (max sum of a path that ends with ","position":{"start":{"line":932,"column":1,"offset":25236},"end":{"line":932,"column":57,"offset":25292},"indent":[]}},{"type":"inlineCode","value":"root","position":{"start":{"line":932,"column":57,"offset":25292},"end":{"line":932,"column":63,"offset":25298},"indent":[]}},{"type":"text","value":"). Maintain a global variable to store the disconnected max sum.","position":{"start":{"line":932,"column":63,"offset":25298},"end":{"line":932,"column":127,"offset":25362},"indent":[]}}],"position":{"start":{"line":932,"column":1,"offset":25236},"end":{"line":932,"column":127,"offset":25362},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nlet maxPathSum = function (root) {\n    const global = { max: -Infinity };\n    _maxPathSum(root, global);\n    return global.max;\n};\n\n/**\n * @param {TreeNode} root\n * @param {object} global\n * @param {number} global.max\n * @return {number[]}\n */\nfunction _maxPathSum(root, global) {\n    if (!root) {\n        return -Infinity;\n    }\n\n    const left = _maxPathSum(root.left, global);\n    const right = _maxPathSum(root.right, global);\n    const localMax = Math.max(left, right, 0) + root.val;\n    global.max = Math.max(global.max, localMax, root.val + left + right);\n    return localMax;\n}","position":{"start":{"line":934,"column":1,"offset":25364},"end":{"line":969,"column":4,"offset":26153},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":971,"column":1,"offset":26155},"end":{"line":971,"column":4,"offset":26158},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Easy\nRelated Topics:\n\"Two Pointers\": ","position":{"start":{"line":973,"column":1,"offset":26160},"end":{"line":975,"column":17,"offset":26209},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/two-pointers","children":[{"type":"text","value":"https://leetcode.com/tag/two-pointers","position":{"start":{"line":975,"column":17,"offset":26209},"end":{"line":975,"column":54,"offset":26246},"indent":[]}}],"position":{"start":{"line":975,"column":17,"offset":26209},"end":{"line":975,"column":54,"offset":26246},"indent":[]}},{"type":"text","value":"\n\"String\": ","position":{"start":{"line":975,"column":54,"offset":26246},"end":{"line":976,"column":11,"offset":26257},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/string","children":[{"type":"text","value":"https://leetcode.com/tag/string","position":{"start":{"line":976,"column":11,"offset":26257},"end":{"line":976,"column":42,"offset":26288},"indent":[]}}],"position":{"start":{"line":976,"column":11,"offset":26257},"end":{"line":976,"column":42,"offset":26288},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Palindrome Linked List\": ","position":{"start":{"line":976,"column":42,"offset":26288},"end":{"line":978,"column":27,"offset":26334},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/palindrome-linked-list","children":[{"type":"text","value":"https://leetcode.com/problems/palindrome-linked-list","position":{"start":{"line":978,"column":27,"offset":26334},"end":{"line":978,"column":79,"offset":26386},"indent":[]}}],"position":{"start":{"line":978,"column":27,"offset":26334},"end":{"line":978,"column":79,"offset":26386},"indent":[]}},{"type":"text","value":"\n\"Valid Palindrome II\": ","position":{"start":{"line":978,"column":79,"offset":26386},"end":{"line":979,"column":24,"offset":26410},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/valid-palindrome-ii","children":[{"type":"text","value":"https://leetcode.com/problems/valid-palindrome-ii","position":{"start":{"line":979,"column":24,"offset":26410},"end":{"line":979,"column":73,"offset":26459},"indent":[]}}],"position":{"start":{"line":979,"column":24,"offset":26410},"end":{"line":979,"column":73,"offset":26459},"indent":[]}}],"position":{"start":{"line":973,"column":1,"offset":26160},"end":{"line":979,"column":73,"offset":26459},"indent":[1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":981,"column":1,"offset":26461},"end":{"line":981,"column":4,"offset":26464},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#125-valid-palindromehttpsleetcodecomproblemsvalid-palindromedescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":983,"column":2,"offset":26467},"end":{"line":983,"column":142,"offset":26607},"indent":[]}}],"position":{"start":{"line":983,"column":1,"offset":26466},"end":{"line":983,"column":217,"offset":26682},"indent":[]}}],"position":{"start":{"line":983,"column":1,"offset":26466},"end":{"line":983,"column":217,"offset":26682},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":985,"column":4,"offset":26687},"end":{"line":985,"column":6,"offset":26689},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/valid-palindrome/description/","children":[{"type":"text","value":"125. Valid Palindrome","position":{"start":{"line":985,"column":7,"offset":26690},"end":{"line":985,"column":28,"offset":26711},"indent":[]}}],"position":{"start":{"line":985,"column":6,"offset":26689},"end":{"line":985,"column":90,"offset":26773},"indent":[]}}],"position":{"start":{"line":985,"column":1,"offset":26684},"end":{"line":985,"column":90,"offset":26773},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem:","position":{"start":{"line":987,"column":5,"offset":26779},"end":{"line":987,"column":13,"offset":26787},"indent":[]}}],"position":{"start":{"line":987,"column":1,"offset":26775},"end":{"line":987,"column":13,"offset":26787},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.","position":{"start":{"line":989,"column":1,"offset":26789},"end":{"line":989,"column":110,"offset":26898},"indent":[]}}],"position":{"start":{"line":989,"column":1,"offset":26789},"end":{"line":989,"column":110,"offset":26898},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":991,"column":3,"offset":26902},"end":{"line":991,"column":8,"offset":26907},"indent":[]}}],"position":{"start":{"line":991,"column":1,"offset":26900},"end":{"line":991,"column":10,"offset":26909},"indent":[]}},{"type":"text","value":" For the purpose of this problem, we define empty string as valid palindrome.","position":{"start":{"line":991,"column":10,"offset":26909},"end":{"line":991,"column":87,"offset":26986},"indent":[]}}],"position":{"start":{"line":991,"column":1,"offset":26900},"end":{"line":991,"column":87,"offset":26986},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":993,"column":3,"offset":26990},"end":{"line":993,"column":13,"offset":27000},"indent":[]}}],"position":{"start":{"line":993,"column":1,"offset":26988},"end":{"line":993,"column":15,"offset":27002},"indent":[]}}],"position":{"start":{"line":993,"column":1,"offset":26988},"end":{"line":993,"column":15,"offset":27002},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: \"A man, a plan, a canal: Panama\"\nOutput: true","position":{"start":{"line":995,"column":1,"offset":27004},"end":{"line":999,"column":4,"offset":27065},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1001,"column":3,"offset":27069},"end":{"line":1001,"column":13,"offset":27079},"indent":[]}}],"position":{"start":{"line":1001,"column":1,"offset":27067},"end":{"line":1001,"column":15,"offset":27081},"indent":[]}}],"position":{"start":{"line":1001,"column":1,"offset":27067},"end":{"line":1001,"column":15,"offset":27081},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: \"race a car\"\nOutput: false","position":{"start":{"line":1003,"column":1,"offset":27083},"end":{"line":1007,"column":4,"offset":27125},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution:","position":{"start":{"line":1009,"column":5,"offset":27131},"end":{"line":1009,"column":14,"offset":27140},"indent":[]}}],"position":{"start":{"line":1009,"column":1,"offset":27127},"end":{"line":1009,"column":14,"offset":27140},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"ONE","position":{"start":{"line":1011,"column":6,"offset":27147},"end":{"line":1011,"column":9,"offset":27150},"indent":[]}}],"position":{"start":{"line":1011,"column":1,"offset":27142},"end":{"line":1011,"column":9,"offset":27150},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {string} s\n * @return {boolean}\n */\nlet isPalindrome = function (s) {\n    const clean = s.toLowerCase().split(/[^a-z0-9]*/);\n    return clean.join('') === clean.reverse().join('');\n};","position":{"start":{"line":1013,"column":1,"offset":27152},"end":{"line":1022,"column":4,"offset":27359},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"TWO","position":{"start":{"line":1024,"column":6,"offset":27366},"end":{"line":1024,"column":9,"offset":27369},"indent":[]}}],"position":{"start":{"line":1024,"column":1,"offset":27361},"end":{"line":1024,"column":9,"offset":27369},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Remove non-alphanumeric characters then compare.","position":{"start":{"line":1026,"column":1,"offset":27371},"end":{"line":1026,"column":49,"offset":27419},"indent":[]}}],"position":{"start":{"line":1026,"column":1,"offset":27371},"end":{"line":1026,"column":49,"offset":27419},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {string} s\n * @return {boolean}\n */\nlet isPalindrome = function (s) {\n    const clean = s.replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n    for (let i = 0, j = clean.length - 1; i < j; i++, j--) {\n        if (clean[i] !== clean[j]) {\n            return false;\n        }\n    }\n    return true;\n};","position":{"start":{"line":1028,"column":1,"offset":27421},"end":{"line":1042,"column":4,"offset":27738},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":4,"children":[{"type":"text","value":"THREE","position":{"start":{"line":1044,"column":6,"offset":27745},"end":{"line":1044,"column":11,"offset":27750},"indent":[]}}],"position":{"start":{"line":1044,"column":1,"offset":27740},"end":{"line":1044,"column":11,"offset":27750},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Compare the char codes.","position":{"start":{"line":1046,"column":1,"offset":27752},"end":{"line":1046,"column":24,"offset":27775},"indent":[]}}],"position":{"start":{"line":1046,"column":1,"offset":27752},"end":{"line":1046,"column":24,"offset":27775},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {string} s\n * @return {boolean}\n */\nlet isPalindrome = function (s) {\n    for (let i = 0, j = s.length - 1; i < j; i++, j--) {\n        let left = s.charCodeAt(i);\n        while (i < j && (left < 48 || (left > 57 && left < 65) || (left > 90 && left < 97) || left > 122)) {\n            left = s.charCodeAt(++i);\n        }\n        if (i >= j) {\n            return true;\n        }\n        if (left >= 65 && left <= 90) {\n            left += 32;\n        }\n\n        let right = s.charCodeAt(j);\n        while (i < j && (right < 48 || (right > 57 && right < 65) || (right > 90 && right < 97) || right > 122)) {\n            right = s.charCodeAt(--j);\n        }\n        if (i >= j) {\n            return true;\n        }\n        if (right >= 65 && right <= 90) {\n            right += 32;\n        }\n\n        if (left !== right) {\n            return false;\n        }\n    }\n\n    return true;\n};","position":{"start":{"line":1048,"column":1,"offset":27777},"end":{"line":1084,"column":4,"offset":28681},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1086,"column":1,"offset":28683},"end":{"line":1086,"column":4,"offset":28686},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Hard\nRelated Topics:\n\"Array\": ","position":{"start":{"line":1088,"column":1,"offset":28688},"end":{"line":1090,"column":10,"offset":28730},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/array","children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":1090,"column":10,"offset":28730},"end":{"line":1090,"column":40,"offset":28760},"indent":[]}}],"position":{"start":{"line":1090,"column":10,"offset":28730},"end":{"line":1090,"column":40,"offset":28760},"indent":[]}},{"type":"text","value":"\n\"String\": ","position":{"start":{"line":1090,"column":40,"offset":28760},"end":{"line":1091,"column":11,"offset":28771},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/string","children":[{"type":"text","value":"https://leetcode.com/tag/string","position":{"start":{"line":1091,"column":11,"offset":28771},"end":{"line":1091,"column":42,"offset":28802},"indent":[]}}],"position":{"start":{"line":1091,"column":11,"offset":28771},"end":{"line":1091,"column":42,"offset":28802},"indent":[]}},{"type":"text","value":"\n\"Backtracking\": ","position":{"start":{"line":1091,"column":42,"offset":28802},"end":{"line":1092,"column":17,"offset":28819},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/backtracking","children":[{"type":"text","value":"https://leetcode.com/tag/backtracking","position":{"start":{"line":1092,"column":17,"offset":28819},"end":{"line":1092,"column":54,"offset":28856},"indent":[]}}],"position":{"start":{"line":1092,"column":17,"offset":28819},"end":{"line":1092,"column":54,"offset":28856},"indent":[]}},{"type":"text","value":"\n\"Breadth-first Search\": ","position":{"start":{"line":1092,"column":54,"offset":28856},"end":{"line":1093,"column":25,"offset":28881},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/breadth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/breadth-first-search","position":{"start":{"line":1093,"column":25,"offset":28881},"end":{"line":1093,"column":70,"offset":28926},"indent":[]}}],"position":{"start":{"line":1093,"column":25,"offset":28881},"end":{"line":1093,"column":70,"offset":28926},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Word Ladder\": ","position":{"start":{"line":1093,"column":70,"offset":28926},"end":{"line":1095,"column":16,"offset":28961},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/word-ladder","children":[{"type":"text","value":"https://leetcode.com/problems/word-ladder","position":{"start":{"line":1095,"column":16,"offset":28961},"end":{"line":1095,"column":57,"offset":29002},"indent":[]}}],"position":{"start":{"line":1095,"column":16,"offset":28961},"end":{"line":1095,"column":57,"offset":29002},"indent":[]}}],"position":{"start":{"line":1088,"column":1,"offset":28688},"end":{"line":1095,"column":57,"offset":29002},"indent":[1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1097,"column":1,"offset":29004},"end":{"line":1097,"column":4,"offset":29007},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#126-word-ladder-iihttpsleetcodecomproblemsword-ladder-iidescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":1099,"column":2,"offset":29010},"end":{"line":1099,"column":142,"offset":29150},"indent":[]}}],"position":{"start":{"line":1099,"column":1,"offset":29009},"end":{"line":1099,"column":213,"offset":29221},"indent":[]}}],"position":{"start":{"line":1099,"column":1,"offset":29009},"end":{"line":1099,"column":213,"offset":29221},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":1101,"column":4,"offset":29226},"end":{"line":1101,"column":6,"offset":29228},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/word-ladder-ii/description/","children":[{"type":"text","value":"126. Word Ladder II","position":{"start":{"line":1101,"column":7,"offset":29229},"end":{"line":1101,"column":26,"offset":29248},"indent":[]}}],"position":{"start":{"line":1101,"column":6,"offset":29228},"end":{"line":1101,"column":86,"offset":29308},"indent":[]}}],"position":{"start":{"line":1101,"column":1,"offset":29223},"end":{"line":1101,"column":86,"offset":29308},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem:","position":{"start":{"line":1103,"column":5,"offset":29314},"end":{"line":1103,"column":13,"offset":29322},"indent":[]}}],"position":{"start":{"line":1103,"column":1,"offset":29310},"end":{"line":1103,"column":13,"offset":29322},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given two words (","position":{"start":{"line":1105,"column":1,"offset":29324},"end":{"line":1105,"column":18,"offset":29341},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"beginWord","position":{"start":{"line":1105,"column":19,"offset":29342},"end":{"line":1105,"column":28,"offset":29351},"indent":[]}}],"position":{"start":{"line":1105,"column":18,"offset":29341},"end":{"line":1105,"column":29,"offset":29352},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":1105,"column":29,"offset":29352},"end":{"line":1105,"column":34,"offset":29357},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"endWord","position":{"start":{"line":1105,"column":35,"offset":29358},"end":{"line":1105,"column":42,"offset":29365},"indent":[]}}],"position":{"start":{"line":1105,"column":34,"offset":29357},"end":{"line":1105,"column":43,"offset":29366},"indent":[]}},{"type":"text","value":"), and a dictionary's word list, find all shortest transformation sequence(s) from ","position":{"start":{"line":1105,"column":43,"offset":29366},"end":{"line":1105,"column":126,"offset":29449},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"beginWord","position":{"start":{"line":1105,"column":127,"offset":29450},"end":{"line":1105,"column":136,"offset":29459},"indent":[]}}],"position":{"start":{"line":1105,"column":126,"offset":29449},"end":{"line":1105,"column":137,"offset":29460},"indent":[]}},{"type":"text","value":" to ","position":{"start":{"line":1105,"column":137,"offset":29460},"end":{"line":1105,"column":141,"offset":29464},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"endWord","position":{"start":{"line":1105,"column":142,"offset":29465},"end":{"line":1105,"column":149,"offset":29472},"indent":[]}}],"position":{"start":{"line":1105,"column":141,"offset":29464},"end":{"line":1105,"column":150,"offset":29473},"indent":[]}},{"type":"text","value":", such that:","position":{"start":{"line":1105,"column":150,"offset":29473},"end":{"line":1105,"column":162,"offset":29485},"indent":[]}}],"position":{"start":{"line":1105,"column":1,"offset":29324},"end":{"line":1105,"column":162,"offset":29485},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Only one letter can be changed at a time","position":{"start":{"line":1107,"column":5,"offset":29491},"end":{"line":1107,"column":45,"offset":29531},"indent":[]}}],"position":{"start":{"line":1107,"column":5,"offset":29491},"end":{"line":1107,"column":45,"offset":29531},"indent":[]}}],"position":{"start":{"line":1107,"column":1,"offset":29487},"end":{"line":1107,"column":45,"offset":29531},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Each transformed word must exist in the word list. Note that ","position":{"start":{"line":1108,"column":5,"offset":29536},"end":{"line":1108,"column":66,"offset":29597},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"beginWord","position":{"start":{"line":1108,"column":67,"offset":29598},"end":{"line":1108,"column":76,"offset":29607},"indent":[]}}],"position":{"start":{"line":1108,"column":66,"offset":29597},"end":{"line":1108,"column":77,"offset":29608},"indent":[]}},{"type":"text","value":" is ","position":{"start":{"line":1108,"column":77,"offset":29608},"end":{"line":1108,"column":81,"offset":29612},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"not","position":{"start":{"line":1108,"column":82,"offset":29613},"end":{"line":1108,"column":85,"offset":29616},"indent":[]}}],"position":{"start":{"line":1108,"column":81,"offset":29612},"end":{"line":1108,"column":86,"offset":29617},"indent":[]}},{"type":"text","value":" a transformed word.","position":{"start":{"line":1108,"column":86,"offset":29617},"end":{"line":1108,"column":106,"offset":29637},"indent":[]}}],"position":{"start":{"line":1108,"column":5,"offset":29536},"end":{"line":1108,"column":106,"offset":29637},"indent":[]}}],"position":{"start":{"line":1108,"column":1,"offset":29532},"end":{"line":1108,"column":106,"offset":29637},"indent":[]}}],"position":{"start":{"line":1107,"column":1,"offset":29487},"end":{"line":1108,"column":106,"offset":29637},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":1110,"column":3,"offset":29641},"end":{"line":1110,"column":8,"offset":29646},"indent":[]}}],"position":{"start":{"line":1110,"column":1,"offset":29639},"end":{"line":1110,"column":10,"offset":29648},"indent":[]}}],"position":{"start":{"line":1110,"column":1,"offset":29639},"end":{"line":1110,"column":10,"offset":29648},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Return an empty list if there is no such transformation sequence.","position":{"start":{"line":1112,"column":3,"offset":29652},"end":{"line":1112,"column":68,"offset":29717},"indent":[]}}],"position":{"start":{"line":1112,"column":3,"offset":29652},"end":{"line":1112,"column":68,"offset":29717},"indent":[]}}],"position":{"start":{"line":1112,"column":1,"offset":29650},"end":{"line":1112,"column":68,"offset":29717},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"All words have the same length.","position":{"start":{"line":1113,"column":3,"offset":29720},"end":{"line":1113,"column":34,"offset":29751},"indent":[]}}],"position":{"start":{"line":1113,"column":3,"offset":29720},"end":{"line":1113,"column":34,"offset":29751},"indent":[]}}],"position":{"start":{"line":1113,"column":1,"offset":29718},"end":{"line":1113,"column":34,"offset":29751},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"All words contain only lowercase alphabetic characters.","position":{"start":{"line":1114,"column":3,"offset":29754},"end":{"line":1114,"column":58,"offset":29809},"indent":[]}}],"position":{"start":{"line":1114,"column":3,"offset":29754},"end":{"line":1114,"column":58,"offset":29809},"indent":[]}}],"position":{"start":{"line":1114,"column":1,"offset":29752},"end":{"line":1114,"column":58,"offset":29809},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You may assume no duplicates in the word list.","position":{"start":{"line":1115,"column":3,"offset":29812},"end":{"line":1115,"column":49,"offset":29858},"indent":[]}}],"position":{"start":{"line":1115,"column":3,"offset":29812},"end":{"line":1115,"column":49,"offset":29858},"indent":[]}}],"position":{"start":{"line":1115,"column":1,"offset":29810},"end":{"line":1115,"column":49,"offset":29858},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You may assume ","position":{"start":{"line":1116,"column":3,"offset":29861},"end":{"line":1116,"column":18,"offset":29876},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"beginWord","position":{"start":{"line":1116,"column":19,"offset":29877},"end":{"line":1116,"column":28,"offset":29886},"indent":[]}}],"position":{"start":{"line":1116,"column":18,"offset":29876},"end":{"line":1116,"column":29,"offset":29887},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":1116,"column":29,"offset":29887},"end":{"line":1116,"column":34,"offset":29892},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"endWord","position":{"start":{"line":1116,"column":35,"offset":29893},"end":{"line":1116,"column":42,"offset":29900},"indent":[]}}],"position":{"start":{"line":1116,"column":34,"offset":29892},"end":{"line":1116,"column":43,"offset":29901},"indent":[]}},{"type":"text","value":" are non-empty and are not the same.","position":{"start":{"line":1116,"column":43,"offset":29901},"end":{"line":1116,"column":79,"offset":29937},"indent":[]}}],"position":{"start":{"line":1116,"column":3,"offset":29861},"end":{"line":1116,"column":79,"offset":29937},"indent":[]}}],"position":{"start":{"line":1116,"column":1,"offset":29859},"end":{"line":1116,"column":79,"offset":29937},"indent":[]}}],"position":{"start":{"line":1112,"column":1,"offset":29650},"end":{"line":1116,"column":79,"offset":29937},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":1118,"column":3,"offset":29941},"end":{"line":1118,"column":13,"offset":29951},"indent":[]}}],"position":{"start":{"line":1118,"column":1,"offset":29939},"end":{"line":1118,"column":15,"offset":29953},"indent":[]}}],"position":{"start":{"line":1118,"column":1,"offset":29939},"end":{"line":1118,"column":15,"offset":29953},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input:\nbeginWord = \"hit\",\nendWord = \"cog\",\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\",\"cog\"]\n\nOutput:\n[\n  [\"hit\",\"hot\",\"dot\",\"dog\",\"cog\"],\n  [\"hit\",\"hot\",\"lot\",\"log\",\"cog\"]\n]","position":{"start":{"line":1120,"column":1,"offset":29955},"end":{"line":1132,"column":4,"offset":30137},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1134,"column":3,"offset":30141},"end":{"line":1134,"column":13,"offset":30151},"indent":[]}}],"position":{"start":{"line":1134,"column":1,"offset":30139},"end":{"line":1134,"column":15,"offset":30153},"indent":[]}}],"position":{"start":{"line":1134,"column":1,"offset":30139},"end":{"line":1134,"column":15,"offset":30153},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input:\nbeginWord = \"hit\"\nendWord = \"cog\"\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\"]\n\nOutput: []\n\nExplanation: The endWord \"cog\" is not in wordList, therefore no possible transformation.","position":{"start":{"line":1136,"column":1,"offset":30155},"end":{"line":1146,"column":4,"offset":30349},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution:","position":{"start":{"line":1148,"column":5,"offset":30355},"end":{"line":1148,"column":14,"offset":30364},"indent":[]}}],"position":{"start":{"line":1148,"column":1,"offset":30351},"end":{"line":1148,"column":14,"offset":30364},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This is just like ","position":{"start":{"line":1150,"column":1,"offset":30366},"end":{"line":1150,"column":19,"offset":30384},"indent":[]}},{"type":"link","title":null,"url":"./127.%20Word%20Ladder","children":[{"type":"text","value":"127. Word Ladder","position":{"start":{"line":1150,"column":20,"offset":30385},"end":{"line":1150,"column":36,"offset":30401},"indent":[]}}],"position":{"start":{"line":1150,"column":19,"offset":30384},"end":{"line":1150,"column":61,"offset":30426},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1150,"column":61,"offset":30426},"end":{"line":1150,"column":62,"offset":30427},"indent":[]}}],"position":{"start":{"line":1150,"column":1,"offset":30366},"end":{"line":1150,"column":62,"offset":30427},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The constrain still works, but instead of deleting the words right away, collect them and delete them all when a level ends, so that we can reuse the words (matching different parents in the same level).","position":{"start":{"line":1152,"column":1,"offset":30429},"end":{"line":1152,"column":204,"offset":30632},"indent":[]}}],"position":{"start":{"line":1152,"column":1,"offset":30429},"end":{"line":1152,"column":204,"offset":30632},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The items in the queue are not just words now. Parent nodes are also kept so that we can backtrack the path from the end.","position":{"start":{"line":1154,"column":1,"offset":30634},"end":{"line":1154,"column":122,"offset":30755},"indent":[]}}],"position":{"start":{"line":1154,"column":1,"offset":30634},"end":{"line":1154,"column":122,"offset":30755},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {string} beginWord\n * @param {string} endWord\n * @param {string[]} wordList\n * @return {string[][]}\n */\nfunction findLadders(beginWord, endWord, wordList) {\n    wordList = new Set(wordList);\n    if (!wordList.has(endWord)) {\n        return [];\n    }\n\n    const ALPHABET = 'abcdefghijklmnopqrstuvwxyz';\n\n    const result = [];\n    let isEndWordFound = false;\n    const levelWords = new Set();\n    const queue = [[beginWord, null], null];\n    while (queue.length > 1) {\n        const node = queue.shift();\n\n        if (node === null) {\n            if (isEndWordFound) {\n                break;\n            }\n            levelWords.forEach((word) => wordList.delete(word));\n            levelWords.clear();\n            queue.push(null);\n            continue;\n        }\n\n        const word = node[0];\n\n        for (let i = word.length - 1; i >= 0; i--) {\n            const head = word.slice(0, i);\n            const tail = word.slice(i + 1);\n\n            for (let c = 0; c < 26; c++) {\n                if (ALPHABET[c] !== word[i]) {\n                    const w = head + ALPHABET[c] + tail;\n                    if (w === endWord) {\n                        const path = [endWord];\n                        for (let n = node; n !== null; n = n[1]) {\n                            path.unshift(n[0]);\n                        }\n                        result.push(path);\n                        isEndWordFound = true;\n                    }\n                    if (wordList.has(w)) {\n                        levelWords.add(w);\n                        queue.push([w, node]);\n                    }\n                }\n            }\n        }\n    }\n\n    return result;\n}","position":{"start":{"line":1156,"column":1,"offset":30757},"end":{"line":1216,"column":4,"offset":32431},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1218,"column":1,"offset":32433},"end":{"line":1218,"column":4,"offset":32436},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Breadth-first Search\": ","position":{"start":{"line":1220,"column":1,"offset":32438},"end":{"line":1222,"column":25,"offset":32497},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/breadth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/breadth-first-search","position":{"start":{"line":1222,"column":25,"offset":32497},"end":{"line":1222,"column":70,"offset":32542},"indent":[]}}],"position":{"start":{"line":1222,"column":25,"offset":32497},"end":{"line":1222,"column":70,"offset":32542},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Word Ladder II\": ","position":{"start":{"line":1222,"column":70,"offset":32542},"end":{"line":1224,"column":19,"offset":32580},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/word-ladder-ii","children":[{"type":"text","value":"https://leetcode.com/problems/word-ladder-ii","position":{"start":{"line":1224,"column":19,"offset":32580},"end":{"line":1224,"column":63,"offset":32624},"indent":[]}}],"position":{"start":{"line":1224,"column":19,"offset":32580},"end":{"line":1224,"column":63,"offset":32624},"indent":[]}},{"type":"text","value":"\n\"Minimum Genetic Mutation\": ","position":{"start":{"line":1224,"column":63,"offset":32624},"end":{"line":1225,"column":29,"offset":32653},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/minimum-genetic-mutation","children":[{"type":"text","value":"https://leetcode.com/problems/minimum-genetic-mutation","position":{"start":{"line":1225,"column":29,"offset":32653},"end":{"line":1225,"column":83,"offset":32707},"indent":[]}}],"position":{"start":{"line":1225,"column":29,"offset":32653},"end":{"line":1225,"column":83,"offset":32707},"indent":[]}}],"position":{"start":{"line":1220,"column":1,"offset":32438},"end":{"line":1225,"column":83,"offset":32707},"indent":[1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1227,"column":1,"offset":32709},"end":{"line":1227,"column":4,"offset":32712},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#127-word-ladderhttpsleetcodecomproblemsword-ladderdescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":1229,"column":2,"offset":32715},"end":{"line":1229,"column":142,"offset":32855},"indent":[]}}],"position":{"start":{"line":1229,"column":1,"offset":32714},"end":{"line":1229,"column":207,"offset":32920},"indent":[]}}],"position":{"start":{"line":1229,"column":1,"offset":32714},"end":{"line":1229,"column":207,"offset":32920},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":1231,"column":4,"offset":32925},"end":{"line":1231,"column":6,"offset":32927},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/word-ladder/description/","children":[{"type":"text","value":"127. Word Ladder","position":{"start":{"line":1231,"column":7,"offset":32928},"end":{"line":1231,"column":23,"offset":32944},"indent":[]}}],"position":{"start":{"line":1231,"column":6,"offset":32927},"end":{"line":1231,"column":80,"offset":33001},"indent":[]}}],"position":{"start":{"line":1231,"column":1,"offset":32922},"end":{"line":1231,"column":80,"offset":33001},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem:","position":{"start":{"line":1233,"column":5,"offset":33007},"end":{"line":1233,"column":13,"offset":33015},"indent":[]}}],"position":{"start":{"line":1233,"column":1,"offset":33003},"end":{"line":1233,"column":13,"offset":33015},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given two words (","position":{"start":{"line":1235,"column":1,"offset":33017},"end":{"line":1235,"column":18,"offset":33034},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"beginWord","position":{"start":{"line":1235,"column":19,"offset":33035},"end":{"line":1235,"column":28,"offset":33044},"indent":[]}}],"position":{"start":{"line":1235,"column":18,"offset":33034},"end":{"line":1235,"column":29,"offset":33045},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":1235,"column":29,"offset":33045},"end":{"line":1235,"column":34,"offset":33050},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"endWord","position":{"start":{"line":1235,"column":35,"offset":33051},"end":{"line":1235,"column":42,"offset":33058},"indent":[]}}],"position":{"start":{"line":1235,"column":34,"offset":33050},"end":{"line":1235,"column":43,"offset":33059},"indent":[]}},{"type":"text","value":"), and a dictionary's word list, find the length of shortest transformation sequence from ","position":{"start":{"line":1235,"column":43,"offset":33059},"end":{"line":1235,"column":133,"offset":33149},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"beginWord","position":{"start":{"line":1235,"column":134,"offset":33150},"end":{"line":1235,"column":143,"offset":33159},"indent":[]}}],"position":{"start":{"line":1235,"column":133,"offset":33149},"end":{"line":1235,"column":144,"offset":33160},"indent":[]}},{"type":"text","value":" to ","position":{"start":{"line":1235,"column":144,"offset":33160},"end":{"line":1235,"column":148,"offset":33164},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"endWord","position":{"start":{"line":1235,"column":149,"offset":33165},"end":{"line":1235,"column":156,"offset":33172},"indent":[]}}],"position":{"start":{"line":1235,"column":148,"offset":33164},"end":{"line":1235,"column":157,"offset":33173},"indent":[]}},{"type":"text","value":", such that:","position":{"start":{"line":1235,"column":157,"offset":33173},"end":{"line":1235,"column":169,"offset":33185},"indent":[]}}],"position":{"start":{"line":1235,"column":1,"offset":33017},"end":{"line":1235,"column":169,"offset":33185},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Only one letter can be changed at a time.","position":{"start":{"line":1237,"column":5,"offset":33191},"end":{"line":1237,"column":46,"offset":33232},"indent":[]}}],"position":{"start":{"line":1237,"column":5,"offset":33191},"end":{"line":1237,"column":46,"offset":33232},"indent":[]}}],"position":{"start":{"line":1237,"column":1,"offset":33187},"end":{"line":1237,"column":46,"offset":33232},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Each transformed word must exist in the word list. Note that ","position":{"start":{"line":1238,"column":5,"offset":33237},"end":{"line":1238,"column":66,"offset":33298},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"beginWord","position":{"start":{"line":1238,"column":67,"offset":33299},"end":{"line":1238,"column":76,"offset":33308},"indent":[]}}],"position":{"start":{"line":1238,"column":66,"offset":33298},"end":{"line":1238,"column":77,"offset":33309},"indent":[]}},{"type":"text","value":" is ","position":{"start":{"line":1238,"column":77,"offset":33309},"end":{"line":1238,"column":81,"offset":33313},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"not","position":{"start":{"line":1238,"column":82,"offset":33314},"end":{"line":1238,"column":85,"offset":33317},"indent":[]}}],"position":{"start":{"line":1238,"column":81,"offset":33313},"end":{"line":1238,"column":86,"offset":33318},"indent":[]}},{"type":"text","value":" a transformed word.","position":{"start":{"line":1238,"column":86,"offset":33318},"end":{"line":1238,"column":106,"offset":33338},"indent":[]}}],"position":{"start":{"line":1238,"column":5,"offset":33237},"end":{"line":1238,"column":106,"offset":33338},"indent":[]}}],"position":{"start":{"line":1238,"column":1,"offset":33233},"end":{"line":1238,"column":106,"offset":33338},"indent":[]}}],"position":{"start":{"line":1237,"column":1,"offset":33187},"end":{"line":1238,"column":106,"offset":33338},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":1240,"column":3,"offset":33342},"end":{"line":1240,"column":8,"offset":33347},"indent":[]}}],"position":{"start":{"line":1240,"column":1,"offset":33340},"end":{"line":1240,"column":10,"offset":33349},"indent":[]}}],"position":{"start":{"line":1240,"column":1,"offset":33340},"end":{"line":1240,"column":10,"offset":33349},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Return 0 if there is no such transformation sequence.","position":{"start":{"line":1242,"column":3,"offset":33353},"end":{"line":1242,"column":56,"offset":33406},"indent":[]}}],"position":{"start":{"line":1242,"column":3,"offset":33353},"end":{"line":1242,"column":56,"offset":33406},"indent":[]}}],"position":{"start":{"line":1242,"column":1,"offset":33351},"end":{"line":1242,"column":56,"offset":33406},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"All words have the same length.","position":{"start":{"line":1243,"column":3,"offset":33409},"end":{"line":1243,"column":34,"offset":33440},"indent":[]}}],"position":{"start":{"line":1243,"column":3,"offset":33409},"end":{"line":1243,"column":34,"offset":33440},"indent":[]}}],"position":{"start":{"line":1243,"column":1,"offset":33407},"end":{"line":1243,"column":34,"offset":33440},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"All words contain only lowercase alphabetic characters.","position":{"start":{"line":1244,"column":3,"offset":33443},"end":{"line":1244,"column":58,"offset":33498},"indent":[]}}],"position":{"start":{"line":1244,"column":3,"offset":33443},"end":{"line":1244,"column":58,"offset":33498},"indent":[]}}],"position":{"start":{"line":1244,"column":1,"offset":33441},"end":{"line":1244,"column":58,"offset":33498},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You may assume no duplicates in the word list.","position":{"start":{"line":1245,"column":3,"offset":33501},"end":{"line":1245,"column":49,"offset":33547},"indent":[]}}],"position":{"start":{"line":1245,"column":3,"offset":33501},"end":{"line":1245,"column":49,"offset":33547},"indent":[]}}],"position":{"start":{"line":1245,"column":1,"offset":33499},"end":{"line":1245,"column":49,"offset":33547},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You may assume ","position":{"start":{"line":1246,"column":3,"offset":33550},"end":{"line":1246,"column":18,"offset":33565},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"beginWord","position":{"start":{"line":1246,"column":19,"offset":33566},"end":{"line":1246,"column":28,"offset":33575},"indent":[]}}],"position":{"start":{"line":1246,"column":18,"offset":33565},"end":{"line":1246,"column":29,"offset":33576},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":1246,"column":29,"offset":33576},"end":{"line":1246,"column":34,"offset":33581},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"endWord","position":{"start":{"line":1246,"column":35,"offset":33582},"end":{"line":1246,"column":42,"offset":33589},"indent":[]}}],"position":{"start":{"line":1246,"column":34,"offset":33581},"end":{"line":1246,"column":43,"offset":33590},"indent":[]}},{"type":"text","value":" are non-empty and are not the same.","position":{"start":{"line":1246,"column":43,"offset":33590},"end":{"line":1246,"column":79,"offset":33626},"indent":[]}}],"position":{"start":{"line":1246,"column":3,"offset":33550},"end":{"line":1246,"column":79,"offset":33626},"indent":[]}}],"position":{"start":{"line":1246,"column":1,"offset":33548},"end":{"line":1246,"column":79,"offset":33626},"indent":[]}}],"position":{"start":{"line":1242,"column":1,"offset":33351},"end":{"line":1246,"column":79,"offset":33626},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":1248,"column":3,"offset":33630},"end":{"line":1248,"column":13,"offset":33640},"indent":[]}}],"position":{"start":{"line":1248,"column":1,"offset":33628},"end":{"line":1248,"column":15,"offset":33642},"indent":[]}}],"position":{"start":{"line":1248,"column":1,"offset":33628},"end":{"line":1248,"column":15,"offset":33642},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input:\nbeginWord = \"hit\",\nendWord = \"cog\",\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\",\"cog\"]\n\nOutput: 5\n\nExplanation: As one shortest transformation is \"hit\" -> \"hot\" -> \"dot\" -> \"dog\" -> \"cog\",\nreturn its length 5.","position":{"start":{"line":1250,"column":1,"offset":33644},"end":{"line":1261,"column":4,"offset":33867},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1263,"column":3,"offset":33871},"end":{"line":1263,"column":13,"offset":33881},"indent":[]}}],"position":{"start":{"line":1263,"column":1,"offset":33869},"end":{"line":1263,"column":15,"offset":33883},"indent":[]}}],"position":{"start":{"line":1263,"column":1,"offset":33869},"end":{"line":1263,"column":15,"offset":33883},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input:\nbeginWord = \"hit\"\nendWord = \"cog\"\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\"]\n\nOutput: 0\n\nExplanation: The endWord \"cog\" is not in wordList, therefore no possible transformation.","position":{"start":{"line":1265,"column":1,"offset":33885},"end":{"line":1275,"column":4,"offset":34078},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution:","position":{"start":{"line":1277,"column":5,"offset":34084},"end":{"line":1277,"column":14,"offset":34093},"indent":[]}}],"position":{"start":{"line":1277,"column":1,"offset":34080},"end":{"line":1277,"column":14,"offset":34093},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Think of it as building a tree, with ","position":{"start":{"line":1279,"column":1,"offset":34095},"end":{"line":1279,"column":38,"offset":34132},"indent":[]}},{"type":"inlineCode","value":"begineWord","position":{"start":{"line":1279,"column":38,"offset":34132},"end":{"line":1279,"column":50,"offset":34144},"indent":[]}},{"type":"text","value":" as root and ","position":{"start":{"line":1279,"column":50,"offset":34144},"end":{"line":1279,"column":63,"offset":34157},"indent":[]}},{"type":"inlineCode","value":"endWord","position":{"start":{"line":1279,"column":63,"offset":34157},"end":{"line":1279,"column":72,"offset":34166},"indent":[]}},{"type":"text","value":" as leaves.","position":{"start":{"line":1279,"column":72,"offset":34166},"end":{"line":1279,"column":83,"offset":34177},"indent":[]}}],"position":{"start":{"line":1279,"column":1,"offset":34095},"end":{"line":1279,"column":83,"offset":34177},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The best way control the depth (length of the shortest transformations) while building the tree is level-order traversal (BFS).","position":{"start":{"line":1281,"column":1,"offset":34179},"end":{"line":1281,"column":128,"offset":34306},"indent":[]}}],"position":{"start":{"line":1281,"column":1,"offset":34179},"end":{"line":1281,"column":128,"offset":34306},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We do not actually build the tree because it is expensive (astronomical if the list is huge). In fact, we only need one shortest path. So just like Dijkstra's algorithm, we say that the first time (level ","position":{"start":{"line":1283,"column":1,"offset":34308},"end":{"line":1283,"column":205,"offset":34512},"indent":[]}},{"type":"inlineCode","value":"i","position":{"start":{"line":1283,"column":205,"offset":34512},"end":{"line":1283,"column":208,"offset":34515},"indent":[]}},{"type":"text","value":") we encounter a word that turns out to be in a shortest path, then level ","position":{"start":{"line":1283,"column":208,"offset":34515},"end":{"line":1283,"column":282,"offset":34589},"indent":[]}},{"type":"inlineCode","value":"i","position":{"start":{"line":1283,"column":282,"offset":34589},"end":{"line":1283,"column":285,"offset":34592},"indent":[]}},{"type":"text","value":" is the lowest level this word could ever get. We can safely remove it from the ","position":{"start":{"line":1283,"column":285,"offset":34592},"end":{"line":1283,"column":365,"offset":34672},"indent":[]}},{"type":"inlineCode","value":"wordList","position":{"start":{"line":1283,"column":365,"offset":34672},"end":{"line":1283,"column":375,"offset":34682},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1283,"column":375,"offset":34682},"end":{"line":1283,"column":376,"offset":34683},"indent":[]}}],"position":{"start":{"line":1283,"column":1,"offset":34308},"end":{"line":1283,"column":376,"offset":34683},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To find all the next words, instead of filtering the ","position":{"start":{"line":1285,"column":1,"offset":34685},"end":{"line":1285,"column":54,"offset":34738},"indent":[]}},{"type":"inlineCode","value":"wordList","position":{"start":{"line":1285,"column":54,"offset":34738},"end":{"line":1285,"column":64,"offset":34748},"indent":[]}},{"type":"text","value":", enumerate all 25 possible words and check if in ","position":{"start":{"line":1285,"column":64,"offset":34748},"end":{"line":1285,"column":114,"offset":34798},"indent":[]}},{"type":"inlineCode","value":"wordList","position":{"start":{"line":1285,"column":114,"offset":34798},"end":{"line":1285,"column":124,"offset":34808},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1285,"column":124,"offset":34808},"end":{"line":1285,"column":125,"offset":34809},"indent":[]}}],"position":{"start":{"line":1285,"column":1,"offset":34685},"end":{"line":1285,"column":125,"offset":34809},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {string} beginWord\n * @param {string} endWord\n * @param {string[]} wordList\n * @return {number}\n */\nlet ladderLength = function (beginWord, endWord, wordList) {\n    wordList = new Set(wordList);\n    if (!wordList.has(endWord)) {\n        return 0;\n    }\n\n    const ALPHABET = 'abcdefghijklmnopqrstuvwxyz';\n\n    let level = 1;\n    const queue = [beginWord, null];\n    while (queue.length > 1) {\n        const word = queue.shift();\n\n        if (word === null) {\n            level++;\n            queue.push(null);\n            continue;\n        }\n\n        for (let i = word.length - 1; i >= 0; i--) {\n            const head = word.slice(0, i);\n            const tail = word.slice(i + 1);\n\n            for (let c = 0; c < 26; c++) {\n                if (ALPHABET[c] !== word[i]) {\n                    const word = head + ALPHABET[c] + tail;\n                    if (word === endWord) {\n                        return level + 1;\n                    }\n                    if (wordList.delete(word)) {\n                        queue.push(word);\n                    }\n                }\n            }\n        }\n    }\n\n    return 0;\n};","position":{"start":{"line":1287,"column":1,"offset":34811},"end":{"line":1333,"column":4,"offset":35955},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1335,"column":1,"offset":35957},"end":{"line":1335,"column":4,"offset":35960},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Hard\nRelated Topics:\n\"Array\": ","position":{"start":{"line":1337,"column":1,"offset":35962},"end":{"line":1339,"column":10,"offset":36004},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/array","children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":1339,"column":10,"offset":36004},"end":{"line":1339,"column":40,"offset":36034},"indent":[]}}],"position":{"start":{"line":1339,"column":10,"offset":36004},"end":{"line":1339,"column":40,"offset":36034},"indent":[]}},{"type":"text","value":"\n\"Union Find\": ","position":{"start":{"line":1339,"column":40,"offset":36034},"end":{"line":1340,"column":15,"offset":36049},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/union-find","children":[{"type":"text","value":"https://leetcode.com/tag/union-find","position":{"start":{"line":1340,"column":15,"offset":36049},"end":{"line":1340,"column":50,"offset":36084},"indent":[]}}],"position":{"start":{"line":1340,"column":15,"offset":36049},"end":{"line":1340,"column":50,"offset":36084},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Binary Tree Longest Consecutive Sequence\": ","position":{"start":{"line":1340,"column":50,"offset":36084},"end":{"line":1342,"column":45,"offset":36148},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/binary-tree-longest-consecutive-sequence","children":[{"type":"text","value":"https://leetcode.com/problems/binary-tree-longest-consecutive-sequence","position":{"start":{"line":1342,"column":45,"offset":36148},"end":{"line":1342,"column":115,"offset":36218},"indent":[]}}],"position":{"start":{"line":1342,"column":45,"offset":36148},"end":{"line":1342,"column":115,"offset":36218},"indent":[]}}],"position":{"start":{"line":1337,"column":1,"offset":35962},"end":{"line":1342,"column":115,"offset":36218},"indent":[1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1344,"column":1,"offset":36220},"end":{"line":1344,"column":4,"offset":36223},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#128-longest-consecutive-sequencehttpsleetcodecomproblemslongest-consecutive-sequencedescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":1346,"column":2,"offset":36226},"end":{"line":1346,"column":142,"offset":36366},"indent":[]}}],"position":{"start":{"line":1346,"column":1,"offset":36225},"end":{"line":1346,"column":241,"offset":36465},"indent":[]}}],"position":{"start":{"line":1346,"column":1,"offset":36225},"end":{"line":1346,"column":241,"offset":36465},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":1348,"column":4,"offset":36470},"end":{"line":1348,"column":6,"offset":36472},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/longest-consecutive-sequence/description/","children":[{"type":"text","value":"128. Longest Consecutive Sequence","position":{"start":{"line":1348,"column":7,"offset":36473},"end":{"line":1348,"column":40,"offset":36506},"indent":[]}}],"position":{"start":{"line":1348,"column":6,"offset":36472},"end":{"line":1348,"column":114,"offset":36580},"indent":[]}}],"position":{"start":{"line":1348,"column":1,"offset":36467},"end":{"line":1348,"column":114,"offset":36580},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem:","position":{"start":{"line":1350,"column":5,"offset":36586},"end":{"line":1350,"column":13,"offset":36594},"indent":[]}}],"position":{"start":{"line":1350,"column":1,"offset":36582},"end":{"line":1350,"column":13,"offset":36594},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given an unsorted array of integers, find the length of the longest consecutive elements sequence.","position":{"start":{"line":1352,"column":1,"offset":36596},"end":{"line":1352,"column":99,"offset":36694},"indent":[]}}],"position":{"start":{"line":1352,"column":1,"offset":36596},"end":{"line":1352,"column":99,"offset":36694},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Your algorithm should run in O(","position":{"start":{"line":1354,"column":1,"offset":36696},"end":{"line":1354,"column":32,"offset":36727},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"n","position":{"start":{"line":1354,"column":33,"offset":36728},"end":{"line":1354,"column":34,"offset":36729},"indent":[]}}],"position":{"start":{"line":1354,"column":32,"offset":36727},"end":{"line":1354,"column":35,"offset":36730},"indent":[]}},{"type":"text","value":") complexity.","position":{"start":{"line":1354,"column":35,"offset":36730},"end":{"line":1354,"column":48,"offset":36743},"indent":[]}}],"position":{"start":{"line":1354,"column":1,"offset":36696},"end":{"line":1354,"column":48,"offset":36743},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example:","position":{"start":{"line":1356,"column":3,"offset":36747},"end":{"line":1356,"column":11,"offset":36755},"indent":[]}}],"position":{"start":{"line":1356,"column":1,"offset":36745},"end":{"line":1356,"column":13,"offset":36757},"indent":[]}}],"position":{"start":{"line":1356,"column":1,"offset":36745},"end":{"line":1356,"column":13,"offset":36757},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [100, 4, 200, 1, 3, 2]\nOutput: 4\nExplanation: The longest consecutive elements sequence is [1, 2, 3, 4]. Therefore its length is 4.","position":{"start":{"line":1358,"column":1,"offset":36759},"end":{"line":1363,"column":4,"offset":36906},"indent":[1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution:","position":{"start":{"line":1365,"column":5,"offset":36912},"end":{"line":1365,"column":14,"offset":36921},"indent":[]}}],"position":{"start":{"line":1365,"column":1,"offset":36908},"end":{"line":1365,"column":14,"offset":36921},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Build a Set from the list. Pick a number, find all it's adjacent numbers that are also in the Set. Count them and remove them all from the Set. Repeat until the Set is empty. Time complexity O(n + n) = O(n).","position":{"start":{"line":1367,"column":1,"offset":36923},"end":{"line":1367,"column":208,"offset":37130},"indent":[]}}],"position":{"start":{"line":1367,"column":1,"offset":36923},"end":{"line":1367,"column":208,"offset":37130},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {number[]} nums\n * @return {number}\n */\nlet longestConsecutive = function (nums) {\n    const numSet = new Set(nums);\n    let maxCount = 0;\n    while (numSet.size > 0) {\n        const num = numSet.values().next().value;\n        numSet.delete(num);\n        let count = 1;\n        for (let n = num + 1; numSet.delete(n); n++) {\n            count++;\n        }\n        for (let n = num - 1; numSet.delete(n); n--) {\n            count++;\n        }\n        if (count > maxCount) {\n            maxCount = count;\n        }\n    }\n    return maxCount;\n};","position":{"start":{"line":1369,"column":1,"offset":37132},"end":{"line":1393,"column":4,"offset":37699},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1395,"column":1,"offset":37701},"end":{"line":1395,"column":4,"offset":37704},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Tree\": ","position":{"start":{"line":1397,"column":1,"offset":37706},"end":{"line":1399,"column":9,"offset":37749},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/tree","children":[{"type":"text","value":"https://leetcode.com/tag/tree","position":{"start":{"line":1399,"column":9,"offset":37749},"end":{"line":1399,"column":38,"offset":37778},"indent":[]}}],"position":{"start":{"line":1399,"column":9,"offset":37749},"end":{"line":1399,"column":38,"offset":37778},"indent":[]}},{"type":"text","value":"\n\"Depth-first Search\": ","position":{"start":{"line":1399,"column":38,"offset":37778},"end":{"line":1400,"column":23,"offset":37801},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/depth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/depth-first-search","position":{"start":{"line":1400,"column":23,"offset":37801},"end":{"line":1400,"column":66,"offset":37844},"indent":[]}}],"position":{"start":{"line":1400,"column":23,"offset":37801},"end":{"line":1400,"column":66,"offset":37844},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Path Sum\": ","position":{"start":{"line":1400,"column":66,"offset":37844},"end":{"line":1402,"column":13,"offset":37876},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/path-sum","children":[{"type":"text","value":"https://leetcode.com/problems/path-sum","position":{"start":{"line":1402,"column":13,"offset":37876},"end":{"line":1402,"column":51,"offset":37914},"indent":[]}}],"position":{"start":{"line":1402,"column":13,"offset":37876},"end":{"line":1402,"column":51,"offset":37914},"indent":[]}},{"type":"text","value":"\n\"Binary Tree Maximum Path Sum\": ","position":{"start":{"line":1402,"column":51,"offset":37914},"end":{"line":1403,"column":33,"offset":37947},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/binary-tree-maximum-path-sum","children":[{"type":"text","value":"https://leetcode.com/problems/binary-tree-maximum-path-sum","position":{"start":{"line":1403,"column":33,"offset":37947},"end":{"line":1403,"column":91,"offset":38005},"indent":[]}}],"position":{"start":{"line":1403,"column":33,"offset":37947},"end":{"line":1403,"column":91,"offset":38005},"indent":[]}}],"position":{"start":{"line":1397,"column":1,"offset":37706},"end":{"line":1403,"column":91,"offset":38005},"indent":[1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1405,"column":1,"offset":38007},"end":{"line":1405,"column":4,"offset":38010},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#129-sum-root-to-leaf-numbershttpsleetcodecomproblemssum-root-to-leaf-numbersdescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":1407,"column":2,"offset":38013},"end":{"line":1407,"column":142,"offset":38153},"indent":[]}}],"position":{"start":{"line":1407,"column":1,"offset":38012},"end":{"line":1407,"column":233,"offset":38244},"indent":[]}}],"position":{"start":{"line":1407,"column":1,"offset":38012},"end":{"line":1407,"column":233,"offset":38244},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":1409,"column":4,"offset":38249},"end":{"line":1409,"column":6,"offset":38251},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/sum-root-to-leaf-numbers/description/","children":[{"type":"text","value":"129. Sum Root to Leaf Numbers","position":{"start":{"line":1409,"column":7,"offset":38252},"end":{"line":1409,"column":36,"offset":38281},"indent":[]}}],"position":{"start":{"line":1409,"column":6,"offset":38251},"end":{"line":1409,"column":106,"offset":38351},"indent":[]}}],"position":{"start":{"line":1409,"column":1,"offset":38246},"end":{"line":1409,"column":106,"offset":38351},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem:","position":{"start":{"line":1411,"column":5,"offset":38357},"end":{"line":1411,"column":13,"offset":38365},"indent":[]}}],"position":{"start":{"line":1411,"column":1,"offset":38353},"end":{"line":1411,"column":13,"offset":38365},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a binary tree containing digits from ","position":{"start":{"line":1413,"column":1,"offset":38367},"end":{"line":1413,"column":44,"offset":38410},"indent":[]}},{"type":"inlineCode","value":"0-9","position":{"start":{"line":1413,"column":44,"offset":38410},"end":{"line":1413,"column":49,"offset":38415},"indent":[]}},{"type":"text","value":" only, each root-to-leaf path could represent a number.","position":{"start":{"line":1413,"column":49,"offset":38415},"end":{"line":1413,"column":104,"offset":38470},"indent":[]}}],"position":{"start":{"line":1413,"column":1,"offset":38367},"end":{"line":1413,"column":104,"offset":38470},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"An example is the root-to-leaf path ","position":{"start":{"line":1415,"column":1,"offset":38472},"end":{"line":1415,"column":37,"offset":38508},"indent":[]}},{"type":"inlineCode","value":"1->2->3","position":{"start":{"line":1415,"column":37,"offset":38508},"end":{"line":1415,"column":46,"offset":38517},"indent":[]}},{"type":"text","value":" which represents the number ","position":{"start":{"line":1415,"column":46,"offset":38517},"end":{"line":1415,"column":75,"offset":38546},"indent":[]}},{"type":"inlineCode","value":"123","position":{"start":{"line":1415,"column":75,"offset":38546},"end":{"line":1415,"column":80,"offset":38551},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1415,"column":80,"offset":38551},"end":{"line":1415,"column":81,"offset":38552},"indent":[]}}],"position":{"start":{"line":1415,"column":1,"offset":38472},"end":{"line":1415,"column":81,"offset":38552},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Find the total sum of all root-to-leaf numbers.","position":{"start":{"line":1417,"column":1,"offset":38554},"end":{"line":1417,"column":48,"offset":38601},"indent":[]}}],"position":{"start":{"line":1417,"column":1,"offset":38554},"end":{"line":1417,"column":48,"offset":38601},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":1419,"column":3,"offset":38605},"end":{"line":1419,"column":8,"offset":38610},"indent":[]}}],"position":{"start":{"line":1419,"column":1,"offset":38603},"end":{"line":1419,"column":10,"offset":38612},"indent":[]}},{"type":"text","value":" A leaf is a node with no children.","position":{"start":{"line":1419,"column":10,"offset":38612},"end":{"line":1419,"column":45,"offset":38647},"indent":[]}}],"position":{"start":{"line":1419,"column":1,"offset":38603},"end":{"line":1419,"column":45,"offset":38647},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example:","position":{"start":{"line":1421,"column":3,"offset":38651},"end":{"line":1421,"column":11,"offset":38659},"indent":[]}}],"position":{"start":{"line":1421,"column":1,"offset":38649},"end":{"line":1421,"column":13,"offset":38661},"indent":[]}}],"position":{"start":{"line":1421,"column":1,"offset":38649},"end":{"line":1421,"column":13,"offset":38661},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [1,2,3]\n    1\n   / \\\n  2   3\nOutput: 25\nExplanation:\nThe root-to-leaf path 1->2 represents the number 12.\nThe root-to-leaf path 1->3 represents the number 13.\nTherefore, sum = 12 + 13 = 25.","position":{"start":{"line":1423,"column":1,"offset":38663},"end":{"line":1431,"column":35,"offset":38895},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1433,"column":3,"offset":38899},"end":{"line":1433,"column":13,"offset":38909},"indent":[]}}],"position":{"start":{"line":1433,"column":1,"offset":38897},"end":{"line":1433,"column":15,"offset":38911},"indent":[]}}],"position":{"start":{"line":1433,"column":1,"offset":38897},"end":{"line":1433,"column":15,"offset":38911},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Input: [4,9,0,5,1]\n    4\n   / \\\n  9   0\n / \\\n5   1\nOutput: 1026\nExplanation:\nThe root-to-leaf path 4->9->5 represents the number 495.\nThe root-to-leaf path 4->9->1 represents the number 491.\nThe root-to-leaf path 4->0 represents the number 40.\nTherefore, sum = 495 + 491 + 40 = 1026.","position":{"start":{"line":1435,"column":1,"offset":38913},"end":{"line":1446,"column":44,"offset":39244},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution:","position":{"start":{"line":1448,"column":5,"offset":39250},"end":{"line":1448,"column":14,"offset":39259},"indent":[]}}],"position":{"start":{"line":1448,"column":1,"offset":39246},"end":{"line":1448,"column":14,"offset":39259},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To write a clean solution for this promblem, use ","position":{"start":{"line":1450,"column":1,"offset":39261},"end":{"line":1450,"column":50,"offset":39310},"indent":[]}},{"type":"inlineCode","value":"0","position":{"start":{"line":1450,"column":50,"offset":39310},"end":{"line":1450,"column":53,"offset":39313},"indent":[]}},{"type":"text","value":" as indicator of leaf node. If all the children get ","position":{"start":{"line":1450,"column":53,"offset":39313},"end":{"line":1450,"column":105,"offset":39365},"indent":[]}},{"type":"inlineCode","value":"0","position":{"start":{"line":1450,"column":105,"offset":39365},"end":{"line":1450,"column":108,"offset":39368},"indent":[]}},{"type":"text","value":", it is a leaf node, return the sum of current level.","position":{"start":{"line":1450,"column":108,"offset":39368},"end":{"line":1450,"column":161,"offset":39421},"indent":[]}}],"position":{"start":{"line":1450,"column":1,"offset":39261},"end":{"line":1450,"column":161,"offset":39421},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nlet sumNumbers = function (root, sum = 0) {\n    if (!root) {\n        return 0;\n    }\n    sum = sum * 10 + root.val;\n    return sumNumbers(root.left, sum) + sumNumbers(root.right, sum) || sum;\n};","position":{"start":{"line":1452,"column":1,"offset":39423},"end":{"line":1471,"column":4,"offset":39821},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1473,"column":1,"offset":39823},"end":{"line":1473,"column":4,"offset":39826},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Depth-first Search\": ","position":{"start":{"line":1475,"column":1,"offset":39828},"end":{"line":1477,"column":23,"offset":39885},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/depth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/depth-first-search","position":{"start":{"line":1477,"column":23,"offset":39885},"end":{"line":1477,"column":66,"offset":39928},"indent":[]}}],"position":{"start":{"line":1477,"column":23,"offset":39885},"end":{"line":1477,"column":66,"offset":39928},"indent":[]}},{"type":"text","value":"\n\"Breadth-first Search\": ","position":{"start":{"line":1477,"column":66,"offset":39928},"end":{"line":1478,"column":25,"offset":39953},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/breadth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/breadth-first-search","position":{"start":{"line":1478,"column":25,"offset":39953},"end":{"line":1478,"column":70,"offset":39998},"indent":[]}}],"position":{"start":{"line":1478,"column":25,"offset":39953},"end":{"line":1478,"column":70,"offset":39998},"indent":[]}},{"type":"text","value":"\n\"Union Find\": ","position":{"start":{"line":1478,"column":70,"offset":39998},"end":{"line":1479,"column":15,"offset":40013},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/union-find","children":[{"type":"text","value":"https://leetcode.com/tag/union-find","position":{"start":{"line":1479,"column":15,"offset":40013},"end":{"line":1479,"column":50,"offset":40048},"indent":[]}}],"position":{"start":{"line":1479,"column":15,"offset":40013},"end":{"line":1479,"column":50,"offset":40048},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Number of Islands\": ","position":{"start":{"line":1479,"column":50,"offset":40048},"end":{"line":1481,"column":22,"offset":40089},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/number-of-islands","children":[{"type":"text","value":"https://leetcode.com/problems/number-of-islands","position":{"start":{"line":1481,"column":22,"offset":40089},"end":{"line":1481,"column":69,"offset":40136},"indent":[]}}],"position":{"start":{"line":1481,"column":22,"offset":40089},"end":{"line":1481,"column":69,"offset":40136},"indent":[]}},{"type":"text","value":"\n\"Walls and Gates\": ","position":{"start":{"line":1481,"column":69,"offset":40136},"end":{"line":1482,"column":20,"offset":40156},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/walls-and-gates","children":[{"type":"text","value":"https://leetcode.com/problems/walls-and-gates","position":{"start":{"line":1482,"column":20,"offset":40156},"end":{"line":1482,"column":65,"offset":40201},"indent":[]}}],"position":{"start":{"line":1482,"column":20,"offset":40156},"end":{"line":1482,"column":65,"offset":40201},"indent":[]}}],"position":{"start":{"line":1475,"column":1,"offset":39828},"end":{"line":1482,"column":65,"offset":40201},"indent":[1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1484,"column":1,"offset":40203},"end":{"line":1484,"column":4,"offset":40206},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#130-surrounded-regionshttpsleetcodecomproblemssurrounded-regionsdescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":1486,"column":2,"offset":40209},"end":{"line":1486,"column":142,"offset":40349},"indent":[]}}],"position":{"start":{"line":1486,"column":1,"offset":40208},"end":{"line":1486,"column":221,"offset":40428},"indent":[]}}],"position":{"start":{"line":1486,"column":1,"offset":40208},"end":{"line":1486,"column":221,"offset":40428},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":1488,"column":4,"offset":40433},"end":{"line":1488,"column":6,"offset":40435},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/surrounded-regions/description/","children":[{"type":"text","value":"130. Surrounded Regions","position":{"start":{"line":1488,"column":7,"offset":40436},"end":{"line":1488,"column":30,"offset":40459},"indent":[]}}],"position":{"start":{"line":1488,"column":6,"offset":40435},"end":{"line":1488,"column":94,"offset":40523},"indent":[]}}],"position":{"start":{"line":1488,"column":1,"offset":40430},"end":{"line":1488,"column":94,"offset":40523},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem:","position":{"start":{"line":1490,"column":5,"offset":40529},"end":{"line":1490,"column":13,"offset":40537},"indent":[]}}],"position":{"start":{"line":1490,"column":1,"offset":40525},"end":{"line":1490,"column":13,"offset":40537},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a 2D board containing ","position":{"start":{"line":1492,"column":1,"offset":40539},"end":{"line":1492,"column":29,"offset":40567},"indent":[]}},{"type":"inlineCode","value":"'X'","position":{"start":{"line":1492,"column":29,"offset":40567},"end":{"line":1492,"column":34,"offset":40572},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":1492,"column":34,"offset":40572},"end":{"line":1492,"column":39,"offset":40577},"indent":[]}},{"type":"inlineCode","value":"'O'","position":{"start":{"line":1492,"column":39,"offset":40577},"end":{"line":1492,"column":44,"offset":40582},"indent":[]}},{"type":"text","value":" (","position":{"start":{"line":1492,"column":44,"offset":40582},"end":{"line":1492,"column":46,"offset":40584},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"the letter O","position":{"start":{"line":1492,"column":48,"offset":40586},"end":{"line":1492,"column":60,"offset":40598},"indent":[]}}],"position":{"start":{"line":1492,"column":46,"offset":40584},"end":{"line":1492,"column":62,"offset":40600},"indent":[]}},{"type":"text","value":"), capture all regions surrounded by ","position":{"start":{"line":1492,"column":62,"offset":40600},"end":{"line":1492,"column":99,"offset":40637},"indent":[]}},{"type":"inlineCode","value":"'X'","position":{"start":{"line":1492,"column":99,"offset":40637},"end":{"line":1492,"column":104,"offset":40642},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1492,"column":104,"offset":40642},"end":{"line":1492,"column":105,"offset":40643},"indent":[]}}],"position":{"start":{"line":1492,"column":1,"offset":40539},"end":{"line":1492,"column":105,"offset":40643},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A region is captured by flipping all ","position":{"start":{"line":1494,"column":1,"offset":40645},"end":{"line":1494,"column":38,"offset":40682},"indent":[]}},{"type":"inlineCode","value":"'O'","position":{"start":{"line":1494,"column":38,"offset":40682},"end":{"line":1494,"column":43,"offset":40687},"indent":[]}},{"type":"text","value":"s into ","position":{"start":{"line":1494,"column":43,"offset":40687},"end":{"line":1494,"column":50,"offset":40694},"indent":[]}},{"type":"inlineCode","value":"'X'","position":{"start":{"line":1494,"column":50,"offset":40694},"end":{"line":1494,"column":55,"offset":40699},"indent":[]}},{"type":"text","value":"s in that surrounded region.","position":{"start":{"line":1494,"column":55,"offset":40699},"end":{"line":1494,"column":83,"offset":40727},"indent":[]}}],"position":{"start":{"line":1494,"column":1,"offset":40645},"end":{"line":1494,"column":83,"offset":40727},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example:","position":{"start":{"line":1496,"column":3,"offset":40731},"end":{"line":1496,"column":11,"offset":40739},"indent":[]}}],"position":{"start":{"line":1496,"column":1,"offset":40729},"end":{"line":1496,"column":13,"offset":40741},"indent":[]}}],"position":{"start":{"line":1496,"column":1,"offset":40729},"end":{"line":1496,"column":13,"offset":40741},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"X X X X\nX O O X\nX X O X\nX O X X","position":{"start":{"line":1498,"column":1,"offset":40743},"end":{"line":1504,"column":4,"offset":40783},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"After running your function, the board should be:","position":{"start":{"line":1506,"column":1,"offset":40785},"end":{"line":1506,"column":50,"offset":40834},"indent":[]}}],"position":{"start":{"line":1506,"column":1,"offset":40785},"end":{"line":1506,"column":50,"offset":40834},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"X X X X\nX X X X\nX X X X\nX O X X","position":{"start":{"line":1508,"column":1,"offset":40836},"end":{"line":1514,"column":4,"offset":40876},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Explanation:","position":{"start":{"line":1516,"column":3,"offset":40880},"end":{"line":1516,"column":15,"offset":40892},"indent":[]}}],"position":{"start":{"line":1516,"column":1,"offset":40878},"end":{"line":1516,"column":17,"offset":40894},"indent":[]}}],"position":{"start":{"line":1516,"column":1,"offset":40878},"end":{"line":1516,"column":17,"offset":40894},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Surrounded regions shouldn't be on the border, which means that any ","position":{"start":{"line":1518,"column":1,"offset":40896},"end":{"line":1518,"column":69,"offset":40964},"indent":[]}},{"type":"inlineCode","value":"'O'","position":{"start":{"line":1518,"column":69,"offset":40964},"end":{"line":1518,"column":74,"offset":40969},"indent":[]}},{"type":"text","value":" on the border of the board are not flipped to ","position":{"start":{"line":1518,"column":74,"offset":40969},"end":{"line":1518,"column":121,"offset":41016},"indent":[]}},{"type":"inlineCode","value":"'X'","position":{"start":{"line":1518,"column":121,"offset":41016},"end":{"line":1518,"column":126,"offset":41021},"indent":[]}},{"type":"text","value":". Any ","position":{"start":{"line":1518,"column":126,"offset":41021},"end":{"line":1518,"column":132,"offset":41027},"indent":[]}},{"type":"inlineCode","value":"'O'","position":{"start":{"line":1518,"column":132,"offset":41027},"end":{"line":1518,"column":137,"offset":41032},"indent":[]}},{"type":"text","value":" that is not on the border and it is not connected to an ","position":{"start":{"line":1518,"column":137,"offset":41032},"end":{"line":1518,"column":194,"offset":41089},"indent":[]}},{"type":"inlineCode","value":"'O'","position":{"start":{"line":1518,"column":194,"offset":41089},"end":{"line":1518,"column":199,"offset":41094},"indent":[]}},{"type":"text","value":" on the border will be flipped to ","position":{"start":{"line":1518,"column":199,"offset":41094},"end":{"line":1518,"column":233,"offset":41128},"indent":[]}},{"type":"inlineCode","value":"'X'","position":{"start":{"line":1518,"column":233,"offset":41128},"end":{"line":1518,"column":238,"offset":41133},"indent":[]}},{"type":"text","value":". Two cells are connected if they are adjacent cells connected horizontally or vertically.","position":{"start":{"line":1518,"column":238,"offset":41133},"end":{"line":1518,"column":328,"offset":41223},"indent":[]}}],"position":{"start":{"line":1518,"column":1,"offset":40896},"end":{"line":1518,"column":328,"offset":41223},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution:","position":{"start":{"line":1520,"column":5,"offset":41229},"end":{"line":1520,"column":14,"offset":41238},"indent":[]}}],"position":{"start":{"line":1520,"column":1,"offset":41225},"end":{"line":1520,"column":14,"offset":41238},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Find all the ","position":{"start":{"line":1522,"column":1,"offset":41240},"end":{"line":1522,"column":14,"offset":41253},"indent":[]}},{"type":"inlineCode","value":"O","position":{"start":{"line":1522,"column":14,"offset":41253},"end":{"line":1522,"column":17,"offset":41256},"indent":[]}},{"type":"text","value":"s that are connected to the ","position":{"start":{"line":1522,"column":17,"offset":41256},"end":{"line":1522,"column":45,"offset":41284},"indent":[]}},{"type":"inlineCode","value":"O","position":{"start":{"line":1522,"column":45,"offset":41284},"end":{"line":1522,"column":48,"offset":41287},"indent":[]}},{"type":"text","value":"s on the border, change them to ","position":{"start":{"line":1522,"column":48,"offset":41287},"end":{"line":1522,"column":80,"offset":41319},"indent":[]}},{"type":"inlineCode","value":"#","position":{"start":{"line":1522,"column":80,"offset":41319},"end":{"line":1522,"column":83,"offset":41322},"indent":[]}},{"type":"text","value":". Then scan the board, change ","position":{"start":{"line":1522,"column":83,"offset":41322},"end":{"line":1522,"column":113,"offset":41352},"indent":[]}},{"type":"inlineCode","value":"O","position":{"start":{"line":1522,"column":113,"offset":41352},"end":{"line":1522,"column":116,"offset":41355},"indent":[]}},{"type":"text","value":" to ","position":{"start":{"line":1522,"column":116,"offset":41355},"end":{"line":1522,"column":120,"offset":41359},"indent":[]}},{"type":"inlineCode","value":"X","position":{"start":{"line":1522,"column":120,"offset":41359},"end":{"line":1522,"column":123,"offset":41362},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":1522,"column":123,"offset":41362},"end":{"line":1522,"column":128,"offset":41367},"indent":[]}},{"type":"inlineCode","value":"#","position":{"start":{"line":1522,"column":128,"offset":41367},"end":{"line":1522,"column":131,"offset":41370},"indent":[]}},{"type":"text","value":" back to ","position":{"start":{"line":1522,"column":131,"offset":41370},"end":{"line":1522,"column":140,"offset":41379},"indent":[]}},{"type":"inlineCode","value":"O","position":{"start":{"line":1522,"column":140,"offset":41379},"end":{"line":1522,"column":143,"offset":41382},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1522,"column":143,"offset":41382},"end":{"line":1522,"column":144,"offset":41383},"indent":[]}}],"position":{"start":{"line":1522,"column":1,"offset":41240},"end":{"line":1522,"column":144,"offset":41383},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The process of finding the connected ","position":{"start":{"line":1524,"column":1,"offset":41385},"end":{"line":1524,"column":38,"offset":41422},"indent":[]}},{"type":"inlineCode","value":"O","position":{"start":{"line":1524,"column":38,"offset":41422},"end":{"line":1524,"column":41,"offset":41425},"indent":[]}},{"type":"text","value":"s is just like tree traversal. ","position":{"start":{"line":1524,"column":41,"offset":41425},"end":{"line":1524,"column":72,"offset":41456},"indent":[]}},{"type":"inlineCode","value":"O","position":{"start":{"line":1524,"column":72,"offset":41456},"end":{"line":1524,"column":75,"offset":41459},"indent":[]}},{"type":"text","value":"s on the border are the same level. Their children are the second level. And so on.","position":{"start":{"line":1524,"column":75,"offset":41459},"end":{"line":1524,"column":158,"offset":41542},"indent":[]}}],"position":{"start":{"line":1524,"column":1,"offset":41385},"end":{"line":1524,"column":158,"offset":41542},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"So both BFS and DFS are good. I prefer BFS when pruning is not needed in favor of its readability.","position":{"start":{"line":1526,"column":1,"offset":41544},"end":{"line":1526,"column":99,"offset":41642},"indent":[]}}],"position":{"start":{"line":1526,"column":1,"offset":41544},"end":{"line":1526,"column":99,"offset":41642},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {character[][]} board\n * @return {void} Do not return anything, modify board in-place instead.\n */\nlet solve = function (board) {\n    const height = board.length;\n    if (height <= 1) {\n        return;\n    }\n    const width = board[0].length;\n    if (width <= 1) {\n        return;\n    }\n\n    const rowend = height - 1;\n    const colend = width - 1;\n\n    const queue = [];\n\n    for (let row = 0; row < height; row++) {\n        if (board[row][0] === 'O') {\n            board[row][0] = '#';\n            queue.push(row, 0);\n        }\n        if (board[row][colend] === 'O') {\n            board[row][colend] = '#';\n            queue.push(row, colend);\n        }\n    }\n\n    for (let col = 0; col < width; col++) {\n        if (board[0][col] === 'O') {\n            board[0][col] = '#';\n            queue.push(0, col);\n        }\n        if (board[rowend][col] === 'O') {\n            board[rowend][col] = '#';\n            queue.push(rowend, col);\n        }\n    }\n\n    while (queue.length > 0) {\n        const row = queue.shift();\n        const col = queue.shift();\n        if (row < rowend && board[row + 1][col] === 'O') {\n            board[row + 1][col] = '#';\n            queue.push(row + 1, col);\n        }\n        if (row > 0 && board[row - 1][col] === 'O') {\n            board[row - 1][col] = '#';\n            queue.push(row - 1, col);\n        }\n        if (board[row][col + 1] === 'O') {\n            board[row][col + 1] = '#';\n            queue.push(row, col + 1);\n        }\n        if (board[row][col - 1] === 'O') {\n            board[row][col - 1] = '#';\n            queue.push(row, col - 1);\n        }\n    }\n\n    for (let row = 0; row < height; row++) {\n        for (let col = 0; col < width; col++) {\n            if (board[row][col] === '#') {\n                board[row][col] = 'O';\n            } else if (board[row][col] === 'O') {\n                board[row][col] = 'X';\n            }\n        }\n    }\n};","position":{"start":{"line":1528,"column":1,"offset":41644},"end":{"line":1601,"column":4,"offset":43573},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1603,"column":1,"offset":43575},"end":{"line":1603,"column":4,"offset":43578},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Depth-first Search\": ","position":{"start":{"line":1605,"column":1,"offset":43580},"end":{"line":1607,"column":23,"offset":43637},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/depth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/depth-first-search","position":{"start":{"line":1607,"column":23,"offset":43637},"end":{"line":1607,"column":66,"offset":43680},"indent":[]}}],"position":{"start":{"line":1607,"column":23,"offset":43637},"end":{"line":1607,"column":66,"offset":43680},"indent":[]}},{"type":"text","value":"\n\"Breadth-first Search\": ","position":{"start":{"line":1607,"column":66,"offset":43680},"end":{"line":1608,"column":25,"offset":43705},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/breadth-first-search","children":[{"type":"text","value":"https://leetcode.com/tag/breadth-first-search","position":{"start":{"line":1608,"column":25,"offset":43705},"end":{"line":1608,"column":70,"offset":43750},"indent":[]}}],"position":{"start":{"line":1608,"column":25,"offset":43705},"end":{"line":1608,"column":70,"offset":43750},"indent":[]}},{"type":"text","value":"\n\"Graph\": ","position":{"start":{"line":1608,"column":70,"offset":43750},"end":{"line":1609,"column":10,"offset":43760},"indent":[1]}},{"type":"link","title":null,"url":"https://leetcode.com/tag/graph","children":[{"type":"text","value":"https://leetcode.com/tag/graph","position":{"start":{"line":1609,"column":10,"offset":43760},"end":{"line":1609,"column":40,"offset":43790},"indent":[]}}],"position":{"start":{"line":1609,"column":10,"offset":43760},"end":{"line":1609,"column":40,"offset":43790},"indent":[]}},{"type":"text","value":"\nSimilar Questions:\n\"Copy List with Random Pointer\": ","position":{"start":{"line":1609,"column":40,"offset":43790},"end":{"line":1611,"column":34,"offset":43843},"indent":[1,1]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/copy-list-with-random-pointer","children":[{"type":"text","value":"https://leetcode.com/problems/copy-list-with-random-pointer","position":{"start":{"line":1611,"column":34,"offset":43843},"end":{"line":1611,"column":93,"offset":43902},"indent":[]}}],"position":{"start":{"line":1611,"column":34,"offset":43843},"end":{"line":1611,"column":93,"offset":43902},"indent":[]}}],"position":{"start":{"line":1605,"column":1,"offset":43580},"end":{"line":1611,"column":93,"offset":43902},"indent":[1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":1613,"column":1,"offset":43904},"end":{"line":1613,"column":4,"offset":43907},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#133-clone-graphhttpsleetcodecomproblemsclone-graphdescription","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":1615,"column":2,"offset":43910},"end":{"line":1615,"column":142,"offset":44050},"indent":[]}}],"position":{"start":{"line":1615,"column":1,"offset":43909},"end":{"line":1615,"column":207,"offset":44115},"indent":[]}}],"position":{"start":{"line":1615,"column":1,"offset":43909},"end":{"line":1615,"column":207,"offset":44115},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":1617,"column":4,"offset":44120},"end":{"line":1617,"column":6,"offset":44122},"indent":[]}},{"type":"link","title":null,"url":"https://leetcode.com/problems/clone-graph/description/","children":[{"type":"text","value":"133. Clone Graph","position":{"start":{"line":1617,"column":7,"offset":44123},"end":{"line":1617,"column":23,"offset":44139},"indent":[]}}],"position":{"start":{"line":1617,"column":6,"offset":44122},"end":{"line":1617,"column":80,"offset":44196},"indent":[]}}],"position":{"start":{"line":1617,"column":1,"offset":44117},"end":{"line":1617,"column":80,"offset":44196},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Problem:","position":{"start":{"line":1619,"column":5,"offset":44202},"end":{"line":1619,"column":13,"offset":44210},"indent":[]}}],"position":{"start":{"line":1619,"column":1,"offset":44198},"end":{"line":1619,"column":13,"offset":44210},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given the head of a graph, return a deep copy (clone) of the graph. Each node in the graph contains a ","position":{"start":{"line":1621,"column":1,"offset":44212},"end":{"line":1621,"column":103,"offset":44314},"indent":[]}},{"type":"inlineCode","value":"label","position":{"start":{"line":1621,"column":103,"offset":44314},"end":{"line":1621,"column":110,"offset":44321},"indent":[]}},{"type":"text","value":" (","position":{"start":{"line":1621,"column":110,"offset":44321},"end":{"line":1621,"column":112,"offset":44323},"indent":[]}},{"type":"inlineCode","value":"int","position":{"start":{"line":1621,"column":112,"offset":44323},"end":{"line":1621,"column":117,"offset":44328},"indent":[]}},{"type":"text","value":") and a list (","position":{"start":{"line":1621,"column":117,"offset":44328},"end":{"line":1621,"column":131,"offset":44342},"indent":[]}},{"type":"inlineCode","value":"List[UndirectedGraphNode]","position":{"start":{"line":1621,"column":131,"offset":44342},"end":{"line":1621,"column":158,"offset":44369},"indent":[]}},{"type":"text","value":") of its ","position":{"start":{"line":1621,"column":158,"offset":44369},"end":{"line":1621,"column":167,"offset":44378},"indent":[]}},{"type":"inlineCode","value":"neighbors","position":{"start":{"line":1621,"column":167,"offset":44378},"end":{"line":1621,"column":178,"offset":44389},"indent":[]}},{"type":"text","value":". There is an edge between the given node and each of the nodes in its neighbors.","position":{"start":{"line":1621,"column":178,"offset":44389},"end":{"line":1621,"column":259,"offset":44470},"indent":[]}}],"position":{"start":{"line":1621,"column":1,"offset":44212},"end":{"line":1621,"column":259,"offset":44470},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"OJ's undirected graph serialization (so you can understand error output):","position":{"start":{"line":1623,"column":1,"offset":44472},"end":{"line":1623,"column":74,"offset":44545},"indent":[]}}],"position":{"start":{"line":1623,"column":1,"offset":44472},"end":{"line":1623,"column":74,"offset":44545},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Nodes are labeled uniquely.","position":{"start":{"line":1625,"column":1,"offset":44547},"end":{"line":1625,"column":28,"offset":44574},"indent":[]}}],"position":{"start":{"line":1625,"column":1,"offset":44547},"end":{"line":1625,"column":28,"offset":44574},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We use ","position":{"start":{"line":1627,"column":1,"offset":44576},"end":{"line":1627,"column":8,"offset":44583},"indent":[]}},{"type":"inlineCode","value":"#","position":{"start":{"line":1627,"column":8,"offset":44583},"end":{"line":1627,"column":11,"offset":44586},"indent":[]}},{"type":"text","value":" as a separator for each node, and ","position":{"start":{"line":1627,"column":11,"offset":44586},"end":{"line":1627,"column":46,"offset":44621},"indent":[]}},{"type":"inlineCode","value":",","position":{"start":{"line":1627,"column":46,"offset":44621},"end":{"line":1627,"column":49,"offset":44624},"indent":[]}},{"type":"text","value":" as a separator for node label and each neighbor of the node.","position":{"start":{"line":1627,"column":49,"offset":44624},"end":{"line":1627,"column":110,"offset":44685},"indent":[]}}],"position":{"start":{"line":1627,"column":1,"offset":44576},"end":{"line":1627,"column":110,"offset":44685},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"As an example, consider the serialized graph ","position":{"start":{"line":1629,"column":1,"offset":44687},"end":{"line":1629,"column":46,"offset":44732},"indent":[]}},{"type":"inlineCode","value":"{0,1,2#1,2#2,2}","position":{"start":{"line":1629,"column":46,"offset":44732},"end":{"line":1629,"column":63,"offset":44749},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1629,"column":63,"offset":44749},"end":{"line":1629,"column":64,"offset":44750},"indent":[]}}],"position":{"start":{"line":1629,"column":1,"offset":44687},"end":{"line":1629,"column":64,"offset":44750},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The graph has a total of three nodes, and therefore contains three parts as separated by ","position":{"start":{"line":1631,"column":1,"offset":44752},"end":{"line":1631,"column":90,"offset":44841},"indent":[]}},{"type":"inlineCode","value":"#","position":{"start":{"line":1631,"column":90,"offset":44841},"end":{"line":1631,"column":93,"offset":44844},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1631,"column":93,"offset":44844},"end":{"line":1631,"column":94,"offset":44845},"indent":[]}}],"position":{"start":{"line":1631,"column":1,"offset":44752},"end":{"line":1631,"column":94,"offset":44845},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"First node is labeled as ","position":{"start":{"line":1633,"column":5,"offset":44851},"end":{"line":1633,"column":30,"offset":44876},"indent":[]}},{"type":"inlineCode","value":"0","position":{"start":{"line":1633,"column":30,"offset":44876},"end":{"line":1633,"column":33,"offset":44879},"indent":[]}},{"type":"text","value":". Connect node ","position":{"start":{"line":1633,"column":33,"offset":44879},"end":{"line":1633,"column":48,"offset":44894},"indent":[]}},{"type":"inlineCode","value":"0","position":{"start":{"line":1633,"column":48,"offset":44894},"end":{"line":1633,"column":51,"offset":44897},"indent":[]}},{"type":"text","value":" to both nodes ","position":{"start":{"line":1633,"column":51,"offset":44897},"end":{"line":1633,"column":66,"offset":44912},"indent":[]}},{"type":"inlineCode","value":"1","position":{"start":{"line":1633,"column":66,"offset":44912},"end":{"line":1633,"column":69,"offset":44915},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":1633,"column":69,"offset":44915},"end":{"line":1633,"column":74,"offset":44920},"indent":[]}},{"type":"inlineCode","value":"2","position":{"start":{"line":1633,"column":74,"offset":44920},"end":{"line":1633,"column":77,"offset":44923},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1633,"column":77,"offset":44923},"end":{"line":1633,"column":78,"offset":44924},"indent":[]}}],"position":{"start":{"line":1633,"column":5,"offset":44851},"end":{"line":1633,"column":78,"offset":44924},"indent":[]}}],"position":{"start":{"line":1633,"column":1,"offset":44847},"end":{"line":1633,"column":78,"offset":44924},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Second node is labeled as ","position":{"start":{"line":1634,"column":5,"offset":44929},"end":{"line":1634,"column":31,"offset":44955},"indent":[]}},{"type":"inlineCode","value":"1","position":{"start":{"line":1634,"column":31,"offset":44955},"end":{"line":1634,"column":34,"offset":44958},"indent":[]}},{"type":"text","value":". Connect node ","position":{"start":{"line":1634,"column":34,"offset":44958},"end":{"line":1634,"column":49,"offset":44973},"indent":[]}},{"type":"inlineCode","value":"1","position":{"start":{"line":1634,"column":49,"offset":44973},"end":{"line":1634,"column":52,"offset":44976},"indent":[]}},{"type":"text","value":" to node ","position":{"start":{"line":1634,"column":52,"offset":44976},"end":{"line":1634,"column":61,"offset":44985},"indent":[]}},{"type":"inlineCode","value":"2","position":{"start":{"line":1634,"column":61,"offset":44985},"end":{"line":1634,"column":64,"offset":44988},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1634,"column":64,"offset":44988},"end":{"line":1634,"column":65,"offset":44989},"indent":[]}}],"position":{"start":{"line":1634,"column":5,"offset":44929},"end":{"line":1634,"column":65,"offset":44989},"indent":[]}}],"position":{"start":{"line":1634,"column":1,"offset":44925},"end":{"line":1634,"column":65,"offset":44989},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Third node is labeled as ","position":{"start":{"line":1635,"column":5,"offset":44994},"end":{"line":1635,"column":30,"offset":45019},"indent":[]}},{"type":"inlineCode","value":"2","position":{"start":{"line":1635,"column":30,"offset":45019},"end":{"line":1635,"column":33,"offset":45022},"indent":[]}},{"type":"text","value":". Connect node ","position":{"start":{"line":1635,"column":33,"offset":45022},"end":{"line":1635,"column":48,"offset":45037},"indent":[]}},{"type":"inlineCode","value":"2","position":{"start":{"line":1635,"column":48,"offset":45037},"end":{"line":1635,"column":51,"offset":45040},"indent":[]}},{"type":"text","value":" to node ","position":{"start":{"line":1635,"column":51,"offset":45040},"end":{"line":1635,"column":60,"offset":45049},"indent":[]}},{"type":"inlineCode","value":"2","position":{"start":{"line":1635,"column":60,"offset":45049},"end":{"line":1635,"column":63,"offset":45052},"indent":[]}},{"type":"text","value":" (itself), thus forming a self-cycle.","position":{"start":{"line":1635,"column":63,"offset":45052},"end":{"line":1635,"column":100,"offset":45089},"indent":[]}}],"position":{"start":{"line":1635,"column":5,"offset":44994},"end":{"line":1635,"column":100,"offset":45089},"indent":[]}}],"position":{"start":{"line":1635,"column":1,"offset":44990},"end":{"line":1635,"column":100,"offset":45089},"indent":[]}}],"position":{"start":{"line":1633,"column":1,"offset":44847},"end":{"line":1635,"column":100,"offset":45089},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Visually, the graph looks like the following:","position":{"start":{"line":1637,"column":1,"offset":45091},"end":{"line":1637,"column":46,"offset":45136},"indent":[]}}],"position":{"start":{"line":1637,"column":1,"offset":45091},"end":{"line":1637,"column":46,"offset":45136},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"       1\n      / \\\n     /   \\\n    0 --- 2\n         / \\\n         \\_/","position":{"start":{"line":1639,"column":1,"offset":45138},"end":{"line":1647,"column":4,"offset":45214},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note","position":{"start":{"line":1649,"column":3,"offset":45218},"end":{"line":1649,"column":7,"offset":45222},"indent":[]}}],"position":{"start":{"line":1649,"column":1,"offset":45216},"end":{"line":1649,"column":9,"offset":45224},"indent":[]}},{"type":"text","value":": The information about the tree serialization is only meant so that you can understand error output if you get a wrong answer. You don't need to understand the serialization to solve the problem.","position":{"start":{"line":1649,"column":9,"offset":45224},"end":{"line":1649,"column":205,"offset":45420},"indent":[]}}],"position":{"start":{"line":1649,"column":1,"offset":45216},"end":{"line":1649,"column":205,"offset":45420},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution:","position":{"start":{"line":1651,"column":5,"offset":45426},"end":{"line":1651,"column":14,"offset":45435},"indent":[]}}],"position":{"start":{"line":1651,"column":1,"offset":45422},"end":{"line":1651,"column":14,"offset":45435},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"DFS. Cache the visited node before entering the next recursion.","position":{"start":{"line":1653,"column":1,"offset":45437},"end":{"line":1653,"column":64,"offset":45500},"indent":[]}}],"position":{"start":{"line":1653,"column":1,"offset":45437},"end":{"line":1653,"column":64,"offset":45500},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * Definition for undirected graph.\n * function UndirectedGraphNode(label) {\n *     this.label = label;\n *     this.neighbors = [];   // Array of UndirectedGraphNode\n * }\n */\n\n/**\n * @param {UndirectedGraphNode} graph\n * @return {UndirectedGraphNode}\n */\nlet cloneGraph = function (graph) {\n    const cache = {};\n    return _clone(graph);\n\n    function _clone(graph) {\n        if (!graph) {\n            return graph;\n        }\n        const label = graph.label;\n        if (!cache[label]) {\n            cache[label] = new UndirectedGraphNode(label);\n            cache[label].neighbors = graph.neighbors.map(_clone);\n        }\n        return cache[label];\n    }\n};","position":{"start":{"line":1655,"column":1,"offset":45502},"end":{"line":1684,"column":4,"offset":46179},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"image","title":"binary-tree-upside-down","url":"https://github.com/everthis/leetcode-js/blob/master/images/binary-tree-upside-down.webp","alt":"alt text","position":{"start":{"line":1686,"column":1,"offset":46181},"end":{"line":1686,"column":127,"offset":46307},"indent":[]}}],"position":{"start":{"line":1686,"column":1,"offset":46181},"end":{"line":1686,"column":127,"offset":46307},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {TreeNode}\n */\nconst upsideDownBinaryTree = function (root) {\n    let curr = root;\n    let next = null;\n    let temp = null;\n    let prev = null;\n    while (curr !== null) {\n        next = curr.left;\n        curr.left = temp;\n        temp = curr.right;\n        curr.right = prev;\n        prev = curr;\n        curr = next;\n    }\n    return prev;\n};\n\n// another\n\nconst upsideDownBinaryTree = function (root) {\n    if (root == null || root.left == null) {\n        return root;\n    }\n    const newRoot = upsideDownBinaryTree(root.left);\n    root.left.left = root.right;\n    root.left.right = root;\n    root.left = null;\n    root.right = null;\n    return newRoot;\n};","position":{"start":{"line":1688,"column":1,"offset":46309},"end":{"line":1729,"column":4,"offset":47161},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"image","title":"maximum-sum-circular-subarray","url":"https://github.com/everthis/leetcode-js/blob/master/images/maximum-sum-circular-subarray.png","alt":"alt text","position":{"start":{"line":1731,"column":1,"offset":47163},"end":{"line":1731,"column":138,"offset":47300},"indent":[]}}],"position":{"start":{"line":1731,"column":1,"offset":47163},"end":{"line":1731,"column":138,"offset":47300},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {number[]} A\n * @return {number}\n */\nconst maxSubarraySumCircular = function (A) {\n    let minSum = Infinity,\n        sum = 0,\n        maxSum = -Infinity,\n        curMax = 0,\n        curMin = 0;\n    for (let a of A) {\n        sum += a;\n        curMax = Math.max(curMax + a, a);\n        maxSum = Math.max(maxSum, curMax);\n        curMin = Math.min(curMin + a, a);\n        minSum = Math.min(minSum, curMin);\n    }\n    return maxSum > 0 ? Math.max(maxSum, sum - minSum) : maxSum;\n};","position":{"start":{"line":1733,"column":1,"offset":47302},"end":{"line":1753,"column":4,"offset":47805},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#balanced-binary-tree---leetcode","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":1755,"column":2,"offset":47808},"end":{"line":1755,"column":142,"offset":47948},"indent":[]}}],"position":{"start":{"line":1755,"column":1,"offset":47807},"end":{"line":1755,"column":177,"offset":47983},"indent":[]}}],"position":{"start":{"line":1755,"column":1,"offset":47807},"end":{"line":1755,"column":177,"offset":47983},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"âž¤ Balanced Binary Tree - LeetCode","position":{"start":{"line":1757,"column":3,"offset":47987},"end":{"line":1757,"column":36,"offset":48020},"indent":[]}}],"position":{"start":{"line":1757,"column":1,"offset":47985},"end":{"line":1757,"column":36,"offset":48020},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Level up your coding skills and quickly land a job. This is the best place to expand your knowledge and get prepared for your next interview.","position":{"start":{"line":1759,"column":3,"offset":48024},"end":{"line":1759,"column":144,"offset":48165},"indent":[]}}],"position":{"start":{"line":1759,"column":3,"offset":48024},"end":{"line":1759,"column":144,"offset":48165},"indent":[]}}],"position":{"start":{"line":1759,"column":1,"offset":48022},"end":{"line":1759,"column":144,"offset":48165},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a binary tree, determine if it is height-balanced.","position":{"start":{"line":1761,"column":1,"offset":48167},"end":{"line":1761,"column":57,"offset":48223},"indent":[]}}],"position":{"start":{"line":1761,"column":1,"offset":48167},"end":{"line":1761,"column":57,"offset":48223},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For this problem, a height-balanced binary tree is defined as:","position":{"start":{"line":1763,"column":1,"offset":48225},"end":{"line":1763,"column":63,"offset":48287},"indent":[]}}],"position":{"start":{"line":1763,"column":1,"offset":48225},"end":{"line":1763,"column":63,"offset":48287},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"a binary tree in which the left and right subtrees of ","position":{"start":{"line":1765,"column":3,"offset":48291},"end":{"line":1765,"column":57,"offset":48345},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"every","position":{"start":{"line":1765,"column":58,"offset":48346},"end":{"line":1765,"column":63,"offset":48351},"indent":[]}}],"position":{"start":{"line":1765,"column":57,"offset":48345},"end":{"line":1765,"column":64,"offset":48352},"indent":[]}},{"type":"text","value":" node differ in height by no more than 1.","position":{"start":{"line":1765,"column":64,"offset":48352},"end":{"line":1765,"column":105,"offset":48393},"indent":[]}}],"position":{"start":{"line":1765,"column":3,"offset":48291},"end":{"line":1765,"column":105,"offset":48393},"indent":[]}}],"position":{"start":{"line":1765,"column":1,"offset":48289},"end":{"line":1765,"column":105,"offset":48393},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":1767,"column":3,"offset":48397},"end":{"line":1767,"column":13,"offset":48407},"indent":[]}}],"position":{"start":{"line":1767,"column":1,"offset":48395},"end":{"line":1767,"column":15,"offset":48409},"indent":[]}}],"position":{"start":{"line":1767,"column":1,"offset":48395},"end":{"line":1767,"column":15,"offset":48409},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://assets.leetcode.com/uploads/2020/10/06/balance_1.jpg","alt":null,"position":{"start":{"line":1769,"column":1,"offset":48411},"end":{"line":1769,"column":66,"offset":48476},"indent":[]}}],"position":{"start":{"line":1769,"column":1,"offset":48411},"end":{"line":1769,"column":66,"offset":48476},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Input:","position":{"start":{"line":1771,"column":3,"offset":48480},"end":{"line":1771,"column":9,"offset":48486},"indent":[]}}],"position":{"start":{"line":1771,"column":1,"offset":48478},"end":{"line":1771,"column":11,"offset":48488},"indent":[]}},{"type":"text","value":" root = ","position":{"start":{"line":1771,"column":11,"offset":48488},"end":{"line":1771,"column":19,"offset":48496},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1771,"column":19,"offset":48496},"end":{"line":1771,"column":21,"offset":48498},"indent":[]}},{"type":"text","value":"3,9,20,null,null,15,7]\n","position":{"start":{"line":1771,"column":21,"offset":48498},"end":{"line":1772,"column":1,"offset":48521},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"Output:","position":{"start":{"line":1772,"column":3,"offset":48523},"end":{"line":1772,"column":10,"offset":48530},"indent":[]}}],"position":{"start":{"line":1772,"column":1,"offset":48521},"end":{"line":1772,"column":12,"offset":48532},"indent":[]}},{"type":"text","value":" true","position":{"start":{"line":1772,"column":12,"offset":48532},"end":{"line":1772,"column":17,"offset":48537},"indent":[]}}],"position":{"start":{"line":1771,"column":1,"offset":48478},"end":{"line":1772,"column":17,"offset":48537},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1774,"column":3,"offset":48541},"end":{"line":1774,"column":13,"offset":48551},"indent":[]}}],"position":{"start":{"line":1774,"column":1,"offset":48539},"end":{"line":1774,"column":15,"offset":48553},"indent":[]}}],"position":{"start":{"line":1774,"column":1,"offset":48539},"end":{"line":1774,"column":15,"offset":48553},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://assets.leetcode.com/uploads/2020/10/06/balance_2.jpg","alt":null,"position":{"start":{"line":1776,"column":1,"offset":48555},"end":{"line":1776,"column":66,"offset":48620},"indent":[]}}],"position":{"start":{"line":1776,"column":1,"offset":48555},"end":{"line":1776,"column":66,"offset":48620},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Input:","position":{"start":{"line":1778,"column":3,"offset":48624},"end":{"line":1778,"column":9,"offset":48630},"indent":[]}}],"position":{"start":{"line":1778,"column":1,"offset":48622},"end":{"line":1778,"column":11,"offset":48632},"indent":[]}},{"type":"text","value":" root = ","position":{"start":{"line":1778,"column":11,"offset":48632},"end":{"line":1778,"column":19,"offset":48640},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1778,"column":19,"offset":48640},"end":{"line":1778,"column":21,"offset":48642},"indent":[]}},{"type":"text","value":"1,2,2,3,3,null,null,4,4]\n","position":{"start":{"line":1778,"column":21,"offset":48642},"end":{"line":1779,"column":1,"offset":48667},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"Output:","position":{"start":{"line":1779,"column":3,"offset":48669},"end":{"line":1779,"column":10,"offset":48676},"indent":[]}}],"position":{"start":{"line":1779,"column":1,"offset":48667},"end":{"line":1779,"column":12,"offset":48678},"indent":[]}},{"type":"text","value":" false","position":{"start":{"line":1779,"column":12,"offset":48678},"end":{"line":1779,"column":18,"offset":48684},"indent":[]}}],"position":{"start":{"line":1778,"column":1,"offset":48622},"end":{"line":1779,"column":18,"offset":48684},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 3:","position":{"start":{"line":1781,"column":3,"offset":48688},"end":{"line":1781,"column":13,"offset":48698},"indent":[]}}],"position":{"start":{"line":1781,"column":1,"offset":48686},"end":{"line":1781,"column":15,"offset":48700},"indent":[]}}],"position":{"start":{"line":1781,"column":1,"offset":48686},"end":{"line":1781,"column":15,"offset":48700},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Input:","position":{"start":{"line":1783,"column":3,"offset":48704},"end":{"line":1783,"column":9,"offset":48710},"indent":[]}}],"position":{"start":{"line":1783,"column":1,"offset":48702},"end":{"line":1783,"column":11,"offset":48712},"indent":[]}},{"type":"text","value":" root = ","position":{"start":{"line":1783,"column":11,"offset":48712},"end":{"line":1783,"column":19,"offset":48720},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1783,"column":19,"offset":48720},"end":{"line":1783,"column":21,"offset":48722},"indent":[]}},{"type":"text","value":"]\n","position":{"start":{"line":1783,"column":21,"offset":48722},"end":{"line":1784,"column":1,"offset":48724},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"Output:","position":{"start":{"line":1784,"column":3,"offset":48726},"end":{"line":1784,"column":10,"offset":48733},"indent":[]}}],"position":{"start":{"line":1784,"column":1,"offset":48724},"end":{"line":1784,"column":12,"offset":48735},"indent":[]}},{"type":"text","value":" true","position":{"start":{"line":1784,"column":12,"offset":48735},"end":{"line":1784,"column":17,"offset":48740},"indent":[]}}],"position":{"start":{"line":1783,"column":1,"offset":48702},"end":{"line":1784,"column":17,"offset":48740},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Constraints:","position":{"start":{"line":1786,"column":3,"offset":48744},"end":{"line":1786,"column":15,"offset":48756},"indent":[]}}],"position":{"start":{"line":1786,"column":1,"offset":48742},"end":{"line":1786,"column":17,"offset":48758},"indent":[]}}],"position":{"start":{"line":1786,"column":1,"offset":48742},"end":{"line":1786,"column":17,"offset":48758},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The number of nodes in the tree is in the range ","position":{"start":{"line":1788,"column":3,"offset":48762},"end":{"line":1788,"column":51,"offset":48810},"indent":[]}},{"type":"inlineCode","value":"[0, 5000]","position":{"start":{"line":1788,"column":51,"offset":48810},"end":{"line":1788,"column":62,"offset":48821},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1788,"column":62,"offset":48821},"end":{"line":1788,"column":63,"offset":48822},"indent":[]}}],"position":{"start":{"line":1788,"column":3,"offset":48762},"end":{"line":1788,"column":63,"offset":48822},"indent":[]}}],"position":{"start":{"line":1788,"column":1,"offset":48760},"end":{"line":1788,"column":63,"offset":48822},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"-104 <= Node.val <= 104","position":{"start":{"line":1789,"column":3,"offset":48825},"end":{"line":1789,"column":28,"offset":48850},"indent":[]}}],"position":{"start":{"line":1789,"column":3,"offset":48825},"end":{"line":1789,"column":28,"offset":48850},"indent":[]}}],"position":{"start":{"line":1789,"column":1,"offset":48823},"end":{"line":1789,"column":28,"offset":48850},"indent":[]}}],"position":{"start":{"line":1788,"column":1,"offset":48760},"end":{"line":1789,"column":28,"offset":48850},"indent":[1]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://leetcode.com/problems/balanced-binary-tree/","children":[{"type":"text","value":"Source","position":{"start":{"line":1791,"column":2,"offset":48853},"end":{"line":1791,"column":8,"offset":48859},"indent":[]}}],"position":{"start":{"line":1791,"column":1,"offset":48852},"end":{"line":1791,"column":62,"offset":48913},"indent":[]}},{"type":"text","value":"# Convert Sorted Array to Binary Search Tree","position":{"start":{"line":1791,"column":62,"offset":48913},"end":{"line":1791,"column":106,"offset":48957},"indent":[]}}],"position":{"start":{"line":1791,"column":1,"offset":48852},"end":{"line":1791,"column":106,"offset":48957},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Level up your coding skills and quickly land a job. This is the best place to expand your knowledge and get prepared for your next interview.","position":{"start":{"line":1793,"column":3,"offset":48961},"end":{"line":1793,"column":144,"offset":49102},"indent":[]}}],"position":{"start":{"line":1793,"column":3,"offset":48961},"end":{"line":1793,"column":144,"offset":49102},"indent":[]}}],"position":{"start":{"line":1793,"column":1,"offset":48959},"end":{"line":1793,"column":144,"offset":49102},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given an array where elements are sorted in ascending order, convert it to a height balanced BST.","position":{"start":{"line":1795,"column":1,"offset":49104},"end":{"line":1795,"column":98,"offset":49201},"indent":[]}}],"position":{"start":{"line":1795,"column":1,"offset":49104},"end":{"line":1795,"column":98,"offset":49201},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For this problem, a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of ","position":{"start":{"line":1797,"column":1,"offset":49203},"end":{"line":1797,"column":119,"offset":49321},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"every","position":{"start":{"line":1797,"column":120,"offset":49322},"end":{"line":1797,"column":125,"offset":49327},"indent":[]}}],"position":{"start":{"line":1797,"column":119,"offset":49321},"end":{"line":1797,"column":126,"offset":49328},"indent":[]}},{"type":"text","value":" node never differ by more than 1.","position":{"start":{"line":1797,"column":126,"offset":49328},"end":{"line":1797,"column":160,"offset":49362},"indent":[]}}],"position":{"start":{"line":1797,"column":1,"offset":49203},"end":{"line":1797,"column":160,"offset":49362},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example:","position":{"start":{"line":1799,"column":3,"offset":49366},"end":{"line":1799,"column":11,"offset":49374},"indent":[]}}],"position":{"start":{"line":1799,"column":1,"offset":49364},"end":{"line":1799,"column":13,"offset":49376},"indent":[]}}],"position":{"start":{"line":1799,"column":1,"offset":49364},"end":{"line":1799,"column":13,"offset":49376},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given the sorted array: ","position":{"start":{"line":1801,"column":1,"offset":49378},"end":{"line":1801,"column":25,"offset":49402},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1801,"column":25,"offset":49402},"end":{"line":1801,"column":27,"offset":49404},"indent":[]}},{"type":"text","value":"-10,-3,0,5,9],","position":{"start":{"line":1801,"column":27,"offset":49404},"end":{"line":1801,"column":41,"offset":49418},"indent":[]}}],"position":{"start":{"line":1801,"column":1,"offset":49378},"end":{"line":1801,"column":41,"offset":49418},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"One possible answer is: ","position":{"start":{"line":1803,"column":1,"offset":49420},"end":{"line":1803,"column":25,"offset":49444},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1803,"column":25,"offset":49444},"end":{"line":1803,"column":27,"offset":49446},"indent":[]}},{"type":"text","value":"0,-3,9,-10,null,5], which represents the following height balanced BST:","position":{"start":{"line":1803,"column":27,"offset":49446},"end":{"line":1803,"column":98,"offset":49517},"indent":[]}}],"position":{"start":{"line":1803,"column":1,"offset":49420},"end":{"line":1803,"column":98,"offset":49517},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"  0\n / \\\\","position":{"start":{"line":1805,"column":1,"offset":49519},"end":{"line":1806,"column":10,"offset":49536},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"-","position":{"start":{"line":1808,"column":1,"offset":49538},"end":{"line":1808,"column":3,"offset":49540},"indent":[]}},{"type":"text","value":"3 9\n/ /\n","position":{"start":{"line":1808,"column":3,"offset":49540},"end":{"line":1810,"column":1,"offset":49548},"indent":[1,1]}},{"type":"text","value":"-","position":{"start":{"line":1810,"column":1,"offset":49548},"end":{"line":1810,"column":3,"offset":49550},"indent":[]}},{"type":"text","value":"10 5","position":{"start":{"line":1810,"column":3,"offset":49550},"end":{"line":1810,"column":7,"offset":49554},"indent":[]}}],"position":{"start":{"line":1808,"column":1,"offset":49538},"end":{"line":1810,"column":7,"offset":49554},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree/","children":[{"type":"text","value":"Source","position":{"start":{"line":1812,"column":2,"offset":49557},"end":{"line":1812,"column":8,"offset":49563},"indent":[]}}],"position":{"start":{"line":1812,"column":1,"offset":49556},"end":{"line":1812,"column":84,"offset":49639},"indent":[]}},{"type":"text","value":"# Delete Node in a BST","position":{"start":{"line":1812,"column":84,"offset":49639},"end":{"line":1812,"column":106,"offset":49661},"indent":[]}}],"position":{"start":{"line":1812,"column":1,"offset":49556},"end":{"line":1812,"column":106,"offset":49661},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Level up your coding skills and quickly land a job. This is the best place to expand your knowledge and get prepared for your next interview.","position":{"start":{"line":1814,"column":3,"offset":49665},"end":{"line":1814,"column":144,"offset":49806},"indent":[]}}],"position":{"start":{"line":1814,"column":3,"offset":49665},"end":{"line":1814,"column":144,"offset":49806},"indent":[]}}],"position":{"start":{"line":1814,"column":1,"offset":49663},"end":{"line":1814,"column":144,"offset":49806},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given a root node reference of a BST and a key, delete the node with the given key in the BST. Return the root node reference (possibly updated) of the BST.","position":{"start":{"line":1816,"column":1,"offset":49808},"end":{"line":1816,"column":157,"offset":49964},"indent":[]}}],"position":{"start":{"line":1816,"column":1,"offset":49808},"end":{"line":1816,"column":157,"offset":49964},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Basically, the deletion can be divided into two stages:","position":{"start":{"line":1818,"column":1,"offset":49966},"end":{"line":1818,"column":56,"offset":50021},"indent":[]}}],"position":{"start":{"line":1818,"column":1,"offset":49966},"end":{"line":1818,"column":56,"offset":50021},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Search for a node to remove.","position":{"start":{"line":1820,"column":5,"offset":50027},"end":{"line":1820,"column":33,"offset":50055},"indent":[]}}],"position":{"start":{"line":1820,"column":5,"offset":50027},"end":{"line":1820,"column":33,"offset":50055},"indent":[]}}],"position":{"start":{"line":1820,"column":1,"offset":50023},"end":{"line":1820,"column":33,"offset":50055},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"If the node is found, delete the node.","position":{"start":{"line":1821,"column":5,"offset":50060},"end":{"line":1821,"column":43,"offset":50098},"indent":[]}}],"position":{"start":{"line":1821,"column":5,"offset":50060},"end":{"line":1821,"column":43,"offset":50098},"indent":[]}}],"position":{"start":{"line":1821,"column":1,"offset":50056},"end":{"line":1821,"column":43,"offset":50098},"indent":[]}}],"position":{"start":{"line":1820,"column":1,"offset":50023},"end":{"line":1821,"column":43,"offset":50098},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Follow up:","position":{"start":{"line":1823,"column":3,"offset":50102},"end":{"line":1823,"column":13,"offset":50112},"indent":[]}}],"position":{"start":{"line":1823,"column":1,"offset":50100},"end":{"line":1823,"column":15,"offset":50114},"indent":[]}},{"type":"text","value":" Can you solve it with time complexity ","position":{"start":{"line":1823,"column":15,"offset":50114},"end":{"line":1823,"column":54,"offset":50153},"indent":[]}},{"type":"inlineCode","value":"O(height of tree)","position":{"start":{"line":1823,"column":54,"offset":50153},"end":{"line":1823,"column":73,"offset":50172},"indent":[]}},{"type":"text","value":"?","position":{"start":{"line":1823,"column":73,"offset":50172},"end":{"line":1823,"column":74,"offset":50173},"indent":[]}}],"position":{"start":{"line":1823,"column":1,"offset":50100},"end":{"line":1823,"column":74,"offset":50173},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 1:","position":{"start":{"line":1825,"column":3,"offset":50177},"end":{"line":1825,"column":13,"offset":50187},"indent":[]}}],"position":{"start":{"line":1825,"column":1,"offset":50175},"end":{"line":1825,"column":15,"offset":50189},"indent":[]}}],"position":{"start":{"line":1825,"column":1,"offset":50175},"end":{"line":1825,"column":15,"offset":50189},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://assets.leetcode.com/uploads/2020/09/04/del_node_1.jpg","alt":null,"position":{"start":{"line":1827,"column":1,"offset":50191},"end":{"line":1827,"column":67,"offset":50257},"indent":[]}}],"position":{"start":{"line":1827,"column":1,"offset":50191},"end":{"line":1827,"column":67,"offset":50257},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Input:","position":{"start":{"line":1829,"column":3,"offset":50261},"end":{"line":1829,"column":9,"offset":50267},"indent":[]}}],"position":{"start":{"line":1829,"column":1,"offset":50259},"end":{"line":1829,"column":11,"offset":50269},"indent":[]}},{"type":"text","value":" root = ","position":{"start":{"line":1829,"column":11,"offset":50269},"end":{"line":1829,"column":19,"offset":50277},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1829,"column":19,"offset":50277},"end":{"line":1829,"column":21,"offset":50279},"indent":[]}},{"type":"text","value":"5,3,6,2,4,null,7], key = 3\n","position":{"start":{"line":1829,"column":21,"offset":50279},"end":{"line":1830,"column":1,"offset":50306},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"Output:","position":{"start":{"line":1830,"column":3,"offset":50308},"end":{"line":1830,"column":10,"offset":50315},"indent":[]}}],"position":{"start":{"line":1830,"column":1,"offset":50306},"end":{"line":1830,"column":12,"offset":50317},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":1830,"column":12,"offset":50317},"end":{"line":1830,"column":13,"offset":50318},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1830,"column":13,"offset":50318},"end":{"line":1830,"column":15,"offset":50320},"indent":[]}},{"type":"text","value":"5,4,6,2,null,null,7]\n","position":{"start":{"line":1830,"column":15,"offset":50320},"end":{"line":1831,"column":1,"offset":50341},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"Explanation:","position":{"start":{"line":1831,"column":3,"offset":50343},"end":{"line":1831,"column":15,"offset":50355},"indent":[]}}],"position":{"start":{"line":1831,"column":1,"offset":50341},"end":{"line":1831,"column":17,"offset":50357},"indent":[]}},{"type":"text","value":" Given key to delete is 3. So we find the node with value 3 and delete it.\nOne valid answer is ","position":{"start":{"line":1831,"column":17,"offset":50357},"end":{"line":1832,"column":21,"offset":50452},"indent":[1]}},{"type":"text","value":"[","position":{"start":{"line":1832,"column":21,"offset":50452},"end":{"line":1832,"column":23,"offset":50454},"indent":[]}},{"type":"text","value":"5,4,6,2,null,null,7], shown in the above BST.\nPlease notice that another valid answer is ","position":{"start":{"line":1832,"column":23,"offset":50454},"end":{"line":1833,"column":44,"offset":50543},"indent":[1]}},{"type":"text","value":"[","position":{"start":{"line":1833,"column":44,"offset":50543},"end":{"line":1833,"column":46,"offset":50545},"indent":[]}},{"type":"text","value":"5,2,6,null,4,null,7] and it's also accepted.\n","position":{"start":{"line":1833,"column":46,"offset":50545},"end":{"line":1834,"column":1,"offset":50590},"indent":[1]}},{"type":"image","title":null,"url":"https://assets.leetcode.com/uploads/2020/09/04/del_node_supp.jpg","alt":null,"position":{"start":{"line":1834,"column":1,"offset":50590},"end":{"line":1834,"column":70,"offset":50659},"indent":[]}}],"position":{"start":{"line":1829,"column":1,"offset":50259},"end":{"line":1834,"column":70,"offset":50659},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1836,"column":3,"offset":50663},"end":{"line":1836,"column":13,"offset":50673},"indent":[]}}],"position":{"start":{"line":1836,"column":1,"offset":50661},"end":{"line":1836,"column":15,"offset":50675},"indent":[]}}],"position":{"start":{"line":1836,"column":1,"offset":50661},"end":{"line":1836,"column":15,"offset":50675},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Input:","position":{"start":{"line":1838,"column":3,"offset":50679},"end":{"line":1838,"column":9,"offset":50685},"indent":[]}}],"position":{"start":{"line":1838,"column":1,"offset":50677},"end":{"line":1838,"column":11,"offset":50687},"indent":[]}},{"type":"text","value":" root = ","position":{"start":{"line":1838,"column":11,"offset":50687},"end":{"line":1838,"column":19,"offset":50695},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1838,"column":19,"offset":50695},"end":{"line":1838,"column":21,"offset":50697},"indent":[]}},{"type":"text","value":"5,3,6,2,4,null,7], key = 0\n","position":{"start":{"line":1838,"column":21,"offset":50697},"end":{"line":1839,"column":1,"offset":50724},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"Output:","position":{"start":{"line":1839,"column":3,"offset":50726},"end":{"line":1839,"column":10,"offset":50733},"indent":[]}}],"position":{"start":{"line":1839,"column":1,"offset":50724},"end":{"line":1839,"column":12,"offset":50735},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":1839,"column":12,"offset":50735},"end":{"line":1839,"column":13,"offset":50736},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1839,"column":13,"offset":50736},"end":{"line":1839,"column":15,"offset":50738},"indent":[]}},{"type":"text","value":"5,3,6,2,4,null,7]\n","position":{"start":{"line":1839,"column":15,"offset":50738},"end":{"line":1840,"column":1,"offset":50756},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"Explanation:","position":{"start":{"line":1840,"column":3,"offset":50758},"end":{"line":1840,"column":15,"offset":50770},"indent":[]}}],"position":{"start":{"line":1840,"column":1,"offset":50756},"end":{"line":1840,"column":17,"offset":50772},"indent":[]}},{"type":"text","value":" The tree does not contain a node with value = 0.","position":{"start":{"line":1840,"column":17,"offset":50772},"end":{"line":1840,"column":66,"offset":50821},"indent":[]}}],"position":{"start":{"line":1838,"column":1,"offset":50677},"end":{"line":1840,"column":66,"offset":50821},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example 3:","position":{"start":{"line":1842,"column":3,"offset":50825},"end":{"line":1842,"column":13,"offset":50835},"indent":[]}}],"position":{"start":{"line":1842,"column":1,"offset":50823},"end":{"line":1842,"column":15,"offset":50837},"indent":[]}}],"position":{"start":{"line":1842,"column":1,"offset":50823},"end":{"line":1842,"column":15,"offset":50837},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Input:","position":{"start":{"line":1844,"column":3,"offset":50841},"end":{"line":1844,"column":9,"offset":50847},"indent":[]}}],"position":{"start":{"line":1844,"column":1,"offset":50839},"end":{"line":1844,"column":11,"offset":50849},"indent":[]}},{"type":"text","value":" root = ","position":{"start":{"line":1844,"column":11,"offset":50849},"end":{"line":1844,"column":19,"offset":50857},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1844,"column":19,"offset":50857},"end":{"line":1844,"column":21,"offset":50859},"indent":[]}},{"type":"text","value":"], key = 0\n","position":{"start":{"line":1844,"column":21,"offset":50859},"end":{"line":1845,"column":1,"offset":50870},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"Output:","position":{"start":{"line":1845,"column":3,"offset":50872},"end":{"line":1845,"column":10,"offset":50879},"indent":[]}}],"position":{"start":{"line":1845,"column":1,"offset":50870},"end":{"line":1845,"column":12,"offset":50881},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":1845,"column":12,"offset":50881},"end":{"line":1845,"column":13,"offset":50882},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":1845,"column":13,"offset":50882},"end":{"line":1845,"column":15,"offset":50884},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":1845,"column":15,"offset":50884},"end":{"line":1845,"column":16,"offset":50885},"indent":[]}}],"position":{"start":{"line":1844,"column":1,"offset":50839},"end":{"line":1845,"column":16,"offset":50885},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Constraints:","position":{"start":{"line":1847,"column":3,"offset":50889},"end":{"line":1847,"column":15,"offset":50901},"indent":[]}}],"position":{"start":{"line":1847,"column":1,"offset":50887},"end":{"line":1847,"column":17,"offset":50903},"indent":[]}}],"position":{"start":{"line":1847,"column":1,"offset":50887},"end":{"line":1847,"column":17,"offset":50903},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The number of nodes in the tree is in the range ","position":{"start":{"line":1849,"column":3,"offset":50907},"end":{"line":1849,"column":51,"offset":50955},"indent":[]}},{"type":"inlineCode","value":"[0, 104]","position":{"start":{"line":1849,"column":51,"offset":50955},"end":{"line":1849,"column":61,"offset":50965},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":1849,"column":61,"offset":50965},"end":{"line":1849,"column":62,"offset":50966},"indent":[]}}],"position":{"start":{"line":1849,"column":3,"offset":50907},"end":{"line":1849,"column":62,"offset":50966},"indent":[]}}],"position":{"start":{"line":1849,"column":1,"offset":50905},"end":{"line":1849,"column":62,"offset":50966},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"-105 <= Node.val <= 105","position":{"start":{"line":1850,"column":3,"offset":50969},"end":{"line":1850,"column":28,"offset":50994},"indent":[]}}],"position":{"start":{"line":1850,"column":3,"offset":50969},"end":{"line":1850,"column":28,"offset":50994},"indent":[]}}],"position":{"start":{"line":1850,"column":1,"offset":50967},"end":{"line":1850,"column":28,"offset":50994},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Each node has a ","position":{"start":{"line":1851,"column":3,"offset":50997},"end":{"line":1851,"column":19,"offset":51013},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"unique","position":{"start":{"line":1851,"column":21,"offset":51015},"end":{"line":1851,"column":27,"offset":51021},"indent":[]}}],"position":{"start":{"line":1851,"column":19,"offset":51013},"end":{"line":1851,"column":29,"offset":51023},"indent":[]}},{"type":"text","value":" value.","position":{"start":{"line":1851,"column":29,"offset":51023},"end":{"line":1851,"column":36,"offset":51030},"indent":[]}}],"position":{"start":{"line":1851,"column":3,"offset":50997},"end":{"line":1851,"column":36,"offset":51030},"indent":[]}}],"position":{"start":{"line":1851,"column":1,"offset":50995},"end":{"line":1851,"column":36,"offset":51030},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"root","position":{"start":{"line":1852,"column":3,"offset":51033},"end":{"line":1852,"column":9,"offset":51039},"indent":[]}},{"type":"text","value":" is a valid binary search tree.","position":{"start":{"line":1852,"column":9,"offset":51039},"end":{"line":1852,"column":40,"offset":51070},"indent":[]}}],"position":{"start":{"line":1852,"column":3,"offset":51033},"end":{"line":1852,"column":40,"offset":51070},"indent":[]}}],"position":{"start":{"line":1852,"column":1,"offset":51031},"end":{"line":1852,"column":40,"offset":51070},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"-105 <= key <= 105","position":{"start":{"line":1853,"column":3,"offset":51073},"end":{"line":1853,"column":23,"offset":51093},"indent":[]}}],"position":{"start":{"line":1853,"column":3,"offset":51073},"end":{"line":1853,"column":23,"offset":51093},"indent":[]}}],"position":{"start":{"line":1853,"column":1,"offset":51071},"end":{"line":1853,"column":23,"offset":51093},"indent":[]}}],"position":{"start":{"line":1849,"column":1,"offset":50905},"end":{"line":1853,"column":23,"offset":51093},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://leetcode.com/problems/delete-node-in-a-bst/","children":[{"type":"text","value":"Source","position":{"start":{"line":1855,"column":2,"offset":51096},"end":{"line":1855,"column":8,"offset":51102},"indent":[]}}],"position":{"start":{"line":1855,"column":1,"offset":51095},"end":{"line":1855,"column":62,"offset":51156},"indent":[]}},{"type":"image","title":"meeting-room-ii","url":"https://github.com/everthis/leetcode-js/blob/master/images/meeting-room-ii-0.jpg","alt":"alt text","position":{"start":{"line":1855,"column":62,"offset":51156},"end":{"line":1855,"column":173,"offset":51267},"indent":[]}},{"type":"text","value":"\n","position":{"start":{"line":1855,"column":173,"offset":51267},"end":{"line":1856,"column":1,"offset":51268},"indent":[1]}},{"type":"image","title":"meeting-room-ii","url":"https://github.com/everthis/leetcode-js/blob/master/images/meeting-room-ii-1.jpg","alt":"alt text","position":{"start":{"line":1856,"column":1,"offset":51268},"end":{"line":1856,"column":112,"offset":51379},"indent":[]}}],"position":{"start":{"line":1855,"column":1,"offset":51095},"end":{"line":1856,"column":112,"offset":51379},"indent":[1]}},{"type":"code","lang":"js","meta":null,"value":"/**\n * @param {number[][]} intervals\n * @return {number}\n */\nconst minMeetingRooms = function (intervals) {\n    const len = intervals.length;\n    const starts = new Array(len);\n    const ends = new Array(len);\n    for (let i = 0; i < len; i++) {\n        starts[i] = intervals[i][0];\n        ends[i] = intervals[i][1];\n    }\n    starts.sort((a, b) => a - b);\n    ends.sort((a, b) => a - b);\n    let rooms = 0;\n    let endsIdx = 0;\n    for (let i = 0; i < len; i++) {\n        if (starts[i] < ends[endsIdx]) rooms++;\n        else endsIdx++;\n    }\n    return rooms;\n};","position":{"start":{"line":1858,"column":1,"offset":51381},"end":{"line":1881,"column":4,"offset":51955},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"#-","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------","position":{"start":{"line":1883,"column":2,"offset":51958},"end":{"line":1883,"column":142,"offset":52098},"indent":[]}}],"position":{"start":{"line":1883,"column":1,"offset":51957},"end":{"line":1883,"column":147,"offset":52103},"indent":[]}}],"position":{"start":{"line":1883,"column":1,"offset":51957},"end":{"line":1883,"column":147,"offset":52103},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1884,"column":1,"offset":52104}}}}