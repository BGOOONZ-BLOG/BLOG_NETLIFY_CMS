{"expireTime":9007200904342769000,"key":"transformer-remark-markdown-ast-6c25c657d510ea169d4bb4828cd49bea--","val":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"Lorem ipsum","position":{"start":{"line":2,"column":4,"offset":4},"end":{"line":2,"column":15,"offset":15},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":15,"offset":15},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Python Cheat Sheet","position":{"start":{"line":4,"column":3,"offset":19},"end":{"line":4,"column":21,"offset":37},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":17},"end":{"line":4,"column":21,"offset":37},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Python Basics","position":{"start":{"line":6,"column":4,"offset":42},"end":{"line":6,"column":17,"offset":55},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":39},"end":{"line":6,"column":17,"offset":55},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Math Operators","position":{"start":{"line":8,"column":5,"offset":61},"end":{"line":8,"column":19,"offset":75},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":57},"end":{"line":8,"column":19,"offset":75},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"From ","position":{"start":{"line":10,"column":1,"offset":77},"end":{"line":10,"column":6,"offset":82},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"Highest","position":{"start":{"line":10,"column":8,"offset":84},"end":{"line":10,"column":15,"offset":91},"indent":[]}}],"position":{"start":{"line":10,"column":6,"offset":82},"end":{"line":10,"column":17,"offset":93},"indent":[]}},{"type":"text","value":" to ","position":{"start":{"line":10,"column":17,"offset":93},"end":{"line":10,"column":21,"offset":97},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"Lowest","position":{"start":{"line":10,"column":23,"offset":99},"end":{"line":10,"column":29,"offset":105},"indent":[]}}],"position":{"start":{"line":10,"column":21,"offset":97},"end":{"line":10,"column":31,"offset":107},"indent":[]}},{"type":"text","value":" precedence:","position":{"start":{"line":10,"column":31,"offset":107},"end":{"line":10,"column":43,"offset":119},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":77},"end":{"line":10,"column":43,"offset":119},"indent":[]}},{"type":"table","align":[null,null,null],"children":[{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Operators","position":{"start":{"line":12,"column":3,"offset":123},"end":{"line":12,"column":12,"offset":132},"indent":[]}}],"position":{"start":{"line":12,"column":3,"offset":123},"end":{"line":12,"column":12,"offset":132},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Operation","position":{"start":{"line":12,"column":15,"offset":135},"end":{"line":12,"column":24,"offset":144},"indent":[]}}],"position":{"start":{"line":12,"column":15,"offset":135},"end":{"line":12,"column":31,"offset":151},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Example","position":{"start":{"line":12,"column":34,"offset":154},"end":{"line":12,"column":41,"offset":161},"indent":[]}}],"position":{"start":{"line":12,"column":34,"offset":154},"end":{"line":12,"column":49,"offset":169},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":121},"end":{"line":12,"column":51,"offset":171},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"*","position":{"start":{"line":14,"column":3,"offset":225},"end":{"line":14,"column":5,"offset":227},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":14,"column":5,"offset":227},"end":{"line":14,"column":7,"offset":229},"indent":[]}}],"position":{"start":{"line":14,"column":3,"offset":225},"end":{"line":14,"column":12,"offset":234},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Exponent","position":{"start":{"line":14,"column":15,"offset":237},"end":{"line":14,"column":23,"offset":245},"indent":[]}}],"position":{"start":{"line":14,"column":15,"offset":237},"end":{"line":14,"column":31,"offset":253},"indent":[]}},{"type":"tableCell","children":[{"type":"inlineCode","value":"2 ** 3 = 8","position":{"start":{"line":14,"column":34,"offset":256},"end":{"line":14,"column":46,"offset":268},"indent":[]}}],"position":{"start":{"line":14,"column":34,"offset":256},"end":{"line":14,"column":49,"offset":271},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":223},"end":{"line":14,"column":51,"offset":273},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"%","position":{"start":{"line":15,"column":3,"offset":276},"end":{"line":15,"column":4,"offset":277},"indent":[]}}],"position":{"start":{"line":15,"column":3,"offset":276},"end":{"line":15,"column":12,"offset":285},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Modulus/Remaider","position":{"start":{"line":15,"column":15,"offset":288},"end":{"line":15,"column":31,"offset":304},"indent":[]}}],"position":{"start":{"line":15,"column":15,"offset":288},"end":{"line":15,"column":31,"offset":304},"indent":[]}},{"type":"tableCell","children":[{"type":"inlineCode","value":"22 % 8 = 6","position":{"start":{"line":15,"column":34,"offset":307},"end":{"line":15,"column":46,"offset":319},"indent":[]}}],"position":{"start":{"line":15,"column":34,"offset":307},"end":{"line":15,"column":49,"offset":322},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":274},"end":{"line":15,"column":51,"offset":324},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"//","position":{"start":{"line":16,"column":3,"offset":327},"end":{"line":16,"column":5,"offset":329},"indent":[]}}],"position":{"start":{"line":16,"column":3,"offset":327},"end":{"line":16,"column":12,"offset":336},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Integer division","position":{"start":{"line":16,"column":15,"offset":339},"end":{"line":16,"column":31,"offset":355},"indent":[]}}],"position":{"start":{"line":16,"column":15,"offset":339},"end":{"line":16,"column":31,"offset":355},"indent":[]}},{"type":"tableCell","children":[{"type":"inlineCode","value":"22 // 8 = 2","position":{"start":{"line":16,"column":34,"offset":358},"end":{"line":16,"column":47,"offset":371},"indent":[]}}],"position":{"start":{"line":16,"column":34,"offset":358},"end":{"line":16,"column":49,"offset":373},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":325},"end":{"line":16,"column":51,"offset":375},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"/","position":{"start":{"line":17,"column":3,"offset":378},"end":{"line":17,"column":4,"offset":379},"indent":[]}}],"position":{"start":{"line":17,"column":3,"offset":378},"end":{"line":17,"column":12,"offset":387},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Division","position":{"start":{"line":17,"column":15,"offset":390},"end":{"line":17,"column":23,"offset":398},"indent":[]}}],"position":{"start":{"line":17,"column":15,"offset":390},"end":{"line":17,"column":31,"offset":406},"indent":[]}},{"type":"tableCell","children":[{"type":"inlineCode","value":"22 / 8 = 2.75","position":{"start":{"line":17,"column":34,"offset":409},"end":{"line":17,"column":49,"offset":424},"indent":[]}}],"position":{"start":{"line":17,"column":34,"offset":409},"end":{"line":17,"column":49,"offset":424},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":376},"end":{"line":17,"column":51,"offset":426},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"*","position":{"start":{"line":18,"column":3,"offset":429},"end":{"line":18,"column":5,"offset":431},"indent":[]}}],"position":{"start":{"line":18,"column":3,"offset":429},"end":{"line":18,"column":12,"offset":438},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Multiplication","position":{"start":{"line":18,"column":15,"offset":441},"end":{"line":18,"column":29,"offset":455},"indent":[]}}],"position":{"start":{"line":18,"column":15,"offset":441},"end":{"line":18,"column":31,"offset":457},"indent":[]}},{"type":"tableCell","children":[{"type":"inlineCode","value":"3 * 3 = 9","position":{"start":{"line":18,"column":34,"offset":460},"end":{"line":18,"column":45,"offset":471},"indent":[]}}],"position":{"start":{"line":18,"column":34,"offset":460},"end":{"line":18,"column":49,"offset":475},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":427},"end":{"line":18,"column":51,"offset":477},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"-","position":{"start":{"line":19,"column":3,"offset":480},"end":{"line":19,"column":4,"offset":481},"indent":[]}}],"position":{"start":{"line":19,"column":3,"offset":480},"end":{"line":19,"column":12,"offset":489},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Subtraction","position":{"start":{"line":19,"column":15,"offset":492},"end":{"line":19,"column":26,"offset":503},"indent":[]}}],"position":{"start":{"line":19,"column":15,"offset":492},"end":{"line":19,"column":31,"offset":508},"indent":[]}},{"type":"tableCell","children":[{"type":"inlineCode","value":"5 - 2 = 3","position":{"start":{"line":19,"column":34,"offset":511},"end":{"line":19,"column":45,"offset":522},"indent":[]}}],"position":{"start":{"line":19,"column":34,"offset":511},"end":{"line":19,"column":49,"offset":526},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":478},"end":{"line":19,"column":51,"offset":528},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"+","position":{"start":{"line":20,"column":3,"offset":531},"end":{"line":20,"column":4,"offset":532},"indent":[]}}],"position":{"start":{"line":20,"column":3,"offset":531},"end":{"line":20,"column":12,"offset":540},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Addition","position":{"start":{"line":20,"column":15,"offset":543},"end":{"line":20,"column":23,"offset":551},"indent":[]}}],"position":{"start":{"line":20,"column":15,"offset":543},"end":{"line":20,"column":31,"offset":559},"indent":[]}},{"type":"tableCell","children":[{"type":"inlineCode","value":"2 + 2 = 4","position":{"start":{"line":20,"column":34,"offset":562},"end":{"line":20,"column":45,"offset":573},"indent":[]}}],"position":{"start":{"line":20,"column":34,"offset":562},"end":{"line":20,"column":49,"offset":577},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":529},"end":{"line":20,"column":51,"offset":579},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":121},"end":{"line":20,"column":51,"offset":579},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Examples of expressions in the interactive shell:","position":{"start":{"line":22,"column":1,"offset":581},"end":{"line":22,"column":50,"offset":630},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":581},"end":{"line":22,"column":50,"offset":630},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"2 + 3 * 6","position":{"start":{"line":24,"column":1,"offset":632},"end":{"line":26,"column":4,"offset":655},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"(2 + 3) * 6","position":{"start":{"line":28,"column":1,"offset":657},"end":{"line":30,"column":4,"offset":682},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"2 ** 8","position":{"start":{"line":32,"column":1,"offset":684},"end":{"line":34,"column":4,"offset":704},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"23 // 7","position":{"start":{"line":36,"column":1,"offset":706},"end":{"line":38,"column":4,"offset":727},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"23 % 7","position":{"start":{"line":40,"column":1,"offset":729},"end":{"line":42,"column":4,"offset":749},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"(5 - 1) * ((7 + 1) / (3 - 1))","position":{"start":{"line":44,"column":1,"offset":751},"end":{"line":46,"column":4,"offset":794},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Data Types","position":{"start":{"line":48,"column":5,"offset":800},"end":{"line":48,"column":15,"offset":810},"indent":[]}}],"position":{"start":{"line":48,"column":1,"offset":796},"end":{"line":48,"column":15,"offset":810},"indent":[]}},{"type":"table","align":[null,null],"children":[{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Data Type","position":{"start":{"line":50,"column":3,"offset":814},"end":{"line":50,"column":12,"offset":823},"indent":[]}}],"position":{"start":{"line":50,"column":3,"offset":814},"end":{"line":50,"column":25,"offset":836},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Examples","position":{"start":{"line":50,"column":28,"offset":839},"end":{"line":50,"column":36,"offset":847},"indent":[]}}],"position":{"start":{"line":50,"column":28,"offset":839},"end":{"line":50,"column":69,"offset":880},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":812},"end":{"line":50,"column":71,"offset":882},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Integers","position":{"start":{"line":52,"column":3,"offset":956},"end":{"line":52,"column":11,"offset":964},"indent":[]}}],"position":{"start":{"line":52,"column":3,"offset":956},"end":{"line":52,"column":25,"offset":978},"indent":[]}},{"type":"tableCell","children":[{"type":"inlineCode","value":"-2, -1, 0, 1, 2, 3, 4, 5","position":{"start":{"line":52,"column":28,"offset":981},"end":{"line":52,"column":54,"offset":1007},"indent":[]}}],"position":{"start":{"line":52,"column":28,"offset":981},"end":{"line":52,"column":69,"offset":1022},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":954},"end":{"line":52,"column":71,"offset":1024},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Floating-point numbers","position":{"start":{"line":53,"column":3,"offset":1027},"end":{"line":53,"column":25,"offset":1049},"indent":[]}}],"position":{"start":{"line":53,"column":3,"offset":1027},"end":{"line":53,"column":25,"offset":1049},"indent":[]}},{"type":"tableCell","children":[{"type":"inlineCode","value":"-1.25, -1.0, --0.5, 0.0, 0.5, 1.0, 1.25","position":{"start":{"line":53,"column":28,"offset":1052},"end":{"line":53,"column":69,"offset":1093},"indent":[]}}],"position":{"start":{"line":53,"column":28,"offset":1052},"end":{"line":53,"column":69,"offset":1093},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":1025},"end":{"line":53,"column":71,"offset":1095},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Strings","position":{"start":{"line":54,"column":3,"offset":1098},"end":{"line":54,"column":10,"offset":1105},"indent":[]}}],"position":{"start":{"line":54,"column":3,"offset":1098},"end":{"line":54,"column":25,"offset":1120},"indent":[]}},{"type":"tableCell","children":[{"type":"inlineCode","value":"'a', 'aa', 'aaa', 'Hello!', '11 cats'","position":{"start":{"line":54,"column":28,"offset":1123},"end":{"line":54,"column":67,"offset":1162},"indent":[]}}],"position":{"start":{"line":54,"column":28,"offset":1123},"end":{"line":54,"column":69,"offset":1164},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":1096},"end":{"line":54,"column":71,"offset":1166},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":812},"end":{"line":54,"column":71,"offset":1166},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"String Concatenation and Replication","position":{"start":{"line":56,"column":5,"offset":1172},"end":{"line":56,"column":41,"offset":1208},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":1168},"end":{"line":56,"column":41,"offset":1208},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"String concatenation:","position":{"start":{"line":58,"column":1,"offset":1210},"end":{"line":58,"column":22,"offset":1231},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":1210},"end":{"line":58,"column":22,"offset":1231},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"'Alice' 'Bob'","position":{"start":{"line":60,"column":1,"offset":1233},"end":{"line":62,"column":4,"offset":1260},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Note: Avoid ","position":{"start":{"line":64,"column":1,"offset":1262},"end":{"line":64,"column":13,"offset":1274},"indent":[]}},{"type":"inlineCode","value":"+","position":{"start":{"line":64,"column":13,"offset":1274},"end":{"line":64,"column":16,"offset":1277},"indent":[]}},{"type":"text","value":" operator for string concatenation. Prefer string formatting.","position":{"start":{"line":64,"column":16,"offset":1277},"end":{"line":64,"column":77,"offset":1338},"indent":[]}}],"position":{"start":{"line":64,"column":1,"offset":1262},"end":{"line":64,"column":77,"offset":1338},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"String Replication:","position":{"start":{"line":66,"column":1,"offset":1340},"end":{"line":66,"column":20,"offset":1359},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":1340},"end":{"line":66,"column":20,"offset":1359},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"'Alice' * 5","position":{"start":{"line":68,"column":1,"offset":1361},"end":{"line":70,"column":4,"offset":1386},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Variables","position":{"start":{"line":72,"column":5,"offset":1392},"end":{"line":72,"column":14,"offset":1401},"indent":[]}}],"position":{"start":{"line":72,"column":1,"offset":1388},"end":{"line":72,"column":14,"offset":1401},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can name a variable anything as long as it obeys the following three rules:","position":{"start":{"line":74,"column":1,"offset":1403},"end":{"line":74,"column":80,"offset":1482},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":1403},"end":{"line":74,"column":80,"offset":1482},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"It can be only one word.","position":{"start":{"line":76,"column":4,"offset":1487},"end":{"line":76,"column":28,"offset":1511},"indent":[]}}],"position":{"start":{"line":76,"column":4,"offset":1487},"end":{"line":76,"column":28,"offset":1511},"indent":[]}}],"position":{"start":{"line":76,"column":1,"offset":1484},"end":{"line":76,"column":28,"offset":1511},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"It can use only letters, numbers, and the underscore (","position":{"start":{"line":77,"column":4,"offset":1515},"end":{"line":77,"column":58,"offset":1569},"indent":[]}},{"type":"inlineCode","value":"_","position":{"start":{"line":77,"column":58,"offset":1569},"end":{"line":77,"column":61,"offset":1572},"indent":[]}},{"type":"text","value":") character.","position":{"start":{"line":77,"column":61,"offset":1572},"end":{"line":77,"column":73,"offset":1584},"indent":[]}}],"position":{"start":{"line":77,"column":4,"offset":1515},"end":{"line":77,"column":73,"offset":1584},"indent":[]}}],"position":{"start":{"line":77,"column":1,"offset":1512},"end":{"line":77,"column":73,"offset":1584},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"It can't begin with a number.","position":{"start":{"line":78,"column":4,"offset":1588},"end":{"line":78,"column":33,"offset":1617},"indent":[]}}],"position":{"start":{"line":78,"column":4,"offset":1588},"end":{"line":78,"column":33,"offset":1617},"indent":[]}}],"position":{"start":{"line":78,"column":1,"offset":1585},"end":{"line":78,"column":33,"offset":1617},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Variable name starting with an underscore (","position":{"start":{"line":79,"column":4,"offset":1621},"end":{"line":79,"column":47,"offset":1664},"indent":[]}},{"type":"inlineCode","value":"_","position":{"start":{"line":79,"column":47,"offset":1664},"end":{"line":79,"column":50,"offset":1667},"indent":[]}},{"type":"text","value":") are considered as \"unuseful`.","position":{"start":{"line":79,"column":50,"offset":1667},"end":{"line":79,"column":81,"offset":1698},"indent":[]}}],"position":{"start":{"line":79,"column":4,"offset":1621},"end":{"line":79,"column":81,"offset":1698},"indent":[]}}],"position":{"start":{"line":79,"column":1,"offset":1618},"end":{"line":79,"column":81,"offset":1698},"indent":[]}}],"position":{"start":{"line":76,"column":1,"offset":1484},"end":{"line":79,"column":81,"offset":1698},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Example:","position":{"start":{"line":81,"column":1,"offset":1700},"end":{"line":81,"column":9,"offset":1708},"indent":[]}}],"position":{"start":{"line":81,"column":1,"offset":1700},"end":{"line":81,"column":9,"offset":1708},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"spam = 'Hello'","position":{"start":{"line":83,"column":1,"offset":1710},"end":{"line":85,"column":4,"offset":1738},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"_spam = 'Hello'","position":{"start":{"line":87,"column":1,"offset":1740},"end":{"line":89,"column":4,"offset":1769},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"_spam","position":{"start":{"line":91,"column":1,"offset":1771},"end":{"line":91,"column":8,"offset":1778},"indent":[]}},{"type":"text","value":" should not be used again in the code.","position":{"start":{"line":91,"column":8,"offset":1778},"end":{"line":91,"column":46,"offset":1816},"indent":[]}}],"position":{"start":{"line":91,"column":1,"offset":1771},"end":{"line":91,"column":46,"offset":1816},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Comments","position":{"start":{"line":93,"column":5,"offset":1822},"end":{"line":93,"column":13,"offset":1830},"indent":[]}}],"position":{"start":{"line":93,"column":1,"offset":1818},"end":{"line":93,"column":13,"offset":1830},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Inline comment:","position":{"start":{"line":95,"column":1,"offset":1832},"end":{"line":95,"column":16,"offset":1847},"indent":[]}}],"position":{"start":{"line":95,"column":1,"offset":1832},"end":{"line":95,"column":16,"offset":1847},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"# This is a comment","position":{"start":{"line":97,"column":1,"offset":1849},"end":{"line":99,"column":4,"offset":1882},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Multiline comment:","position":{"start":{"line":101,"column":1,"offset":1884},"end":{"line":101,"column":19,"offset":1902},"indent":[]}}],"position":{"start":{"line":101,"column":1,"offset":1884},"end":{"line":101,"column":19,"offset":1902},"indent":[]}},{"type":"code","lang":"Python","meta":null,"value":"# This is a\n# multiline comment","position":{"start":{"line":103,"column":1,"offset":1904},"end":{"line":106,"column":4,"offset":1949},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Code with a comment:","position":{"start":{"line":108,"column":1,"offset":1951},"end":{"line":108,"column":21,"offset":1971},"indent":[]}}],"position":{"start":{"line":108,"column":1,"offset":1951},"end":{"line":108,"column":21,"offset":1971},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"a = 1  # initialization","position":{"start":{"line":110,"column":1,"offset":1973},"end":{"line":112,"column":4,"offset":2010},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Please note the two spaces in front of the comment.","position":{"start":{"line":114,"column":1,"offset":2012},"end":{"line":114,"column":52,"offset":2063},"indent":[]}}],"position":{"start":{"line":114,"column":1,"offset":2012},"end":{"line":114,"column":52,"offset":2063},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Function docstring:","position":{"start":{"line":116,"column":1,"offset":2065},"end":{"line":116,"column":20,"offset":2084},"indent":[]}}],"position":{"start":{"line":116,"column":1,"offset":2065},"end":{"line":116,"column":20,"offset":2084},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"def foo():\n    \"\"\"\n    This is a function docstring\n    You can also use:\n    ''' Function Docstring '''\n    \"\"\"","position":{"start":{"line":118,"column":1,"offset":2086},"end":{"line":125,"column":4,"offset":2212},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"The print Function","position":{"start":{"line":127,"column":5,"offset":2218},"end":{"line":127,"column":23,"offset":2236},"indent":[]}}],"position":{"start":{"line":127,"column":1,"offset":2214},"end":{"line":127,"column":23,"offset":2236},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"print('Hello world!')","position":{"start":{"line":129,"column":1,"offset":2238},"end":{"line":131,"column":4,"offset":2273},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"a = 1\nprint('Hello world!', a)","position":{"start":{"line":133,"column":1,"offset":2275},"end":{"line":136,"column":4,"offset":2319},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"The input Function","position":{"start":{"line":138,"column":5,"offset":2325},"end":{"line":138,"column":23,"offset":2343},"indent":[]}}],"position":{"start":{"line":138,"column":1,"offset":2321},"end":{"line":138,"column":23,"offset":2343},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Example Code:","position":{"start":{"line":140,"column":1,"offset":2345},"end":{"line":140,"column":14,"offset":2358},"indent":[]}}],"position":{"start":{"line":140,"column":1,"offset":2345},"end":{"line":140,"column":14,"offset":2358},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"print('What is your name?')   # ask for their name\nmyName = input()\nprint('It is good to meet you, {}'.format(myName))","position":{"start":{"line":142,"column":1,"offset":2360},"end":{"line":146,"column":4,"offset":2492},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"The len Function","position":{"start":{"line":148,"column":5,"offset":2498},"end":{"line":148,"column":21,"offset":2514},"indent":[]}}],"position":{"start":{"line":148,"column":1,"offset":2494},"end":{"line":148,"column":21,"offset":2514},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Evaluates to the integer value of the number of characters in a string:","position":{"start":{"line":150,"column":1,"offset":2516},"end":{"line":150,"column":72,"offset":2587},"indent":[]}}],"position":{"start":{"line":150,"column":1,"offset":2516},"end":{"line":150,"column":72,"offset":2587},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"len('hello')","position":{"start":{"line":152,"column":1,"offset":2589},"end":{"line":154,"column":4,"offset":2615},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Note: test of emptiness of strings, lists, dictionary, etc, should ","position":{"start":{"line":156,"column":1,"offset":2617},"end":{"line":156,"column":68,"offset":2684},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"not","position":{"start":{"line":156,"column":70,"offset":2686},"end":{"line":156,"column":73,"offset":2689},"indent":[]}}],"position":{"start":{"line":156,"column":68,"offset":2684},"end":{"line":156,"column":75,"offset":2691},"indent":[]}},{"type":"text","value":" use len, but prefer direct\nboolean evaluation.","position":{"start":{"line":156,"column":75,"offset":2691},"end":{"line":157,"column":20,"offset":2738},"indent":[1]}}],"position":{"start":{"line":156,"column":1,"offset":2617},"end":{"line":157,"column":20,"offset":2738},"indent":[1]}},{"type":"code","lang":"python","meta":null,"value":"a = [1, 2, 3]\nif a:\n    print(\"the list is not empty!\")","position":{"start":{"line":159,"column":1,"offset":2740},"end":{"line":163,"column":4,"offset":2809},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"The str, int, and float Functions","position":{"start":{"line":165,"column":5,"offset":2815},"end":{"line":165,"column":38,"offset":2848},"indent":[]}}],"position":{"start":{"line":165,"column":1,"offset":2811},"end":{"line":165,"column":38,"offset":2848},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Integer to String or Float:","position":{"start":{"line":167,"column":1,"offset":2850},"end":{"line":167,"column":28,"offset":2877},"indent":[]}}],"position":{"start":{"line":167,"column":1,"offset":2850},"end":{"line":167,"column":28,"offset":2877},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"str(29)","position":{"start":{"line":169,"column":1,"offset":2879},"end":{"line":171,"column":4,"offset":2900},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"print('I am {} years old.'.format(str(29)))","position":{"start":{"line":173,"column":1,"offset":2902},"end":{"line":175,"column":4,"offset":2959},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"str(-3.14)","position":{"start":{"line":177,"column":1,"offset":2961},"end":{"line":179,"column":4,"offset":2985},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Float to Integer:","position":{"start":{"line":181,"column":1,"offset":2987},"end":{"line":181,"column":18,"offset":3004},"indent":[]}}],"position":{"start":{"line":181,"column":1,"offset":2987},"end":{"line":181,"column":18,"offset":3004},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"int(7.7)","position":{"start":{"line":183,"column":1,"offset":3006},"end":{"line":185,"column":4,"offset":3028},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"int(7.7) + 1","position":{"start":{"line":187,"column":1,"offset":3030},"end":{"line":189,"column":4,"offset":3056},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Flow Control","position":{"start":{"line":191,"column":4,"offset":3061},"end":{"line":191,"column":16,"offset":3073},"indent":[]}}],"position":{"start":{"line":191,"column":1,"offset":3058},"end":{"line":191,"column":16,"offset":3073},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Comparison Operators","position":{"start":{"line":193,"column":5,"offset":3079},"end":{"line":193,"column":25,"offset":3099},"indent":[]}}],"position":{"start":{"line":193,"column":1,"offset":3075},"end":{"line":193,"column":25,"offset":3099},"indent":[]}},{"type":"table","align":[null,null],"children":[{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Operator","position":{"start":{"line":195,"column":3,"offset":3103},"end":{"line":195,"column":11,"offset":3111},"indent":[]}}],"position":{"start":{"line":195,"column":3,"offset":3103},"end":{"line":195,"column":11,"offset":3111},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Meaning","position":{"start":{"line":195,"column":14,"offset":3114},"end":{"line":195,"column":21,"offset":3121},"indent":[]}}],"position":{"start":{"line":195,"column":14,"offset":3114},"end":{"line":195,"column":38,"offset":3138},"indent":[]}}],"position":{"start":{"line":195,"column":1,"offset":3101},"end":{"line":195,"column":40,"offset":3140},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"==","position":{"start":{"line":197,"column":3,"offset":3183},"end":{"line":197,"column":7,"offset":3187},"indent":[]}}],"position":{"start":{"line":197,"column":3,"offset":3183},"end":{"line":197,"column":11,"offset":3191},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Equal to","position":{"start":{"line":197,"column":14,"offset":3194},"end":{"line":197,"column":22,"offset":3202},"indent":[]}}],"position":{"start":{"line":197,"column":14,"offset":3194},"end":{"line":197,"column":38,"offset":3218},"indent":[]}}],"position":{"start":{"line":197,"column":1,"offset":3181},"end":{"line":197,"column":40,"offset":3220},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"!=","position":{"start":{"line":198,"column":3,"offset":3223},"end":{"line":198,"column":7,"offset":3227},"indent":[]}}],"position":{"start":{"line":198,"column":3,"offset":3223},"end":{"line":198,"column":11,"offset":3231},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Not equal to","position":{"start":{"line":198,"column":14,"offset":3234},"end":{"line":198,"column":26,"offset":3246},"indent":[]}}],"position":{"start":{"line":198,"column":14,"offset":3234},"end":{"line":198,"column":38,"offset":3258},"indent":[]}}],"position":{"start":{"line":198,"column":1,"offset":3221},"end":{"line":198,"column":40,"offset":3260},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"<","position":{"start":{"line":199,"column":3,"offset":3263},"end":{"line":199,"column":6,"offset":3266},"indent":[]}}],"position":{"start":{"line":199,"column":3,"offset":3263},"end":{"line":199,"column":11,"offset":3271},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Less than","position":{"start":{"line":199,"column":14,"offset":3274},"end":{"line":199,"column":23,"offset":3283},"indent":[]}}],"position":{"start":{"line":199,"column":14,"offset":3274},"end":{"line":199,"column":38,"offset":3298},"indent":[]}}],"position":{"start":{"line":199,"column":1,"offset":3261},"end":{"line":199,"column":40,"offset":3300},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":">","position":{"start":{"line":200,"column":3,"offset":3303},"end":{"line":200,"column":6,"offset":3306},"indent":[]}}],"position":{"start":{"line":200,"column":3,"offset":3303},"end":{"line":200,"column":11,"offset":3311},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Greater Than","position":{"start":{"line":200,"column":14,"offset":3314},"end":{"line":200,"column":26,"offset":3326},"indent":[]}}],"position":{"start":{"line":200,"column":14,"offset":3314},"end":{"line":200,"column":38,"offset":3338},"indent":[]}}],"position":{"start":{"line":200,"column":1,"offset":3301},"end":{"line":200,"column":40,"offset":3340},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"<=","position":{"start":{"line":201,"column":3,"offset":3343},"end":{"line":201,"column":7,"offset":3347},"indent":[]}}],"position":{"start":{"line":201,"column":3,"offset":3343},"end":{"line":201,"column":11,"offset":3351},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Less than or Equal to","position":{"start":{"line":201,"column":14,"offset":3354},"end":{"line":201,"column":35,"offset":3375},"indent":[]}}],"position":{"start":{"line":201,"column":14,"offset":3354},"end":{"line":201,"column":38,"offset":3378},"indent":[]}}],"position":{"start":{"line":201,"column":1,"offset":3341},"end":{"line":201,"column":40,"offset":3380},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":">=","position":{"start":{"line":202,"column":3,"offset":3383},"end":{"line":202,"column":7,"offset":3387},"indent":[]}}],"position":{"start":{"line":202,"column":3,"offset":3383},"end":{"line":202,"column":11,"offset":3391},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Greater than or Equal to","position":{"start":{"line":202,"column":14,"offset":3394},"end":{"line":202,"column":38,"offset":3418},"indent":[]}}],"position":{"start":{"line":202,"column":14,"offset":3394},"end":{"line":202,"column":38,"offset":3418},"indent":[]}}],"position":{"start":{"line":202,"column":1,"offset":3381},"end":{"line":202,"column":40,"offset":3420},"indent":[]}}],"position":{"start":{"line":195,"column":1,"offset":3101},"end":{"line":202,"column":40,"offset":3420},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"These operators evaluate to True or False depending on the values you give them.","position":{"start":{"line":204,"column":1,"offset":3422},"end":{"line":204,"column":81,"offset":3502},"indent":[]}}],"position":{"start":{"line":204,"column":1,"offset":3422},"end":{"line":204,"column":81,"offset":3502},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Examples:","position":{"start":{"line":206,"column":1,"offset":3504},"end":{"line":206,"column":10,"offset":3513},"indent":[]}}],"position":{"start":{"line":206,"column":1,"offset":3504},"end":{"line":206,"column":10,"offset":3513},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"42 == 42","position":{"start":{"line":208,"column":1,"offset":3515},"end":{"line":210,"column":4,"offset":3537},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"40 == 42","position":{"start":{"line":212,"column":1,"offset":3539},"end":{"line":214,"column":4,"offset":3561},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"'hello' == 'hello'","position":{"start":{"line":216,"column":1,"offset":3563},"end":{"line":218,"column":4,"offset":3595},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"'hello' == 'Hello'","position":{"start":{"line":220,"column":1,"offset":3597},"end":{"line":222,"column":4,"offset":3629},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"'dog' != 'cat'","position":{"start":{"line":224,"column":1,"offset":3631},"end":{"line":226,"column":4,"offset":3659},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"42 == 42.0","position":{"start":{"line":228,"column":1,"offset":3661},"end":{"line":230,"column":4,"offset":3685},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"42 == '42'","position":{"start":{"line":232,"column":1,"offset":3687},"end":{"line":234,"column":4,"offset":3711},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Boolean evaluation","position":{"start":{"line":236,"column":5,"offset":3717},"end":{"line":236,"column":23,"offset":3735},"indent":[]}}],"position":{"start":{"line":236,"column":1,"offset":3713},"end":{"line":236,"column":23,"offset":3735},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Never use ","position":{"start":{"line":238,"column":1,"offset":3737},"end":{"line":238,"column":11,"offset":3747},"indent":[]}},{"type":"inlineCode","value":"==","position":{"start":{"line":238,"column":11,"offset":3747},"end":{"line":238,"column":15,"offset":3751},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":238,"column":15,"offset":3751},"end":{"line":238,"column":19,"offset":3755},"indent":[]}},{"type":"inlineCode","value":"!=","position":{"start":{"line":238,"column":19,"offset":3755},"end":{"line":238,"column":23,"offset":3759},"indent":[]}},{"type":"text","value":" operator to evaluate boolean operation. Use the ","position":{"start":{"line":238,"column":23,"offset":3759},"end":{"line":238,"column":72,"offset":3808},"indent":[]}},{"type":"inlineCode","value":"is","position":{"start":{"line":238,"column":72,"offset":3808},"end":{"line":238,"column":76,"offset":3812},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":238,"column":76,"offset":3812},"end":{"line":238,"column":80,"offset":3816},"indent":[]}},{"type":"inlineCode","value":"is not","position":{"start":{"line":238,"column":80,"offset":3816},"end":{"line":238,"column":88,"offset":3824},"indent":[]}},{"type":"text","value":" operators,\nor use implicit boolean evaluation.","position":{"start":{"line":238,"column":88,"offset":3824},"end":{"line":239,"column":36,"offset":3871},"indent":[1]}}],"position":{"start":{"line":238,"column":1,"offset":3737},"end":{"line":239,"column":36,"offset":3871},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"NO (even if they are valid Python):","position":{"start":{"line":241,"column":1,"offset":3873},"end":{"line":241,"column":36,"offset":3908},"indent":[]}}],"position":{"start":{"line":241,"column":1,"offset":3873},"end":{"line":241,"column":36,"offset":3908},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"True == True","position":{"start":{"line":243,"column":1,"offset":3910},"end":{"line":245,"column":4,"offset":3936},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"True != False","position":{"start":{"line":247,"column":1,"offset":3938},"end":{"line":249,"column":4,"offset":3965},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"YES (even if they are valid Python):","position":{"start":{"line":251,"column":1,"offset":3967},"end":{"line":251,"column":37,"offset":4003},"indent":[]}}],"position":{"start":{"line":251,"column":1,"offset":3967},"end":{"line":251,"column":37,"offset":4003},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"True is True","position":{"start":{"line":253,"column":1,"offset":4005},"end":{"line":255,"column":4,"offset":4031},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"True is not False","position":{"start":{"line":257,"column":1,"offset":4033},"end":{"line":259,"column":4,"offset":4064},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"These statements are equivalent:","position":{"start":{"line":261,"column":1,"offset":4066},"end":{"line":261,"column":33,"offset":4098},"indent":[]}}],"position":{"start":{"line":261,"column":1,"offset":4066},"end":{"line":261,"column":33,"offset":4098},"indent":[]}},{"type":"code","lang":"Python","meta":null,"value":"if a is True:\n   pass\nif a is not False:\n   pass\nif a:\n   pass","position":{"start":{"line":263,"column":1,"offset":4100},"end":{"line":270,"column":4,"offset":4176},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"And these as well:","position":{"start":{"line":272,"column":1,"offset":4178},"end":{"line":272,"column":19,"offset":4196},"indent":[]}}],"position":{"start":{"line":272,"column":1,"offset":4178},"end":{"line":272,"column":19,"offset":4196},"indent":[]}},{"type":"code","lang":"Python","meta":null,"value":"if a is False:\n   pass\nif a is not True:\n   pass\nif not a:\n   pass","position":{"start":{"line":274,"column":1,"offset":4198},"end":{"line":281,"column":4,"offset":4278},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Boolean Operators","position":{"start":{"line":283,"column":5,"offset":4284},"end":{"line":283,"column":22,"offset":4301},"indent":[]}}],"position":{"start":{"line":283,"column":1,"offset":4280},"end":{"line":283,"column":22,"offset":4301},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"There are three Boolean operators: and, or, and not.","position":{"start":{"line":285,"column":1,"offset":4303},"end":{"line":285,"column":53,"offset":4355},"indent":[]}}],"position":{"start":{"line":285,"column":1,"offset":4303},"end":{"line":285,"column":53,"offset":4355},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":287,"column":1,"offset":4357},"end":{"line":287,"column":5,"offset":4361},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"and","position":{"start":{"line":287,"column":6,"offset":4362},"end":{"line":287,"column":9,"offset":4365},"indent":[]}}],"position":{"start":{"line":287,"column":5,"offset":4361},"end":{"line":287,"column":10,"offset":4366},"indent":[]}},{"type":"text","value":" Operator's ","position":{"start":{"line":287,"column":10,"offset":4366},"end":{"line":287,"column":22,"offset":4378},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Truth","position":{"start":{"line":287,"column":23,"offset":4379},"end":{"line":287,"column":28,"offset":4384},"indent":[]}}],"position":{"start":{"line":287,"column":22,"offset":4378},"end":{"line":287,"column":29,"offset":4385},"indent":[]}},{"type":"text","value":" Table:","position":{"start":{"line":287,"column":29,"offset":4385},"end":{"line":287,"column":36,"offset":4392},"indent":[]}}],"position":{"start":{"line":287,"column":1,"offset":4357},"end":{"line":287,"column":36,"offset":4392},"indent":[]}},{"type":"table","align":[null,null],"children":[{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Expression","position":{"start":{"line":289,"column":3,"offset":4396},"end":{"line":289,"column":13,"offset":4406},"indent":[]}}],"position":{"start":{"line":289,"column":3,"offset":4396},"end":{"line":289,"column":18,"offset":4411},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Evaluates to","position":{"start":{"line":289,"column":21,"offset":4414},"end":{"line":289,"column":33,"offset":4426},"indent":[]}}],"position":{"start":{"line":289,"column":21,"offset":4414},"end":{"line":289,"column":33,"offset":4426},"indent":[]}}],"position":{"start":{"line":289,"column":1,"offset":4394},"end":{"line":289,"column":35,"offset":4428},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"True and True","position":{"start":{"line":291,"column":3,"offset":4466},"end":{"line":291,"column":16,"offset":4479},"indent":[]}}],"position":{"start":{"line":291,"column":3,"offset":4466},"end":{"line":291,"column":18,"offset":4481},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"True","position":{"start":{"line":291,"column":21,"offset":4484},"end":{"line":291,"column":25,"offset":4488},"indent":[]}}],"position":{"start":{"line":291,"column":21,"offset":4484},"end":{"line":291,"column":33,"offset":4496},"indent":[]}}],"position":{"start":{"line":291,"column":1,"offset":4464},"end":{"line":291,"column":35,"offset":4498},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"True and False","position":{"start":{"line":292,"column":3,"offset":4501},"end":{"line":292,"column":17,"offset":4515},"indent":[]}}],"position":{"start":{"line":292,"column":3,"offset":4501},"end":{"line":292,"column":18,"offset":4516},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"False","position":{"start":{"line":292,"column":21,"offset":4519},"end":{"line":292,"column":26,"offset":4524},"indent":[]}}],"position":{"start":{"line":292,"column":21,"offset":4519},"end":{"line":292,"column":33,"offset":4531},"indent":[]}}],"position":{"start":{"line":292,"column":1,"offset":4499},"end":{"line":292,"column":35,"offset":4533},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"False and True","position":{"start":{"line":293,"column":3,"offset":4536},"end":{"line":293,"column":17,"offset":4550},"indent":[]}}],"position":{"start":{"line":293,"column":3,"offset":4536},"end":{"line":293,"column":18,"offset":4551},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"False","position":{"start":{"line":293,"column":21,"offset":4554},"end":{"line":293,"column":26,"offset":4559},"indent":[]}}],"position":{"start":{"line":293,"column":21,"offset":4554},"end":{"line":293,"column":33,"offset":4566},"indent":[]}}],"position":{"start":{"line":293,"column":1,"offset":4534},"end":{"line":293,"column":35,"offset":4568},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"False and False","position":{"start":{"line":294,"column":3,"offset":4571},"end":{"line":294,"column":18,"offset":4586},"indent":[]}}],"position":{"start":{"line":294,"column":3,"offset":4571},"end":{"line":294,"column":18,"offset":4586},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"False","position":{"start":{"line":294,"column":21,"offset":4589},"end":{"line":294,"column":26,"offset":4594},"indent":[]}}],"position":{"start":{"line":294,"column":21,"offset":4589},"end":{"line":294,"column":33,"offset":4601},"indent":[]}}],"position":{"start":{"line":294,"column":1,"offset":4569},"end":{"line":294,"column":35,"offset":4603},"indent":[]}}],"position":{"start":{"line":289,"column":1,"offset":4394},"end":{"line":294,"column":35,"offset":4603},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":296,"column":1,"offset":4605},"end":{"line":296,"column":5,"offset":4609},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"or","position":{"start":{"line":296,"column":6,"offset":4610},"end":{"line":296,"column":8,"offset":4612},"indent":[]}}],"position":{"start":{"line":296,"column":5,"offset":4609},"end":{"line":296,"column":9,"offset":4613},"indent":[]}},{"type":"text","value":" Operator's ","position":{"start":{"line":296,"column":9,"offset":4613},"end":{"line":296,"column":21,"offset":4625},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Truth","position":{"start":{"line":296,"column":22,"offset":4626},"end":{"line":296,"column":27,"offset":4631},"indent":[]}}],"position":{"start":{"line":296,"column":21,"offset":4625},"end":{"line":296,"column":28,"offset":4632},"indent":[]}},{"type":"text","value":" Table:","position":{"start":{"line":296,"column":28,"offset":4632},"end":{"line":296,"column":35,"offset":4639},"indent":[]}}],"position":{"start":{"line":296,"column":1,"offset":4605},"end":{"line":296,"column":35,"offset":4639},"indent":[]}},{"type":"table","align":[null,null],"children":[{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Expression","position":{"start":{"line":298,"column":3,"offset":4643},"end":{"line":298,"column":13,"offset":4653},"indent":[]}}],"position":{"start":{"line":298,"column":3,"offset":4643},"end":{"line":298,"column":17,"offset":4657},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Evaluates to","position":{"start":{"line":298,"column":20,"offset":4660},"end":{"line":298,"column":32,"offset":4672},"indent":[]}}],"position":{"start":{"line":298,"column":20,"offset":4660},"end":{"line":298,"column":32,"offset":4672},"indent":[]}}],"position":{"start":{"line":298,"column":1,"offset":4641},"end":{"line":298,"column":34,"offset":4674},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"True or True","position":{"start":{"line":300,"column":3,"offset":4711},"end":{"line":300,"column":15,"offset":4723},"indent":[]}}],"position":{"start":{"line":300,"column":3,"offset":4711},"end":{"line":300,"column":17,"offset":4725},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"True","position":{"start":{"line":300,"column":20,"offset":4728},"end":{"line":300,"column":24,"offset":4732},"indent":[]}}],"position":{"start":{"line":300,"column":20,"offset":4728},"end":{"line":300,"column":32,"offset":4740},"indent":[]}}],"position":{"start":{"line":300,"column":1,"offset":4709},"end":{"line":300,"column":34,"offset":4742},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"True or False","position":{"start":{"line":301,"column":3,"offset":4745},"end":{"line":301,"column":16,"offset":4758},"indent":[]}}],"position":{"start":{"line":301,"column":3,"offset":4745},"end":{"line":301,"column":17,"offset":4759},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"True","position":{"start":{"line":301,"column":20,"offset":4762},"end":{"line":301,"column":24,"offset":4766},"indent":[]}}],"position":{"start":{"line":301,"column":20,"offset":4762},"end":{"line":301,"column":32,"offset":4774},"indent":[]}}],"position":{"start":{"line":301,"column":1,"offset":4743},"end":{"line":301,"column":34,"offset":4776},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"False or True","position":{"start":{"line":302,"column":3,"offset":4779},"end":{"line":302,"column":16,"offset":4792},"indent":[]}}],"position":{"start":{"line":302,"column":3,"offset":4779},"end":{"line":302,"column":17,"offset":4793},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"True","position":{"start":{"line":302,"column":20,"offset":4796},"end":{"line":302,"column":24,"offset":4800},"indent":[]}}],"position":{"start":{"line":302,"column":20,"offset":4796},"end":{"line":302,"column":32,"offset":4808},"indent":[]}}],"position":{"start":{"line":302,"column":1,"offset":4777},"end":{"line":302,"column":34,"offset":4810},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"False or False","position":{"start":{"line":303,"column":3,"offset":4813},"end":{"line":303,"column":17,"offset":4827},"indent":[]}}],"position":{"start":{"line":303,"column":3,"offset":4813},"end":{"line":303,"column":17,"offset":4827},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"False","position":{"start":{"line":303,"column":20,"offset":4830},"end":{"line":303,"column":25,"offset":4835},"indent":[]}}],"position":{"start":{"line":303,"column":20,"offset":4830},"end":{"line":303,"column":32,"offset":4842},"indent":[]}}],"position":{"start":{"line":303,"column":1,"offset":4811},"end":{"line":303,"column":34,"offset":4844},"indent":[]}}],"position":{"start":{"line":298,"column":1,"offset":4641},"end":{"line":303,"column":34,"offset":4844},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":305,"column":1,"offset":4846},"end":{"line":305,"column":5,"offset":4850},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"not","position":{"start":{"line":305,"column":6,"offset":4851},"end":{"line":305,"column":9,"offset":4854},"indent":[]}}],"position":{"start":{"line":305,"column":5,"offset":4850},"end":{"line":305,"column":10,"offset":4855},"indent":[]}},{"type":"text","value":" Operator's ","position":{"start":{"line":305,"column":10,"offset":4855},"end":{"line":305,"column":22,"offset":4867},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Truth","position":{"start":{"line":305,"column":23,"offset":4868},"end":{"line":305,"column":28,"offset":4873},"indent":[]}}],"position":{"start":{"line":305,"column":22,"offset":4867},"end":{"line":305,"column":29,"offset":4874},"indent":[]}},{"type":"text","value":" Table:","position":{"start":{"line":305,"column":29,"offset":4874},"end":{"line":305,"column":36,"offset":4881},"indent":[]}}],"position":{"start":{"line":305,"column":1,"offset":4846},"end":{"line":305,"column":36,"offset":4881},"indent":[]}},{"type":"table","align":[null,null],"children":[{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Expression","position":{"start":{"line":307,"column":3,"offset":4885},"end":{"line":307,"column":13,"offset":4895},"indent":[]}}],"position":{"start":{"line":307,"column":3,"offset":4885},"end":{"line":307,"column":13,"offset":4895},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Evaluates to","position":{"start":{"line":307,"column":16,"offset":4898},"end":{"line":307,"column":28,"offset":4910},"indent":[]}}],"position":{"start":{"line":307,"column":16,"offset":4898},"end":{"line":307,"column":28,"offset":4910},"indent":[]}}],"position":{"start":{"line":307,"column":1,"offset":4883},"end":{"line":307,"column":30,"offset":4912},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"not True","position":{"start":{"line":309,"column":3,"offset":4945},"end":{"line":309,"column":11,"offset":4953},"indent":[]}}],"position":{"start":{"line":309,"column":3,"offset":4945},"end":{"line":309,"column":13,"offset":4955},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"False","position":{"start":{"line":309,"column":16,"offset":4958},"end":{"line":309,"column":21,"offset":4963},"indent":[]}}],"position":{"start":{"line":309,"column":16,"offset":4958},"end":{"line":309,"column":28,"offset":4970},"indent":[]}}],"position":{"start":{"line":309,"column":1,"offset":4943},"end":{"line":309,"column":30,"offset":4972},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"not False","position":{"start":{"line":310,"column":3,"offset":4975},"end":{"line":310,"column":12,"offset":4984},"indent":[]}}],"position":{"start":{"line":310,"column":3,"offset":4975},"end":{"line":310,"column":13,"offset":4985},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"True","position":{"start":{"line":310,"column":16,"offset":4988},"end":{"line":310,"column":20,"offset":4992},"indent":[]}}],"position":{"start":{"line":310,"column":16,"offset":4988},"end":{"line":310,"column":28,"offset":5000},"indent":[]}}],"position":{"start":{"line":310,"column":1,"offset":4973},"end":{"line":310,"column":30,"offset":5002},"indent":[]}}],"position":{"start":{"line":307,"column":1,"offset":4883},"end":{"line":310,"column":30,"offset":5002},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Mixing Boolean and Comparison Operators","position":{"start":{"line":312,"column":5,"offset":5008},"end":{"line":312,"column":44,"offset":5047},"indent":[]}}],"position":{"start":{"line":312,"column":1,"offset":5004},"end":{"line":312,"column":44,"offset":5047},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"(4 < 5) and (5 < 6)","position":{"start":{"line":314,"column":1,"offset":5049},"end":{"line":316,"column":4,"offset":5082},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"(4 < 5) and (9 < 6)","position":{"start":{"line":318,"column":1,"offset":5084},"end":{"line":320,"column":4,"offset":5117},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"(1 == 2) or (2 == 2)","position":{"start":{"line":322,"column":1,"offset":5119},"end":{"line":324,"column":4,"offset":5153},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"You can also use multiple Boolean operators in an expression, along with the comparison operators:","position":{"start":{"line":326,"column":1,"offset":5155},"end":{"line":326,"column":99,"offset":5253},"indent":[]}}],"position":{"start":{"line":326,"column":1,"offset":5155},"end":{"line":326,"column":99,"offset":5253},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"2 + 2 == 4 and not 2 + 2 == 5 and 2 * 2 == 2 + 2","position":{"start":{"line":328,"column":1,"offset":5255},"end":{"line":330,"column":4,"offset":5317},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"if Statements","position":{"start":{"line":332,"column":5,"offset":5323},"end":{"line":332,"column":18,"offset":5336},"indent":[]}}],"position":{"start":{"line":332,"column":1,"offset":5319},"end":{"line":332,"column":18,"offset":5336},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"if name == 'Alice':\n    print('Hi, Alice.')","position":{"start":{"line":334,"column":1,"offset":5338},"end":{"line":337,"column":4,"offset":5395},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"else Statements","position":{"start":{"line":339,"column":5,"offset":5401},"end":{"line":339,"column":20,"offset":5416},"indent":[]}}],"position":{"start":{"line":339,"column":1,"offset":5397},"end":{"line":339,"column":20,"offset":5416},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"name = 'Bob'\n\nif name == 'Alice':\n    print('Hi, Alice.')\nelse:\n    print('Hello, stranger.')","position":{"start":{"line":341,"column":1,"offset":5418},"end":{"line":348,"column":4,"offset":5525},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"elif Statements","position":{"start":{"line":350,"column":5,"offset":5531},"end":{"line":350,"column":20,"offset":5546},"indent":[]}}],"position":{"start":{"line":350,"column":1,"offset":5527},"end":{"line":350,"column":20,"offset":5546},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"name = 'Bob'\nage = 5\n\nif name == 'Alice':\n    print('Hi, Alice.')\nelif age < 12:\n    print('You are not Alice, kiddo.')","position":{"start":{"line":352,"column":1,"offset":5548},"end":{"line":360,"column":4,"offset":5681},"indent":[1,1,1,1,1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"name = 'Bob'\nage = 30\n\nif name == 'Alice':\n    print('Hi, Alice.')\nelif age < 12:\n    print('You are not Alice, kiddo.')\nelse:\n    print('You are neither Alice nor a little kid.')","position":{"start":{"line":362,"column":1,"offset":5683},"end":{"line":372,"column":4,"offset":5876},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"while Loop Statements","position":{"start":{"line":374,"column":5,"offset":5882},"end":{"line":374,"column":26,"offset":5903},"indent":[]}}],"position":{"start":{"line":374,"column":1,"offset":5878},"end":{"line":374,"column":26,"offset":5903},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"spam = 0\n\nwhile spam < 5:\n    print('Hello, world.')\n    spam = spam + 1","position":{"start":{"line":376,"column":1,"offset":5905},"end":{"line":382,"column":4,"offset":5991},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"break Statements","position":{"start":{"line":384,"column":5,"offset":5997},"end":{"line":384,"column":21,"offset":6013},"indent":[]}}],"position":{"start":{"line":384,"column":1,"offset":5993},"end":{"line":384,"column":21,"offset":6013},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If the execution reaches a break statement, it immediately exits the while loop's clause:","position":{"start":{"line":386,"column":1,"offset":6015},"end":{"line":386,"column":90,"offset":6104},"indent":[]}}],"position":{"start":{"line":386,"column":1,"offset":6015},"end":{"line":386,"column":90,"offset":6104},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"while True:\n    print('Please type your name.')\n    name = input()\n    if name == 'your name':\n        break\n\nprint('Thank you!')","position":{"start":{"line":388,"column":1,"offset":6106},"end":{"line":396,"column":4,"offset":6249},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"continue Statements","position":{"start":{"line":398,"column":5,"offset":6255},"end":{"line":398,"column":24,"offset":6274},"indent":[]}}],"position":{"start":{"line":398,"column":1,"offset":6251},"end":{"line":398,"column":24,"offset":6274},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"When the program execution reaches a continue statement, the program execution immediately jumps back to the start of the loop.","position":{"start":{"line":400,"column":1,"offset":6276},"end":{"line":400,"column":128,"offset":6403},"indent":[]}}],"position":{"start":{"line":400,"column":1,"offset":6276},"end":{"line":400,"column":128,"offset":6403},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"while True:\n    print('Who are you?')\n    name = input()\n    if name != 'Joe':\n        continue\n    print('Hello, Joe. What is the password? (It is a fish.)')\n    password = input()\n    if password == 'swordfish':\n        break\n\nprint('Access granted.')","position":{"start":{"line":402,"column":1,"offset":6405},"end":{"line":414,"column":4,"offset":6672},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"for Loops and the range() Function","position":{"start":{"line":416,"column":5,"offset":6678},"end":{"line":416,"column":39,"offset":6712},"indent":[]}}],"position":{"start":{"line":416,"column":1,"offset":6674},"end":{"line":416,"column":39,"offset":6712},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"print('My name is')\nfor i in range(5):\n    print('Jimmy Five Times ({})'.format(str(i)))","position":{"start":{"line":418,"column":1,"offset":6714},"end":{"line":422,"column":4,"offset":6816},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":424,"column":1,"offset":6818},"end":{"line":424,"column":5,"offset":6822},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"range()","position":{"start":{"line":424,"column":6,"offset":6823},"end":{"line":424,"column":13,"offset":6830},"indent":[]}}],"position":{"start":{"line":424,"column":5,"offset":6822},"end":{"line":424,"column":14,"offset":6831},"indent":[]}},{"type":"text","value":" function can also be called with three arguments. The first two arguments will be the start and stop values, and the third will be the step argument. The step is the amount that the variable is increased by after each iteration.","position":{"start":{"line":424,"column":14,"offset":6831},"end":{"line":424,"column":243,"offset":7060},"indent":[]}}],"position":{"start":{"line":424,"column":1,"offset":6818},"end":{"line":424,"column":243,"offset":7060},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"for i in range(0, 10, 2):\n   print(i)","position":{"start":{"line":426,"column":1,"offset":7062},"end":{"line":429,"column":4,"offset":7113},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"You can even use a negative number for the step argument to make the for loop count down instead of up.","position":{"start":{"line":431,"column":1,"offset":7115},"end":{"line":431,"column":104,"offset":7218},"indent":[]}}],"position":{"start":{"line":431,"column":1,"offset":7115},"end":{"line":431,"column":104,"offset":7218},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"for i in range(5, -1, -1):\n    print(i)","position":{"start":{"line":433,"column":1,"offset":7220},"end":{"line":436,"column":4,"offset":7273},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"For else statement","position":{"start":{"line":438,"column":5,"offset":7279},"end":{"line":438,"column":23,"offset":7297},"indent":[]}}],"position":{"start":{"line":438,"column":1,"offset":7275},"end":{"line":438,"column":23,"offset":7297},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This allows to specify a statement to execute in case of the full loop has been executed. Only\nuseful when a ","position":{"start":{"line":440,"column":1,"offset":7299},"end":{"line":441,"column":15,"offset":7408},"indent":[1]}},{"type":"inlineCode","value":"break","position":{"start":{"line":441,"column":15,"offset":7408},"end":{"line":441,"column":22,"offset":7415},"indent":[]}},{"type":"text","value":" condition can occur in the loop:","position":{"start":{"line":441,"column":22,"offset":7415},"end":{"line":441,"column":55,"offset":7448},"indent":[]}}],"position":{"start":{"line":440,"column":1,"offset":7299},"end":{"line":441,"column":55,"offset":7448},"indent":[1]}},{"type":"code","lang":"python","meta":null,"value":"for i in [1, 2, 3, 4, 5]:\n   if i == 3:\n       break\nelse:\n   print(\"only executed when no item of the list is equal to 3\")","position":{"start":{"line":443,"column":1,"offset":7450},"end":{"line":449,"column":4,"offset":7587},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Importing Modules","position":{"start":{"line":451,"column":5,"offset":7593},"end":{"line":451,"column":22,"offset":7610},"indent":[]}}],"position":{"start":{"line":451,"column":1,"offset":7589},"end":{"line":451,"column":22,"offset":7610},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import random\n\nfor i in range(5):\n    print(random.randint(1, 10))","position":{"start":{"line":453,"column":1,"offset":7612},"end":{"line":458,"column":4,"offset":7692},"indent":[1,1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"import random, sys, os, math","position":{"start":{"line":460,"column":1,"offset":7694},"end":{"line":462,"column":4,"offset":7736},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"from random import *.","position":{"start":{"line":464,"column":1,"offset":7738},"end":{"line":466,"column":4,"offset":7773},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Ending a Program with sys.exit","position":{"start":{"line":468,"column":5,"offset":7779},"end":{"line":468,"column":35,"offset":7809},"indent":[]}}],"position":{"start":{"line":468,"column":1,"offset":7775},"end":{"line":468,"column":35,"offset":7809},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import sys\n\nwhile True:\n    print('Type exit to exit.')\n    response = input()\n    if response == 'exit':\n        sys.exit()\n    print('You typed {}.'.format(response))","position":{"start":{"line":470,"column":1,"offset":7811},"end":{"line":479,"column":4,"offset":7993},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Functions","position":{"start":{"line":481,"column":4,"offset":7998},"end":{"line":481,"column":13,"offset":8007},"indent":[]}}],"position":{"start":{"line":481,"column":1,"offset":7995},"end":{"line":481,"column":13,"offset":8007},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"def hello(name):\n    print('Hello {}'.format(name))","position":{"start":{"line":483,"column":1,"offset":8009},"end":{"line":486,"column":4,"offset":8074},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Return Values and return Statements","position":{"start":{"line":488,"column":5,"offset":8080},"end":{"line":488,"column":40,"offset":8115},"indent":[]}}],"position":{"start":{"line":488,"column":1,"offset":8076},"end":{"line":488,"column":40,"offset":8115},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"When creating a function using the def statement, you can specify what the return value should be with a return statement. A return statement consists of the following:","position":{"start":{"line":490,"column":1,"offset":8117},"end":{"line":490,"column":169,"offset":8285},"indent":[]}}],"position":{"start":{"line":490,"column":1,"offset":8117},"end":{"line":490,"column":169,"offset":8285},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The return keyword.","position":{"start":{"line":492,"column":5,"offset":8291},"end":{"line":492,"column":24,"offset":8310},"indent":[]}}],"position":{"start":{"line":492,"column":5,"offset":8291},"end":{"line":492,"column":24,"offset":8310},"indent":[]}}],"position":{"start":{"line":492,"column":1,"offset":8287},"end":{"line":492,"column":24,"offset":8310},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"-","position":{"start":{"line":493,"column":1,"offset":8311},"end":{"line":493,"column":2,"offset":8312},"indent":[]}}],"position":{"start":{"line":493,"column":1,"offset":8311},"end":{"line":493,"column":2,"offset":8312},"indent":[]}}],"position":{"start":{"line":493,"column":1,"offset":8311},"end":{"line":493,"column":2,"offset":8312},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The value or expression that the function should return.","position":{"start":{"line":494,"column":5,"offset":8317},"end":{"line":494,"column":61,"offset":8373},"indent":[]}}],"position":{"start":{"line":494,"column":5,"offset":8317},"end":{"line":494,"column":61,"offset":8373},"indent":[]}}],"position":{"start":{"line":494,"column":1,"offset":8313},"end":{"line":494,"column":61,"offset":8373},"indent":[]}}],"position":{"start":{"line":492,"column":1,"offset":8287},"end":{"line":494,"column":61,"offset":8373},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"import random\ndef getAnswer(answerNumber):\n    if answerNumber == 1:\n        return 'It is certain'\n    elif answerNumber == 2:\n        return 'It is decidedly so'\n    elif answerNumber == 3:\n        return 'Yes'\n    elif answerNumber == 4:\n        return 'Reply hazy try again'\n    elif answerNumber == 5:\n        return 'Ask again later'\n    elif answerNumber == 6:\n        return 'Concentrate and ask again'\n    elif answerNumber == 7:\n        return 'My reply is no'\n    elif answerNumber == 8:\n        return 'Outlook not so good'\n    elif answerNumber == 9:\n        return 'Very doubtful'\n\nr = random.randint(1, 9)\nfortune = getAnswer(r)\nprint(fortune)","position":{"start":{"line":496,"column":1,"offset":8375},"end":{"line":521,"column":4,"offset":9047},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"The None Value","position":{"start":{"line":523,"column":5,"offset":9053},"end":{"line":523,"column":19,"offset":9067},"indent":[]}}],"position":{"start":{"line":523,"column":1,"offset":9049},"end":{"line":523,"column":19,"offset":9067},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"spam = print('Hello!')\nspam is None","position":{"start":{"line":525,"column":1,"offset":9069},"end":{"line":528,"column":4,"offset":9118},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Note: never compare to ","position":{"start":{"line":530,"column":1,"offset":9120},"end":{"line":530,"column":24,"offset":9143},"indent":[]}},{"type":"inlineCode","value":"None","position":{"start":{"line":530,"column":24,"offset":9143},"end":{"line":530,"column":30,"offset":9149},"indent":[]}},{"type":"text","value":" with the ","position":{"start":{"line":530,"column":30,"offset":9149},"end":{"line":530,"column":40,"offset":9159},"indent":[]}},{"type":"inlineCode","value":"==","position":{"start":{"line":530,"column":40,"offset":9159},"end":{"line":530,"column":44,"offset":9163},"indent":[]}},{"type":"text","value":" operator. Always use ","position":{"start":{"line":530,"column":44,"offset":9163},"end":{"line":530,"column":66,"offset":9185},"indent":[]}},{"type":"inlineCode","value":"is","position":{"start":{"line":530,"column":66,"offset":9185},"end":{"line":530,"column":70,"offset":9189},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":530,"column":70,"offset":9189},"end":{"line":530,"column":71,"offset":9190},"indent":[]}}],"position":{"start":{"line":530,"column":1,"offset":9120},"end":{"line":530,"column":71,"offset":9190},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"print Keyword Arguments","position":{"start":{"line":532,"column":5,"offset":9196},"end":{"line":532,"column":28,"offset":9219},"indent":[]}}],"position":{"start":{"line":532,"column":1,"offset":9192},"end":{"line":532,"column":28,"offset":9219},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"print('Hello', end='')\nprint('World')","position":{"start":{"line":534,"column":1,"offset":9221},"end":{"line":537,"column":4,"offset":9272},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"print('cats', 'dogs', 'mice')","position":{"start":{"line":539,"column":1,"offset":9274},"end":{"line":541,"column":4,"offset":9317},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"print('cats', 'dogs', 'mice', sep=',')","position":{"start":{"line":543,"column":1,"offset":9319},"end":{"line":545,"column":4,"offset":9371},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Local and Global Scope","position":{"start":{"line":547,"column":5,"offset":9377},"end":{"line":547,"column":27,"offset":9399},"indent":[]}}],"position":{"start":{"line":547,"column":1,"offset":9373},"end":{"line":547,"column":27,"offset":9399},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Code in the global scope cannot use any local variables.","position":{"start":{"line":549,"column":5,"offset":9405},"end":{"line":549,"column":61,"offset":9461},"indent":[]}}],"position":{"start":{"line":549,"column":5,"offset":9405},"end":{"line":549,"column":61,"offset":9461},"indent":[]}}],"position":{"start":{"line":549,"column":1,"offset":9401},"end":{"line":549,"column":61,"offset":9461},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"-","position":{"start":{"line":550,"column":1,"offset":9462},"end":{"line":550,"column":2,"offset":9463},"indent":[]}}],"position":{"start":{"line":550,"column":1,"offset":9462},"end":{"line":550,"column":2,"offset":9463},"indent":[]}}],"position":{"start":{"line":550,"column":1,"offset":9462},"end":{"line":550,"column":2,"offset":9463},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"However, a local scope can access global variables.","position":{"start":{"line":551,"column":5,"offset":9468},"end":{"line":551,"column":56,"offset":9519},"indent":[]}}],"position":{"start":{"line":551,"column":5,"offset":9468},"end":{"line":551,"column":56,"offset":9519},"indent":[]}}],"position":{"start":{"line":551,"column":1,"offset":9464},"end":{"line":551,"column":56,"offset":9519},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"-","position":{"start":{"line":552,"column":1,"offset":9520},"end":{"line":552,"column":2,"offset":9521},"indent":[]}}],"position":{"start":{"line":552,"column":1,"offset":9520},"end":{"line":552,"column":2,"offset":9521},"indent":[]}}],"position":{"start":{"line":552,"column":1,"offset":9520},"end":{"line":552,"column":2,"offset":9521},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Code in a function's local scope cannot use variables in any other local scope.","position":{"start":{"line":553,"column":5,"offset":9526},"end":{"line":553,"column":84,"offset":9605},"indent":[]}}],"position":{"start":{"line":553,"column":5,"offset":9526},"end":{"line":553,"column":84,"offset":9605},"indent":[]}}],"position":{"start":{"line":553,"column":1,"offset":9522},"end":{"line":554,"column":1,"offset":9606},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You can use the same name for different variables if they are in different scopes. That is, there can be a local variable named spam and a global variable also named spam.","position":{"start":{"line":555,"column":5,"offset":9611},"end":{"line":555,"column":176,"offset":9782},"indent":[]}}],"position":{"start":{"line":555,"column":5,"offset":9611},"end":{"line":555,"column":176,"offset":9782},"indent":[]}}],"position":{"start":{"line":555,"column":1,"offset":9607},"end":{"line":555,"column":176,"offset":9782},"indent":[]}}],"position":{"start":{"line":549,"column":1,"offset":9401},"end":{"line":555,"column":176,"offset":9782},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"The global Statement","position":{"start":{"line":557,"column":5,"offset":9788},"end":{"line":557,"column":25,"offset":9808},"indent":[]}}],"position":{"start":{"line":557,"column":1,"offset":9784},"end":{"line":557,"column":25,"offset":9808},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If you need to modify a global variable from within a function, use the global statement:","position":{"start":{"line":559,"column":1,"offset":9810},"end":{"line":559,"column":90,"offset":9899},"indent":[]}}],"position":{"start":{"line":559,"column":1,"offset":9810},"end":{"line":559,"column":90,"offset":9899},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"def spam():\n    global eggs\n    eggs = 'spam'\n\neggs = 'global'\nspam()\nprint(eggs)","position":{"start":{"line":561,"column":1,"offset":9901},"end":{"line":569,"column":4,"offset":9996},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"There are four rules to tell whether a variable is in a local scope or global scope:","position":{"start":{"line":571,"column":1,"offset":9998},"end":{"line":571,"column":85,"offset":10082},"indent":[]}}],"position":{"start":{"line":571,"column":1,"offset":9998},"end":{"line":571,"column":85,"offset":10082},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"If a variable is being used in the global scope (that is, outside of all functions), then it is always a global variable.","position":{"start":{"line":573,"column":4,"offset":10087},"end":{"line":573,"column":125,"offset":10208},"indent":[]}}],"position":{"start":{"line":573,"column":4,"offset":10087},"end":{"line":573,"column":125,"offset":10208},"indent":[]}}],"position":{"start":{"line":573,"column":1,"offset":10084},"end":{"line":574,"column":1,"offset":10209},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"If there is a global statement for that variable in a function, it is a global variable.","position":{"start":{"line":575,"column":4,"offset":10213},"end":{"line":575,"column":92,"offset":10301},"indent":[]}}],"position":{"start":{"line":575,"column":4,"offset":10213},"end":{"line":575,"column":92,"offset":10301},"indent":[]}}],"position":{"start":{"line":575,"column":1,"offset":10210},"end":{"line":576,"column":1,"offset":10302},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Otherwise, if the variable is used in an assignment statement in the function, it is a local variable.","position":{"start":{"line":577,"column":4,"offset":10306},"end":{"line":577,"column":106,"offset":10408},"indent":[]}}],"position":{"start":{"line":577,"column":4,"offset":10306},"end":{"line":577,"column":106,"offset":10408},"indent":[]}}],"position":{"start":{"line":577,"column":1,"offset":10303},"end":{"line":578,"column":1,"offset":10409},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"But if the variable is not used in an assignment statement, it is a global variable.","position":{"start":{"line":579,"column":4,"offset":10413},"end":{"line":579,"column":88,"offset":10497},"indent":[]}}],"position":{"start":{"line":579,"column":4,"offset":10413},"end":{"line":579,"column":88,"offset":10497},"indent":[]}}],"position":{"start":{"line":579,"column":1,"offset":10410},"end":{"line":579,"column":88,"offset":10497},"indent":[]}}],"position":{"start":{"line":573,"column":1,"offset":10084},"end":{"line":579,"column":88,"offset":10497},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Exception Handling","position":{"start":{"line":581,"column":4,"offset":10502},"end":{"line":581,"column":22,"offset":10520},"indent":[]}}],"position":{"start":{"line":581,"column":1,"offset":10499},"end":{"line":581,"column":22,"offset":10520},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Basic exception handling","position":{"start":{"line":583,"column":5,"offset":10526},"end":{"line":583,"column":29,"offset":10550},"indent":[]}}],"position":{"start":{"line":583,"column":1,"offset":10522},"end":{"line":583,"column":29,"offset":10550},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"def spam(divideBy):\n    try:\n        return 42 / divideBy\n    except ZeroDivisionError as e:\n        print('Error: Invalid argument: {}'.format(e))\n\nprint(spam(2))\nprint(spam(12))\nprint(spam(0))\nprint(spam(1))","position":{"start":{"line":585,"column":1,"offset":10552},"end":{"line":596,"column":4,"offset":10775},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Final code in exception handling","position":{"start":{"line":598,"column":5,"offset":10781},"end":{"line":598,"column":37,"offset":10813},"indent":[]}}],"position":{"start":{"line":598,"column":1,"offset":10777},"end":{"line":598,"column":37,"offset":10813},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Code inside the ","position":{"start":{"line":600,"column":1,"offset":10815},"end":{"line":600,"column":17,"offset":10831},"indent":[]}},{"type":"inlineCode","value":"finally","position":{"start":{"line":600,"column":17,"offset":10831},"end":{"line":600,"column":26,"offset":10840},"indent":[]}},{"type":"text","value":" section is always executed, no matter if an exception has been raised or\nnot, and even if an exception is not caught.","position":{"start":{"line":600,"column":26,"offset":10840},"end":{"line":601,"column":45,"offset":10958},"indent":[1]}}],"position":{"start":{"line":600,"column":1,"offset":10815},"end":{"line":601,"column":45,"offset":10958},"indent":[1]}},{"type":"code","lang":"python","meta":null,"value":"def spam(divideBy):\n    try:\n        return 42 / divideBy\n    except ZeroDivisionError as e:\n        print('Error: Invalid argument: {}'.format(e))\n    finally:\n        print(\"-- division finished --\")\n\nprint(spam(12))\nprint(spam(0))","position":{"start":{"line":603,"column":1,"offset":10960},"end":{"line":614,"column":4,"offset":11207},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Lists","position":{"start":{"line":616,"column":4,"offset":11212},"end":{"line":616,"column":9,"offset":11217},"indent":[]}}],"position":{"start":{"line":616,"column":1,"offset":11209},"end":{"line":616,"column":9,"offset":11217},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"['cat', 'bat', 'rat', 'elephant']","position":{"start":{"line":618,"column":1,"offset":11219},"end":{"line":620,"column":4,"offset":11266},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Getting Individual Values in a List with Indexes","position":{"start":{"line":622,"column":5,"offset":11272},"end":{"line":622,"column":53,"offset":11320},"indent":[]}}],"position":{"start":{"line":622,"column":1,"offset":11268},"end":{"line":622,"column":53,"offset":11320},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"spam = ['cat', 'bat', 'rat', 'elephant']\nspam[0]","position":{"start":{"line":624,"column":1,"offset":11322},"end":{"line":627,"column":4,"offset":11384},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam[1]","position":{"start":{"line":629,"column":1,"offset":11386},"end":{"line":631,"column":4,"offset":11407},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam[2]","position":{"start":{"line":633,"column":1,"offset":11409},"end":{"line":635,"column":4,"offset":11430},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam[3]","position":{"start":{"line":637,"column":1,"offset":11432},"end":{"line":639,"column":4,"offset":11453},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Negative Indexes","position":{"start":{"line":641,"column":5,"offset":11459},"end":{"line":641,"column":21,"offset":11475},"indent":[]}}],"position":{"start":{"line":641,"column":1,"offset":11455},"end":{"line":641,"column":21,"offset":11475},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"spam = ['cat', 'bat', 'rat', 'elephant']\nspam[-1]","position":{"start":{"line":643,"column":1,"offset":11477},"end":{"line":646,"column":4,"offset":11540},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam[-3]","position":{"start":{"line":648,"column":1,"offset":11542},"end":{"line":650,"column":4,"offset":11564},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"'The {} is afraid of the {}.'.format(spam[-1], spam[-3])","position":{"start":{"line":652,"column":1,"offset":11566},"end":{"line":654,"column":4,"offset":11636},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Getting Sublists with Slices","position":{"start":{"line":656,"column":5,"offset":11642},"end":{"line":656,"column":33,"offset":11670},"indent":[]}}],"position":{"start":{"line":656,"column":1,"offset":11638},"end":{"line":656,"column":33,"offset":11670},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"spam = ['cat', 'bat', 'rat', 'elephant']\nspam[0:4]","position":{"start":{"line":658,"column":1,"offset":11672},"end":{"line":661,"column":4,"offset":11736},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam[1:3]","position":{"start":{"line":663,"column":1,"offset":11738},"end":{"line":665,"column":4,"offset":11761},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam[0:-1]","position":{"start":{"line":667,"column":1,"offset":11763},"end":{"line":669,"column":4,"offset":11787},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam = ['cat', 'bat', 'rat', 'elephant']\nspam[:2]","position":{"start":{"line":671,"column":1,"offset":11789},"end":{"line":674,"column":4,"offset":11852},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam[1:]","position":{"start":{"line":676,"column":1,"offset":11854},"end":{"line":678,"column":4,"offset":11876},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam[:]","position":{"start":{"line":680,"column":1,"offset":11878},"end":{"line":682,"column":4,"offset":11899},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Getting a list Length with len","position":{"start":{"line":684,"column":5,"offset":11905},"end":{"line":684,"column":35,"offset":11935},"indent":[]}}],"position":{"start":{"line":684,"column":1,"offset":11901},"end":{"line":684,"column":35,"offset":11935},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"spam = ['cat', 'dog', 'moose']\nlen(spam)","position":{"start":{"line":686,"column":1,"offset":11937},"end":{"line":689,"column":4,"offset":11991},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Changing Values in a List with Indexes","position":{"start":{"line":691,"column":5,"offset":11997},"end":{"line":691,"column":43,"offset":12035},"indent":[]}}],"position":{"start":{"line":691,"column":1,"offset":11993},"end":{"line":691,"column":43,"offset":12035},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"spam = ['cat', 'bat', 'rat', 'elephant']\nspam[1] = 'aardvark'\nspam","position":{"start":{"line":693,"column":1,"offset":12037},"end":{"line":697,"column":4,"offset":12117},"indent":[1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam[2] = spam[1]\nspam","position":{"start":{"line":699,"column":1,"offset":12119},"end":{"line":702,"column":4,"offset":12155},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam[-1] = 12345\nspam","position":{"start":{"line":704,"column":1,"offset":12157},"end":{"line":707,"column":4,"offset":12192},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"List Concatenation and List Replication","position":{"start":{"line":709,"column":5,"offset":12198},"end":{"line":709,"column":44,"offset":12237},"indent":[]}}],"position":{"start":{"line":709,"column":1,"offset":12194},"end":{"line":709,"column":44,"offset":12237},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"[1, 2, 3] + ['A', 'B', 'C']","position":{"start":{"line":711,"column":1,"offset":12239},"end":{"line":713,"column":4,"offset":12280},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"['X', 'Y', 'Z'] * 3","position":{"start":{"line":715,"column":1,"offset":12282},"end":{"line":717,"column":4,"offset":12315},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam = [1, 2, 3]\nspam = spam + ['A', 'B', 'C']\nspam","position":{"start":{"line":719,"column":1,"offset":12317},"end":{"line":723,"column":4,"offset":12382},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Removing Values from Lists with del Statements","position":{"start":{"line":725,"column":5,"offset":12388},"end":{"line":725,"column":51,"offset":12434},"indent":[]}}],"position":{"start":{"line":725,"column":1,"offset":12384},"end":{"line":725,"column":51,"offset":12434},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"spam = ['cat', 'bat', 'rat', 'elephant']\ndel spam[2]\nspam","position":{"start":{"line":727,"column":1,"offset":12436},"end":{"line":731,"column":4,"offset":12507},"indent":[1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"del spam[2]\nspam","position":{"start":{"line":733,"column":1,"offset":12509},"end":{"line":736,"column":4,"offset":12539},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Using for Loops with Lists","position":{"start":{"line":738,"column":5,"offset":12545},"end":{"line":738,"column":31,"offset":12571},"indent":[]}}],"position":{"start":{"line":738,"column":1,"offset":12541},"end":{"line":738,"column":31,"offset":12571},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"supplies = ['pens', 'staplers', 'flame-throwers', 'binders']\n\nfor i, supply in enumerate(supplies):\n    print('Index {} in supplies is: {}'.format(str(i), supply))","position":{"start":{"line":740,"column":1,"offset":12573},"end":{"line":745,"column":4,"offset":12750},"indent":[1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Looping Through Multiple Lists with zip","position":{"start":{"line":747,"column":5,"offset":12756},"end":{"line":747,"column":44,"offset":12795},"indent":[]}}],"position":{"start":{"line":747,"column":1,"offset":12752},"end":{"line":747,"column":44,"offset":12795},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"name = ['Pete', 'John', 'Elizabeth']\nage = [6, 23, 44]\n\nfor n, a in zip(name, age):\n    print('{} is {} years old'.format(n, a))","position":{"start":{"line":749,"column":1,"offset":12797},"end":{"line":755,"column":4,"offset":12939},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"The in and not in Operators","position":{"start":{"line":757,"column":5,"offset":12945},"end":{"line":757,"column":32,"offset":12972},"indent":[]}}],"position":{"start":{"line":757,"column":1,"offset":12941},"end":{"line":757,"column":32,"offset":12972},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"'howdy' in ['hello', 'hi', 'howdy', 'heyas']","position":{"start":{"line":759,"column":1,"offset":12974},"end":{"line":761,"column":4,"offset":13032},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam = ['hello', 'hi', 'howdy', 'heyas']\nFalse","position":{"start":{"line":763,"column":1,"offset":13034},"end":{"line":766,"column":4,"offset":13094},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"'howdy' not in spam","position":{"start":{"line":768,"column":1,"offset":13096},"end":{"line":770,"column":4,"offset":13129},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"'cat' not in spam","position":{"start":{"line":772,"column":1,"offset":13131},"end":{"line":774,"column":4,"offset":13162},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"The Multiple Assignment Trick","position":{"start":{"line":776,"column":5,"offset":13168},"end":{"line":776,"column":34,"offset":13197},"indent":[]}}],"position":{"start":{"line":776,"column":1,"offset":13164},"end":{"line":776,"column":34,"offset":13197},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The multiple assignment trick is a shortcut that lets you assign multiple variables with the values in a list in one line of code. So instead of doing this:","position":{"start":{"line":778,"column":1,"offset":13199},"end":{"line":778,"column":157,"offset":13355},"indent":[]}}],"position":{"start":{"line":778,"column":1,"offset":13199},"end":{"line":778,"column":157,"offset":13355},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"cat = ['fat', 'orange', 'loud']\nsize = cat[0]\ncolor = cat[1]\ndisposition = cat[2]","position":{"start":{"line":780,"column":1,"offset":13357},"end":{"line":785,"column":4,"offset":13452},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"You could type this line of code:","position":{"start":{"line":787,"column":1,"offset":13454},"end":{"line":787,"column":34,"offset":13487},"indent":[]}}],"position":{"start":{"line":787,"column":1,"offset":13454},"end":{"line":787,"column":34,"offset":13487},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"cat = ['fat', 'orange', 'loud']\nsize, color, disposition = cat","position":{"start":{"line":789,"column":1,"offset":13489},"end":{"line":792,"column":4,"offset":13565},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The multiple assignment trick can also be used to swap the values in two variables:","position":{"start":{"line":794,"column":1,"offset":13567},"end":{"line":794,"column":84,"offset":13650},"indent":[]}}],"position":{"start":{"line":794,"column":1,"offset":13567},"end":{"line":794,"column":84,"offset":13650},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"a, b = 'Alice', 'Bob'\na, b = b, a\nprint(a)","position":{"start":{"line":796,"column":1,"offset":13652},"end":{"line":800,"column":4,"offset":13708},"indent":[1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"print(b)","position":{"start":{"line":802,"column":1,"offset":13710},"end":{"line":804,"column":4,"offset":13732},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Augmented Assignment Operators","position":{"start":{"line":806,"column":5,"offset":13738},"end":{"line":806,"column":35,"offset":13768},"indent":[]}}],"position":{"start":{"line":806,"column":1,"offset":13734},"end":{"line":806,"column":35,"offset":13768},"indent":[]}},{"type":"table","align":[null,null],"children":[{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Operator","position":{"start":{"line":808,"column":3,"offset":13772},"end":{"line":808,"column":11,"offset":13780},"indent":[]}}],"position":{"start":{"line":808,"column":3,"offset":13772},"end":{"line":808,"column":14,"offset":13783},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Equivalent","position":{"start":{"line":808,"column":17,"offset":13786},"end":{"line":808,"column":27,"offset":13796},"indent":[]}}],"position":{"start":{"line":808,"column":17,"offset":13786},"end":{"line":808,"column":34,"offset":13803},"indent":[]}}],"position":{"start":{"line":808,"column":1,"offset":13770},"end":{"line":808,"column":36,"offset":13805},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"spam += 1","position":{"start":{"line":810,"column":3,"offset":13844},"end":{"line":810,"column":14,"offset":13855},"indent":[]}}],"position":{"start":{"line":810,"column":3,"offset":13844},"end":{"line":810,"column":14,"offset":13855},"indent":[]}},{"type":"tableCell","children":[{"type":"inlineCode","value":"spam = spam + 1","position":{"start":{"line":810,"column":17,"offset":13858},"end":{"line":810,"column":34,"offset":13875},"indent":[]}}],"position":{"start":{"line":810,"column":17,"offset":13858},"end":{"line":810,"column":34,"offset":13875},"indent":[]}}],"position":{"start":{"line":810,"column":1,"offset":13842},"end":{"line":810,"column":36,"offset":13877},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"spam -= 1","position":{"start":{"line":811,"column":3,"offset":13880},"end":{"line":811,"column":14,"offset":13891},"indent":[]}}],"position":{"start":{"line":811,"column":3,"offset":13880},"end":{"line":811,"column":14,"offset":13891},"indent":[]}},{"type":"tableCell","children":[{"type":"inlineCode","value":"spam = spam - 1","position":{"start":{"line":811,"column":17,"offset":13894},"end":{"line":811,"column":34,"offset":13911},"indent":[]}}],"position":{"start":{"line":811,"column":17,"offset":13894},"end":{"line":811,"column":34,"offset":13911},"indent":[]}}],"position":{"start":{"line":811,"column":1,"offset":13878},"end":{"line":811,"column":36,"offset":13913},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"spam *= 1","position":{"start":{"line":812,"column":3,"offset":13916},"end":{"line":812,"column":14,"offset":13927},"indent":[]}}],"position":{"start":{"line":812,"column":3,"offset":13916},"end":{"line":812,"column":14,"offset":13927},"indent":[]}},{"type":"tableCell","children":[{"type":"inlineCode","value":"spam = spam * 1","position":{"start":{"line":812,"column":17,"offset":13930},"end":{"line":812,"column":34,"offset":13947},"indent":[]}}],"position":{"start":{"line":812,"column":17,"offset":13930},"end":{"line":812,"column":34,"offset":13947},"indent":[]}}],"position":{"start":{"line":812,"column":1,"offset":13914},"end":{"line":812,"column":36,"offset":13949},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"spam /= 1","position":{"start":{"line":813,"column":3,"offset":13952},"end":{"line":813,"column":14,"offset":13963},"indent":[]}}],"position":{"start":{"line":813,"column":3,"offset":13952},"end":{"line":813,"column":14,"offset":13963},"indent":[]}},{"type":"tableCell","children":[{"type":"inlineCode","value":"spam = spam / 1","position":{"start":{"line":813,"column":17,"offset":13966},"end":{"line":813,"column":34,"offset":13983},"indent":[]}}],"position":{"start":{"line":813,"column":17,"offset":13966},"end":{"line":813,"column":34,"offset":13983},"indent":[]}}],"position":{"start":{"line":813,"column":1,"offset":13950},"end":{"line":813,"column":36,"offset":13985},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"spam %= 1","position":{"start":{"line":814,"column":3,"offset":13988},"end":{"line":814,"column":14,"offset":13999},"indent":[]}}],"position":{"start":{"line":814,"column":3,"offset":13988},"end":{"line":814,"column":14,"offset":13999},"indent":[]}},{"type":"tableCell","children":[{"type":"inlineCode","value":"spam = spam % 1","position":{"start":{"line":814,"column":17,"offset":14002},"end":{"line":814,"column":34,"offset":14019},"indent":[]}}],"position":{"start":{"line":814,"column":17,"offset":14002},"end":{"line":814,"column":34,"offset":14019},"indent":[]}}],"position":{"start":{"line":814,"column":1,"offset":13986},"end":{"line":814,"column":36,"offset":14021},"indent":[]}}],"position":{"start":{"line":808,"column":1,"offset":13770},"end":{"line":814,"column":36,"offset":14021},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Examples:","position":{"start":{"line":816,"column":1,"offset":14023},"end":{"line":816,"column":10,"offset":14032},"indent":[]}}],"position":{"start":{"line":816,"column":1,"offset":14023},"end":{"line":816,"column":10,"offset":14032},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"spam = 'Hello'\nspam += ' world!'\nspam","position":{"start":{"line":818,"column":1,"offset":14034},"end":{"line":822,"column":4,"offset":14085},"indent":[1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"bacon = ['Zophie']\nbacon *= 3\nbacon","position":{"start":{"line":824,"column":1,"offset":14087},"end":{"line":828,"column":4,"offset":14136},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Finding a Value in a List with the index Method","position":{"start":{"line":830,"column":5,"offset":14142},"end":{"line":830,"column":52,"offset":14189},"indent":[]}}],"position":{"start":{"line":830,"column":1,"offset":14138},"end":{"line":830,"column":52,"offset":14189},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"spam = ['Zophie', 'Pooka', 'Fat-tail', 'Pooka']\nspam.index('Pooka')","position":{"start":{"line":832,"column":1,"offset":14191},"end":{"line":835,"column":4,"offset":14272},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Adding Values to Lists with append and insert","position":{"start":{"line":837,"column":5,"offset":14278},"end":{"line":837,"column":50,"offset":14323},"indent":[]}}],"position":{"start":{"line":837,"column":1,"offset":14274},"end":{"line":837,"column":50,"offset":14323},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"append()","position":{"start":{"line":839,"column":3,"offset":14327},"end":{"line":839,"column":11,"offset":14335},"indent":[]}}],"position":{"start":{"line":839,"column":1,"offset":14325},"end":{"line":839,"column":13,"offset":14337},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":839,"column":13,"offset":14337},"end":{"line":839,"column":14,"offset":14338},"indent":[]}}],"position":{"start":{"line":839,"column":1,"offset":14325},"end":{"line":839,"column":14,"offset":14338},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"spam = ['cat', 'dog', 'bat']\nspam.append('moose')\nspam","position":{"start":{"line":841,"column":1,"offset":14340},"end":{"line":845,"column":4,"offset":14408},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"insert()","position":{"start":{"line":847,"column":3,"offset":14412},"end":{"line":847,"column":11,"offset":14420},"indent":[]}}],"position":{"start":{"line":847,"column":1,"offset":14410},"end":{"line":847,"column":13,"offset":14422},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":847,"column":13,"offset":14422},"end":{"line":847,"column":14,"offset":14423},"indent":[]}}],"position":{"start":{"line":847,"column":1,"offset":14410},"end":{"line":847,"column":14,"offset":14423},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"spam = ['cat', 'dog', 'bat']\nspam.insert(1, 'chicken')\nspam","position":{"start":{"line":849,"column":1,"offset":14425},"end":{"line":853,"column":4,"offset":14498},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Removing Values from Lists with remove","position":{"start":{"line":855,"column":5,"offset":14504},"end":{"line":855,"column":43,"offset":14542},"indent":[]}}],"position":{"start":{"line":855,"column":1,"offset":14500},"end":{"line":855,"column":43,"offset":14542},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"spam = ['cat', 'bat', 'rat', 'elephant']\nspam.remove('bat')\nspam","position":{"start":{"line":857,"column":1,"offset":14544},"end":{"line":861,"column":4,"offset":14622},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If the value appears multiple times in the list, only the first instance of the value will be removed.","position":{"start":{"line":863,"column":1,"offset":14624},"end":{"line":863,"column":103,"offset":14726},"indent":[]}}],"position":{"start":{"line":863,"column":1,"offset":14624},"end":{"line":863,"column":103,"offset":14726},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Sorting the Values in a List with sort","position":{"start":{"line":865,"column":5,"offset":14732},"end":{"line":865,"column":43,"offset":14770},"indent":[]}}],"position":{"start":{"line":865,"column":1,"offset":14728},"end":{"line":865,"column":43,"offset":14770},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"spam = [2, 5, 3.14, 1, -7]\nspam.sort()\nspam","position":{"start":{"line":867,"column":1,"offset":14772},"end":{"line":871,"column":4,"offset":14829},"indent":[1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam = ['ants', 'cats', 'dogs', 'badgers', 'elephants']\nspam.sort()\nspam","position":{"start":{"line":873,"column":1,"offset":14831},"end":{"line":877,"column":4,"offset":14917},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"You can also pass True for the reverse keyword argument to have sort() sort the values in reverse order:","position":{"start":{"line":879,"column":1,"offset":14919},"end":{"line":879,"column":105,"offset":15023},"indent":[]}}],"position":{"start":{"line":879,"column":1,"offset":14919},"end":{"line":879,"column":105,"offset":15023},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"spam.sort(reverse=True)\nspam","position":{"start":{"line":881,"column":1,"offset":15025},"end":{"line":884,"column":4,"offset":15067},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If you need to sort the values in regular alphabetical order, pass str. lower for the key keyword argument in the sort() method call:","position":{"start":{"line":886,"column":1,"offset":15069},"end":{"line":886,"column":134,"offset":15202},"indent":[]}}],"position":{"start":{"line":886,"column":1,"offset":15069},"end":{"line":886,"column":134,"offset":15202},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"spam = ['a', 'z', 'A', 'Z']\nspam.sort(key=str.lower)\nspam","position":{"start":{"line":888,"column":1,"offset":15204},"end":{"line":892,"column":4,"offset":15275},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"You can use the built-in function ","position":{"start":{"line":894,"column":1,"offset":15277},"end":{"line":894,"column":35,"offset":15311},"indent":[]}},{"type":"inlineCode","value":"sorted","position":{"start":{"line":894,"column":35,"offset":15311},"end":{"line":894,"column":43,"offset":15319},"indent":[]}},{"type":"text","value":" to return a new list:","position":{"start":{"line":894,"column":43,"offset":15319},"end":{"line":894,"column":65,"offset":15341},"indent":[]}}],"position":{"start":{"line":894,"column":1,"offset":15277},"end":{"line":894,"column":65,"offset":15341},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"spam = ['ants', 'cats', 'dogs', 'badgers', 'elephants']\nsorted(spam)","position":{"start":{"line":896,"column":1,"offset":15343},"end":{"line":899,"column":4,"offset":15425},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Tuple Data Type","position":{"start":{"line":901,"column":4,"offset":15430},"end":{"line":901,"column":19,"offset":15445},"indent":[]}}],"position":{"start":{"line":901,"column":1,"offset":15427},"end":{"line":901,"column":19,"offset":15445},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"eggs = ('hello', 42, 0.5)\neggs[0]","position":{"start":{"line":903,"column":1,"offset":15447},"end":{"line":906,"column":4,"offset":15494},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"eggs[1:3]","position":{"start":{"line":908,"column":1,"offset":15496},"end":{"line":910,"column":4,"offset":15519},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"len(eggs)","position":{"start":{"line":912,"column":1,"offset":15521},"end":{"line":914,"column":4,"offset":15544},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The main way that tuples are different from lists is that tuples, like strings, are immutable.","position":{"start":{"line":916,"column":1,"offset":15546},"end":{"line":916,"column":95,"offset":15640},"indent":[]}}],"position":{"start":{"line":916,"column":1,"offset":15546},"end":{"line":916,"column":95,"offset":15640},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Converting Types with the list and tuple Functions","position":{"start":{"line":918,"column":4,"offset":15645},"end":{"line":918,"column":54,"offset":15695},"indent":[]}}],"position":{"start":{"line":918,"column":1,"offset":15642},"end":{"line":918,"column":54,"offset":15695},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"tuple(['cat', 'dog', 5])","position":{"start":{"line":920,"column":1,"offset":15697},"end":{"line":922,"column":4,"offset":15735},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"list(('cat', 'dog', 5))","position":{"start":{"line":924,"column":1,"offset":15737},"end":{"line":926,"column":4,"offset":15774},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"list('hello')","position":{"start":{"line":928,"column":1,"offset":15776},"end":{"line":930,"column":4,"offset":15803},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Dictionaries and Structuring Data","position":{"start":{"line":932,"column":4,"offset":15808},"end":{"line":932,"column":37,"offset":15841},"indent":[]}}],"position":{"start":{"line":932,"column":1,"offset":15805},"end":{"line":932,"column":37,"offset":15841},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Example Dictionary:","position":{"start":{"line":934,"column":1,"offset":15843},"end":{"line":934,"column":20,"offset":15862},"indent":[]}}],"position":{"start":{"line":934,"column":1,"offset":15843},"end":{"line":934,"column":20,"offset":15862},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"myCat = {'size': 'fat', 'color': 'gray', 'disposition': 'loud'}","position":{"start":{"line":936,"column":1,"offset":15864},"end":{"line":938,"column":4,"offset":15941},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"The keys, values, and items Methods","position":{"start":{"line":940,"column":5,"offset":15947},"end":{"line":940,"column":40,"offset":15982},"indent":[]}}],"position":{"start":{"line":940,"column":1,"offset":15943},"end":{"line":940,"column":40,"offset":15982},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"values():","position":{"start":{"line":942,"column":1,"offset":15984},"end":{"line":942,"column":10,"offset":15993},"indent":[]}}],"position":{"start":{"line":942,"column":1,"offset":15984},"end":{"line":942,"column":10,"offset":15993},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"spam = {'color': 'red', 'age': 42}\n\nfor v in spam.values():\n    print(v)","position":{"start":{"line":944,"column":1,"offset":15995},"end":{"line":949,"column":4,"offset":16081},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"keys():","position":{"start":{"line":951,"column":1,"offset":16083},"end":{"line":951,"column":8,"offset":16090},"indent":[]}}],"position":{"start":{"line":951,"column":1,"offset":16083},"end":{"line":951,"column":8,"offset":16090},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"for k in spam.keys():\n    print(k)","position":{"start":{"line":953,"column":1,"offset":16092},"end":{"line":956,"column":4,"offset":16140},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"items():","position":{"start":{"line":958,"column":1,"offset":16142},"end":{"line":958,"column":9,"offset":16150},"indent":[]}}],"position":{"start":{"line":958,"column":1,"offset":16142},"end":{"line":958,"column":9,"offset":16150},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"for i in spam.items():\n    print(i)","position":{"start":{"line":960,"column":1,"offset":16152},"end":{"line":963,"column":4,"offset":16201},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Using the keys(), values(), and items() methods, a for loop can iterate over the keys, values, or key-value pairs in a dictionary, respectively.","position":{"start":{"line":965,"column":1,"offset":16203},"end":{"line":965,"column":145,"offset":16347},"indent":[]}}],"position":{"start":{"line":965,"column":1,"offset":16203},"end":{"line":965,"column":145,"offset":16347},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"spam = {'color': 'red', 'age': 42}\n\nfor k, v in spam.items():\n    print('Key: {} Value: {}'.format(k, str(v)))","position":{"start":{"line":967,"column":1,"offset":16349},"end":{"line":972,"column":4,"offset":16473},"indent":[1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Checking if a Key or Value Exists in a Dictionary","position":{"start":{"line":974,"column":5,"offset":16479},"end":{"line":974,"column":54,"offset":16528},"indent":[]}}],"position":{"start":{"line":974,"column":1,"offset":16475},"end":{"line":974,"column":54,"offset":16528},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"spam = {'name': 'Zophie', 'age': 7}\n'name' in spam.keys()","position":{"start":{"line":976,"column":1,"offset":16530},"end":{"line":979,"column":4,"offset":16601},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"'Zophie' in spam.values()","position":{"start":{"line":981,"column":1,"offset":16603},"end":{"line":983,"column":4,"offset":16642},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"# You can omit the call to keys() when checking for a key\n'color' in spam","position":{"start":{"line":985,"column":1,"offset":16644},"end":{"line":988,"column":4,"offset":16731},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"'color' not in spam","position":{"start":{"line":990,"column":1,"offset":16733},"end":{"line":992,"column":4,"offset":16766},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"'color' in spam","position":{"start":{"line":994,"column":1,"offset":16768},"end":{"line":996,"column":4,"offset":16797},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"The get Method","position":{"start":{"line":998,"column":5,"offset":16803},"end":{"line":998,"column":19,"offset":16817},"indent":[]}}],"position":{"start":{"line":998,"column":1,"offset":16799},"end":{"line":998,"column":19,"offset":16817},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"picnic_items = {'apples': 5, 'cups': 2}\n'I am bringing {} cups.'.format(str(picnic_items.get('cups', 0)))","position":{"start":{"line":1000,"column":1,"offset":16819},"end":{"line":1003,"column":4,"offset":16938},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"'I am bringing {} eggs.'.format(str(picnic_items.get('eggs', 0)))","position":{"start":{"line":1005,"column":1,"offset":16940},"end":{"line":1007,"column":4,"offset":17019},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"The setdefault Method","position":{"start":{"line":1009,"column":5,"offset":17025},"end":{"line":1009,"column":26,"offset":17046},"indent":[]}}],"position":{"start":{"line":1009,"column":1,"offset":17021},"end":{"line":1009,"column":26,"offset":17046},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Let's consider this code:","position":{"start":{"line":1011,"column":1,"offset":17048},"end":{"line":1011,"column":26,"offset":17073},"indent":[]}}],"position":{"start":{"line":1011,"column":1,"offset":17048},"end":{"line":1011,"column":26,"offset":17073},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"spam = {'name': 'Pooka', 'age': 5}\nif 'color' not in spam:\n    spam['color'] = 'black'","position":{"start":{"line":1013,"column":1,"offset":17075},"end":{"line":1017,"column":4,"offset":17175},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Using ","position":{"start":{"line":1019,"column":1,"offset":17177},"end":{"line":1019,"column":7,"offset":17183},"indent":[]}},{"type":"inlineCode","value":"setdefault","position":{"start":{"line":1019,"column":7,"offset":17183},"end":{"line":1019,"column":19,"offset":17195},"indent":[]}},{"type":"text","value":" we could make the same code more shortly:","position":{"start":{"line":1019,"column":19,"offset":17195},"end":{"line":1019,"column":61,"offset":17237},"indent":[]}}],"position":{"start":{"line":1019,"column":1,"offset":17177},"end":{"line":1019,"column":61,"offset":17237},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"spam = {'name': 'Pooka', 'age': 5}\nspam.setdefault('color', 'black')","position":{"start":{"line":1021,"column":1,"offset":17239},"end":{"line":1024,"column":4,"offset":17321},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam","position":{"start":{"line":1026,"column":1,"offset":17323},"end":{"line":1028,"column":4,"offset":17341},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam.setdefault('color', 'white')","position":{"start":{"line":1030,"column":1,"offset":17343},"end":{"line":1032,"column":4,"offset":17390},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam","position":{"start":{"line":1034,"column":1,"offset":17392},"end":{"line":1036,"column":4,"offset":17410},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Pretty Printing","position":{"start":{"line":1038,"column":5,"offset":17416},"end":{"line":1038,"column":20,"offset":17431},"indent":[]}}],"position":{"start":{"line":1038,"column":1,"offset":17412},"end":{"line":1038,"column":20,"offset":17431},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import pprint\n\nmessage = 'It was a bright cold day in April, and the clocks were striking thirteen.'\ncount = {}\n\nfor character in message:\n    count.setdefault(character, 0)\n    count[character] = count[character] + 1\n\npprint.pprint(count)","position":{"start":{"line":1040,"column":1,"offset":17433},"end":{"line":1051,"column":4,"offset":17686},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Merge two dictionaries","position":{"start":{"line":1053,"column":5,"offset":17692},"end":{"line":1053,"column":27,"offset":17714},"indent":[]}}],"position":{"start":{"line":1053,"column":1,"offset":17688},"end":{"line":1053,"column":27,"offset":17714},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"# in Python 3.5+:\nx = {'a': 1, 'b': 2}\ny = {'b': 3, 'c': 4}\nz = {**x, **y}\nz","position":{"start":{"line":1055,"column":1,"offset":17716},"end":{"line":1061,"column":4,"offset":17806},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"sets","position":{"start":{"line":1063,"column":4,"offset":17811},"end":{"line":1063,"column":8,"offset":17815},"indent":[]}}],"position":{"start":{"line":1063,"column":1,"offset":17808},"end":{"line":1063,"column":8,"offset":17815},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"From the Python 3 ","position":{"start":{"line":1065,"column":1,"offset":17817},"end":{"line":1065,"column":19,"offset":17835},"indent":[]}},{"type":"link","title":null,"url":"https://docs.python.org/3/tutorial/datastructures.html","children":[{"type":"text","value":"documentation","position":{"start":{"line":1065,"column":20,"offset":17836},"end":{"line":1065,"column":33,"offset":17849},"indent":[]}}],"position":{"start":{"line":1065,"column":19,"offset":17835},"end":{"line":1065,"column":90,"offset":17906},"indent":[]}}],"position":{"start":{"line":1065,"column":1,"offset":17817},"end":{"line":1065,"column":90,"offset":17906},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"A set is an unordered collection with no duplicate elements. Basic uses include membership testing and eliminating duplicate entries. Set objects also support mathematical operations like union, intersection, difference, and symmetric difference.","position":{"start":{"line":1067,"column":3,"offset":17910},"end":{"line":1067,"column":249,"offset":18156},"indent":[]}}],"position":{"start":{"line":1067,"column":3,"offset":17910},"end":{"line":1067,"column":249,"offset":18156},"indent":[]}}],"position":{"start":{"line":1067,"column":1,"offset":17908},"end":{"line":1067,"column":249,"offset":18156},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Initializing a set","position":{"start":{"line":1069,"column":5,"offset":18162},"end":{"line":1069,"column":23,"offset":18180},"indent":[]}}],"position":{"start":{"line":1069,"column":1,"offset":18158},"end":{"line":1069,"column":23,"offset":18180},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"There are two ways to create sets: using curly braces ","position":{"start":{"line":1071,"column":1,"offset":18182},"end":{"line":1071,"column":55,"offset":18236},"indent":[]}},{"type":"inlineCode","value":"{}","position":{"start":{"line":1071,"column":55,"offset":18236},"end":{"line":1071,"column":59,"offset":18240},"indent":[]}},{"type":"text","value":" and the bult-in function ","position":{"start":{"line":1071,"column":59,"offset":18240},"end":{"line":1071,"column":85,"offset":18266},"indent":[]}},{"type":"inlineCode","value":"set()","position":{"start":{"line":1071,"column":85,"offset":18266},"end":{"line":1071,"column":92,"offset":18273},"indent":[]}}],"position":{"start":{"line":1071,"column":1,"offset":18182},"end":{"line":1071,"column":92,"offset":18273},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"s = {1, 2, 3}\ns = set([1, 2, 3])","position":{"start":{"line":1073,"column":1,"offset":18275},"end":{"line":1076,"column":4,"offset":18321},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"When creating an empty set, be sure to not use the curly braces ","position":{"start":{"line":1078,"column":1,"offset":18323},"end":{"line":1078,"column":65,"offset":18387},"indent":[]}},{"type":"inlineCode","value":"{}","position":{"start":{"line":1078,"column":65,"offset":18387},"end":{"line":1078,"column":69,"offset":18391},"indent":[]}},{"type":"text","value":" or you will get an empty dictionary instead.","position":{"start":{"line":1078,"column":69,"offset":18391},"end":{"line":1078,"column":114,"offset":18436},"indent":[]}}],"position":{"start":{"line":1078,"column":1,"offset":18323},"end":{"line":1078,"column":114,"offset":18436},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"s = {}\ntype(s)","position":{"start":{"line":1080,"column":1,"offset":18438},"end":{"line":1083,"column":4,"offset":18466},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"sets: unordered collections of unique elements","position":{"start":{"line":1085,"column":5,"offset":18472},"end":{"line":1085,"column":51,"offset":18518},"indent":[]}}],"position":{"start":{"line":1085,"column":1,"offset":18468},"end":{"line":1085,"column":51,"offset":18518},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A set automatically remove all the duplicate values.","position":{"start":{"line":1087,"column":1,"offset":18520},"end":{"line":1087,"column":53,"offset":18572},"indent":[]}}],"position":{"start":{"line":1087,"column":1,"offset":18520},"end":{"line":1087,"column":53,"offset":18572},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"s = {1, 2, 3, 2, 3, 4}\ns","position":{"start":{"line":1089,"column":1,"offset":18574},"end":{"line":1092,"column":4,"offset":18612},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"And as an unordered data type, they can't be indexed.","position":{"start":{"line":1094,"column":1,"offset":18614},"end":{"line":1094,"column":54,"offset":18667},"indent":[]}}],"position":{"start":{"line":1094,"column":1,"offset":18614},"end":{"line":1094,"column":54,"offset":18667},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"s = {1, 2, 3}\ns(0)","position":{"start":{"line":1096,"column":1,"offset":18669},"end":{"line":1099,"column":4,"offset":18701},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"set add and update","position":{"start":{"line":1101,"column":5,"offset":18707},"end":{"line":1101,"column":23,"offset":18725},"indent":[]}}],"position":{"start":{"line":1101,"column":1,"offset":18703},"end":{"line":1101,"column":23,"offset":18725},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Using the ","position":{"start":{"line":1103,"column":1,"offset":18727},"end":{"line":1103,"column":11,"offset":18737},"indent":[]}},{"type":"inlineCode","value":"add()","position":{"start":{"line":1103,"column":11,"offset":18737},"end":{"line":1103,"column":18,"offset":18744},"indent":[]}},{"type":"text","value":" method we can add a single element to the set.","position":{"start":{"line":1103,"column":18,"offset":18744},"end":{"line":1103,"column":65,"offset":18791},"indent":[]}}],"position":{"start":{"line":1103,"column":1,"offset":18727},"end":{"line":1103,"column":65,"offset":18791},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"s = {1, 2, 3}\ns.add(4)\ns","position":{"start":{"line":1105,"column":1,"offset":18793},"end":{"line":1109,"column":4,"offset":18831},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"And with ","position":{"start":{"line":1111,"column":1,"offset":18833},"end":{"line":1111,"column":10,"offset":18842},"indent":[]}},{"type":"inlineCode","value":"update()","position":{"start":{"line":1111,"column":10,"offset":18842},"end":{"line":1111,"column":20,"offset":18852},"indent":[]}},{"type":"text","value":", multiple ones .","position":{"start":{"line":1111,"column":20,"offset":18852},"end":{"line":1111,"column":37,"offset":18869},"indent":[]}}],"position":{"start":{"line":1111,"column":1,"offset":18833},"end":{"line":1111,"column":37,"offset":18869},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"s = {1, 2, 3}\ns.update([2, 3, 4, 5, 6])\ns  # remember, sets automatically remove duplicates","position":{"start":{"line":1113,"column":1,"offset":18871},"end":{"line":1117,"column":4,"offset":18976},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"set remove and discard","position":{"start":{"line":1119,"column":5,"offset":18982},"end":{"line":1119,"column":27,"offset":19004},"indent":[]}}],"position":{"start":{"line":1119,"column":1,"offset":18978},"end":{"line":1119,"column":27,"offset":19004},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Both methods will remove an element from the set, but ","position":{"start":{"line":1121,"column":1,"offset":19006},"end":{"line":1121,"column":55,"offset":19060},"indent":[]}},{"type":"inlineCode","value":"remove()","position":{"start":{"line":1121,"column":55,"offset":19060},"end":{"line":1121,"column":65,"offset":19070},"indent":[]}},{"type":"text","value":" will raise a ","position":{"start":{"line":1121,"column":65,"offset":19070},"end":{"line":1121,"column":79,"offset":19084},"indent":[]}},{"type":"inlineCode","value":"key error","position":{"start":{"line":1121,"column":79,"offset":19084},"end":{"line":1121,"column":90,"offset":19095},"indent":[]}},{"type":"text","value":" if the value doesn't exist.","position":{"start":{"line":1121,"column":90,"offset":19095},"end":{"line":1121,"column":118,"offset":19123},"indent":[]}}],"position":{"start":{"line":1121,"column":1,"offset":19006},"end":{"line":1121,"column":118,"offset":19123},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"s = {1, 2, 3}\ns.remove(3)\ns","position":{"start":{"line":1123,"column":1,"offset":19125},"end":{"line":1127,"column":4,"offset":19166},"indent":[1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"s.remove(3)","position":{"start":{"line":1129,"column":1,"offset":19168},"end":{"line":1131,"column":4,"offset":19193},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"discard()","position":{"start":{"line":1133,"column":1,"offset":19195},"end":{"line":1133,"column":12,"offset":19206},"indent":[]}},{"type":"text","value":" won't raise any errors.","position":{"start":{"line":1133,"column":12,"offset":19206},"end":{"line":1133,"column":36,"offset":19230},"indent":[]}}],"position":{"start":{"line":1133,"column":1,"offset":19195},"end":{"line":1133,"column":36,"offset":19230},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"s = {1, 2, 3}\ns.discard(3)\ns","position":{"start":{"line":1135,"column":1,"offset":19232},"end":{"line":1139,"column":4,"offset":19274},"indent":[1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"s.discard(3)","position":{"start":{"line":1141,"column":1,"offset":19276},"end":{"line":1143,"column":4,"offset":19302},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"set union","position":{"start":{"line":1145,"column":5,"offset":19308},"end":{"line":1145,"column":14,"offset":19317},"indent":[]}}],"position":{"start":{"line":1145,"column":1,"offset":19304},"end":{"line":1145,"column":14,"offset":19317},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"union()","position":{"start":{"line":1147,"column":1,"offset":19319},"end":{"line":1147,"column":10,"offset":19328},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":1147,"column":10,"offset":19328},"end":{"line":1147,"column":14,"offset":19332},"indent":[]}},{"type":"inlineCode","value":"|","position":{"start":{"line":1147,"column":14,"offset":19332},"end":{"line":1147,"column":17,"offset":19335},"indent":[]}},{"type":"text","value":" will create a new set that contains all the elements from the sets provided.","position":{"start":{"line":1147,"column":17,"offset":19335},"end":{"line":1147,"column":94,"offset":19412},"indent":[]}}],"position":{"start":{"line":1147,"column":1,"offset":19319},"end":{"line":1147,"column":94,"offset":19412},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"s1 = {1, 2, 3}\ns2 = {3, 4, 5}\ns1.union(s2)  # or 's1 | s2'","position":{"start":{"line":1149,"column":1,"offset":19414},"end":{"line":1153,"column":4,"offset":19486},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"set intersection","position":{"start":{"line":1155,"column":5,"offset":19492},"end":{"line":1155,"column":21,"offset":19508},"indent":[]}}],"position":{"start":{"line":1155,"column":1,"offset":19488},"end":{"line":1155,"column":21,"offset":19508},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"intersection","position":{"start":{"line":1157,"column":1,"offset":19510},"end":{"line":1157,"column":15,"offset":19524},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":1157,"column":15,"offset":19524},"end":{"line":1157,"column":19,"offset":19528},"indent":[]}},{"type":"inlineCode","value":"&","position":{"start":{"line":1157,"column":19,"offset":19528},"end":{"line":1157,"column":22,"offset":19531},"indent":[]}},{"type":"text","value":" will return a set containing only the elements that are common to all of them.","position":{"start":{"line":1157,"column":22,"offset":19531},"end":{"line":1157,"column":101,"offset":19610},"indent":[]}}],"position":{"start":{"line":1157,"column":1,"offset":19510},"end":{"line":1157,"column":101,"offset":19610},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"s1 = {1, 2, 3}\ns2 = {2, 3, 4}\ns3 = {3, 4, 5}\ns1.intersection(s2, s3)  # or 's1 & s2 & s3'","position":{"start":{"line":1159,"column":1,"offset":19612},"end":{"line":1164,"column":4,"offset":19715},"indent":[1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"set difference","position":{"start":{"line":1166,"column":5,"offset":19721},"end":{"line":1166,"column":19,"offset":19735},"indent":[]}}],"position":{"start":{"line":1166,"column":1,"offset":19717},"end":{"line":1166,"column":19,"offset":19735},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"difference","position":{"start":{"line":1168,"column":1,"offset":19737},"end":{"line":1168,"column":13,"offset":19749},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":1168,"column":13,"offset":19749},"end":{"line":1168,"column":17,"offset":19753},"indent":[]}},{"type":"inlineCode","value":"-","position":{"start":{"line":1168,"column":17,"offset":19753},"end":{"line":1168,"column":20,"offset":19756},"indent":[]}},{"type":"text","value":" will return only the elements that are in one of the sets.","position":{"start":{"line":1168,"column":20,"offset":19756},"end":{"line":1168,"column":79,"offset":19815},"indent":[]}}],"position":{"start":{"line":1168,"column":1,"offset":19737},"end":{"line":1168,"column":79,"offset":19815},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"s1 = {1, 2, 3}\ns2 = {2, 3, 4}\ns1.difference(s2)  # or 's1 - s2'","position":{"start":{"line":1170,"column":1,"offset":19817},"end":{"line":1174,"column":4,"offset":19894},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"set symetric_difference","position":{"start":{"line":1176,"column":5,"offset":19900},"end":{"line":1176,"column":28,"offset":19923},"indent":[]}}],"position":{"start":{"line":1176,"column":1,"offset":19896},"end":{"line":1176,"column":28,"offset":19923},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"symetric_difference","position":{"start":{"line":1178,"column":1,"offset":19925},"end":{"line":1178,"column":22,"offset":19946},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":1178,"column":22,"offset":19946},"end":{"line":1178,"column":26,"offset":19950},"indent":[]}},{"type":"inlineCode","value":"^","position":{"start":{"line":1178,"column":26,"offset":19950},"end":{"line":1178,"column":29,"offset":19953},"indent":[]}},{"type":"text","value":" will return all the elements that are not common between them.","position":{"start":{"line":1178,"column":29,"offset":19953},"end":{"line":1178,"column":92,"offset":20016},"indent":[]}}],"position":{"start":{"line":1178,"column":1,"offset":19925},"end":{"line":1178,"column":92,"offset":20016},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"s1 = {1, 2, 3}\ns2 = {2, 3, 4}\ns1.symmetric_difference(s2)  # or 's1 ^ s2'","position":{"start":{"line":1180,"column":1,"offset":20018},"end":{"line":1184,"column":4,"offset":20105},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"itertools Module","position":{"start":{"line":1186,"column":4,"offset":20110},"end":{"line":1186,"column":20,"offset":20126},"indent":[]}}],"position":{"start":{"line":1186,"column":1,"offset":20107},"end":{"line":1186,"column":20,"offset":20126},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":1188,"column":1,"offset":20128},"end":{"line":1188,"column":5,"offset":20132},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"itertools","position":{"start":{"line":1188,"column":6,"offset":20133},"end":{"line":1188,"column":15,"offset":20142},"indent":[]}}],"position":{"start":{"line":1188,"column":5,"offset":20132},"end":{"line":1188,"column":16,"offset":20143},"indent":[]}},{"type":"text","value":" module is a collection of tools intented to be fast and use memory efficiently when handling iterators (like ","position":{"start":{"line":1188,"column":16,"offset":20143},"end":{"line":1188,"column":126,"offset":20253},"indent":[]}},{"type":"link","title":null,"url":"#lists","children":[{"type":"text","value":"lists","position":{"start":{"line":1188,"column":127,"offset":20254},"end":{"line":1188,"column":132,"offset":20259},"indent":[]}}],"position":{"start":{"line":1188,"column":126,"offset":20253},"end":{"line":1188,"column":141,"offset":20268},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":1188,"column":141,"offset":20268},"end":{"line":1188,"column":145,"offset":20272},"indent":[]}},{"type":"link","title":null,"url":"#dictionaries-and-structuring-data","children":[{"type":"text","value":"dictionaries","position":{"start":{"line":1188,"column":146,"offset":20273},"end":{"line":1188,"column":158,"offset":20285},"indent":[]}}],"position":{"start":{"line":1188,"column":145,"offset":20272},"end":{"line":1188,"column":195,"offset":20322},"indent":[]}},{"type":"text","value":").","position":{"start":{"line":1188,"column":195,"offset":20322},"end":{"line":1188,"column":197,"offset":20324},"indent":[]}}],"position":{"start":{"line":1188,"column":1,"offset":20128},"end":{"line":1188,"column":197,"offset":20324},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"From the official ","position":{"start":{"line":1190,"column":1,"offset":20326},"end":{"line":1190,"column":19,"offset":20344},"indent":[]}},{"type":"link","title":null,"url":"https://docs.python.org/3/library/itertools.html","children":[{"type":"text","value":"Python 3.x documentation","position":{"start":{"line":1190,"column":20,"offset":20345},"end":{"line":1190,"column":44,"offset":20369},"indent":[]}}],"position":{"start":{"line":1190,"column":19,"offset":20344},"end":{"line":1190,"column":95,"offset":20420},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":1190,"column":95,"offset":20420},"end":{"line":1190,"column":96,"offset":20421},"indent":[]}}],"position":{"start":{"line":1190,"column":1,"offset":20326},"end":{"line":1190,"column":96,"offset":20421},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"The module standardizes a core set of fast, memory efficient tools that are useful by themselves or in combination. Together, they form an \"iterator algebra\" making it possible to construct specialized tools succinctly and efficiently in pure Python.","position":{"start":{"line":1192,"column":3,"offset":20425},"end":{"line":1192,"column":253,"offset":20675},"indent":[]}}],"position":{"start":{"line":1192,"column":3,"offset":20425},"end":{"line":1192,"column":253,"offset":20675},"indent":[]}}],"position":{"start":{"line":1192,"column":1,"offset":20423},"end":{"line":1192,"column":253,"offset":20675},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":1194,"column":1,"offset":20677},"end":{"line":1194,"column":5,"offset":20681},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"itertools","position":{"start":{"line":1194,"column":6,"offset":20682},"end":{"line":1194,"column":15,"offset":20691},"indent":[]}}],"position":{"start":{"line":1194,"column":5,"offset":20681},"end":{"line":1194,"column":16,"offset":20692},"indent":[]}},{"type":"text","value":" module comes in the standard library and must be imported.","position":{"start":{"line":1194,"column":16,"offset":20692},"end":{"line":1194,"column":75,"offset":20751},"indent":[]}}],"position":{"start":{"line":1194,"column":1,"offset":20677},"end":{"line":1194,"column":75,"offset":20751},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":1196,"column":1,"offset":20753},"end":{"line":1196,"column":5,"offset":20757},"indent":[]}},{"type":"link","title":null,"url":"https://docs.python.org/3/library/operator.html","children":[{"type":"text","value":"operator","position":{"start":{"line":1196,"column":6,"offset":20758},"end":{"line":1196,"column":14,"offset":20766},"indent":[]}}],"position":{"start":{"line":1196,"column":5,"offset":20757},"end":{"line":1196,"column":64,"offset":20816},"indent":[]}},{"type":"text","value":" module will also be used. This module is not necessary when using itertools, but needed for some of the examples below.","position":{"start":{"line":1196,"column":64,"offset":20816},"end":{"line":1196,"column":184,"offset":20936},"indent":[]}}],"position":{"start":{"line":1196,"column":1,"offset":20753},"end":{"line":1196,"column":184,"offset":20936},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import itertools\nimport operator","position":{"start":{"line":1198,"column":1,"offset":20938},"end":{"line":1201,"column":4,"offset":20984},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"accumulate","position":{"start":{"line":1203,"column":5,"offset":20990},"end":{"line":1203,"column":15,"offset":21000},"indent":[]}}],"position":{"start":{"line":1203,"column":1,"offset":20986},"end":{"line":1203,"column":15,"offset":21000},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Makes an iterator that returns the results of a function.","position":{"start":{"line":1205,"column":1,"offset":21002},"end":{"line":1205,"column":58,"offset":21059},"indent":[]}}],"position":{"start":{"line":1205,"column":1,"offset":21002},"end":{"line":1205,"column":58,"offset":21059},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"itertools.accumulate(iterable[, func])","position":{"start":{"line":1207,"column":1,"offset":21061},"end":{"line":1209,"column":4,"offset":21113},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Example:","position":{"start":{"line":1211,"column":1,"offset":21115},"end":{"line":1211,"column":9,"offset":21123},"indent":[]}}],"position":{"start":{"line":1211,"column":1,"offset":21115},"end":{"line":1211,"column":9,"offset":21123},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"data = [1, 2, 3, 4, 5]\nresult = itertools.accumulate(data, operator.mul)\nfor each in result:\n   print(each)","position":{"start":{"line":1213,"column":1,"offset":21125},"end":{"line":1218,"column":4,"offset":21246},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The operator.mul takes two numbers and multiplies them:","position":{"start":{"line":1220,"column":1,"offset":21248},"end":{"line":1220,"column":56,"offset":21303},"indent":[]}}],"position":{"start":{"line":1220,"column":1,"offset":21248},"end":{"line":1220,"column":56,"offset":21303},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"operator.mul(1, 2)","position":{"start":{"line":1222,"column":1,"offset":21305},"end":{"line":1224,"column":4,"offset":21337},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"operator.mul(2, 3)","position":{"start":{"line":1226,"column":1,"offset":21339},"end":{"line":1228,"column":4,"offset":21371},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"operator.mul(6, 4)","position":{"start":{"line":1230,"column":1,"offset":21373},"end":{"line":1232,"column":4,"offset":21405},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"operator.mul(24, 5)","position":{"start":{"line":1234,"column":1,"offset":21407},"end":{"line":1236,"column":4,"offset":21440},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Passing a function is optional:","position":{"start":{"line":1238,"column":1,"offset":21442},"end":{"line":1238,"column":32,"offset":21473},"indent":[]}}],"position":{"start":{"line":1238,"column":1,"offset":21442},"end":{"line":1238,"column":32,"offset":21473},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"data = [5, 2, 6, 4, 5, 9, 1]\nresult = itertools.accumulate(data)\n\nfor each in result:\n   print(each)","position":{"start":{"line":1240,"column":1,"offset":21475},"end":{"line":1246,"column":4,"offset":21589},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If no function is designated the items will be summed:","position":{"start":{"line":1248,"column":1,"offset":21591},"end":{"line":1248,"column":55,"offset":21645},"indent":[]}}],"position":{"start":{"line":1248,"column":1,"offset":21591},"end":{"line":1248,"column":55,"offset":21645},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"5\n5 + 2 = 7\n7 + 6 = 13\n13 + 4 = 17\n17 + 5 = 22\n22 + 9 = 31\n31 + 1 = 32","position":{"start":{"line":1250,"column":1,"offset":21647},"end":{"line":1258,"column":4,"offset":21731},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"combinations","position":{"start":{"line":1260,"column":5,"offset":21737},"end":{"line":1260,"column":17,"offset":21749},"indent":[]}}],"position":{"start":{"line":1260,"column":1,"offset":21733},"end":{"line":1260,"column":17,"offset":21749},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Takes an iterable and a integer. This will create all the unique combination that have r members.","position":{"start":{"line":1262,"column":1,"offset":21751},"end":{"line":1262,"column":98,"offset":21848},"indent":[]}}],"position":{"start":{"line":1262,"column":1,"offset":21751},"end":{"line":1262,"column":98,"offset":21848},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"itertools.combinations(iterable, r)","position":{"start":{"line":1264,"column":1,"offset":21850},"end":{"line":1266,"column":4,"offset":21899},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Example:","position":{"start":{"line":1268,"column":1,"offset":21901},"end":{"line":1268,"column":9,"offset":21909},"indent":[]}}],"position":{"start":{"line":1268,"column":1,"offset":21901},"end":{"line":1268,"column":9,"offset":21909},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"shapes = ['circle', 'triangle', 'square',]\nresult = itertools.combinations(shapes, 2)\n\nfor each in result:\n   print(each)","position":{"start":{"line":1270,"column":1,"offset":21911},"end":{"line":1276,"column":4,"offset":22046},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"combinations","position":{"start":{"line":1278,"column":5,"offset":22052},"end":{"line":1278,"column":17,"offset":22064},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"with","position":{"start":{"line":1278,"column":18,"offset":22065},"end":{"line":1278,"column":22,"offset":22069},"indent":[]}}],"position":{"start":{"line":1278,"column":17,"offset":22064},"end":{"line":1278,"column":23,"offset":22070},"indent":[]}},{"type":"text","value":"replacement","position":{"start":{"line":1278,"column":23,"offset":22070},"end":{"line":1278,"column":34,"offset":22081},"indent":[]}}],"position":{"start":{"line":1278,"column":1,"offset":22048},"end":{"line":1278,"column":34,"offset":22081},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Just like combinations(), but allows individual elements to be repeated more than once.","position":{"start":{"line":1280,"column":1,"offset":22083},"end":{"line":1280,"column":88,"offset":22170},"indent":[]}}],"position":{"start":{"line":1280,"column":1,"offset":22083},"end":{"line":1280,"column":88,"offset":22170},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"itertools.combinations_with_replacement(iterable, r)","position":{"start":{"line":1282,"column":1,"offset":22172},"end":{"line":1284,"column":4,"offset":22238},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Example:","position":{"start":{"line":1286,"column":1,"offset":22240},"end":{"line":1286,"column":9,"offset":22248},"indent":[]}}],"position":{"start":{"line":1286,"column":1,"offset":22240},"end":{"line":1286,"column":9,"offset":22248},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"shapes = ['circle', 'triangle', 'square']\nresult = itertools.combinations_with_replacement(shapes, 2)\n\nfor each in result:\n   print(each)","position":{"start":{"line":1288,"column":1,"offset":22250},"end":{"line":1294,"column":4,"offset":22401},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"count","position":{"start":{"line":1296,"column":5,"offset":22407},"end":{"line":1296,"column":10,"offset":22412},"indent":[]}}],"position":{"start":{"line":1296,"column":1,"offset":22403},"end":{"line":1296,"column":10,"offset":22412},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Makes an iterator that returns evenly spaced values starting with number start.","position":{"start":{"line":1298,"column":1,"offset":22414},"end":{"line":1298,"column":80,"offset":22493},"indent":[]}}],"position":{"start":{"line":1298,"column":1,"offset":22414},"end":{"line":1298,"column":80,"offset":22493},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"itertools.count(start=0, step=1)","position":{"start":{"line":1300,"column":1,"offset":22495},"end":{"line":1302,"column":4,"offset":22541},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Example:","position":{"start":{"line":1304,"column":1,"offset":22543},"end":{"line":1304,"column":9,"offset":22551},"indent":[]}}],"position":{"start":{"line":1304,"column":1,"offset":22543},"end":{"line":1304,"column":9,"offset":22551},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"for i in itertools.count(10,3):\n   print(i)\n   if i > 20:\n       break","position":{"start":{"line":1306,"column":1,"offset":22553},"end":{"line":1311,"column":4,"offset":22637},"indent":[1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"cycle","position":{"start":{"line":1313,"column":5,"offset":22643},"end":{"line":1313,"column":10,"offset":22648},"indent":[]}}],"position":{"start":{"line":1313,"column":1,"offset":22639},"end":{"line":1313,"column":10,"offset":22648},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This function cycles through an iterator endlessly.","position":{"start":{"line":1315,"column":1,"offset":22650},"end":{"line":1315,"column":52,"offset":22701},"indent":[]}}],"position":{"start":{"line":1315,"column":1,"offset":22650},"end":{"line":1315,"column":52,"offset":22701},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"itertools.cycle(iterable)","position":{"start":{"line":1317,"column":1,"offset":22703},"end":{"line":1319,"column":4,"offset":22742},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Example:","position":{"start":{"line":1321,"column":1,"offset":22744},"end":{"line":1321,"column":9,"offset":22752},"indent":[]}}],"position":{"start":{"line":1321,"column":1,"offset":22744},"end":{"line":1321,"column":9,"offset":22752},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"colors = ['red', 'orange', 'yellow', 'green', 'blue', 'violet']\nfor color in itertools.cycle(colors):\n   print(color)","position":{"start":{"line":1323,"column":1,"offset":22754},"end":{"line":1327,"column":4,"offset":22885},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"When reached the end of the iterable it start over again from the beginning.","position":{"start":{"line":1329,"column":1,"offset":22887},"end":{"line":1329,"column":77,"offset":22963},"indent":[]}}],"position":{"start":{"line":1329,"column":1,"offset":22887},"end":{"line":1329,"column":77,"offset":22963},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"chain","position":{"start":{"line":1331,"column":5,"offset":22969},"end":{"line":1331,"column":10,"offset":22974},"indent":[]}}],"position":{"start":{"line":1331,"column":1,"offset":22965},"end":{"line":1331,"column":10,"offset":22974},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Take a series of iterables and return them as one long iterable.","position":{"start":{"line":1333,"column":1,"offset":22976},"end":{"line":1333,"column":65,"offset":23040},"indent":[]}}],"position":{"start":{"line":1333,"column":1,"offset":22976},"end":{"line":1333,"column":65,"offset":23040},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"itertools.chain(*iterables)","position":{"start":{"line":1335,"column":1,"offset":23042},"end":{"line":1337,"column":4,"offset":23083},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Example:","position":{"start":{"line":1339,"column":1,"offset":23085},"end":{"line":1339,"column":9,"offset":23093},"indent":[]}}],"position":{"start":{"line":1339,"column":1,"offset":23085},"end":{"line":1339,"column":9,"offset":23093},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"colors = ['red', 'orange', 'yellow', 'green', 'blue']\nshapes = ['circle', 'triangle', 'square', 'pentagon']\nresult = itertools.chain(colors, shapes)\n\nfor each in result:\n   print(each)","position":{"start":{"line":1341,"column":1,"offset":23095},"end":{"line":1348,"column":4,"offset":23293},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"compress","position":{"start":{"line":1350,"column":5,"offset":23299},"end":{"line":1350,"column":13,"offset":23307},"indent":[]}}],"position":{"start":{"line":1350,"column":1,"offset":23295},"end":{"line":1350,"column":13,"offset":23307},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Filters one iterable with another.","position":{"start":{"line":1352,"column":1,"offset":23309},"end":{"line":1352,"column":35,"offset":23343},"indent":[]}}],"position":{"start":{"line":1352,"column":1,"offset":23309},"end":{"line":1352,"column":35,"offset":23343},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"itertools.compress(data, selectors)","position":{"start":{"line":1354,"column":1,"offset":23345},"end":{"line":1356,"column":4,"offset":23394},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Example:","position":{"start":{"line":1358,"column":1,"offset":23396},"end":{"line":1358,"column":9,"offset":23404},"indent":[]}}],"position":{"start":{"line":1358,"column":1,"offset":23396},"end":{"line":1358,"column":9,"offset":23404},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"shapes = ['circle', 'triangle', 'square', 'pentagon']\nselections = [True, False, True, False]\nresult = itertools.compress(shapes, selections)\n\nfor each in result:\n   print(each)","position":{"start":{"line":1360,"column":1,"offset":23406},"end":{"line":1367,"column":4,"offset":23597},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"dropwhile","position":{"start":{"line":1369,"column":5,"offset":23603},"end":{"line":1369,"column":14,"offset":23612},"indent":[]}}],"position":{"start":{"line":1369,"column":1,"offset":23599},"end":{"line":1369,"column":14,"offset":23612},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Make an iterator that drops elements from the iterable as long as the predicate is true; afterwards, returns every element.","position":{"start":{"line":1371,"column":1,"offset":23614},"end":{"line":1371,"column":124,"offset":23737},"indent":[]}}],"position":{"start":{"line":1371,"column":1,"offset":23614},"end":{"line":1371,"column":124,"offset":23737},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"itertools.dropwhile(predicate, iterable)","position":{"start":{"line":1373,"column":1,"offset":23739},"end":{"line":1375,"column":4,"offset":23793},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Example:","position":{"start":{"line":1377,"column":1,"offset":23795},"end":{"line":1377,"column":9,"offset":23803},"indent":[]}}],"position":{"start":{"line":1377,"column":1,"offset":23795},"end":{"line":1377,"column":9,"offset":23803},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"data = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1]\nresult = itertools.dropwhile(lambda x: x<5, data)\n\nfor each in result:\n   print(each)","position":{"start":{"line":1379,"column":1,"offset":23805},"end":{"line":1385,"column":4,"offset":23946},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"filterfalse","position":{"start":{"line":1387,"column":5,"offset":23952},"end":{"line":1387,"column":16,"offset":23963},"indent":[]}}],"position":{"start":{"line":1387,"column":1,"offset":23948},"end":{"line":1387,"column":16,"offset":23963},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Makes an iterator that filters elements from iterable returning only those for which the predicate is False.","position":{"start":{"line":1389,"column":1,"offset":23965},"end":{"line":1389,"column":109,"offset":24073},"indent":[]}}],"position":{"start":{"line":1389,"column":1,"offset":23965},"end":{"line":1389,"column":109,"offset":24073},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"itertools.filterfalse(predicate, iterable)","position":{"start":{"line":1391,"column":1,"offset":24075},"end":{"line":1393,"column":4,"offset":24131},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Example:","position":{"start":{"line":1395,"column":1,"offset":24133},"end":{"line":1395,"column":9,"offset":24141},"indent":[]}}],"position":{"start":{"line":1395,"column":1,"offset":24133},"end":{"line":1395,"column":9,"offset":24141},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"data = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nresult = itertools.filterfalse(lambda x: x<5, data)\n\nfor each in result:\n   print(each)","position":{"start":{"line":1397,"column":1,"offset":24143},"end":{"line":1403,"column":4,"offset":24283},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"groupby","position":{"start":{"line":1405,"column":5,"offset":24289},"end":{"line":1405,"column":12,"offset":24296},"indent":[]}}],"position":{"start":{"line":1405,"column":1,"offset":24285},"end":{"line":1405,"column":12,"offset":24296},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Simply put, this function groups things together.","position":{"start":{"line":1407,"column":1,"offset":24298},"end":{"line":1407,"column":50,"offset":24347},"indent":[]}}],"position":{"start":{"line":1407,"column":1,"offset":24298},"end":{"line":1407,"column":50,"offset":24347},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"itertools.groupby(iterable, key=None)","position":{"start":{"line":1409,"column":1,"offset":24349},"end":{"line":1411,"column":4,"offset":24400},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Example:","position":{"start":{"line":1413,"column":1,"offset":24402},"end":{"line":1413,"column":9,"offset":24410},"indent":[]}}],"position":{"start":{"line":1413,"column":1,"offset":24402},"end":{"line":1413,"column":9,"offset":24410},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"robots = [{\n    'name': 'blaster',\n    'faction': 'autobot'\n}, {\n    'name': 'galvatron',\n    'faction': 'decepticon'\n}, {\n    'name': 'jazz',\n    'faction': 'autobot'\n}, {\n    'name': 'metroplex',\n    'faction': 'autobot'\n}, {\n    'name': 'megatron',\n    'faction': 'decepticon'\n}, {\n    'name': 'starcream',\n    'faction': 'decepticon'\n}]\n\nfor key, group in itertools.groupby(robots, key=lambda x: x['faction']):\n   print(key)\n   print(list(group))","position":{"start":{"line":1415,"column":1,"offset":24412},"end":{"line":1439,"column":4,"offset":24876},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"islice","position":{"start":{"line":1441,"column":5,"offset":24882},"end":{"line":1441,"column":11,"offset":24888},"indent":[]}}],"position":{"start":{"line":1441,"column":1,"offset":24878},"end":{"line":1441,"column":11,"offset":24888},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This function is very much like slices. This allows you to cut out a piece of an iterable.","position":{"start":{"line":1443,"column":1,"offset":24890},"end":{"line":1443,"column":91,"offset":24980},"indent":[]}}],"position":{"start":{"line":1443,"column":1,"offset":24890},"end":{"line":1443,"column":91,"offset":24980},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"itertools.islice(iterable, start, stop[, step])","position":{"start":{"line":1445,"column":1,"offset":24982},"end":{"line":1447,"column":4,"offset":25043},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Example:","position":{"start":{"line":1449,"column":1,"offset":25045},"end":{"line":1449,"column":9,"offset":25053},"indent":[]}}],"position":{"start":{"line":1449,"column":1,"offset":25045},"end":{"line":1449,"column":9,"offset":25053},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"colors = ['red', 'orange', 'yellow', 'green', 'blue',]\nfew_colors = itertools.islice(colors, 2)\n\nfor each in few_colors:\n   print(each)","position":{"start":{"line":1451,"column":1,"offset":25055},"end":{"line":1457,"column":4,"offset":25204},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"permutations","position":{"start":{"line":1459,"column":5,"offset":25210},"end":{"line":1459,"column":17,"offset":25222},"indent":[]}}],"position":{"start":{"line":1459,"column":1,"offset":25206},"end":{"line":1459,"column":17,"offset":25222},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"itertools.permutations(iterable, r=None)","position":{"start":{"line":1461,"column":1,"offset":25224},"end":{"line":1463,"column":4,"offset":25278},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Example:","position":{"start":{"line":1465,"column":1,"offset":25280},"end":{"line":1465,"column":9,"offset":25288},"indent":[]}}],"position":{"start":{"line":1465,"column":1,"offset":25280},"end":{"line":1465,"column":9,"offset":25288},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"alpha_data = ['a', 'b', 'c']\nresult = itertools.permutations(alpha_data)\n\nfor each in result:\n   print(each)","position":{"start":{"line":1467,"column":1,"offset":25290},"end":{"line":1473,"column":4,"offset":25412},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"product","position":{"start":{"line":1475,"column":5,"offset":25418},"end":{"line":1475,"column":12,"offset":25425},"indent":[]}}],"position":{"start":{"line":1475,"column":1,"offset":25414},"end":{"line":1475,"column":12,"offset":25425},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Creates the cartesian products from a series of iterables.","position":{"start":{"line":1477,"column":1,"offset":25427},"end":{"line":1477,"column":59,"offset":25485},"indent":[]}}],"position":{"start":{"line":1477,"column":1,"offset":25427},"end":{"line":1477,"column":59,"offset":25485},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"num_data = [1, 2, 3]\nalpha_data = ['a', 'b', 'c']\nresult = itertools.product(num_data, alpha_data)\n\nfor each in result:\n    print(each)","position":{"start":{"line":1479,"column":1,"offset":25487},"end":{"line":1486,"column":4,"offset":25636},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"repeat","position":{"start":{"line":1488,"column":5,"offset":25642},"end":{"line":1488,"column":11,"offset":25648},"indent":[]}}],"position":{"start":{"line":1488,"column":1,"offset":25638},"end":{"line":1488,"column":11,"offset":25648},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This function will repeat an object over and over again. Unless, there is a times argument.","position":{"start":{"line":1490,"column":1,"offset":25650},"end":{"line":1490,"column":92,"offset":25741},"indent":[]}}],"position":{"start":{"line":1490,"column":1,"offset":25650},"end":{"line":1490,"column":92,"offset":25741},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"itertools.repeat(object[, times])","position":{"start":{"line":1492,"column":1,"offset":25743},"end":{"line":1494,"column":4,"offset":25790},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Example:","position":{"start":{"line":1496,"column":1,"offset":25792},"end":{"line":1496,"column":9,"offset":25800},"indent":[]}}],"position":{"start":{"line":1496,"column":1,"offset":25792},"end":{"line":1496,"column":9,"offset":25800},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"for i in itertools.repeat(\"spam\", 3):\n    print(i)","position":{"start":{"line":1498,"column":1,"offset":25802},"end":{"line":1501,"column":4,"offset":25866},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"starmap","position":{"start":{"line":1503,"column":5,"offset":25872},"end":{"line":1503,"column":12,"offset":25879},"indent":[]}}],"position":{"start":{"line":1503,"column":1,"offset":25868},"end":{"line":1503,"column":12,"offset":25879},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Makes an iterator that computes the function using arguments obtained from the iterable.","position":{"start":{"line":1505,"column":1,"offset":25881},"end":{"line":1505,"column":89,"offset":25969},"indent":[]}}],"position":{"start":{"line":1505,"column":1,"offset":25881},"end":{"line":1505,"column":89,"offset":25969},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"itertools.starmap(function, iterable)","position":{"start":{"line":1507,"column":1,"offset":25971},"end":{"line":1509,"column":4,"offset":26022},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Example:","position":{"start":{"line":1511,"column":1,"offset":26024},"end":{"line":1511,"column":9,"offset":26032},"indent":[]}}],"position":{"start":{"line":1511,"column":1,"offset":26024},"end":{"line":1511,"column":9,"offset":26032},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"data = [(2, 6), (8, 4), (7, 3)]\nresult = itertools.starmap(operator.mul, data)\n\nfor each in result:\n   print(each)","position":{"start":{"line":1513,"column":1,"offset":26034},"end":{"line":1519,"column":4,"offset":26162},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"takewhile","position":{"start":{"line":1521,"column":5,"offset":26168},"end":{"line":1521,"column":14,"offset":26177},"indent":[]}}],"position":{"start":{"line":1521,"column":1,"offset":26164},"end":{"line":1521,"column":14,"offset":26177},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The opposite of dropwhile(). Makes an iterator and returns elements from the iterable as long as the predicate is true.","position":{"start":{"line":1523,"column":1,"offset":26179},"end":{"line":1523,"column":120,"offset":26298},"indent":[]}}],"position":{"start":{"line":1523,"column":1,"offset":26179},"end":{"line":1523,"column":120,"offset":26298},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"itertools.takewhile(predicate, iterable)","position":{"start":{"line":1525,"column":1,"offset":26300},"end":{"line":1527,"column":4,"offset":26354},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Example:","position":{"start":{"line":1529,"column":1,"offset":26356},"end":{"line":1529,"column":9,"offset":26364},"indent":[]}}],"position":{"start":{"line":1529,"column":1,"offset":26356},"end":{"line":1529,"column":9,"offset":26364},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"data = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1]\nresult = itertools.takewhile(lambda x: x<5, data)\n\nfor each in result:\n   print(each)","position":{"start":{"line":1531,"column":1,"offset":26366},"end":{"line":1537,"column":4,"offset":26507},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"tee","position":{"start":{"line":1539,"column":5,"offset":26513},"end":{"line":1539,"column":8,"offset":26516},"indent":[]}}],"position":{"start":{"line":1539,"column":1,"offset":26509},"end":{"line":1539,"column":8,"offset":26516},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Return n independent iterators from a single iterable.","position":{"start":{"line":1541,"column":1,"offset":26518},"end":{"line":1541,"column":55,"offset":26572},"indent":[]}}],"position":{"start":{"line":1541,"column":1,"offset":26518},"end":{"line":1541,"column":55,"offset":26572},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"itertools.tee(iterable, n=2)","position":{"start":{"line":1543,"column":1,"offset":26574},"end":{"line":1545,"column":4,"offset":26616},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Example:","position":{"start":{"line":1547,"column":1,"offset":26618},"end":{"line":1547,"column":9,"offset":26626},"indent":[]}}],"position":{"start":{"line":1547,"column":1,"offset":26618},"end":{"line":1547,"column":9,"offset":26626},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"colors = ['red', 'orange', 'yellow', 'green', 'blue']\nalpha_colors, beta_colors = itertools.tee(colors)\n\nfor each in alpha_colors:\n   print(each)","position":{"start":{"line":1549,"column":1,"offset":26628},"end":{"line":1555,"column":4,"offset":26787},"indent":[1,1,1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"colors = ['red', 'orange', 'yellow', 'green', 'blue']\nalpha_colors, beta_colors = itertools.tee(colors)\n\nfor each in beta_colors:\n   print(each)","position":{"start":{"line":1557,"column":1,"offset":26789},"end":{"line":1563,"column":4,"offset":26947},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"zip_longest","position":{"start":{"line":1565,"column":5,"offset":26953},"end":{"line":1565,"column":16,"offset":26964},"indent":[]}}],"position":{"start":{"line":1565,"column":1,"offset":26949},"end":{"line":1565,"column":16,"offset":26964},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Makes an iterator that aggregates elements from each of the iterables. If the iterables are of uneven length, missing values are filled-in with fillvalue. Iteration continues until the longest iterable is exhausted.","position":{"start":{"line":1567,"column":1,"offset":26966},"end":{"line":1567,"column":216,"offset":27181},"indent":[]}}],"position":{"start":{"line":1567,"column":1,"offset":26966},"end":{"line":1567,"column":216,"offset":27181},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"itertools.zip_longest(*iterables, fillvalue=None)","position":{"start":{"line":1569,"column":1,"offset":27183},"end":{"line":1571,"column":4,"offset":27246},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Example:","position":{"start":{"line":1573,"column":1,"offset":27248},"end":{"line":1573,"column":9,"offset":27256},"indent":[]}}],"position":{"start":{"line":1573,"column":1,"offset":27248},"end":{"line":1573,"column":9,"offset":27256},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"colors = ['red', 'orange', 'yellow', 'green', 'blue',]\ndata = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10,]\n\nfor each in itertools.zip_longest(colors, data, fillvalue=None):\n   print(each)","position":{"start":{"line":1575,"column":1,"offset":27258},"end":{"line":1581,"column":4,"offset":27447},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Comprehensions","position":{"start":{"line":1583,"column":4,"offset":27452},"end":{"line":1583,"column":18,"offset":27466},"indent":[]}}],"position":{"start":{"line":1583,"column":1,"offset":27449},"end":{"line":1583,"column":18,"offset":27466},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"List comprehension","position":{"start":{"line":1585,"column":5,"offset":27472},"end":{"line":1585,"column":23,"offset":27490},"indent":[]}}],"position":{"start":{"line":1585,"column":1,"offset":27468},"end":{"line":1585,"column":23,"offset":27490},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"a = [1, 3, 5, 7, 9, 11]\n[i - 1 for i in a]","position":{"start":{"line":1587,"column":1,"offset":27492},"end":{"line":1590,"column":4,"offset":27548},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Set comprehension","position":{"start":{"line":1592,"column":5,"offset":27554},"end":{"line":1592,"column":22,"offset":27571},"indent":[]}}],"position":{"start":{"line":1592,"column":1,"offset":27550},"end":{"line":1592,"column":22,"offset":27571},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"b = {\"abc\", \"def\"}\n{s.upper() for s in b}","position":{"start":{"line":1594,"column":1,"offset":27573},"end":{"line":1597,"column":4,"offset":27628},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Dict comprehension","position":{"start":{"line":1599,"column":5,"offset":27634},"end":{"line":1599,"column":23,"offset":27652},"indent":[]}}],"position":{"start":{"line":1599,"column":1,"offset":27630},"end":{"line":1599,"column":23,"offset":27652},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"c = {'name': 'Pooka', 'age': 5}\n{v, k for k, v in c.items()}","position":{"start":{"line":1601,"column":1,"offset":27654},"end":{"line":1604,"column":4,"offset":27728},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"A List comprehension can be generated from a dictionary:","position":{"start":{"line":1606,"column":1,"offset":27730},"end":{"line":1606,"column":57,"offset":27786},"indent":[]}}],"position":{"start":{"line":1606,"column":1,"offset":27730},"end":{"line":1606,"column":57,"offset":27786},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"c = {'name': 'Pooka', 'first_name': 'Oooka'}\n[\"{}:{}\".format(k.upper(), v.upper()) for k, v in c.items()]","position":{"start":{"line":1608,"column":1,"offset":27788},"end":{"line":1611,"column":4,"offset":27907},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Manipulating Strings","position":{"start":{"line":1613,"column":4,"offset":27912},"end":{"line":1613,"column":24,"offset":27932},"indent":[]}}],"position":{"start":{"line":1613,"column":1,"offset":27909},"end":{"line":1613,"column":24,"offset":27932},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Escape Characters","position":{"start":{"line":1615,"column":5,"offset":27938},"end":{"line":1615,"column":22,"offset":27955},"indent":[]}}],"position":{"start":{"line":1615,"column":1,"offset":27934},"end":{"line":1615,"column":22,"offset":27955},"indent":[]}},{"type":"table","align":[null,null],"children":[{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Escape character","position":{"start":{"line":1617,"column":3,"offset":27959},"end":{"line":1617,"column":19,"offset":27975},"indent":[]}}],"position":{"start":{"line":1617,"column":3,"offset":27959},"end":{"line":1617,"column":19,"offset":27975},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Prints as","position":{"start":{"line":1617,"column":22,"offset":27978},"end":{"line":1617,"column":31,"offset":27987},"indent":[]}}],"position":{"start":{"line":1617,"column":22,"offset":27978},"end":{"line":1617,"column":42,"offset":27998},"indent":[]}}],"position":{"start":{"line":1617,"column":1,"offset":27957},"end":{"line":1617,"column":44,"offset":28000},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"\\'","position":{"start":{"line":1619,"column":3,"offset":28047},"end":{"line":1619,"column":7,"offset":28051},"indent":[]}}],"position":{"start":{"line":1619,"column":3,"offset":28047},"end":{"line":1619,"column":19,"offset":28063},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Single quote","position":{"start":{"line":1619,"column":22,"offset":28066},"end":{"line":1619,"column":34,"offset":28078},"indent":[]}}],"position":{"start":{"line":1619,"column":22,"offset":28066},"end":{"line":1619,"column":42,"offset":28086},"indent":[]}}],"position":{"start":{"line":1619,"column":1,"offset":28045},"end":{"line":1619,"column":44,"offset":28088},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"\\\"","position":{"start":{"line":1620,"column":3,"offset":28091},"end":{"line":1620,"column":7,"offset":28095},"indent":[]}}],"position":{"start":{"line":1620,"column":3,"offset":28091},"end":{"line":1620,"column":19,"offset":28107},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Double quote","position":{"start":{"line":1620,"column":22,"offset":28110},"end":{"line":1620,"column":34,"offset":28122},"indent":[]}}],"position":{"start":{"line":1620,"column":22,"offset":28110},"end":{"line":1620,"column":42,"offset":28130},"indent":[]}}],"position":{"start":{"line":1620,"column":1,"offset":28089},"end":{"line":1620,"column":44,"offset":28132},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"\\t","position":{"start":{"line":1621,"column":3,"offset":28135},"end":{"line":1621,"column":7,"offset":28139},"indent":[]}}],"position":{"start":{"line":1621,"column":3,"offset":28135},"end":{"line":1621,"column":19,"offset":28151},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Tab","position":{"start":{"line":1621,"column":22,"offset":28154},"end":{"line":1621,"column":25,"offset":28157},"indent":[]}}],"position":{"start":{"line":1621,"column":22,"offset":28154},"end":{"line":1621,"column":42,"offset":28174},"indent":[]}}],"position":{"start":{"line":1621,"column":1,"offset":28133},"end":{"line":1621,"column":44,"offset":28176},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"\\n","position":{"start":{"line":1622,"column":3,"offset":28179},"end":{"line":1622,"column":7,"offset":28183},"indent":[]}}],"position":{"start":{"line":1622,"column":3,"offset":28179},"end":{"line":1622,"column":19,"offset":28195},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Newline (line break)","position":{"start":{"line":1622,"column":22,"offset":28198},"end":{"line":1622,"column":42,"offset":28218},"indent":[]}}],"position":{"start":{"line":1622,"column":22,"offset":28198},"end":{"line":1622,"column":42,"offset":28218},"indent":[]}}],"position":{"start":{"line":1622,"column":1,"offset":28177},"end":{"line":1622,"column":44,"offset":28220},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"\\\\","position":{"start":{"line":1623,"column":3,"offset":28223},"end":{"line":1623,"column":7,"offset":28227},"indent":[]}}],"position":{"start":{"line":1623,"column":3,"offset":28223},"end":{"line":1623,"column":19,"offset":28239},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Backslash","position":{"start":{"line":1623,"column":22,"offset":28242},"end":{"line":1623,"column":31,"offset":28251},"indent":[]}}],"position":{"start":{"line":1623,"column":22,"offset":28242},"end":{"line":1623,"column":42,"offset":28262},"indent":[]}}],"position":{"start":{"line":1623,"column":1,"offset":28221},"end":{"line":1623,"column":44,"offset":28264},"indent":[]}}],"position":{"start":{"line":1617,"column":1,"offset":27957},"end":{"line":1623,"column":44,"offset":28264},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Example:","position":{"start":{"line":1625,"column":1,"offset":28266},"end":{"line":1625,"column":9,"offset":28274},"indent":[]}}],"position":{"start":{"line":1625,"column":1,"offset":28266},"end":{"line":1625,"column":9,"offset":28274},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"print(\"Hello there!\\nHow are you?\\nI\\'m doing fine.\")\nHello there!\nHow are you?","position":{"start":{"line":1627,"column":1,"offset":28276},"end":{"line":1631,"column":4,"offset":28369},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Raw Strings","position":{"start":{"line":1633,"column":5,"offset":28375},"end":{"line":1633,"column":16,"offset":28386},"indent":[]}}],"position":{"start":{"line":1633,"column":1,"offset":28371},"end":{"line":1633,"column":16,"offset":28386},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A raw string completely ignores all escape characters and prints any backslash that appears in the string.","position":{"start":{"line":1635,"column":1,"offset":28388},"end":{"line":1635,"column":107,"offset":28494},"indent":[]}}],"position":{"start":{"line":1635,"column":1,"offset":28388},"end":{"line":1635,"column":107,"offset":28494},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"print(r'That is Carol\\'s cat.')","position":{"start":{"line":1637,"column":1,"offset":28496},"end":{"line":1639,"column":4,"offset":28541},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Note: mostly used for regular expression definition (see ","position":{"start":{"line":1641,"column":1,"offset":28543},"end":{"line":1641,"column":58,"offset":28600},"indent":[]}},{"type":"inlineCode","value":"re","position":{"start":{"line":1641,"column":58,"offset":28600},"end":{"line":1641,"column":62,"offset":28604},"indent":[]}},{"type":"text","value":" package)","position":{"start":{"line":1641,"column":62,"offset":28604},"end":{"line":1641,"column":71,"offset":28613},"indent":[]}}],"position":{"start":{"line":1641,"column":1,"offset":28543},"end":{"line":1641,"column":71,"offset":28613},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Multiline Strings with Triple Quotes","position":{"start":{"line":1643,"column":5,"offset":28619},"end":{"line":1643,"column":41,"offset":28655},"indent":[]}}],"position":{"start":{"line":1643,"column":1,"offset":28615},"end":{"line":1643,"column":41,"offset":28655},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"print('''Dear Alice,\n\nEve's cat has been arrested for catnapping, cat burglary, and extortion.\n\nSincerely,\nBob''')","position":{"start":{"line":1645,"column":1,"offset":28657},"end":{"line":1652,"column":4,"offset":28785},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"To keep a nicer flow in your code, you can use the ","position":{"start":{"line":1654,"column":1,"offset":28787},"end":{"line":1654,"column":52,"offset":28838},"indent":[]}},{"type":"inlineCode","value":"dedent","position":{"start":{"line":1654,"column":52,"offset":28838},"end":{"line":1654,"column":60,"offset":28846},"indent":[]}},{"type":"text","value":" function from the ","position":{"start":{"line":1654,"column":60,"offset":28846},"end":{"line":1654,"column":79,"offset":28865},"indent":[]}},{"type":"inlineCode","value":"textwrap","position":{"start":{"line":1654,"column":79,"offset":28865},"end":{"line":1654,"column":89,"offset":28875},"indent":[]}},{"type":"text","value":" standard package.","position":{"start":{"line":1654,"column":89,"offset":28875},"end":{"line":1654,"column":107,"offset":28893},"indent":[]}}],"position":{"start":{"line":1654,"column":1,"offset":28787},"end":{"line":1654,"column":107,"offset":28893},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"from textwrap import dedent\n\ndef my_function():\n    print('''\n        Dear Alice,\n\n        Eve's cat has been arrested for catnapping, cat burglary, and extortion.\n\n        Sincerely,\n        Bob\n        ''').strip()","position":{"start":{"line":1656,"column":1,"offset":28895},"end":{"line":1668,"column":4,"offset":29125},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This generates the same string than before.","position":{"start":{"line":1670,"column":1,"offset":29127},"end":{"line":1670,"column":44,"offset":29170},"indent":[]}}],"position":{"start":{"line":1670,"column":1,"offset":29127},"end":{"line":1670,"column":44,"offset":29170},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Indexing and Slicing Strings","position":{"start":{"line":1672,"column":5,"offset":29176},"end":{"line":1672,"column":33,"offset":29204},"indent":[]}}],"position":{"start":{"line":1672,"column":1,"offset":29172},"end":{"line":1672,"column":33,"offset":29204},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"H   e   l   l   o       w   o   r   l   d    !\n0   1   2   3   4   5   6   7   8   9   10   11","position":{"start":{"line":1674,"column":1,"offset":29206},"end":{"line":1675,"column":52,"offset":29308},"indent":[1]}},{"type":"code","lang":"python","meta":null,"value":"spam = 'Hello world!'\nspam[0]","position":{"start":{"line":1677,"column":1,"offset":29310},"end":{"line":1680,"column":4,"offset":29353},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam[4]","position":{"start":{"line":1682,"column":1,"offset":29355},"end":{"line":1684,"column":4,"offset":29376},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam[-1]","position":{"start":{"line":1686,"column":1,"offset":29378},"end":{"line":1688,"column":4,"offset":29400},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Slicing:","position":{"start":{"line":1690,"column":1,"offset":29402},"end":{"line":1690,"column":9,"offset":29410},"indent":[]}}],"position":{"start":{"line":1690,"column":1,"offset":29402},"end":{"line":1690,"column":9,"offset":29410},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"spam[0:5]","position":{"start":{"line":1692,"column":1,"offset":29412},"end":{"line":1695,"column":4,"offset":29436},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam[:5]","position":{"start":{"line":1697,"column":1,"offset":29438},"end":{"line":1699,"column":4,"offset":29460},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam[6:]","position":{"start":{"line":1701,"column":1,"offset":29462},"end":{"line":1703,"column":4,"offset":29484},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam[6:-1]","position":{"start":{"line":1705,"column":1,"offset":29486},"end":{"line":1707,"column":4,"offset":29510},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam[:-1]","position":{"start":{"line":1709,"column":1,"offset":29512},"end":{"line":1711,"column":4,"offset":29535},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam[::-1]","position":{"start":{"line":1713,"column":1,"offset":29537},"end":{"line":1715,"column":4,"offset":29561},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam = 'Hello world!'\nfizz = spam[0:5]\nfizz","position":{"start":{"line":1717,"column":1,"offset":29563},"end":{"line":1721,"column":4,"offset":29620},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"The in and not in Operators with Strings","position":{"start":{"line":1723,"column":5,"offset":29626},"end":{"line":1723,"column":45,"offset":29666},"indent":[]}}],"position":{"start":{"line":1723,"column":1,"offset":29622},"end":{"line":1723,"column":45,"offset":29666},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"'Hello' in 'Hello World'","position":{"start":{"line":1725,"column":1,"offset":29668},"end":{"line":1727,"column":4,"offset":29706},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"'Hello' in 'Hello'","position":{"start":{"line":1729,"column":1,"offset":29708},"end":{"line":1731,"column":4,"offset":29740},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"'HELLO' in 'Hello World'","position":{"start":{"line":1733,"column":1,"offset":29742},"end":{"line":1735,"column":4,"offset":29780},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"'' in 'spam'","position":{"start":{"line":1737,"column":1,"offset":29782},"end":{"line":1739,"column":4,"offset":29808},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"'cats' not in 'cats and dogs'","position":{"start":{"line":1741,"column":1,"offset":29810},"end":{"line":1743,"column":4,"offset":29853},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"The in and not in Operators with list","position":{"start":{"line":1745,"column":5,"offset":29859},"end":{"line":1745,"column":42,"offset":29896},"indent":[]}}],"position":{"start":{"line":1745,"column":1,"offset":29855},"end":{"line":1745,"column":42,"offset":29896},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"a = [1, 2, 3, 4]\n5 in a","position":{"start":{"line":1747,"column":1,"offset":29898},"end":{"line":1750,"column":4,"offset":29935},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"2 in a","position":{"start":{"line":1752,"column":1,"offset":29937},"end":{"line":1754,"column":4,"offset":29957},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"The upper, lower, isupper, and islower String Methods","position":{"start":{"line":1756,"column":5,"offset":29963},"end":{"line":1756,"column":58,"offset":30016},"indent":[]}}],"position":{"start":{"line":1756,"column":1,"offset":29959},"end":{"line":1756,"column":58,"offset":30016},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"upper()","position":{"start":{"line":1758,"column":1,"offset":30018},"end":{"line":1758,"column":10,"offset":30027},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":1758,"column":10,"offset":30027},"end":{"line":1758,"column":15,"offset":30032},"indent":[]}},{"type":"inlineCode","value":"lower()","position":{"start":{"line":1758,"column":15,"offset":30032},"end":{"line":1758,"column":24,"offset":30041},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":1758,"column":24,"offset":30041},"end":{"line":1758,"column":25,"offset":30042},"indent":[]}}],"position":{"start":{"line":1758,"column":1,"offset":30018},"end":{"line":1758,"column":25,"offset":30042},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"spam = 'Hello world!'\nspam = spam.upper()\nspam","position":{"start":{"line":1760,"column":1,"offset":30044},"end":{"line":1764,"column":4,"offset":30104},"indent":[1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam = spam.lower()\nspam","position":{"start":{"line":1766,"column":1,"offset":30106},"end":{"line":1769,"column":4,"offset":30144},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"isupper() and islower():","position":{"start":{"line":1771,"column":1,"offset":30146},"end":{"line":1771,"column":25,"offset":30170},"indent":[]}}],"position":{"start":{"line":1771,"column":1,"offset":30146},"end":{"line":1771,"column":25,"offset":30170},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"spam = 'Hello world!'\nspam.islower()","position":{"start":{"line":1773,"column":1,"offset":30172},"end":{"line":1776,"column":4,"offset":30222},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam.isupper()","position":{"start":{"line":1778,"column":1,"offset":30224},"end":{"line":1780,"column":4,"offset":30252},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"'HELLO'.isupper()","position":{"start":{"line":1782,"column":1,"offset":30254},"end":{"line":1784,"column":4,"offset":30285},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"'abc12345'.islower()","position":{"start":{"line":1786,"column":1,"offset":30287},"end":{"line":1788,"column":4,"offset":30321},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"'12345'.islower()","position":{"start":{"line":1790,"column":1,"offset":30323},"end":{"line":1792,"column":4,"offset":30354},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"'12345'.isupper()","position":{"start":{"line":1794,"column":1,"offset":30356},"end":{"line":1796,"column":4,"offset":30387},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"The isX String Methods","position":{"start":{"line":1798,"column":5,"offset":30393},"end":{"line":1798,"column":27,"offset":30415},"indent":[]}}],"position":{"start":{"line":1798,"column":1,"offset":30389},"end":{"line":1798,"column":27,"offset":30415},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"isalpha()","position":{"start":{"line":1800,"column":7,"offset":30423},"end":{"line":1800,"column":16,"offset":30432},"indent":[]}}],"position":{"start":{"line":1800,"column":5,"offset":30421},"end":{"line":1800,"column":18,"offset":30434},"indent":[]}},{"type":"text","value":" returns True if the string consists only of letters and is not blank.","position":{"start":{"line":1800,"column":18,"offset":30434},"end":{"line":1800,"column":88,"offset":30504},"indent":[]}}],"position":{"start":{"line":1800,"column":5,"offset":30421},"end":{"line":1800,"column":88,"offset":30504},"indent":[]}}],"position":{"start":{"line":1800,"column":1,"offset":30417},"end":{"line":1800,"column":88,"offset":30504},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"isalnum()","position":{"start":{"line":1801,"column":7,"offset":30511},"end":{"line":1801,"column":16,"offset":30520},"indent":[]}}],"position":{"start":{"line":1801,"column":5,"offset":30509},"end":{"line":1801,"column":18,"offset":30522},"indent":[]}},{"type":"text","value":" returns True if the string consists only of lettersand numbers and is not blank.","position":{"start":{"line":1801,"column":18,"offset":30522},"end":{"line":1801,"column":99,"offset":30603},"indent":[]}}],"position":{"start":{"line":1801,"column":5,"offset":30509},"end":{"line":1801,"column":99,"offset":30603},"indent":[]}}],"position":{"start":{"line":1801,"column":1,"offset":30505},"end":{"line":1801,"column":99,"offset":30603},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"isdecimal()","position":{"start":{"line":1802,"column":7,"offset":30610},"end":{"line":1802,"column":18,"offset":30621},"indent":[]}}],"position":{"start":{"line":1802,"column":5,"offset":30608},"end":{"line":1802,"column":20,"offset":30623},"indent":[]}},{"type":"text","value":" returns True if the string consists only ofnumeric characters and is not blank.","position":{"start":{"line":1802,"column":20,"offset":30623},"end":{"line":1802,"column":100,"offset":30703},"indent":[]}}],"position":{"start":{"line":1802,"column":5,"offset":30608},"end":{"line":1802,"column":100,"offset":30703},"indent":[]}}],"position":{"start":{"line":1802,"column":1,"offset":30604},"end":{"line":1802,"column":100,"offset":30703},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"isspace()","position":{"start":{"line":1803,"column":7,"offset":30710},"end":{"line":1803,"column":16,"offset":30719},"indent":[]}}],"position":{"start":{"line":1803,"column":5,"offset":30708},"end":{"line":1803,"column":18,"offset":30721},"indent":[]}},{"type":"text","value":" returns True if the string consists only of spaces,tabs, and new-lines and is not blank.","position":{"start":{"line":1803,"column":18,"offset":30721},"end":{"line":1803,"column":107,"offset":30810},"indent":[]}}],"position":{"start":{"line":1803,"column":5,"offset":30708},"end":{"line":1803,"column":107,"offset":30810},"indent":[]}}],"position":{"start":{"line":1803,"column":1,"offset":30704},"end":{"line":1803,"column":107,"offset":30810},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"istitle()","position":{"start":{"line":1804,"column":7,"offset":30817},"end":{"line":1804,"column":16,"offset":30826},"indent":[]}}],"position":{"start":{"line":1804,"column":5,"offset":30815},"end":{"line":1804,"column":18,"offset":30828},"indent":[]}},{"type":"text","value":" returns True if the string consists only of wordsthat begin with an uppercase letter followed by onlylowercase letters.","position":{"start":{"line":1804,"column":18,"offset":30828},"end":{"line":1804,"column":138,"offset":30948},"indent":[]}}],"position":{"start":{"line":1804,"column":5,"offset":30815},"end":{"line":1804,"column":138,"offset":30948},"indent":[]}}],"position":{"start":{"line":1804,"column":1,"offset":30811},"end":{"line":1804,"column":138,"offset":30948},"indent":[]}}],"position":{"start":{"line":1800,"column":1,"offset":30417},"end":{"line":1804,"column":138,"offset":30948},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"The startswith and endswith String Methods","position":{"start":{"line":1806,"column":5,"offset":30954},"end":{"line":1806,"column":47,"offset":30996},"indent":[]}}],"position":{"start":{"line":1806,"column":1,"offset":30950},"end":{"line":1806,"column":47,"offset":30996},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"'Hello world!'.startswith('Hello')","position":{"start":{"line":1808,"column":1,"offset":30998},"end":{"line":1810,"column":4,"offset":31046},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"'Hello world!'.endswith('world!')","position":{"start":{"line":1812,"column":1,"offset":31048},"end":{"line":1814,"column":4,"offset":31095},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"'abc123'.startswith('abcdef')","position":{"start":{"line":1816,"column":1,"offset":31097},"end":{"line":1818,"column":4,"offset":31140},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"'abc123'.endswith('12')","position":{"start":{"line":1820,"column":1,"offset":31142},"end":{"line":1822,"column":4,"offset":31179},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"'Hello world!'.startswith('Hello world!')","position":{"start":{"line":1824,"column":1,"offset":31181},"end":{"line":1826,"column":4,"offset":31236},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"'Hello world!'.endswith('Hello world!')","position":{"start":{"line":1828,"column":1,"offset":31238},"end":{"line":1830,"column":4,"offset":31291},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"The join and split String Methods","position":{"start":{"line":1832,"column":5,"offset":31297},"end":{"line":1832,"column":38,"offset":31330},"indent":[]}}],"position":{"start":{"line":1832,"column":1,"offset":31293},"end":{"line":1832,"column":38,"offset":31330},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"join():","position":{"start":{"line":1834,"column":1,"offset":31332},"end":{"line":1834,"column":8,"offset":31339},"indent":[]}}],"position":{"start":{"line":1834,"column":1,"offset":31332},"end":{"line":1834,"column":8,"offset":31339},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"', '.join(['cats', 'rats', 'bats'])","position":{"start":{"line":1836,"column":1,"offset":31341},"end":{"line":1838,"column":4,"offset":31390},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"' '.join(['My', 'name', 'is', 'Simon'])","position":{"start":{"line":1840,"column":1,"offset":31392},"end":{"line":1842,"column":4,"offset":31445},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"'ABC'.join(['My', 'name', 'is', 'Simon'])","position":{"start":{"line":1844,"column":1,"offset":31447},"end":{"line":1846,"column":4,"offset":31502},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"split():","position":{"start":{"line":1848,"column":1,"offset":31504},"end":{"line":1848,"column":9,"offset":31512},"indent":[]}}],"position":{"start":{"line":1848,"column":1,"offset":31504},"end":{"line":1848,"column":9,"offset":31512},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"'My name is Simon'.split()","position":{"start":{"line":1850,"column":1,"offset":31514},"end":{"line":1852,"column":4,"offset":31554},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"'MyABCnameABCisABCSimon'.split('ABC')","position":{"start":{"line":1854,"column":1,"offset":31556},"end":{"line":1856,"column":4,"offset":31607},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"'My name is Simon'.split('m')","position":{"start":{"line":1858,"column":1,"offset":31609},"end":{"line":1860,"column":4,"offset":31652},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Justifying Text with rjust, ljust, and center","position":{"start":{"line":1862,"column":5,"offset":31658},"end":{"line":1862,"column":50,"offset":31703},"indent":[]}}],"position":{"start":{"line":1862,"column":1,"offset":31654},"end":{"line":1862,"column":50,"offset":31703},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"rjust() and ljust():","position":{"start":{"line":1864,"column":1,"offset":31705},"end":{"line":1864,"column":21,"offset":31725},"indent":[]}}],"position":{"start":{"line":1864,"column":1,"offset":31705},"end":{"line":1864,"column":21,"offset":31725},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"'Hello'.rjust(10)","position":{"start":{"line":1866,"column":1,"offset":31727},"end":{"line":1868,"column":4,"offset":31758},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"'Hello'.rjust(20)","position":{"start":{"line":1870,"column":1,"offset":31760},"end":{"line":1872,"column":4,"offset":31791},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"'Hello World'.rjust(20)","position":{"start":{"line":1874,"column":1,"offset":31793},"end":{"line":1876,"column":4,"offset":31830},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"'Hello'.ljust(10)","position":{"start":{"line":1878,"column":1,"offset":31832},"end":{"line":1880,"column":4,"offset":31863},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"An optional second argument to rjust() and ljust() will specify a fill character other than a space character. Enter the following into the interactive shell:","position":{"start":{"line":1882,"column":1,"offset":31865},"end":{"line":1882,"column":159,"offset":32023},"indent":[]}}],"position":{"start":{"line":1882,"column":1,"offset":31865},"end":{"line":1882,"column":159,"offset":32023},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"'Hello'.rjust(20, '*')","position":{"start":{"line":1884,"column":1,"offset":32025},"end":{"line":1886,"column":4,"offset":32061},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"'Hello'.ljust(20, '-')","position":{"start":{"line":1888,"column":1,"offset":32063},"end":{"line":1890,"column":4,"offset":32099},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"center():","position":{"start":{"line":1892,"column":1,"offset":32101},"end":{"line":1892,"column":10,"offset":32110},"indent":[]}}],"position":{"start":{"line":1892,"column":1,"offset":32101},"end":{"line":1892,"column":10,"offset":32110},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"'Hello'.center(20)","position":{"start":{"line":1894,"column":1,"offset":32112},"end":{"line":1896,"column":4,"offset":32144},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"'Hello'.center(20, '=')","position":{"start":{"line":1898,"column":1,"offset":32146},"end":{"line":1900,"column":4,"offset":32183},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Removing Whitespace with strip, rstrip, and lstrip","position":{"start":{"line":1902,"column":5,"offset":32189},"end":{"line":1902,"column":55,"offset":32239},"indent":[]}}],"position":{"start":{"line":1902,"column":1,"offset":32185},"end":{"line":1902,"column":55,"offset":32239},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"spam = '    Hello World     '\nspam.strip()","position":{"start":{"line":1904,"column":1,"offset":32241},"end":{"line":1907,"column":4,"offset":32297},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam.lstrip()","position":{"start":{"line":1909,"column":1,"offset":32299},"end":{"line":1911,"column":4,"offset":32326},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam.rstrip()","position":{"start":{"line":1913,"column":1,"offset":32328},"end":{"line":1915,"column":4,"offset":32355},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"spam = 'SpamSpamBaconSpamEggsSpamSpam'\nspam.strip('ampS')","position":{"start":{"line":1917,"column":1,"offset":32357},"end":{"line":1920,"column":4,"offset":32428},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Copying and Pasting Strings with the pyperclip Module","position":{"start":{"line":1922,"column":5,"offset":32434},"end":{"line":1922,"column":58,"offset":32487},"indent":[]}}],"position":{"start":{"line":1922,"column":1,"offset":32430},"end":{"line":1922,"column":58,"offset":32487},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"First, install ","position":{"start":{"line":1924,"column":1,"offset":32489},"end":{"line":1924,"column":16,"offset":32504},"indent":[]}},{"type":"inlineCode","value":"pypeerclip","position":{"start":{"line":1924,"column":16,"offset":32504},"end":{"line":1924,"column":28,"offset":32516},"indent":[]}},{"type":"text","value":" with pip:","position":{"start":{"line":1924,"column":28,"offset":32516},"end":{"line":1924,"column":38,"offset":32526},"indent":[]}}],"position":{"start":{"line":1924,"column":1,"offset":32489},"end":{"line":1924,"column":38,"offset":32526},"indent":[]}},{"type":"code","lang":"shell","meta":null,"value":"pip install pyperclip","position":{"start":{"line":1926,"column":1,"offset":32528},"end":{"line":1928,"column":4,"offset":32562},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"import pyperclip\n\npyperclip.copy('Hello world!')\npyperclip.paste()","position":{"start":{"line":1930,"column":1,"offset":32564},"end":{"line":1935,"column":4,"offset":32644},"indent":[1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"String Formatting","position":{"start":{"line":1937,"column":4,"offset":32649},"end":{"line":1937,"column":21,"offset":32666},"indent":[]}}],"position":{"start":{"line":1937,"column":1,"offset":32646},"end":{"line":1937,"column":21,"offset":32666},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"% operator","position":{"start":{"line":1939,"column":5,"offset":32672},"end":{"line":1939,"column":15,"offset":32682},"indent":[]}}],"position":{"start":{"line":1939,"column":1,"offset":32668},"end":{"line":1939,"column":15,"offset":32682},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"name = 'Pete'\n'Hello %s' % name","position":{"start":{"line":1941,"column":1,"offset":32684},"end":{"line":1944,"column":4,"offset":32729},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"We can use the ","position":{"start":{"line":1946,"column":1,"offset":32731},"end":{"line":1946,"column":16,"offset":32746},"indent":[]}},{"type":"inlineCode","value":"%x","position":{"start":{"line":1946,"column":16,"offset":32746},"end":{"line":1946,"column":20,"offset":32750},"indent":[]}},{"type":"text","value":" format specifier to convert an int value to a string:","position":{"start":{"line":1946,"column":20,"offset":32750},"end":{"line":1946,"column":74,"offset":32804},"indent":[]}}],"position":{"start":{"line":1946,"column":1,"offset":32731},"end":{"line":1946,"column":74,"offset":32804},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"num = 5\n'I have %x apples' % num","position":{"start":{"line":1948,"column":1,"offset":32806},"end":{"line":1951,"column":4,"offset":32852},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Note: For new code, using str.format or f-strings is strongly recommended over the ","position":{"start":{"line":1953,"column":1,"offset":32854},"end":{"line":1953,"column":84,"offset":32937},"indent":[]}},{"type":"inlineCode","value":"%","position":{"start":{"line":1953,"column":84,"offset":32937},"end":{"line":1953,"column":87,"offset":32940},"indent":[]}},{"type":"text","value":" operator.","position":{"start":{"line":1953,"column":87,"offset":32940},"end":{"line":1953,"column":97,"offset":32950},"indent":[]}}],"position":{"start":{"line":1953,"column":1,"offset":32854},"end":{"line":1953,"column":97,"offset":32950},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"str.format","position":{"start":{"line":1955,"column":5,"offset":32956},"end":{"line":1955,"column":15,"offset":32966},"indent":[]}}],"position":{"start":{"line":1955,"column":1,"offset":32952},"end":{"line":1955,"column":15,"offset":32966},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Python 3 introduced a new way to do string formatting that was later back-ported to Python 2.7. This makes the syntax for string formatting more regular.","position":{"start":{"line":1957,"column":1,"offset":32968},"end":{"line":1957,"column":154,"offset":33121},"indent":[]}}],"position":{"start":{"line":1957,"column":1,"offset":32968},"end":{"line":1957,"column":154,"offset":33121},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"name = 'John'\nage = 20'\n\n\"Hello I'm {}, my age is {}\".format(name, age)","position":{"start":{"line":1959,"column":1,"offset":33123},"end":{"line":1964,"column":4,"offset":33208},"indent":[1,1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"\"Hello I'm {0}, my age is {1}\".format(name, age)","position":{"start":{"line":1966,"column":1,"offset":33210},"end":{"line":1968,"column":4,"offset":33272},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The official ","position":{"start":{"line":1970,"column":1,"offset":33274},"end":{"line":1970,"column":14,"offset":33287},"indent":[]}},{"type":"link","title":null,"url":"https://docs.python.org/3/library/stdtypes.html?highlight=sprintf#printf-style-string-formatting","children":[{"type":"text","value":"Python 3.x documentation","position":{"start":{"line":1970,"column":15,"offset":33288},"end":{"line":1970,"column":39,"offset":33312},"indent":[]}}],"position":{"start":{"line":1970,"column":14,"offset":33287},"end":{"line":1970,"column":138,"offset":33411},"indent":[]}},{"type":"text","value":" recommend ","position":{"start":{"line":1970,"column":138,"offset":33411},"end":{"line":1970,"column":149,"offset":33422},"indent":[]}},{"type":"inlineCode","value":"str.format","position":{"start":{"line":1970,"column":149,"offset":33422},"end":{"line":1970,"column":161,"offset":33434},"indent":[]}},{"type":"text","value":" over the ","position":{"start":{"line":1970,"column":161,"offset":33434},"end":{"line":1970,"column":171,"offset":33444},"indent":[]}},{"type":"inlineCode","value":"%","position":{"start":{"line":1970,"column":171,"offset":33444},"end":{"line":1970,"column":174,"offset":33447},"indent":[]}},{"type":"text","value":" operator:","position":{"start":{"line":1970,"column":174,"offset":33447},"end":{"line":1970,"column":184,"offset":33457},"indent":[]}}],"position":{"start":{"line":1970,"column":1,"offset":33274},"end":{"line":1970,"column":184,"offset":33457},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"The formatting operations described here exhibit a variety of quirks that lead to a number of common errors (such as failing to display tuples and dictionaries correctly). Using the newer formatted string literals or the str.format() interface helps avoid these errors. These alternatives also provide more powerful, flexible and extensible approaches to formatting text.","position":{"start":{"line":1972,"column":3,"offset":33461},"end":{"line":1972,"column":374,"offset":33832},"indent":[]}}],"position":{"start":{"line":1972,"column":3,"offset":33461},"end":{"line":1972,"column":374,"offset":33832},"indent":[]}}],"position":{"start":{"line":1972,"column":1,"offset":33459},"end":{"line":1972,"column":374,"offset":33832},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Lazy string formatting","position":{"start":{"line":1974,"column":5,"offset":33838},"end":{"line":1974,"column":27,"offset":33860},"indent":[]}}],"position":{"start":{"line":1974,"column":1,"offset":33834},"end":{"line":1974,"column":27,"offset":33860},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You would only use ","position":{"start":{"line":1976,"column":1,"offset":33862},"end":{"line":1976,"column":20,"offset":33881},"indent":[]}},{"type":"inlineCode","value":"%s","position":{"start":{"line":1976,"column":20,"offset":33881},"end":{"line":1976,"column":24,"offset":33885},"indent":[]}},{"type":"text","value":" string formatting on functions that can do lazy parameters evaluation,\nthe most common being logging:","position":{"start":{"line":1976,"column":24,"offset":33885},"end":{"line":1977,"column":31,"offset":33987},"indent":[1]}}],"position":{"start":{"line":1976,"column":1,"offset":33862},"end":{"line":1977,"column":31,"offset":33987},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Prefer:","position":{"start":{"line":1979,"column":1,"offset":33989},"end":{"line":1979,"column":8,"offset":33996},"indent":[]}}],"position":{"start":{"line":1979,"column":1,"offset":33989},"end":{"line":1979,"column":8,"offset":33996},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"name = \"alice\"\nlogging.debug(\"User name: %s\", name)","position":{"start":{"line":1981,"column":1,"offset":33998},"end":{"line":1984,"column":4,"offset":34063},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Over:","position":{"start":{"line":1986,"column":1,"offset":34065},"end":{"line":1986,"column":6,"offset":34070},"indent":[]}}],"position":{"start":{"line":1986,"column":1,"offset":34065},"end":{"line":1986,"column":6,"offset":34070},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"logging.debug(\"User name: {}\".format(name))","position":{"start":{"line":1988,"column":1,"offset":34072},"end":{"line":1990,"column":4,"offset":34129},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Or:","position":{"start":{"line":1992,"column":1,"offset":34131},"end":{"line":1992,"column":4,"offset":34134},"indent":[]}}],"position":{"start":{"line":1992,"column":1,"offset":34131},"end":{"line":1992,"column":4,"offset":34134},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"logging.debug(\"User name: \" + name)","position":{"start":{"line":1994,"column":1,"offset":34136},"end":{"line":1996,"column":4,"offset":34185},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Formatted String Literals or f-strings","position":{"start":{"line":1998,"column":5,"offset":34191},"end":{"line":1998,"column":43,"offset":34229},"indent":[]}}],"position":{"start":{"line":1998,"column":1,"offset":34187},"end":{"line":1998,"column":43,"offset":34229},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Python 3.6+","position":{"start":{"line":2000,"column":1,"offset":34231},"end":{"line":2000,"column":12,"offset":34242},"indent":[]}}],"position":{"start":{"line":2000,"column":1,"offset":34231},"end":{"line":2000,"column":12,"offset":34242},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"name = 'Elizabeth'\nf'Hello {name}!'","position":{"start":{"line":2002,"column":1,"offset":34244},"end":{"line":2005,"column":4,"offset":34293},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"It is even possible to do inline arithmetic with it:","position":{"start":{"line":2007,"column":1,"offset":34295},"end":{"line":2007,"column":53,"offset":34347},"indent":[]}}],"position":{"start":{"line":2007,"column":1,"offset":34295},"end":{"line":2007,"column":53,"offset":34347},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"a = 5\nb = 10\nf'Five plus ten is {a + b} and not {2 * (a + b)}.'","position":{"start":{"line":2009,"column":1,"offset":34349},"end":{"line":2013,"column":4,"offset":34426},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Template Strings","position":{"start":{"line":2015,"column":5,"offset":34432},"end":{"line":2015,"column":21,"offset":34448},"indent":[]}}],"position":{"start":{"line":2015,"column":1,"offset":34428},"end":{"line":2015,"column":21,"offset":34448},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A simpler and less powerful mechanism, but it is recommended when handling format strings generated by users. Due to their reduced complexity template strings are a safer choice.","position":{"start":{"line":2017,"column":1,"offset":34450},"end":{"line":2017,"column":179,"offset":34628},"indent":[]}}],"position":{"start":{"line":2017,"column":1,"offset":34450},"end":{"line":2017,"column":179,"offset":34628},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"from string import Template\n\nname = 'Elizabeth'\nt = Template('Hey $name!')\nt.substitute(name=name)","position":{"start":{"line":2019,"column":1,"offset":34630},"end":{"line":2025,"column":4,"offset":34742},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Regular Expressions","position":{"start":{"line":2027,"column":4,"offset":34747},"end":{"line":2027,"column":23,"offset":34766},"indent":[]}}],"position":{"start":{"line":2027,"column":1,"offset":34744},"end":{"line":2027,"column":23,"offset":34766},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Import the regex module with ","position":{"start":{"line":2029,"column":4,"offset":34771},"end":{"line":2029,"column":33,"offset":34800},"indent":[]}},{"type":"inlineCode","value":"import re","position":{"start":{"line":2029,"column":33,"offset":34800},"end":{"line":2029,"column":44,"offset":34811},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":2029,"column":44,"offset":34811},"end":{"line":2029,"column":45,"offset":34812},"indent":[]}}],"position":{"start":{"line":2029,"column":4,"offset":34771},"end":{"line":2029,"column":45,"offset":34812},"indent":[]}}],"position":{"start":{"line":2029,"column":1,"offset":34768},"end":{"line":2029,"column":45,"offset":34812},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Create a Regex object with the ","position":{"start":{"line":2030,"column":4,"offset":34816},"end":{"line":2030,"column":35,"offset":34847},"indent":[]}},{"type":"inlineCode","value":"re.compile()","position":{"start":{"line":2030,"column":35,"offset":34847},"end":{"line":2030,"column":49,"offset":34861},"indent":[]}},{"type":"text","value":" function. (Remember to use a raw string.)","position":{"start":{"line":2030,"column":49,"offset":34861},"end":{"line":2030,"column":91,"offset":34903},"indent":[]}}],"position":{"start":{"line":2030,"column":4,"offset":34816},"end":{"line":2030,"column":91,"offset":34903},"indent":[]}}],"position":{"start":{"line":2030,"column":1,"offset":34813},"end":{"line":2030,"column":91,"offset":34903},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Pass the string you want to search into the Regex object's ","position":{"start":{"line":2031,"column":4,"offset":34907},"end":{"line":2031,"column":63,"offset":34966},"indent":[]}},{"type":"inlineCode","value":"search()","position":{"start":{"line":2031,"column":63,"offset":34966},"end":{"line":2031,"column":73,"offset":34976},"indent":[]}},{"type":"text","value":" method. This returns a ","position":{"start":{"line":2031,"column":73,"offset":34976},"end":{"line":2031,"column":97,"offset":35000},"indent":[]}},{"type":"inlineCode","value":"Match","position":{"start":{"line":2031,"column":97,"offset":35000},"end":{"line":2031,"column":104,"offset":35007},"indent":[]}},{"type":"text","value":" object.","position":{"start":{"line":2031,"column":104,"offset":35007},"end":{"line":2031,"column":112,"offset":35015},"indent":[]}}],"position":{"start":{"line":2031,"column":4,"offset":34907},"end":{"line":2031,"column":112,"offset":35015},"indent":[]}}],"position":{"start":{"line":2031,"column":1,"offset":34904},"end":{"line":2031,"column":112,"offset":35015},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Call the Match object's ","position":{"start":{"line":2032,"column":4,"offset":35019},"end":{"line":2032,"column":28,"offset":35043},"indent":[]}},{"type":"inlineCode","value":"group()","position":{"start":{"line":2032,"column":28,"offset":35043},"end":{"line":2032,"column":37,"offset":35052},"indent":[]}},{"type":"text","value":" method to return a string of the actual matched text.","position":{"start":{"line":2032,"column":37,"offset":35052},"end":{"line":2032,"column":91,"offset":35106},"indent":[]}}],"position":{"start":{"line":2032,"column":4,"offset":35019},"end":{"line":2032,"column":91,"offset":35106},"indent":[]}}],"position":{"start":{"line":2032,"column":1,"offset":35016},"end":{"line":2032,"column":91,"offset":35106},"indent":[]}}],"position":{"start":{"line":2029,"column":1,"offset":34768},"end":{"line":2032,"column":91,"offset":35106},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"All the regex functions in Python are in the re module:","position":{"start":{"line":2034,"column":1,"offset":35108},"end":{"line":2034,"column":56,"offset":35163},"indent":[]}}],"position":{"start":{"line":2034,"column":1,"offset":35108},"end":{"line":2034,"column":56,"offset":35163},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import re","position":{"start":{"line":2036,"column":1,"offset":35165},"end":{"line":2038,"column":4,"offset":35188},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Matching Regex Objects","position":{"start":{"line":2040,"column":5,"offset":35194},"end":{"line":2040,"column":27,"offset":35216},"indent":[]}}],"position":{"start":{"line":2040,"column":1,"offset":35190},"end":{"line":2040,"column":27,"offset":35216},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"phone_num_regex = re.compile(r'\\d\\d\\d-\\d\\d\\d-\\d\\d\\d\\d')\nmo = phone_num_regex.search('My number is 415-555-4242.')\nprint('Phone number found: {}'.format(mo.group()))","position":{"start":{"line":2042,"column":1,"offset":35218},"end":{"line":2046,"column":4,"offset":35396},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Grouping with Parentheses","position":{"start":{"line":2048,"column":5,"offset":35402},"end":{"line":2048,"column":30,"offset":35427},"indent":[]}}],"position":{"start":{"line":2048,"column":1,"offset":35398},"end":{"line":2048,"column":30,"offset":35427},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"phone_num_regex = re.compile(r'(\\d\\d\\d)-(\\d\\d\\d-\\d\\d\\d\\d)')\nmo = phone_num_regex.search('My number is 415-555-4242.')\nmo.group(1)","position":{"start":{"line":2050,"column":1,"offset":35429},"end":{"line":2054,"column":4,"offset":35572},"indent":[1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"mo.group(2)","position":{"start":{"line":2056,"column":1,"offset":35574},"end":{"line":2058,"column":4,"offset":35599},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"mo.group(0)","position":{"start":{"line":2060,"column":1,"offset":35601},"end":{"line":2062,"column":4,"offset":35626},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"mo.group()","position":{"start":{"line":2064,"column":1,"offset":35628},"end":{"line":2066,"column":4,"offset":35652},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"To retrieve all the groups at once: use the groups() method—note the plural form for the name.","position":{"start":{"line":2068,"column":1,"offset":35654},"end":{"line":2068,"column":95,"offset":35748},"indent":[]}}],"position":{"start":{"line":2068,"column":1,"offset":35654},"end":{"line":2068,"column":95,"offset":35748},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"mo.groups()\narea_code, main_number = mo.groups()","position":{"start":{"line":2070,"column":1,"offset":35750},"end":{"line":2073,"column":4,"offset":35812},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"print(area_code)","position":{"start":{"line":2075,"column":1,"offset":35814},"end":{"line":2077,"column":4,"offset":35844},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"print(main_number)","position":{"start":{"line":2079,"column":1,"offset":35846},"end":{"line":2081,"column":4,"offset":35878},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Matching Multiple Groups with the Pipe","position":{"start":{"line":2083,"column":5,"offset":35884},"end":{"line":2083,"column":43,"offset":35922},"indent":[]}}],"position":{"start":{"line":2083,"column":1,"offset":35880},"end":{"line":2083,"column":43,"offset":35922},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The | character is called a pipe. You can use it anywhere you want to match one of many expressions. For example, the regular expression r'Batman|Tina Fey' will match either 'Batman' or 'Tina Fey'.","position":{"start":{"line":2085,"column":1,"offset":35924},"end":{"line":2085,"column":198,"offset":36121},"indent":[]}}],"position":{"start":{"line":2085,"column":1,"offset":35924},"end":{"line":2085,"column":198,"offset":36121},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"hero_regex = re.compile (r'Batman|Tina Fey')\nmo1 = hero_regex.search('Batman and Tina Fey.')\nmo1.group()","position":{"start":{"line":2087,"column":1,"offset":36123},"end":{"line":2091,"column":4,"offset":36241},"indent":[1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"mo2 = hero_regex.search('Tina Fey and Batman.')\nmo2.group()","position":{"start":{"line":2093,"column":1,"offset":36243},"end":{"line":2096,"column":4,"offset":36316},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"You can also use the pipe to match one of several patterns as part of your regex:","position":{"start":{"line":2098,"column":1,"offset":36318},"end":{"line":2098,"column":82,"offset":36399},"indent":[]}}],"position":{"start":{"line":2098,"column":1,"offset":36318},"end":{"line":2098,"column":82,"offset":36399},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"bat_regex = re.compile(r'Bat(man|mobile|copter|bat)')\nmo = bat_regex.search('Batmobile lost a wheel')\nmo.group()","position":{"start":{"line":2100,"column":1,"offset":36401},"end":{"line":2104,"column":4,"offset":36527},"indent":[1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"mo.group(1)","position":{"start":{"line":2106,"column":1,"offset":36529},"end":{"line":2108,"column":4,"offset":36554},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Optional Matching with the Question Mark","position":{"start":{"line":2110,"column":5,"offset":36560},"end":{"line":2110,"column":45,"offset":36600},"indent":[]}}],"position":{"start":{"line":2110,"column":1,"offset":36556},"end":{"line":2110,"column":45,"offset":36600},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ? character flags the group that precedes it as an optional part of the pattern.","position":{"start":{"line":2112,"column":1,"offset":36602},"end":{"line":2112,"column":85,"offset":36686},"indent":[]}}],"position":{"start":{"line":2112,"column":1,"offset":36602},"end":{"line":2112,"column":85,"offset":36686},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"bat_regex = re.compile(r'Bat(wo)?man')\nmo1 = bat_regex.search('The Adventures of Batman')\nmo1.group()","position":{"start":{"line":2114,"column":1,"offset":36688},"end":{"line":2118,"column":4,"offset":36803},"indent":[1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"mo2 = bat_regex.search('The Adventures of Batwoman')\nmo2.group()","position":{"start":{"line":2120,"column":1,"offset":36805},"end":{"line":2123,"column":4,"offset":36883},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Matching Zero or More with the Star","position":{"start":{"line":2125,"column":5,"offset":36889},"end":{"line":2125,"column":40,"offset":36924},"indent":[]}}],"position":{"start":{"line":2125,"column":1,"offset":36885},"end":{"line":2125,"column":40,"offset":36924},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":2127,"column":1,"offset":36926},"end":{"line":2127,"column":5,"offset":36930},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":2127,"column":5,"offset":36930},"end":{"line":2127,"column":7,"offset":36932},"indent":[]}},{"type":"text","value":" (called the star or asterisk) means \"match zero or more\"—the group that precedes the star can occur any number of times in the text.","position":{"start":{"line":2127,"column":7,"offset":36932},"end":{"line":2127,"column":140,"offset":37065},"indent":[]}}],"position":{"start":{"line":2127,"column":1,"offset":36926},"end":{"line":2127,"column":140,"offset":37065},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"bat_regex = re.compile(r'Bat(wo)*man')\nmo1 = bat_regex.search('The Adventures of Batman')\nmo1.group()","position":{"start":{"line":2129,"column":1,"offset":37067},"end":{"line":2133,"column":4,"offset":37182},"indent":[1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"mo2 = bat_regex.search('The Adventures of Batwoman')\nmo2.group()","position":{"start":{"line":2135,"column":1,"offset":37184},"end":{"line":2138,"column":4,"offset":37262},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"mo3 = bat_regex.search('The Adventures of Batwowowowoman')\nmo3.group()","position":{"start":{"line":2140,"column":1,"offset":37264},"end":{"line":2143,"column":4,"offset":37348},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Matching One or More with the Plus","position":{"start":{"line":2145,"column":5,"offset":37354},"end":{"line":2145,"column":39,"offset":37388},"indent":[]}}],"position":{"start":{"line":2145,"column":1,"offset":37350},"end":{"line":2145,"column":39,"offset":37388},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"While ","position":{"start":{"line":2147,"column":1,"offset":37390},"end":{"line":2147,"column":7,"offset":37396},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":2147,"column":7,"offset":37396},"end":{"line":2147,"column":9,"offset":37398},"indent":[]}},{"type":"text","value":" means \"match zero or more,\" the + (or plus) means \"match one or more\". The group preceding a plus must appear at least once. It is not optional:","position":{"start":{"line":2147,"column":9,"offset":37398},"end":{"line":2147,"column":154,"offset":37543},"indent":[]}}],"position":{"start":{"line":2147,"column":1,"offset":37390},"end":{"line":2147,"column":154,"offset":37543},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"bat_regex = re.compile(r'Bat(wo)+man')\nmo1 = bat_regex.search('The Adventures of Batwoman')\nmo1.group()","position":{"start":{"line":2149,"column":1,"offset":37545},"end":{"line":2153,"column":4,"offset":37662},"indent":[1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"mo2 = bat_regex.search('The Adventures of Batwowowowoman')\nmo2.group()","position":{"start":{"line":2155,"column":1,"offset":37664},"end":{"line":2158,"column":4,"offset":37748},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"mo3 = bat_regex.search('The Adventures of Batman')\nmo3 is None","position":{"start":{"line":2160,"column":1,"offset":37750},"end":{"line":2163,"column":4,"offset":37826},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Matching Specific Repetitions with Curly Brackets","position":{"start":{"line":2165,"column":5,"offset":37832},"end":{"line":2165,"column":54,"offset":37881},"indent":[]}}],"position":{"start":{"line":2165,"column":1,"offset":37828},"end":{"line":2165,"column":54,"offset":37881},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If you have a group that you want to repeat a specific number of times, follow the group in your regex with a number in curly brackets. For example, the regex (Ha){3} will match the string 'HaHaHa', but it will not match 'HaHa', since the latter has only two repeats of the (Ha) group.","position":{"start":{"line":2167,"column":1,"offset":37883},"end":{"line":2167,"column":286,"offset":38168},"indent":[]}}],"position":{"start":{"line":2167,"column":1,"offset":37883},"end":{"line":2167,"column":286,"offset":38168},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Instead of one number, you can specify a range by writing a minimum, a comma, and a maximum in between the curly brackets. For example, the regex (Ha){3,5} will match 'HaHaHa', 'HaHaHaHa', and 'HaHaHaHaHa'.","position":{"start":{"line":2169,"column":1,"offset":38170},"end":{"line":2169,"column":207,"offset":38376},"indent":[]}}],"position":{"start":{"line":2169,"column":1,"offset":38170},"end":{"line":2169,"column":207,"offset":38376},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"ha_regex = re.compile(r'(Ha){3}')\nmo1 = ha_regex.search('HaHaHa')\nmo1.group()","position":{"start":{"line":2171,"column":1,"offset":38378},"end":{"line":2175,"column":4,"offset":38469},"indent":[1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"mo2 = ha_regex.search('Ha')\nmo2 is None","position":{"start":{"line":2177,"column":1,"offset":38471},"end":{"line":2180,"column":4,"offset":38524},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Greedy and Nongreedy Matching","position":{"start":{"line":2182,"column":5,"offset":38530},"end":{"line":2182,"column":34,"offset":38559},"indent":[]}}],"position":{"start":{"line":2182,"column":1,"offset":38526},"end":{"line":2182,"column":34,"offset":38559},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Python's regular expressions are greedy by default, which means that in ambiguous situations they will match the longest string possible. The non-greedy version of the curly brackets, which matches the shortest string possible, has the closing curly bracket followed by a question mark.","position":{"start":{"line":2184,"column":1,"offset":38561},"end":{"line":2184,"column":287,"offset":38847},"indent":[]}}],"position":{"start":{"line":2184,"column":1,"offset":38561},"end":{"line":2184,"column":287,"offset":38847},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"greedy_ha_regex = re.compile(r'(Ha){3,5}')\nmo1 = greedy_ha_regex.search('HaHaHaHaHa')\nmo1.group()","position":{"start":{"line":2186,"column":1,"offset":38849},"end":{"line":2190,"column":4,"offset":38960},"indent":[1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"nongreedy_ha_regex = re.compile(r'(Ha){3,5}?')\nmo2 = nongreedy_ha_regex.search('HaHaHaHaHa')\nmo2.group()","position":{"start":{"line":2192,"column":1,"offset":38962},"end":{"line":2196,"column":4,"offset":39080},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"The findall Method","position":{"start":{"line":2198,"column":5,"offset":39086},"end":{"line":2198,"column":23,"offset":39104},"indent":[]}}],"position":{"start":{"line":2198,"column":1,"offset":39082},"end":{"line":2198,"column":23,"offset":39104},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In addition to the search() method, Regex objects also have a findall() method. While search() will return a Match object of the first matched text in the searched string, the findall() method will return the strings of every match in the searched string.","position":{"start":{"line":2200,"column":1,"offset":39106},"end":{"line":2200,"column":256,"offset":39361},"indent":[]}}],"position":{"start":{"line":2200,"column":1,"offset":39106},"end":{"line":2200,"column":256,"offset":39361},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"phone_num_regex = re.compile(r'\\d\\d\\d-\\d\\d\\d-\\d\\d\\d\\d') # has no groups\nphone_num_regex.findall('Cell: 415-555-9999 Work: 212-555-0000')","position":{"start":{"line":2202,"column":1,"offset":39363},"end":{"line":2205,"column":4,"offset":39513},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"To summarize what the findall() method returns, remember the following:","position":{"start":{"line":2207,"column":1,"offset":39515},"end":{"line":2207,"column":72,"offset":39586},"indent":[]}}],"position":{"start":{"line":2207,"column":1,"offset":39515},"end":{"line":2207,"column":72,"offset":39586},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"When called on a regex with no groups, such as \\d-\\d\\d\\d-\\d\\d\\d\\d, the method findall() returns a list of ng matches, such as ","position":{"start":{"line":2209,"column":5,"offset":39592},"end":{"line":2209,"column":131,"offset":39718},"indent":[]}},{"type":"linkReference","identifier":"'415-555-9999', '212-555-0000'","label":"'415-555-9999', '212-555-0000'","referenceType":"shortcut","children":[{"type":"text","value":"'415-555-9999', '212-555-0000'","position":{"start":{"line":2209,"column":132,"offset":39719},"end":{"line":2209,"column":162,"offset":39749},"indent":[]}}],"position":{"start":{"line":2209,"column":131,"offset":39718},"end":{"line":2209,"column":163,"offset":39750},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":2209,"column":163,"offset":39750},"end":{"line":2209,"column":164,"offset":39751},"indent":[]}}],"position":{"start":{"line":2209,"column":5,"offset":39592},"end":{"line":2209,"column":164,"offset":39751},"indent":[]}}],"position":{"start":{"line":2209,"column":1,"offset":39588},"end":{"line":2209,"column":164,"offset":39751},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"-","position":{"start":{"line":2210,"column":1,"offset":39752},"end":{"line":2210,"column":2,"offset":39753},"indent":[]}}],"position":{"start":{"line":2210,"column":1,"offset":39752},"end":{"line":2210,"column":2,"offset":39753},"indent":[]}}],"position":{"start":{"line":2210,"column":1,"offset":39752},"end":{"line":2210,"column":2,"offset":39753},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"When called on a regex that has groups, such as (\\d\\d\\d)-d\\d)-(\\d\\ d\\d\\d), the method findall() returns a list of es of strings (one string for each group), such as ","position":{"start":{"line":2211,"column":5,"offset":39758},"end":{"line":2211,"column":170,"offset":39923},"indent":[]}},{"type":"linkReference","identifier":"('415', ', '9999'), ('212', '555', '0000')","label":"('415', ', '9999'), ('212', '555', '0000')","referenceType":"shortcut","children":[{"type":"text","value":"('415', ', '9999'), ('212', '555', '0000')","position":{"start":{"line":2211,"column":171,"offset":39924},"end":{"line":2211,"column":213,"offset":39966},"indent":[]}}],"position":{"start":{"line":2211,"column":170,"offset":39923},"end":{"line":2211,"column":214,"offset":39967},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":2211,"column":214,"offset":39967},"end":{"line":2211,"column":215,"offset":39968},"indent":[]}}],"position":{"start":{"line":2211,"column":5,"offset":39758},"end":{"line":2211,"column":215,"offset":39968},"indent":[]}}],"position":{"start":{"line":2211,"column":1,"offset":39754},"end":{"line":2211,"column":215,"offset":39968},"indent":[]}}],"position":{"start":{"line":2209,"column":1,"offset":39588},"end":{"line":2211,"column":215,"offset":39968},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Making Your Own Character Classes","position":{"start":{"line":2213,"column":5,"offset":39974},"end":{"line":2213,"column":38,"offset":40007},"indent":[]}}],"position":{"start":{"line":2213,"column":1,"offset":39970},"end":{"line":2213,"column":38,"offset":40007},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"There are times when you want to match a set of characters but the shorthand character classes (\\d, \\w, \\s, and so on) are too broad. You can define your own character class using square brackets. For example, the character class ","position":{"start":{"line":2215,"column":1,"offset":40009},"end":{"line":2215,"column":231,"offset":40239},"indent":[]}},{"type":"linkReference","identifier":"aeiouaeiou","label":"aeiouAEIOU","referenceType":"shortcut","children":[{"type":"text","value":"aeiouAEIOU","position":{"start":{"line":2215,"column":232,"offset":40240},"end":{"line":2215,"column":242,"offset":40250},"indent":[]}}],"position":{"start":{"line":2215,"column":231,"offset":40239},"end":{"line":2215,"column":243,"offset":40251},"indent":[]}},{"type":"text","value":" will match any vowel, both lowercase and uppercase.","position":{"start":{"line":2215,"column":243,"offset":40251},"end":{"line":2215,"column":295,"offset":40303},"indent":[]}}],"position":{"start":{"line":2215,"column":1,"offset":40009},"end":{"line":2215,"column":295,"offset":40303},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"vowel_regex = re.compile(r'[aeiouAEIOU]')\nvowel_regex.findall('Robocop eats baby food. BABY FOOD.')","position":{"start":{"line":2217,"column":1,"offset":40305},"end":{"line":2220,"column":4,"offset":40418},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"You can also include ranges of letters or numbers by using a hyphen. For example, the character class ","position":{"start":{"line":2222,"column":1,"offset":40420},"end":{"line":2222,"column":103,"offset":40522},"indent":[]}},{"type":"linkReference","identifier":"a-za-z0-9","label":"a-zA-Z0-9","referenceType":"shortcut","children":[{"type":"text","value":"a-zA-Z0-9","position":{"start":{"line":2222,"column":104,"offset":40523},"end":{"line":2222,"column":113,"offset":40532},"indent":[]}}],"position":{"start":{"line":2222,"column":103,"offset":40522},"end":{"line":2222,"column":114,"offset":40533},"indent":[]}},{"type":"text","value":" will match all lowercase letters, uppercase letters, and numbers.","position":{"start":{"line":2222,"column":114,"offset":40533},"end":{"line":2222,"column":180,"offset":40599},"indent":[]}}],"position":{"start":{"line":2222,"column":1,"offset":40420},"end":{"line":2222,"column":180,"offset":40599},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"By placing a caret character (^) just after the character class's opening bracket, you can make a negative character class. A negative character class will match all the characters that are not in the character class. For example, enter the following into the interactive shell:","position":{"start":{"line":2224,"column":1,"offset":40601},"end":{"line":2224,"column":279,"offset":40879},"indent":[]}}],"position":{"start":{"line":2224,"column":1,"offset":40601},"end":{"line":2224,"column":279,"offset":40879},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"consonant_regex = re.compile(r'[^aeiouAEIOU]')\nconsonant_regex.findall('Robocop eats baby food. BABY FOOD.')","position":{"start":{"line":2226,"column":1,"offset":40881},"end":{"line":2229,"column":4,"offset":41003},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"The Caret and Dollar Sign Characters","position":{"start":{"line":2231,"column":5,"offset":41009},"end":{"line":2231,"column":41,"offset":41045},"indent":[]}}],"position":{"start":{"line":2231,"column":1,"offset":41005},"end":{"line":2231,"column":41,"offset":41045},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You can also use the caret symbol (^) at the start of a regex to indicate that a match must occur at the beginning of the searched text.","position":{"start":{"line":2233,"column":5,"offset":41051},"end":{"line":2233,"column":141,"offset":41187},"indent":[]}}],"position":{"start":{"line":2233,"column":5,"offset":41051},"end":{"line":2233,"column":141,"offset":41187},"indent":[]}}],"position":{"start":{"line":2233,"column":1,"offset":41047},"end":{"line":2233,"column":141,"offset":41187},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"-","position":{"start":{"line":2234,"column":1,"offset":41188},"end":{"line":2234,"column":2,"offset":41189},"indent":[]}}],"position":{"start":{"line":2234,"column":1,"offset":41188},"end":{"line":2234,"column":2,"offset":41189},"indent":[]}}],"position":{"start":{"line":2234,"column":1,"offset":41188},"end":{"line":2234,"column":2,"offset":41189},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Likewise, you can put a dollar sign ($) at the end of the regex to indicate the string must end with this regex pattern.","position":{"start":{"line":2235,"column":5,"offset":41194},"end":{"line":2235,"column":125,"offset":41314},"indent":[]}}],"position":{"start":{"line":2235,"column":5,"offset":41194},"end":{"line":2235,"column":125,"offset":41314},"indent":[]}}],"position":{"start":{"line":2235,"column":1,"offset":41190},"end":{"line":2236,"column":1,"offset":41315},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"And you can use the ^ and $ together to indicate that the entire string must match the regex—that is, it's not enough for a match to be made on some subset of the string.","position":{"start":{"line":2237,"column":5,"offset":41320},"end":{"line":2237,"column":175,"offset":41490},"indent":[]}}],"position":{"start":{"line":2237,"column":5,"offset":41320},"end":{"line":2237,"column":175,"offset":41490},"indent":[]}}],"position":{"start":{"line":2237,"column":1,"offset":41316},"end":{"line":2237,"column":175,"offset":41490},"indent":[]}}],"position":{"start":{"line":2233,"column":1,"offset":41047},"end":{"line":2237,"column":175,"offset":41490},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The r'^Hello' regular expression string matches strings that begin with 'Hello':","position":{"start":{"line":2239,"column":1,"offset":41492},"end":{"line":2239,"column":81,"offset":41572},"indent":[]}}],"position":{"start":{"line":2239,"column":1,"offset":41492},"end":{"line":2239,"column":81,"offset":41572},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"begins_with_hello = re.compile(r'^Hello')\nbegins_with_hello.search('Hello world!')","position":{"start":{"line":2241,"column":1,"offset":41574},"end":{"line":2244,"column":4,"offset":41670},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"begins_with_hello.search('He said hello.') is None","position":{"start":{"line":2246,"column":1,"offset":41672},"end":{"line":2248,"column":4,"offset":41736},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The r'\\d$' regular expression string matches strings that end with a numeric character from 0 to 9:","position":{"start":{"line":2250,"column":1,"offset":41738},"end":{"line":2250,"column":100,"offset":41837},"indent":[]}}],"position":{"start":{"line":2250,"column":1,"offset":41738},"end":{"line":2250,"column":100,"offset":41837},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"whole_string_is_num = re.compile(r'^\\d+$')\nwhole_string_is_num.search('1234567890')","position":{"start":{"line":2252,"column":1,"offset":41839},"end":{"line":2255,"column":4,"offset":41936},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"whole_string_is_num.search('12345xyz67890') is None","position":{"start":{"line":2257,"column":1,"offset":41938},"end":{"line":2259,"column":4,"offset":42003},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"whole_string_is_num.search('12 34567890') is None","position":{"start":{"line":2261,"column":1,"offset":42005},"end":{"line":2263,"column":4,"offset":42068},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"The Wildcard Character","position":{"start":{"line":2265,"column":5,"offset":42074},"end":{"line":2265,"column":27,"offset":42096},"indent":[]}}],"position":{"start":{"line":2265,"column":1,"offset":42070},"end":{"line":2265,"column":27,"offset":42096},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The . (or dot) character in a regular expression is called a wildcard and will match any character except for a newline:","position":{"start":{"line":2267,"column":1,"offset":42098},"end":{"line":2267,"column":121,"offset":42218},"indent":[]}}],"position":{"start":{"line":2267,"column":1,"offset":42098},"end":{"line":2267,"column":121,"offset":42218},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"at_regex = re.compile(r'.at')\nat_regex.findall('The cat in the hat sat on the flat mat.')","position":{"start":{"line":2269,"column":1,"offset":42220},"end":{"line":2272,"column":4,"offset":42323},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Matching Everything with Dot-Star","position":{"start":{"line":2274,"column":5,"offset":42329},"end":{"line":2274,"column":38,"offset":42362},"indent":[]}}],"position":{"start":{"line":2274,"column":1,"offset":42325},"end":{"line":2274,"column":38,"offset":42362},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"name_regex = re.compile(r'First Name: (.*) Last Name: (.*)')\nmo = name_regex.search('First Name: Some Last Name: One')\nmo.group(1)","position":{"start":{"line":2276,"column":1,"offset":42364},"end":{"line":2280,"column":4,"offset":42508},"indent":[1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"mo.group(2)","position":{"start":{"line":2282,"column":1,"offset":42510},"end":{"line":2284,"column":4,"offset":42535},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The dot-star uses greedy mode: It will always try to match as much text as possible. To match any and all text in a nongreedy fashion, use the dot, star, and question mark (.","position":{"start":{"line":2286,"column":1,"offset":42537},"end":{"line":2286,"column":175,"offset":42711},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":2286,"column":175,"offset":42711},"end":{"line":2286,"column":177,"offset":42713},"indent":[]}},{"type":"text","value":"?). The question mark tells Python to match in a nongreedy way:","position":{"start":{"line":2286,"column":177,"offset":42713},"end":{"line":2286,"column":240,"offset":42776},"indent":[]}}],"position":{"start":{"line":2286,"column":1,"offset":42537},"end":{"line":2286,"column":240,"offset":42776},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"nongreedy_regex = re.compile(r'<.*?>')\nmo = nongreedy_regex.search('<To serve man> for dinner.>')\nmo.group()","position":{"start":{"line":2288,"column":1,"offset":42778},"end":{"line":2292,"column":4,"offset":42900},"indent":[1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"greedy_regex = re.compile(r'<.*>')\nmo = greedy_regex.search('<To serve man> for dinner.>')\nmo.group()","position":{"start":{"line":2294,"column":1,"offset":42902},"end":{"line":2298,"column":4,"offset":43017},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Matching Newlines with the Dot Character","position":{"start":{"line":2300,"column":5,"offset":43023},"end":{"line":2300,"column":45,"offset":43063},"indent":[]}}],"position":{"start":{"line":2300,"column":1,"offset":43019},"end":{"line":2300,"column":45,"offset":43063},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The dot-star will match everything except a newline. By passing re.DOTALL as the second argument to re.compile(), you can make the dot character match all characters, including the newline character:","position":{"start":{"line":2302,"column":1,"offset":43065},"end":{"line":2302,"column":200,"offset":43264},"indent":[]}}],"position":{"start":{"line":2302,"column":1,"offset":43065},"end":{"line":2302,"column":200,"offset":43264},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"no_newline_regex = re.compile('.*')\nno_newline_regex.search('Serve the public trust.\\nProtect the innocent.\\nUphold the law.').group()","position":{"start":{"line":2304,"column":1,"offset":43266},"end":{"line":2307,"column":4,"offset":43414},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"newline_regex = re.compile('.*', re.DOTALL)\nnewline_regex.search('Serve the public trust.\\nProtect the innocent.\\nUphold the law.').group()","position":{"start":{"line":2309,"column":1,"offset":43416},"end":{"line":2312,"column":4,"offset":43569},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Review of Regex Symbols","position":{"start":{"line":2314,"column":5,"offset":43575},"end":{"line":2314,"column":28,"offset":43598},"indent":[]}}],"position":{"start":{"line":2314,"column":1,"offset":43571},"end":{"line":2314,"column":28,"offset":43598},"indent":[]}},{"type":"table","align":[null,null],"children":[{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Symbol","position":{"start":{"line":2316,"column":3,"offset":43602},"end":{"line":2316,"column":9,"offset":43608},"indent":[]}}],"position":{"start":{"line":2316,"column":3,"offset":43602},"end":{"line":2316,"column":27,"offset":43626},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Matches","position":{"start":{"line":2316,"column":30,"offset":43629},"end":{"line":2316,"column":37,"offset":43636},"indent":[]}}],"position":{"start":{"line":2316,"column":30,"offset":43629},"end":{"line":2316,"column":90,"offset":43689},"indent":[]}}],"position":{"start":{"line":2316,"column":1,"offset":43600},"end":{"line":2316,"column":92,"offset":43691},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"?","position":{"start":{"line":2318,"column":3,"offset":43786},"end":{"line":2318,"column":6,"offset":43789},"indent":[]}}],"position":{"start":{"line":2318,"column":3,"offset":43786},"end":{"line":2318,"column":27,"offset":43810},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"zero or one of the preceding group.","position":{"start":{"line":2318,"column":30,"offset":43813},"end":{"line":2318,"column":65,"offset":43848},"indent":[]}}],"position":{"start":{"line":2318,"column":30,"offset":43813},"end":{"line":2318,"column":90,"offset":43873},"indent":[]}}],"position":{"start":{"line":2318,"column":1,"offset":43784},"end":{"line":2318,"column":92,"offset":43875},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"*","position":{"start":{"line":2319,"column":3,"offset":43878},"end":{"line":2319,"column":6,"offset":43881},"indent":[]}}],"position":{"start":{"line":2319,"column":3,"offset":43878},"end":{"line":2319,"column":27,"offset":43902},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"zero or more of the preceding group.","position":{"start":{"line":2319,"column":30,"offset":43905},"end":{"line":2319,"column":66,"offset":43941},"indent":[]}}],"position":{"start":{"line":2319,"column":30,"offset":43905},"end":{"line":2319,"column":90,"offset":43965},"indent":[]}}],"position":{"start":{"line":2319,"column":1,"offset":43876},"end":{"line":2319,"column":92,"offset":43967},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"+","position":{"start":{"line":2320,"column":3,"offset":43970},"end":{"line":2320,"column":6,"offset":43973},"indent":[]}}],"position":{"start":{"line":2320,"column":3,"offset":43970},"end":{"line":2320,"column":27,"offset":43994},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"one or more of the preceding group.","position":{"start":{"line":2320,"column":30,"offset":43997},"end":{"line":2320,"column":65,"offset":44032},"indent":[]}}],"position":{"start":{"line":2320,"column":30,"offset":43997},"end":{"line":2320,"column":90,"offset":44057},"indent":[]}}],"position":{"start":{"line":2320,"column":1,"offset":43968},"end":{"line":2320,"column":92,"offset":44059},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"{n}","position":{"start":{"line":2321,"column":3,"offset":44062},"end":{"line":2321,"column":8,"offset":44067},"indent":[]}}],"position":{"start":{"line":2321,"column":3,"offset":44062},"end":{"line":2321,"column":27,"offset":44086},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"exactly n of the preceding group.","position":{"start":{"line":2321,"column":30,"offset":44089},"end":{"line":2321,"column":63,"offset":44122},"indent":[]}}],"position":{"start":{"line":2321,"column":30,"offset":44089},"end":{"line":2321,"column":90,"offset":44149},"indent":[]}}],"position":{"start":{"line":2321,"column":1,"offset":44060},"end":{"line":2321,"column":92,"offset":44151},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"{n,}","position":{"start":{"line":2322,"column":3,"offset":44154},"end":{"line":2322,"column":9,"offset":44160},"indent":[]}}],"position":{"start":{"line":2322,"column":3,"offset":44154},"end":{"line":2322,"column":27,"offset":44178},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"n or more of the preceding group.","position":{"start":{"line":2322,"column":30,"offset":44181},"end":{"line":2322,"column":63,"offset":44214},"indent":[]}}],"position":{"start":{"line":2322,"column":30,"offset":44181},"end":{"line":2322,"column":90,"offset":44241},"indent":[]}}],"position":{"start":{"line":2322,"column":1,"offset":44152},"end":{"line":2322,"column":92,"offset":44243},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"{,m}","position":{"start":{"line":2323,"column":3,"offset":44246},"end":{"line":2323,"column":9,"offset":44252},"indent":[]}}],"position":{"start":{"line":2323,"column":3,"offset":44246},"end":{"line":2323,"column":27,"offset":44270},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"0 to m of the preceding group.","position":{"start":{"line":2323,"column":30,"offset":44273},"end":{"line":2323,"column":60,"offset":44303},"indent":[]}}],"position":{"start":{"line":2323,"column":30,"offset":44273},"end":{"line":2323,"column":90,"offset":44333},"indent":[]}}],"position":{"start":{"line":2323,"column":1,"offset":44244},"end":{"line":2323,"column":92,"offset":44335},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"{n,m}","position":{"start":{"line":2324,"column":3,"offset":44338},"end":{"line":2324,"column":10,"offset":44345},"indent":[]}}],"position":{"start":{"line":2324,"column":3,"offset":44338},"end":{"line":2324,"column":27,"offset":44362},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"at least n and at most m of the preceding p.","position":{"start":{"line":2324,"column":30,"offset":44365},"end":{"line":2324,"column":74,"offset":44409},"indent":[]}}],"position":{"start":{"line":2324,"column":30,"offset":44365},"end":{"line":2324,"column":90,"offset":44425},"indent":[]}}],"position":{"start":{"line":2324,"column":1,"offset":44336},"end":{"line":2324,"column":92,"offset":44427},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"{n,m}?","position":{"start":{"line":2325,"column":3,"offset":44430},"end":{"line":2325,"column":11,"offset":44438},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":2325,"column":11,"offset":44438},"end":{"line":2325,"column":15,"offset":44442},"indent":[]}},{"type":"inlineCode","value":"*?","position":{"start":{"line":2325,"column":15,"offset":44442},"end":{"line":2325,"column":19,"offset":44446},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":2325,"column":19,"offset":44446},"end":{"line":2325,"column":23,"offset":44450},"indent":[]}},{"type":"inlineCode","value":"+?","position":{"start":{"line":2325,"column":23,"offset":44450},"end":{"line":2325,"column":27,"offset":44454},"indent":[]}}],"position":{"start":{"line":2325,"column":3,"offset":44430},"end":{"line":2325,"column":27,"offset":44454},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"performs a nongreedy match of the preceding p.","position":{"start":{"line":2325,"column":30,"offset":44457},"end":{"line":2325,"column":76,"offset":44503},"indent":[]}}],"position":{"start":{"line":2325,"column":30,"offset":44457},"end":{"line":2325,"column":90,"offset":44517},"indent":[]}}],"position":{"start":{"line":2325,"column":1,"offset":44428},"end":{"line":2325,"column":92,"offset":44519},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"^spam","position":{"start":{"line":2326,"column":3,"offset":44522},"end":{"line":2326,"column":10,"offset":44529},"indent":[]}}],"position":{"start":{"line":2326,"column":3,"offset":44522},"end":{"line":2326,"column":27,"offset":44546},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"means the string must begin with spam.","position":{"start":{"line":2326,"column":30,"offset":44549},"end":{"line":2326,"column":68,"offset":44587},"indent":[]}}],"position":{"start":{"line":2326,"column":30,"offset":44549},"end":{"line":2326,"column":90,"offset":44609},"indent":[]}}],"position":{"start":{"line":2326,"column":1,"offset":44520},"end":{"line":2326,"column":92,"offset":44611},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"spam$","position":{"start":{"line":2327,"column":3,"offset":44614},"end":{"line":2327,"column":10,"offset":44621},"indent":[]}}],"position":{"start":{"line":2327,"column":3,"offset":44614},"end":{"line":2327,"column":27,"offset":44638},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"means the string must end with spam.","position":{"start":{"line":2327,"column":30,"offset":44641},"end":{"line":2327,"column":66,"offset":44677},"indent":[]}}],"position":{"start":{"line":2327,"column":30,"offset":44641},"end":{"line":2327,"column":90,"offset":44701},"indent":[]}}],"position":{"start":{"line":2327,"column":1,"offset":44612},"end":{"line":2327,"column":92,"offset":44703},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":".","position":{"start":{"line":2328,"column":3,"offset":44706},"end":{"line":2328,"column":6,"offset":44709},"indent":[]}}],"position":{"start":{"line":2328,"column":3,"offset":44706},"end":{"line":2328,"column":27,"offset":44730},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"any character, except newline characters.","position":{"start":{"line":2328,"column":30,"offset":44733},"end":{"line":2328,"column":71,"offset":44774},"indent":[]}}],"position":{"start":{"line":2328,"column":30,"offset":44733},"end":{"line":2328,"column":90,"offset":44793},"indent":[]}}],"position":{"start":{"line":2328,"column":1,"offset":44704},"end":{"line":2328,"column":92,"offset":44795},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"\\d","position":{"start":{"line":2329,"column":3,"offset":44798},"end":{"line":2329,"column":7,"offset":44802},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":2329,"column":7,"offset":44802},"end":{"line":2329,"column":9,"offset":44804},"indent":[]}},{"type":"inlineCode","value":"\\w","position":{"start":{"line":2329,"column":9,"offset":44804},"end":{"line":2329,"column":13,"offset":44808},"indent":[]}},{"type":"text","value":", and ","position":{"start":{"line":2329,"column":13,"offset":44808},"end":{"line":2329,"column":19,"offset":44814},"indent":[]}},{"type":"inlineCode","value":"\\s","position":{"start":{"line":2329,"column":19,"offset":44814},"end":{"line":2329,"column":23,"offset":44818},"indent":[]}}],"position":{"start":{"line":2329,"column":3,"offset":44798},"end":{"line":2329,"column":27,"offset":44822},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"a digit, word, or space character, resectively.","position":{"start":{"line":2329,"column":30,"offset":44825},"end":{"line":2329,"column":77,"offset":44872},"indent":[]}}],"position":{"start":{"line":2329,"column":30,"offset":44825},"end":{"line":2329,"column":90,"offset":44885},"indent":[]}}],"position":{"start":{"line":2329,"column":1,"offset":44796},"end":{"line":2329,"column":92,"offset":44887},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"\\D","position":{"start":{"line":2330,"column":3,"offset":44890},"end":{"line":2330,"column":7,"offset":44894},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":2330,"column":7,"offset":44894},"end":{"line":2330,"column":9,"offset":44896},"indent":[]}},{"type":"inlineCode","value":"\\W","position":{"start":{"line":2330,"column":9,"offset":44896},"end":{"line":2330,"column":13,"offset":44900},"indent":[]}},{"type":"text","value":", and ","position":{"start":{"line":2330,"column":13,"offset":44900},"end":{"line":2330,"column":19,"offset":44906},"indent":[]}},{"type":"inlineCode","value":"\\S","position":{"start":{"line":2330,"column":19,"offset":44906},"end":{"line":2330,"column":23,"offset":44910},"indent":[]}}],"position":{"start":{"line":2330,"column":3,"offset":44890},"end":{"line":2330,"column":27,"offset":44914},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"anything except a digit, word, or space acter, respectively.","position":{"start":{"line":2330,"column":30,"offset":44917},"end":{"line":2330,"column":90,"offset":44977},"indent":[]}}],"position":{"start":{"line":2330,"column":30,"offset":44917},"end":{"line":2330,"column":90,"offset":44977},"indent":[]}}],"position":{"start":{"line":2330,"column":1,"offset":44888},"end":{"line":2330,"column":92,"offset":44979},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"[abc]","position":{"start":{"line":2331,"column":3,"offset":44982},"end":{"line":2331,"column":10,"offset":44989},"indent":[]}}],"position":{"start":{"line":2331,"column":3,"offset":44982},"end":{"line":2331,"column":27,"offset":45006},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"any character between the brackets (such as a, b, ).","position":{"start":{"line":2331,"column":30,"offset":45009},"end":{"line":2331,"column":82,"offset":45061},"indent":[]}}],"position":{"start":{"line":2331,"column":30,"offset":45009},"end":{"line":2331,"column":90,"offset":45069},"indent":[]}}],"position":{"start":{"line":2331,"column":1,"offset":44980},"end":{"line":2331,"column":92,"offset":45071},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"[^abc]","position":{"start":{"line":2332,"column":3,"offset":45074},"end":{"line":2332,"column":11,"offset":45082},"indent":[]}}],"position":{"start":{"line":2332,"column":3,"offset":45074},"end":{"line":2332,"column":27,"offset":45098},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"any character that isn't between the brackets.","position":{"start":{"line":2332,"column":30,"offset":45101},"end":{"line":2332,"column":76,"offset":45147},"indent":[]}}],"position":{"start":{"line":2332,"column":30,"offset":45101},"end":{"line":2332,"column":90,"offset":45161},"indent":[]}}],"position":{"start":{"line":2332,"column":1,"offset":45072},"end":{"line":2332,"column":92,"offset":45163},"indent":[]}}],"position":{"start":{"line":2316,"column":1,"offset":43600},"end":{"line":2332,"column":92,"offset":45163},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Case-Insensitive Matching","position":{"start":{"line":2334,"column":5,"offset":45169},"end":{"line":2334,"column":30,"offset":45194},"indent":[]}}],"position":{"start":{"line":2334,"column":1,"offset":45165},"end":{"line":2334,"column":30,"offset":45194},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To make your regex case-insensitive, you can pass re.IGNORECASE or re.I as a second argument to re.compile():","position":{"start":{"line":2336,"column":1,"offset":45196},"end":{"line":2336,"column":110,"offset":45305},"indent":[]}}],"position":{"start":{"line":2336,"column":1,"offset":45196},"end":{"line":2336,"column":110,"offset":45305},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"robocop = re.compile(r'robocop', re.I)\nrobocop.search('Robocop is part man, part machine, all cop.').group()","position":{"start":{"line":2338,"column":1,"offset":45307},"end":{"line":2341,"column":4,"offset":45429},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"robocop.search('ROBOCOP protects the innocent.').group()","position":{"start":{"line":2343,"column":1,"offset":45431},"end":{"line":2345,"column":4,"offset":45501},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"robocop.search('Al, why does your programming book talk about robocop so much?').group()","position":{"start":{"line":2347,"column":1,"offset":45503},"end":{"line":2349,"column":4,"offset":45605},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Substituting Strings with the sub() Method","position":{"start":{"line":2351,"column":5,"offset":45611},"end":{"line":2351,"column":47,"offset":45653},"indent":[]}}],"position":{"start":{"line":2351,"column":1,"offset":45607},"end":{"line":2351,"column":47,"offset":45653},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The sub() method for Regex objects is passed two arguments:","position":{"start":{"line":2353,"column":1,"offset":45655},"end":{"line":2353,"column":60,"offset":45714},"indent":[]}}],"position":{"start":{"line":2353,"column":1,"offset":45655},"end":{"line":2353,"column":60,"offset":45714},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The first argument is a string to replace any matches.","position":{"start":{"line":2355,"column":4,"offset":45719},"end":{"line":2355,"column":58,"offset":45773},"indent":[]}}],"position":{"start":{"line":2355,"column":4,"offset":45719},"end":{"line":2355,"column":58,"offset":45773},"indent":[]}}],"position":{"start":{"line":2355,"column":1,"offset":45716},"end":{"line":2355,"column":58,"offset":45773},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The second is the string for the regular expression.","position":{"start":{"line":2356,"column":4,"offset":45777},"end":{"line":2356,"column":56,"offset":45829},"indent":[]}}],"position":{"start":{"line":2356,"column":4,"offset":45777},"end":{"line":2356,"column":56,"offset":45829},"indent":[]}}],"position":{"start":{"line":2356,"column":1,"offset":45774},"end":{"line":2356,"column":56,"offset":45829},"indent":[]}}],"position":{"start":{"line":2355,"column":1,"offset":45716},"end":{"line":2356,"column":56,"offset":45829},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"The sub() method returns a string with the substitutions applied:","position":{"start":{"line":2358,"column":1,"offset":45831},"end":{"line":2358,"column":66,"offset":45896},"indent":[]}}],"position":{"start":{"line":2358,"column":1,"offset":45831},"end":{"line":2358,"column":66,"offset":45896},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"names_regex = re.compile(r'Agent \\w+')\nnames_regex.sub('CENSORED', 'Agent Alice gave the secret documents to Agent Bob.')","position":{"start":{"line":2360,"column":1,"offset":45898},"end":{"line":2363,"column":4,"offset":46033},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Another example:","position":{"start":{"line":2365,"column":1,"offset":46035},"end":{"line":2365,"column":17,"offset":46051},"indent":[]}}],"position":{"start":{"line":2365,"column":1,"offset":46035},"end":{"line":2365,"column":17,"offset":46051},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"agent_names_regex = re.compile(r'Agent (\\w)\\w*')\nagent_names_regex.sub(r'\\1****', 'Agent Alice told Agent Carol that Agent Eve knew Agent Bob was a double agent.')","position":{"start":{"line":2367,"column":1,"offset":46053},"end":{"line":2370,"column":4,"offset":46230},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Managing Complex Regexes","position":{"start":{"line":2372,"column":5,"offset":46236},"end":{"line":2372,"column":29,"offset":46260},"indent":[]}}],"position":{"start":{"line":2372,"column":1,"offset":46232},"end":{"line":2372,"column":29,"offset":46260},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To tell the re.compile() function to ignore whitespace and comments inside the regular expression string, \"verbose mode\" can be enabled by passing the variable re.VERBOSE as the second argument to re.compile().","position":{"start":{"line":2374,"column":1,"offset":46262},"end":{"line":2374,"column":211,"offset":46472},"indent":[]}}],"position":{"start":{"line":2374,"column":1,"offset":46262},"end":{"line":2374,"column":211,"offset":46472},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Now instead of a hard-to-read regular expression like this:","position":{"start":{"line":2376,"column":1,"offset":46474},"end":{"line":2376,"column":60,"offset":46533},"indent":[]}}],"position":{"start":{"line":2376,"column":1,"offset":46474},"end":{"line":2376,"column":60,"offset":46533},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"phone_regex = re.compile(r'((\\d{3}|\\(\\d{3}\\))?(\\s|-|\\.)?\\d{3}(\\s|-|\\.)\\d{4}(\\s*(ext|x|ext.)\\s*\\d{2,5})?)')","position":{"start":{"line":2378,"column":1,"offset":46535},"end":{"line":2380,"column":4,"offset":46655},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"you can spread the regular expression over multiple lines with comments like this:","position":{"start":{"line":2382,"column":1,"offset":46657},"end":{"line":2382,"column":83,"offset":46739},"indent":[]}}],"position":{"start":{"line":2382,"column":1,"offset":46657},"end":{"line":2382,"column":83,"offset":46739},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"phone_regex = re.compile(r'''(\n    (\\d{3}|\\(\\d{3}\\))?            # area code\n    (\\s|-|\\.)?                    # separator\n    \\d{3}                         # first 3 digits\n    (\\s|-|\\.)                     # separator\n    \\d{4}                         # last 4 digits\n    (\\s*(ext|x|ext.)\\s*\\d{2,5})?  # extension\n    )''', re.VERBOSE)","position":{"start":{"line":2384,"column":1,"offset":46741},"end":{"line":2393,"column":4,"offset":47092},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Handling File and Directory Paths","position":{"start":{"line":2395,"column":4,"offset":47097},"end":{"line":2395,"column":37,"offset":47130},"indent":[]}}],"position":{"start":{"line":2395,"column":1,"offset":47094},"end":{"line":2395,"column":37,"offset":47130},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"There are two main modules in Python that deals with path manipulation.\nOne is the ","position":{"start":{"line":2397,"column":1,"offset":47132},"end":{"line":2398,"column":12,"offset":47215},"indent":[1]}},{"type":"inlineCode","value":"os.path","position":{"start":{"line":2398,"column":12,"offset":47215},"end":{"line":2398,"column":21,"offset":47224},"indent":[]}},{"type":"text","value":" module and the other is the ","position":{"start":{"line":2398,"column":21,"offset":47224},"end":{"line":2398,"column":50,"offset":47253},"indent":[]}},{"type":"inlineCode","value":"pathlib","position":{"start":{"line":2398,"column":50,"offset":47253},"end":{"line":2398,"column":59,"offset":47262},"indent":[]}},{"type":"text","value":" module.\nThe ","position":{"start":{"line":2398,"column":59,"offset":47262},"end":{"line":2399,"column":5,"offset":47275},"indent":[1]}},{"type":"inlineCode","value":"pathlib","position":{"start":{"line":2399,"column":5,"offset":47275},"end":{"line":2399,"column":14,"offset":47284},"indent":[]}},{"type":"text","value":" module was added in Python 3.4, offering an object-oriented way\nto handle file system paths.","position":{"start":{"line":2399,"column":14,"offset":47284},"end":{"line":2400,"column":29,"offset":47377},"indent":[1]}}],"position":{"start":{"line":2397,"column":1,"offset":47132},"end":{"line":2400,"column":29,"offset":47377},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Backslash on Windows and Forward Slash on OS X and Linux","position":{"start":{"line":2402,"column":5,"offset":47383},"end":{"line":2402,"column":61,"offset":47439},"indent":[]}}],"position":{"start":{"line":2402,"column":1,"offset":47379},"end":{"line":2402,"column":61,"offset":47439},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"On Windows, paths are written using backslashes (","position":{"start":{"line":2404,"column":1,"offset":47441},"end":{"line":2404,"column":50,"offset":47490},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":2404,"column":50,"offset":47490},"end":{"line":2404,"column":52,"offset":47492},"indent":[]}},{"type":"text","value":" as the separator between\nfolder names. On Unix based operating system such as macOS, Linux, and BSDs,\nthe forward slash (/) is used as the path separator. Joining paths can be\na headache if your code needs to work on different platforms.","position":{"start":{"line":2404,"column":52,"offset":47492},"end":{"line":2407,"column":62,"offset":47730},"indent":[1,1,1]}}],"position":{"start":{"line":2404,"column":1,"offset":47441},"end":{"line":2407,"column":62,"offset":47730},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Fortunately, Python provides easy ways to handle this. We will showcase\nhow to deal with this with both ","position":{"start":{"line":2409,"column":1,"offset":47732},"end":{"line":2410,"column":33,"offset":47836},"indent":[1]}},{"type":"inlineCode","value":"os.path.join","position":{"start":{"line":2410,"column":33,"offset":47836},"end":{"line":2410,"column":47,"offset":47850},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":2410,"column":47,"offset":47850},"end":{"line":2410,"column":52,"offset":47855},"indent":[]}},{"type":"inlineCode","value":"pathlib.Path.joinpath","position":{"start":{"line":2410,"column":52,"offset":47855},"end":{"line":2410,"column":75,"offset":47878},"indent":[]}}],"position":{"start":{"line":2409,"column":1,"offset":47732},"end":{"line":2410,"column":75,"offset":47878},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Using ","position":{"start":{"line":2412,"column":1,"offset":47880},"end":{"line":2412,"column":7,"offset":47886},"indent":[]}},{"type":"inlineCode","value":"os.path.join","position":{"start":{"line":2412,"column":7,"offset":47886},"end":{"line":2412,"column":21,"offset":47900},"indent":[]}},{"type":"text","value":" on Windows:","position":{"start":{"line":2412,"column":21,"offset":47900},"end":{"line":2412,"column":33,"offset":47912},"indent":[]}}],"position":{"start":{"line":2412,"column":1,"offset":47880},"end":{"line":2412,"column":33,"offset":47912},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import os\n\nos.path.join('usr', 'bin', 'spam')","position":{"start":{"line":2414,"column":1,"offset":47914},"end":{"line":2418,"column":4,"offset":47973},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"And using ","position":{"start":{"line":2420,"column":1,"offset":47975},"end":{"line":2420,"column":11,"offset":47985},"indent":[]}},{"type":"inlineCode","value":"pathlib","position":{"start":{"line":2420,"column":11,"offset":47985},"end":{"line":2420,"column":20,"offset":47994},"indent":[]}},{"type":"text","value":" on ","position":{"start":{"line":2420,"column":20,"offset":47994},"end":{"line":2420,"column":24,"offset":47998},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":2420,"column":24,"offset":47998},"end":{"line":2420,"column":26,"offset":48000},"indent":[]}},{"type":"text","value":"nix:","position":{"start":{"line":2420,"column":26,"offset":48000},"end":{"line":2420,"column":30,"offset":48004},"indent":[]}}],"position":{"start":{"line":2420,"column":1,"offset":47975},"end":{"line":2420,"column":30,"offset":48004},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"from pathlib import Path\n\nprint(Path('usr').joinpath('bin').joinpath('spam'))","position":{"start":{"line":2422,"column":1,"offset":48006},"end":{"line":2426,"column":4,"offset":48097},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"pathlib","position":{"start":{"line":2428,"column":1,"offset":48099},"end":{"line":2428,"column":10,"offset":48108},"indent":[]}},{"type":"text","value":" also provides a shortcut to joinpath using the ","position":{"start":{"line":2428,"column":10,"offset":48108},"end":{"line":2428,"column":58,"offset":48156},"indent":[]}},{"type":"inlineCode","value":"/","position":{"start":{"line":2428,"column":58,"offset":48156},"end":{"line":2428,"column":61,"offset":48159},"indent":[]}},{"type":"text","value":" operator:","position":{"start":{"line":2428,"column":61,"offset":48159},"end":{"line":2428,"column":71,"offset":48169},"indent":[]}}],"position":{"start":{"line":2428,"column":1,"offset":48099},"end":{"line":2428,"column":71,"offset":48169},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"from pathlib import Path\n\nprint(Path('usr') / 'bin' / 'spam')","position":{"start":{"line":2430,"column":1,"offset":48171},"end":{"line":2434,"column":4,"offset":48246},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Notice the path separator is different between Windows and Unix based operating\nsystem, that's why you want to use one of the above methods instead of\nadding strings together to join paths together.","position":{"start":{"line":2436,"column":1,"offset":48248},"end":{"line":2438,"column":48,"offset":48446},"indent":[1,1]}}],"position":{"start":{"line":2436,"column":1,"offset":48248},"end":{"line":2438,"column":48,"offset":48446},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Joining paths is helpful if you need to create different file paths under\nthe same directory.","position":{"start":{"line":2440,"column":1,"offset":48448},"end":{"line":2441,"column":20,"offset":48541},"indent":[1]}}],"position":{"start":{"line":2440,"column":1,"offset":48448},"end":{"line":2441,"column":20,"offset":48541},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Using ","position":{"start":{"line":2443,"column":1,"offset":48543},"end":{"line":2443,"column":7,"offset":48549},"indent":[]}},{"type":"inlineCode","value":"os.path.join","position":{"start":{"line":2443,"column":7,"offset":48549},"end":{"line":2443,"column":21,"offset":48563},"indent":[]}},{"type":"text","value":" on Windows:","position":{"start":{"line":2443,"column":21,"offset":48563},"end":{"line":2443,"column":33,"offset":48575},"indent":[]}}],"position":{"start":{"line":2443,"column":1,"offset":48543},"end":{"line":2443,"column":33,"offset":48575},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"my_files = ['accounts.txt', 'details.csv', 'invite.docx']\n\nfor filename in my_files:\n    print(os.path.join('C:\\\\Users\\\\asweigart', filename))","position":{"start":{"line":2445,"column":1,"offset":48577},"end":{"line":2450,"column":4,"offset":48733},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Using ","position":{"start":{"line":2452,"column":1,"offset":48735},"end":{"line":2452,"column":7,"offset":48741},"indent":[]}},{"type":"inlineCode","value":"pathlib","position":{"start":{"line":2452,"column":7,"offset":48741},"end":{"line":2452,"column":16,"offset":48750},"indent":[]}},{"type":"text","value":" on ","position":{"start":{"line":2452,"column":16,"offset":48750},"end":{"line":2452,"column":20,"offset":48754},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":2452,"column":20,"offset":48754},"end":{"line":2452,"column":22,"offset":48756},"indent":[]}},{"type":"text","value":"nix:","position":{"start":{"line":2452,"column":22,"offset":48756},"end":{"line":2452,"column":26,"offset":48760},"indent":[]}}],"position":{"start":{"line":2452,"column":1,"offset":48735},"end":{"line":2452,"column":26,"offset":48760},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"my_files = ['accounts.txt', 'details.csv', 'invite.docx']\nhome = Path.home()\nfor filename in my_files:\n    print(home / filename)","position":{"start":{"line":2454,"column":1,"offset":48762},"end":{"line":2459,"column":4,"offset":48905},"indent":[1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"The Current Working Directory","position":{"start":{"line":2461,"column":5,"offset":48911},"end":{"line":2461,"column":34,"offset":48940},"indent":[]}}],"position":{"start":{"line":2461,"column":1,"offset":48907},"end":{"line":2461,"column":34,"offset":48940},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Using ","position":{"start":{"line":2463,"column":1,"offset":48942},"end":{"line":2463,"column":7,"offset":48948},"indent":[]}},{"type":"inlineCode","value":"os","position":{"start":{"line":2463,"column":7,"offset":48948},"end":{"line":2463,"column":11,"offset":48952},"indent":[]}},{"type":"text","value":" on Windows:","position":{"start":{"line":2463,"column":11,"offset":48952},"end":{"line":2463,"column":23,"offset":48964},"indent":[]}}],"position":{"start":{"line":2463,"column":1,"offset":48942},"end":{"line":2463,"column":23,"offset":48964},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import os\n\nos.getcwd()","position":{"start":{"line":2465,"column":1,"offset":48966},"end":{"line":2469,"column":4,"offset":49002},"indent":[1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"os.chdir('C:\\\\Windows\\\\System32')\nos.getcwd()","position":{"start":{"line":2471,"column":1,"offset":49004},"end":{"line":2474,"column":4,"offset":49063},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Using ","position":{"start":{"line":2476,"column":1,"offset":49065},"end":{"line":2476,"column":7,"offset":49071},"indent":[]}},{"type":"inlineCode","value":"pathlib","position":{"start":{"line":2476,"column":7,"offset":49071},"end":{"line":2476,"column":16,"offset":49080},"indent":[]}},{"type":"text","value":" on ","position":{"start":{"line":2476,"column":16,"offset":49080},"end":{"line":2476,"column":20,"offset":49084},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":2476,"column":20,"offset":49084},"end":{"line":2476,"column":22,"offset":49086},"indent":[]}},{"type":"text","value":"nix:","position":{"start":{"line":2476,"column":22,"offset":49086},"end":{"line":2476,"column":26,"offset":49090},"indent":[]}}],"position":{"start":{"line":2476,"column":1,"offset":49065},"end":{"line":2476,"column":26,"offset":49090},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"from pathlib import Path\nfrom os import chdir\n\nprint(Path.cwd())","position":{"start":{"line":2478,"column":1,"offset":49092},"end":{"line":2483,"column":4,"offset":49170},"indent":[1,1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"chdir('/usr/lib/python3.6')\nprint(Path.cwd())","position":{"start":{"line":2485,"column":1,"offset":49172},"end":{"line":2488,"column":4,"offset":49231},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Creating New Folders","position":{"start":{"line":2490,"column":5,"offset":49237},"end":{"line":2490,"column":25,"offset":49257},"indent":[]}}],"position":{"start":{"line":2490,"column":1,"offset":49233},"end":{"line":2490,"column":25,"offset":49257},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Using ","position":{"start":{"line":2492,"column":1,"offset":49259},"end":{"line":2492,"column":7,"offset":49265},"indent":[]}},{"type":"inlineCode","value":"os","position":{"start":{"line":2492,"column":7,"offset":49265},"end":{"line":2492,"column":11,"offset":49269},"indent":[]}},{"type":"text","value":" on Windows:","position":{"start":{"line":2492,"column":11,"offset":49269},"end":{"line":2492,"column":23,"offset":49281},"indent":[]}}],"position":{"start":{"line":2492,"column":1,"offset":49259},"end":{"line":2492,"column":23,"offset":49281},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import os\n\nos.makedirs('C:\\\\delicious\\\\walnut\\\\waffles')","position":{"start":{"line":2494,"column":1,"offset":49283},"end":{"line":2498,"column":4,"offset":49353},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Using ","position":{"start":{"line":2500,"column":1,"offset":49355},"end":{"line":2500,"column":7,"offset":49361},"indent":[]}},{"type":"inlineCode","value":"pathlib","position":{"start":{"line":2500,"column":7,"offset":49361},"end":{"line":2500,"column":16,"offset":49370},"indent":[]}},{"type":"text","value":" on ","position":{"start":{"line":2500,"column":16,"offset":49370},"end":{"line":2500,"column":20,"offset":49374},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":2500,"column":20,"offset":49374},"end":{"line":2500,"column":22,"offset":49376},"indent":[]}},{"type":"text","value":"nix:","position":{"start":{"line":2500,"column":22,"offset":49376},"end":{"line":2500,"column":26,"offset":49380},"indent":[]}}],"position":{"start":{"line":2500,"column":1,"offset":49355},"end":{"line":2500,"column":26,"offset":49380},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"from pathlib import Path\ncwd = Path.cwd()\n(cwd / 'delicious' / 'walnut' / 'waffles').mkdir()","position":{"start":{"line":2502,"column":1,"offset":49382},"end":{"line":2506,"column":4,"offset":49488},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Oh no, we got a nasty error! The reason is that the 'delicious' directory does\nnot exist, so we cannot make the 'walnut' and the 'waffles' directories under\nit. To fix this, do:","position":{"start":{"line":2508,"column":1,"offset":49490},"end":{"line":2510,"column":21,"offset":49667},"indent":[1,1]}}],"position":{"start":{"line":2508,"column":1,"offset":49490},"end":{"line":2510,"column":21,"offset":49667},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"from pathlib import Path\ncwd = Path.cwd()\n(cwd / 'delicious' / 'walnut' / 'waffles').mkdir(parents=True)","position":{"start":{"line":2512,"column":1,"offset":49669},"end":{"line":2516,"column":4,"offset":49787},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"And all is good :)","position":{"start":{"line":2518,"column":1,"offset":49789},"end":{"line":2518,"column":19,"offset":49807},"indent":[]}}],"position":{"start":{"line":2518,"column":1,"offset":49789},"end":{"line":2518,"column":19,"offset":49807},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Absolute vs. Relative Paths","position":{"start":{"line":2520,"column":5,"offset":49813},"end":{"line":2520,"column":32,"offset":49840},"indent":[]}}],"position":{"start":{"line":2520,"column":1,"offset":49809},"end":{"line":2520,"column":32,"offset":49840},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"There are two ways to specify a file path.","position":{"start":{"line":2522,"column":1,"offset":49842},"end":{"line":2522,"column":43,"offset":49884},"indent":[]}}],"position":{"start":{"line":2522,"column":1,"offset":49842},"end":{"line":2522,"column":43,"offset":49884},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"An absolute path, which always begins with the root folder","position":{"start":{"line":2524,"column":5,"offset":49890},"end":{"line":2524,"column":63,"offset":49948},"indent":[]}}],"position":{"start":{"line":2524,"column":5,"offset":49890},"end":{"line":2524,"column":63,"offset":49948},"indent":[]}}],"position":{"start":{"line":2524,"column":1,"offset":49886},"end":{"line":2524,"column":63,"offset":49948},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"A relative path, which is relative to the program's current working directory","position":{"start":{"line":2525,"column":5,"offset":49953},"end":{"line":2525,"column":82,"offset":50030},"indent":[]}}],"position":{"start":{"line":2525,"column":5,"offset":49953},"end":{"line":2525,"column":82,"offset":50030},"indent":[]}}],"position":{"start":{"line":2525,"column":1,"offset":49949},"end":{"line":2525,"column":82,"offset":50030},"indent":[]}}],"position":{"start":{"line":2524,"column":1,"offset":49886},"end":{"line":2525,"column":82,"offset":50030},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"There are also the dot (.) and dot-dot (..) folders. These are not real folders but special names that can be used in a path. A single period (\"dot\") for a folder name is shorthand for \"this directory.\" Two periods (\"dot-dot\") means \"the parent folder.\"","position":{"start":{"line":2527,"column":1,"offset":50032},"end":{"line":2527,"column":254,"offset":50285},"indent":[]}}],"position":{"start":{"line":2527,"column":1,"offset":50032},"end":{"line":2527,"column":254,"offset":50285},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Handling Absolute and Relative Paths","position":{"start":{"line":2529,"column":5,"offset":50291},"end":{"line":2529,"column":41,"offset":50327},"indent":[]}}],"position":{"start":{"line":2529,"column":1,"offset":50287},"end":{"line":2529,"column":41,"offset":50327},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To see if a path is an absolute path:","position":{"start":{"line":2531,"column":1,"offset":50329},"end":{"line":2531,"column":38,"offset":50366},"indent":[]}}],"position":{"start":{"line":2531,"column":1,"offset":50329},"end":{"line":2531,"column":38,"offset":50366},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Using ","position":{"start":{"line":2533,"column":1,"offset":50368},"end":{"line":2533,"column":7,"offset":50374},"indent":[]}},{"type":"inlineCode","value":"os.path","position":{"start":{"line":2533,"column":7,"offset":50374},"end":{"line":2533,"column":16,"offset":50383},"indent":[]}},{"type":"text","value":" on ","position":{"start":{"line":2533,"column":16,"offset":50383},"end":{"line":2533,"column":20,"offset":50387},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":2533,"column":20,"offset":50387},"end":{"line":2533,"column":22,"offset":50389},"indent":[]}},{"type":"text","value":"nix:","position":{"start":{"line":2533,"column":22,"offset":50389},"end":{"line":2533,"column":26,"offset":50393},"indent":[]}}],"position":{"start":{"line":2533,"column":1,"offset":50368},"end":{"line":2533,"column":26,"offset":50393},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import os\n\nos.path.isabs('/')","position":{"start":{"line":2535,"column":1,"offset":50395},"end":{"line":2539,"column":4,"offset":50438},"indent":[1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"os.path.isabs('..')","position":{"start":{"line":2541,"column":1,"offset":50440},"end":{"line":2543,"column":4,"offset":50473},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Using ","position":{"start":{"line":2545,"column":1,"offset":50475},"end":{"line":2545,"column":7,"offset":50481},"indent":[]}},{"type":"inlineCode","value":"pathlib","position":{"start":{"line":2545,"column":7,"offset":50481},"end":{"line":2545,"column":16,"offset":50490},"indent":[]}},{"type":"text","value":" on ","position":{"start":{"line":2545,"column":16,"offset":50490},"end":{"line":2545,"column":20,"offset":50494},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":2545,"column":20,"offset":50494},"end":{"line":2545,"column":22,"offset":50496},"indent":[]}},{"type":"text","value":"nix:","position":{"start":{"line":2545,"column":22,"offset":50496},"end":{"line":2545,"column":26,"offset":50500},"indent":[]}}],"position":{"start":{"line":2545,"column":1,"offset":50475},"end":{"line":2545,"column":26,"offset":50500},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"from pathlib import Path\nPath('/').is_absolute()","position":{"start":{"line":2547,"column":1,"offset":50502},"end":{"line":2550,"column":4,"offset":50564},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"Path('..').is_absolute()","position":{"start":{"line":2552,"column":1,"offset":50566},"end":{"line":2554,"column":4,"offset":50604},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"You can extract an absolute path with both ","position":{"start":{"line":2556,"column":1,"offset":50606},"end":{"line":2556,"column":44,"offset":50649},"indent":[]}},{"type":"inlineCode","value":"os.path","position":{"start":{"line":2556,"column":44,"offset":50649},"end":{"line":2556,"column":53,"offset":50658},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":2556,"column":53,"offset":50658},"end":{"line":2556,"column":58,"offset":50663},"indent":[]}},{"type":"inlineCode","value":"pathlib","position":{"start":{"line":2556,"column":58,"offset":50663},"end":{"line":2556,"column":67,"offset":50672},"indent":[]}}],"position":{"start":{"line":2556,"column":1,"offset":50606},"end":{"line":2556,"column":67,"offset":50672},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Using ","position":{"start":{"line":2558,"column":1,"offset":50674},"end":{"line":2558,"column":7,"offset":50680},"indent":[]}},{"type":"inlineCode","value":"os.path","position":{"start":{"line":2558,"column":7,"offset":50680},"end":{"line":2558,"column":16,"offset":50689},"indent":[]}},{"type":"text","value":" on ","position":{"start":{"line":2558,"column":16,"offset":50689},"end":{"line":2558,"column":20,"offset":50693},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":2558,"column":20,"offset":50693},"end":{"line":2558,"column":22,"offset":50695},"indent":[]}},{"type":"text","value":"nix:","position":{"start":{"line":2558,"column":22,"offset":50695},"end":{"line":2558,"column":26,"offset":50699},"indent":[]}}],"position":{"start":{"line":2558,"column":1,"offset":50674},"end":{"line":2558,"column":26,"offset":50699},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import os\n\nos.getcwd()","position":{"start":{"line":2560,"column":1,"offset":50701},"end":{"line":2564,"column":4,"offset":50737},"indent":[1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"os.path.abspath('..')","position":{"start":{"line":2566,"column":1,"offset":50739},"end":{"line":2568,"column":4,"offset":50774},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Using ","position":{"start":{"line":2570,"column":1,"offset":50776},"end":{"line":2570,"column":7,"offset":50782},"indent":[]}},{"type":"inlineCode","value":"pathlib","position":{"start":{"line":2570,"column":7,"offset":50782},"end":{"line":2570,"column":16,"offset":50791},"indent":[]}},{"type":"text","value":" on ","position":{"start":{"line":2570,"column":16,"offset":50791},"end":{"line":2570,"column":20,"offset":50795},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":2570,"column":20,"offset":50795},"end":{"line":2570,"column":22,"offset":50797},"indent":[]}},{"type":"text","value":"nix:","position":{"start":{"line":2570,"column":22,"offset":50797},"end":{"line":2570,"column":26,"offset":50801},"indent":[]}}],"position":{"start":{"line":2570,"column":1,"offset":50776},"end":{"line":2570,"column":26,"offset":50801},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"from pathlib import Path\n\nprint(Path.cwd())","position":{"start":{"line":2572,"column":1,"offset":50803},"end":{"line":2576,"column":4,"offset":50860},"indent":[1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"print(Path('..').resolve())","position":{"start":{"line":2578,"column":1,"offset":50862},"end":{"line":2580,"column":4,"offset":50903},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"You can get a relative path from a starting path to another path.","position":{"start":{"line":2582,"column":1,"offset":50905},"end":{"line":2582,"column":66,"offset":50970},"indent":[]}}],"position":{"start":{"line":2582,"column":1,"offset":50905},"end":{"line":2582,"column":66,"offset":50970},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Using ","position":{"start":{"line":2584,"column":1,"offset":50972},"end":{"line":2584,"column":7,"offset":50978},"indent":[]}},{"type":"inlineCode","value":"os.path","position":{"start":{"line":2584,"column":7,"offset":50978},"end":{"line":2584,"column":16,"offset":50987},"indent":[]}},{"type":"text","value":" on ","position":{"start":{"line":2584,"column":16,"offset":50987},"end":{"line":2584,"column":20,"offset":50991},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":2584,"column":20,"offset":50991},"end":{"line":2584,"column":22,"offset":50993},"indent":[]}},{"type":"text","value":"nix:","position":{"start":{"line":2584,"column":22,"offset":50993},"end":{"line":2584,"column":26,"offset":50997},"indent":[]}}],"position":{"start":{"line":2584,"column":1,"offset":50972},"end":{"line":2584,"column":26,"offset":50997},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import os\n\nos.path.relpath('/etc/passwd', '/')","position":{"start":{"line":2586,"column":1,"offset":50999},"end":{"line":2590,"column":4,"offset":51059},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Using ","position":{"start":{"line":2592,"column":1,"offset":51061},"end":{"line":2592,"column":7,"offset":51067},"indent":[]}},{"type":"inlineCode","value":"pathlib","position":{"start":{"line":2592,"column":7,"offset":51067},"end":{"line":2592,"column":16,"offset":51076},"indent":[]}},{"type":"text","value":" on ","position":{"start":{"line":2592,"column":16,"offset":51076},"end":{"line":2592,"column":20,"offset":51080},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":2592,"column":20,"offset":51080},"end":{"line":2592,"column":22,"offset":51082},"indent":[]}},{"type":"text","value":"nix:","position":{"start":{"line":2592,"column":22,"offset":51082},"end":{"line":2592,"column":26,"offset":51086},"indent":[]}}],"position":{"start":{"line":2592,"column":1,"offset":51061},"end":{"line":2592,"column":26,"offset":51086},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"from pathlib import Path\n\nprint(Path('/etc/passwd').relative_to('/'))","position":{"start":{"line":2594,"column":1,"offset":51088},"end":{"line":2598,"column":4,"offset":51171},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Checking Path Validity","position":{"start":{"line":2600,"column":5,"offset":51177},"end":{"line":2600,"column":27,"offset":51199},"indent":[]}}],"position":{"start":{"line":2600,"column":1,"offset":51173},"end":{"line":2600,"column":27,"offset":51199},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Checking if a file/directory exists:","position":{"start":{"line":2602,"column":1,"offset":51201},"end":{"line":2602,"column":37,"offset":51237},"indent":[]}}],"position":{"start":{"line":2602,"column":1,"offset":51201},"end":{"line":2602,"column":37,"offset":51237},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Using ","position":{"start":{"line":2604,"column":1,"offset":51239},"end":{"line":2604,"column":7,"offset":51245},"indent":[]}},{"type":"inlineCode","value":"os.path","position":{"start":{"line":2604,"column":7,"offset":51245},"end":{"line":2604,"column":16,"offset":51254},"indent":[]}},{"type":"text","value":" on ","position":{"start":{"line":2604,"column":16,"offset":51254},"end":{"line":2604,"column":20,"offset":51258},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":2604,"column":20,"offset":51258},"end":{"line":2604,"column":22,"offset":51260},"indent":[]}},{"type":"text","value":"nix:","position":{"start":{"line":2604,"column":22,"offset":51260},"end":{"line":2604,"column":26,"offset":51264},"indent":[]}}],"position":{"start":{"line":2604,"column":1,"offset":51239},"end":{"line":2604,"column":26,"offset":51264},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import os\nos.path.exists('.')","position":{"start":{"line":2606,"column":1,"offset":51266},"end":{"line":2609,"column":4,"offset":51309},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"os.path.exists('setup.py')","position":{"start":{"line":2611,"column":1,"offset":51311},"end":{"line":2613,"column":4,"offset":51351},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"os.path.exists('/etc')","position":{"start":{"line":2615,"column":1,"offset":51353},"end":{"line":2617,"column":4,"offset":51389},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"os.path.exists('nonexistentfile')","position":{"start":{"line":2619,"column":1,"offset":51391},"end":{"line":2621,"column":4,"offset":51438},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Using ","position":{"start":{"line":2623,"column":1,"offset":51440},"end":{"line":2623,"column":7,"offset":51446},"indent":[]}},{"type":"inlineCode","value":"pathlib","position":{"start":{"line":2623,"column":7,"offset":51446},"end":{"line":2623,"column":16,"offset":51455},"indent":[]}},{"type":"text","value":" on ","position":{"start":{"line":2623,"column":16,"offset":51455},"end":{"line":2623,"column":20,"offset":51459},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":2623,"column":20,"offset":51459},"end":{"line":2623,"column":22,"offset":51461},"indent":[]}},{"type":"text","value":"nix:","position":{"start":{"line":2623,"column":22,"offset":51461},"end":{"line":2623,"column":26,"offset":51465},"indent":[]}}],"position":{"start":{"line":2623,"column":1,"offset":51440},"end":{"line":2623,"column":26,"offset":51465},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"from pathlib import Path\nPath('.').exists()","position":{"start":{"line":2625,"column":1,"offset":51467},"end":{"line":2628,"column":4,"offset":51524},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"Path('setup.py').exists()","position":{"start":{"line":2630,"column":1,"offset":51526},"end":{"line":2632,"column":4,"offset":51565},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"Path('/etc').exists()","position":{"start":{"line":2634,"column":1,"offset":51567},"end":{"line":2636,"column":4,"offset":51602},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"Path('nonexistentfile').exists()","position":{"start":{"line":2638,"column":1,"offset":51604},"end":{"line":2640,"column":4,"offset":51650},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Checking if a path is a file:","position":{"start":{"line":2642,"column":1,"offset":51652},"end":{"line":2642,"column":30,"offset":51681},"indent":[]}}],"position":{"start":{"line":2642,"column":1,"offset":51652},"end":{"line":2642,"column":30,"offset":51681},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Using ","position":{"start":{"line":2644,"column":1,"offset":51683},"end":{"line":2644,"column":7,"offset":51689},"indent":[]}},{"type":"inlineCode","value":"os.path","position":{"start":{"line":2644,"column":7,"offset":51689},"end":{"line":2644,"column":16,"offset":51698},"indent":[]}},{"type":"text","value":" on ","position":{"start":{"line":2644,"column":16,"offset":51698},"end":{"line":2644,"column":20,"offset":51702},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":2644,"column":20,"offset":51702},"end":{"line":2644,"column":22,"offset":51704},"indent":[]}},{"type":"text","value":"nix:","position":{"start":{"line":2644,"column":22,"offset":51704},"end":{"line":2644,"column":26,"offset":51708},"indent":[]}}],"position":{"start":{"line":2644,"column":1,"offset":51683},"end":{"line":2644,"column":26,"offset":51708},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import os\nos.path.isfile('setup.py')","position":{"start":{"line":2646,"column":1,"offset":51710},"end":{"line":2649,"column":4,"offset":51760},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"os.path.isfile('/home')","position":{"start":{"line":2651,"column":1,"offset":51762},"end":{"line":2653,"column":4,"offset":51799},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"os.path.isfile('nonexistentfile')","position":{"start":{"line":2655,"column":1,"offset":51801},"end":{"line":2657,"column":4,"offset":51848},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Using ","position":{"start":{"line":2659,"column":1,"offset":51850},"end":{"line":2659,"column":7,"offset":51856},"indent":[]}},{"type":"inlineCode","value":"pathlib","position":{"start":{"line":2659,"column":7,"offset":51856},"end":{"line":2659,"column":16,"offset":51865},"indent":[]}},{"type":"text","value":" on ","position":{"start":{"line":2659,"column":16,"offset":51865},"end":{"line":2659,"column":20,"offset":51869},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":2659,"column":20,"offset":51869},"end":{"line":2659,"column":22,"offset":51871},"indent":[]}},{"type":"text","value":"nix:","position":{"start":{"line":2659,"column":22,"offset":51871},"end":{"line":2659,"column":26,"offset":51875},"indent":[]}}],"position":{"start":{"line":2659,"column":1,"offset":51850},"end":{"line":2659,"column":26,"offset":51875},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"from pathlib import Path\n\nPath('setup.py').is_file()","position":{"start":{"line":2661,"column":1,"offset":51877},"end":{"line":2665,"column":4,"offset":51943},"indent":[1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"Path('/home').is_file()","position":{"start":{"line":2667,"column":1,"offset":51945},"end":{"line":2669,"column":4,"offset":51982},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"Path('nonexistentfile').is_file()","position":{"start":{"line":2671,"column":1,"offset":51984},"end":{"line":2673,"column":4,"offset":52031},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Checking if a path is a directory:","position":{"start":{"line":2675,"column":1,"offset":52033},"end":{"line":2675,"column":35,"offset":52067},"indent":[]}}],"position":{"start":{"line":2675,"column":1,"offset":52033},"end":{"line":2675,"column":35,"offset":52067},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Using ","position":{"start":{"line":2677,"column":1,"offset":52069},"end":{"line":2677,"column":7,"offset":52075},"indent":[]}},{"type":"inlineCode","value":"os.path","position":{"start":{"line":2677,"column":7,"offset":52075},"end":{"line":2677,"column":16,"offset":52084},"indent":[]}},{"type":"text","value":" on ","position":{"start":{"line":2677,"column":16,"offset":52084},"end":{"line":2677,"column":20,"offset":52088},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":2677,"column":20,"offset":52088},"end":{"line":2677,"column":22,"offset":52090},"indent":[]}},{"type":"text","value":"nix:","position":{"start":{"line":2677,"column":22,"offset":52090},"end":{"line":2677,"column":26,"offset":52094},"indent":[]}}],"position":{"start":{"line":2677,"column":1,"offset":52069},"end":{"line":2677,"column":26,"offset":52094},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import os\nos.path.isdir('/')","position":{"start":{"line":2679,"column":1,"offset":52096},"end":{"line":2682,"column":4,"offset":52138},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"os.path.isdir('setup.py')","position":{"start":{"line":2684,"column":1,"offset":52140},"end":{"line":2686,"column":4,"offset":52179},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"os.path.isdir('/spam')","position":{"start":{"line":2688,"column":1,"offset":52181},"end":{"line":2690,"column":4,"offset":52217},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Using ","position":{"start":{"line":2692,"column":1,"offset":52219},"end":{"line":2692,"column":7,"offset":52225},"indent":[]}},{"type":"inlineCode","value":"pathlib","position":{"start":{"line":2692,"column":7,"offset":52225},"end":{"line":2692,"column":16,"offset":52234},"indent":[]}},{"type":"text","value":" on ","position":{"start":{"line":2692,"column":16,"offset":52234},"end":{"line":2692,"column":20,"offset":52238},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":2692,"column":20,"offset":52238},"end":{"line":2692,"column":22,"offset":52240},"indent":[]}},{"type":"text","value":"nix:","position":{"start":{"line":2692,"column":22,"offset":52240},"end":{"line":2692,"column":26,"offset":52244},"indent":[]}}],"position":{"start":{"line":2692,"column":1,"offset":52219},"end":{"line":2692,"column":26,"offset":52244},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"from pathlib import Path\n\nPath('/').is_dir()","position":{"start":{"line":2694,"column":1,"offset":52246},"end":{"line":2698,"column":4,"offset":52304},"indent":[1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"Path('setup.py').is_dir()","position":{"start":{"line":2700,"column":1,"offset":52306},"end":{"line":2702,"column":4,"offset":52345},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"Path('/spam').is_dir()","position":{"start":{"line":2704,"column":1,"offset":52347},"end":{"line":2706,"column":4,"offset":52383},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Finding File Sizes and Folder Contents","position":{"start":{"line":2708,"column":5,"offset":52389},"end":{"line":2708,"column":43,"offset":52427},"indent":[]}}],"position":{"start":{"line":2708,"column":1,"offset":52385},"end":{"line":2708,"column":43,"offset":52427},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Getting a file's size in bytes:","position":{"start":{"line":2710,"column":1,"offset":52429},"end":{"line":2710,"column":32,"offset":52460},"indent":[]}}],"position":{"start":{"line":2710,"column":1,"offset":52429},"end":{"line":2710,"column":32,"offset":52460},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Using ","position":{"start":{"line":2712,"column":1,"offset":52462},"end":{"line":2712,"column":7,"offset":52468},"indent":[]}},{"type":"inlineCode","value":"os.path","position":{"start":{"line":2712,"column":7,"offset":52468},"end":{"line":2712,"column":16,"offset":52477},"indent":[]}},{"type":"text","value":" on Windows:","position":{"start":{"line":2712,"column":16,"offset":52477},"end":{"line":2712,"column":28,"offset":52489},"indent":[]}}],"position":{"start":{"line":2712,"column":1,"offset":52462},"end":{"line":2712,"column":28,"offset":52489},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import os\nos.path.getsize('C:\\\\Windows\\\\System32\\\\calc.exe')","position":{"start":{"line":2714,"column":1,"offset":52491},"end":{"line":2717,"column":4,"offset":52565},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Using ","position":{"start":{"line":2719,"column":1,"offset":52567},"end":{"line":2719,"column":7,"offset":52573},"indent":[]}},{"type":"inlineCode","value":"pathlib","position":{"start":{"line":2719,"column":7,"offset":52573},"end":{"line":2719,"column":16,"offset":52582},"indent":[]}},{"type":"text","value":" on ","position":{"start":{"line":2719,"column":16,"offset":52582},"end":{"line":2719,"column":20,"offset":52586},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":2719,"column":20,"offset":52586},"end":{"line":2719,"column":22,"offset":52588},"indent":[]}},{"type":"text","value":"nix:","position":{"start":{"line":2719,"column":22,"offset":52588},"end":{"line":2719,"column":26,"offset":52592},"indent":[]}}],"position":{"start":{"line":2719,"column":1,"offset":52567},"end":{"line":2719,"column":26,"offset":52592},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"from pathlib import Path\n\nstat = Path('/bin/python3.6').stat()\nprint(stat) # stat contains some other information about the file as well","position":{"start":{"line":2721,"column":1,"offset":52594},"end":{"line":2726,"column":4,"offset":52744},"indent":[1,1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"print(stat.st_size) # size in bytes","position":{"start":{"line":2728,"column":1,"offset":52746},"end":{"line":2730,"column":4,"offset":52795},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Listing directory contents using ","position":{"start":{"line":2732,"column":1,"offset":52797},"end":{"line":2732,"column":34,"offset":52830},"indent":[]}},{"type":"inlineCode","value":"os.listdir","position":{"start":{"line":2732,"column":34,"offset":52830},"end":{"line":2732,"column":46,"offset":52842},"indent":[]}},{"type":"text","value":" on Windows:","position":{"start":{"line":2732,"column":46,"offset":52842},"end":{"line":2732,"column":58,"offset":52854},"indent":[]}}],"position":{"start":{"line":2732,"column":1,"offset":52797},"end":{"line":2732,"column":58,"offset":52854},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import os\nos.listdir('C:\\\\Windows\\\\System32')","position":{"start":{"line":2734,"column":1,"offset":52856},"end":{"line":2737,"column":4,"offset":52915},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Listing directory contents using ","position":{"start":{"line":2739,"column":1,"offset":52917},"end":{"line":2739,"column":34,"offset":52950},"indent":[]}},{"type":"inlineCode","value":"pathlib","position":{"start":{"line":2739,"column":34,"offset":52950},"end":{"line":2739,"column":43,"offset":52959},"indent":[]}},{"type":"text","value":" on ","position":{"start":{"line":2739,"column":43,"offset":52959},"end":{"line":2739,"column":47,"offset":52963},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":2739,"column":47,"offset":52963},"end":{"line":2739,"column":49,"offset":52965},"indent":[]}},{"type":"text","value":"nix:","position":{"start":{"line":2739,"column":49,"offset":52965},"end":{"line":2739,"column":53,"offset":52969},"indent":[]}}],"position":{"start":{"line":2739,"column":1,"offset":52917},"end":{"line":2739,"column":53,"offset":52969},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"from pathlib import Path\n\nfor f in Path('/usr/bin').iterdir():\n    print(f)","position":{"start":{"line":2741,"column":1,"offset":52971},"end":{"line":2746,"column":4,"offset":53060},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"To find the total size of all the files in this directory:","position":{"start":{"line":2748,"column":1,"offset":53062},"end":{"line":2748,"column":59,"offset":53120},"indent":[]}}],"position":{"start":{"line":2748,"column":1,"offset":53062},"end":{"line":2748,"column":59,"offset":53120},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"WARNING","position":{"start":{"line":2750,"column":3,"offset":53124},"end":{"line":2750,"column":10,"offset":53131},"indent":[]}}],"position":{"start":{"line":2750,"column":1,"offset":53122},"end":{"line":2750,"column":12,"offset":53133},"indent":[]}},{"type":"text","value":": Directories themselves also have a size! So you might want to\ncheck for whether a path is a file or directory using the methods in the methods discussed in the above section!","position":{"start":{"line":2750,"column":12,"offset":53133},"end":{"line":2751,"column":113,"offset":53309},"indent":[1]}}],"position":{"start":{"line":2750,"column":1,"offset":53122},"end":{"line":2751,"column":113,"offset":53309},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Using ","position":{"start":{"line":2753,"column":1,"offset":53311},"end":{"line":2753,"column":7,"offset":53317},"indent":[]}},{"type":"inlineCode","value":"os.path.getsize()","position":{"start":{"line":2753,"column":7,"offset":53317},"end":{"line":2753,"column":26,"offset":53336},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":2753,"column":26,"offset":53336},"end":{"line":2753,"column":31,"offset":53341},"indent":[]}},{"type":"inlineCode","value":"os.listdir()","position":{"start":{"line":2753,"column":31,"offset":53341},"end":{"line":2753,"column":45,"offset":53355},"indent":[]}},{"type":"text","value":" together on Windows:","position":{"start":{"line":2753,"column":45,"offset":53355},"end":{"line":2753,"column":66,"offset":53376},"indent":[]}}],"position":{"start":{"line":2753,"column":1,"offset":53311},"end":{"line":2753,"column":66,"offset":53376},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import os\n\ntotal_size = 0\n\nfor filename in os.listdir('C:\\\\Windows\\\\System32'):\n      total_size = total_size + os.path.getsize(os.path.join('C:\\\\Windows\\\\System32', filename))\n\nprint(total_size)","position":{"start":{"line":2755,"column":1,"offset":53378},"end":{"line":2764,"column":4,"offset":53587},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Using ","position":{"start":{"line":2766,"column":1,"offset":53589},"end":{"line":2766,"column":7,"offset":53595},"indent":[]}},{"type":"inlineCode","value":"pathlib","position":{"start":{"line":2766,"column":7,"offset":53595},"end":{"line":2766,"column":16,"offset":53604},"indent":[]}},{"type":"text","value":" on ","position":{"start":{"line":2766,"column":16,"offset":53604},"end":{"line":2766,"column":20,"offset":53608},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":2766,"column":20,"offset":53608},"end":{"line":2766,"column":22,"offset":53610},"indent":[]}},{"type":"text","value":"nix:","position":{"start":{"line":2766,"column":22,"offset":53610},"end":{"line":2766,"column":26,"offset":53614},"indent":[]}}],"position":{"start":{"line":2766,"column":1,"offset":53589},"end":{"line":2766,"column":26,"offset":53614},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"from pathlib import Path\ntotal_size = 0\n\nfor sub_path in Path('/usr/bin').iterdir():\n    total_size += sub_path.stat().st_size\n\nprint(total_size)","position":{"start":{"line":2768,"column":1,"offset":53616},"end":{"line":2776,"column":4,"offset":53775},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Copying Files and Folders","position":{"start":{"line":2778,"column":5,"offset":53781},"end":{"line":2778,"column":30,"offset":53806},"indent":[]}}],"position":{"start":{"line":2778,"column":1,"offset":53777},"end":{"line":2778,"column":30,"offset":53806},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The shutil module provides functions for copying files, as well as entire folders.","position":{"start":{"line":2780,"column":1,"offset":53808},"end":{"line":2780,"column":83,"offset":53890},"indent":[]}}],"position":{"start":{"line":2780,"column":1,"offset":53808},"end":{"line":2780,"column":83,"offset":53890},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import shutil, os\n\nos.chdir('C:\\\\')\n\nshutil.copy('C:\\\\spam.txt', 'C:\\\\delicious')","position":{"start":{"line":2782,"column":1,"offset":53892},"end":{"line":2788,"column":4,"offset":53987},"indent":[1,1,1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"shutil.copy('eggs.txt', 'C:\\\\delicious\\\\eggs2.txt')\n   'C:\\\\delicious\\\\eggs2.txt'","position":{"start":{"line":2790,"column":1,"offset":53989},"end":{"line":2793,"column":4,"offset":54084},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"While shutil.copy() will copy a single file, shutil.copytree() will copy an entire folder and every folder and file contained in it:","position":{"start":{"line":2795,"column":1,"offset":54086},"end":{"line":2795,"column":133,"offset":54218},"indent":[]}}],"position":{"start":{"line":2795,"column":1,"offset":54086},"end":{"line":2795,"column":133,"offset":54218},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import shutil, os\n\nos.chdir('C:\\\\')\nshutil.copytree('C:\\\\bacon', 'C:\\\\bacon_backup')","position":{"start":{"line":2797,"column":1,"offset":54220},"end":{"line":2802,"column":4,"offset":54318},"indent":[1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Moving and Renaming Files and Folders","position":{"start":{"line":2804,"column":5,"offset":54324},"end":{"line":2804,"column":42,"offset":54361},"indent":[]}}],"position":{"start":{"line":2804,"column":1,"offset":54320},"end":{"line":2804,"column":42,"offset":54361},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import shutil\n\nshutil.move('C:\\\\bacon.txt', 'C:\\\\eggs')","position":{"start":{"line":2806,"column":1,"offset":54363},"end":{"line":2810,"column":4,"offset":54432},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The destination path can also specify a filename. In the following example, the source file is moved and renamed:","position":{"start":{"line":2812,"column":1,"offset":54434},"end":{"line":2812,"column":114,"offset":54547},"indent":[]}}],"position":{"start":{"line":2812,"column":1,"offset":54434},"end":{"line":2812,"column":114,"offset":54547},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"shutil.move('C:\\\\bacon.txt', 'C:\\\\eggs\\\\new_bacon.txt')","position":{"start":{"line":2814,"column":1,"offset":54549},"end":{"line":2816,"column":4,"offset":54618},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If there is no eggs folder, then move() will rename bacon.txt to a file named eggs.","position":{"start":{"line":2818,"column":1,"offset":54620},"end":{"line":2818,"column":84,"offset":54703},"indent":[]}}],"position":{"start":{"line":2818,"column":1,"offset":54620},"end":{"line":2818,"column":84,"offset":54703},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"shutil.move('C:\\\\bacon.txt', 'C:\\\\eggs')","position":{"start":{"line":2820,"column":1,"offset":54705},"end":{"line":2822,"column":4,"offset":54759},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Permanently Deleting Files and Folders","position":{"start":{"line":2824,"column":5,"offset":54765},"end":{"line":2824,"column":43,"offset":54803},"indent":[]}}],"position":{"start":{"line":2824,"column":1,"offset":54761},"end":{"line":2824,"column":43,"offset":54803},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Calling os.unlink(path) or Path.unlink() will delete the file at path.","position":{"start":{"line":2826,"column":5,"offset":54809},"end":{"line":2826,"column":75,"offset":54879},"indent":[]}}],"position":{"start":{"line":2826,"column":5,"offset":54809},"end":{"line":2826,"column":75,"offset":54879},"indent":[]}}],"position":{"start":{"line":2826,"column":1,"offset":54805},"end":{"line":2826,"column":75,"offset":54879},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"-","position":{"start":{"line":2827,"column":1,"offset":54880},"end":{"line":2827,"column":2,"offset":54881},"indent":[]}}],"position":{"start":{"line":2827,"column":1,"offset":54880},"end":{"line":2827,"column":2,"offset":54881},"indent":[]}}],"position":{"start":{"line":2827,"column":1,"offset":54880},"end":{"line":2827,"column":2,"offset":54881},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Calling os.rmdir(path) or Path.rmdir() will delete the folder at path. This folder must be empty of any files or folders.","position":{"start":{"line":2828,"column":5,"offset":54886},"end":{"line":2828,"column":126,"offset":55007},"indent":[]}}],"position":{"start":{"line":2828,"column":5,"offset":54886},"end":{"line":2828,"column":126,"offset":55007},"indent":[]}}],"position":{"start":{"line":2828,"column":1,"offset":54882},"end":{"line":2829,"column":1,"offset":55008},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Calling shutil.rmtree(path) will remove the folder at path, and all files and folders it contains will also be deleted.","position":{"start":{"line":2830,"column":5,"offset":55013},"end":{"line":2830,"column":124,"offset":55132},"indent":[]}}],"position":{"start":{"line":2830,"column":5,"offset":55013},"end":{"line":2830,"column":124,"offset":55132},"indent":[]}}],"position":{"start":{"line":2830,"column":1,"offset":55009},"end":{"line":2830,"column":124,"offset":55132},"indent":[]}}],"position":{"start":{"line":2826,"column":1,"offset":54805},"end":{"line":2830,"column":124,"offset":55132},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Safe Deletes with the send2trash Module","position":{"start":{"line":2832,"column":5,"offset":55138},"end":{"line":2832,"column":44,"offset":55177},"indent":[]}}],"position":{"start":{"line":2832,"column":1,"offset":55134},"end":{"line":2832,"column":44,"offset":55177},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can install this module by running pip install send2trash from a Terminal window.","position":{"start":{"line":2834,"column":1,"offset":55179},"end":{"line":2834,"column":86,"offset":55264},"indent":[]}}],"position":{"start":{"line":2834,"column":1,"offset":55179},"end":{"line":2834,"column":86,"offset":55264},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import send2trash\n\nwith open('bacon.txt', 'a') as bacon_file: # creates the file\n    bacon_file.write('Bacon is not a vegetable.')\n\nsend2trash.send2trash('bacon.txt')","position":{"start":{"line":2836,"column":1,"offset":55266},"end":{"line":2843,"column":4,"offset":55446},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Walking a Directory Tree","position":{"start":{"line":2845,"column":5,"offset":55452},"end":{"line":2845,"column":29,"offset":55476},"indent":[]}}],"position":{"start":{"line":2845,"column":1,"offset":55448},"end":{"line":2845,"column":29,"offset":55476},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import os\n\nfor folder_name, subfolders, filenames in os.walk('C:\\\\delicious'):\n    print('The current folder is {}'.format(folder_name))\n\n    for subfolder in subfolders:\n        print('SUBFOLDER OF {}: {}'.format(folder_name, subfolder))\n    for filename in filenames:\n        print('FILE INSIDE {}: {}'.format(folder_name, filename))\n\n    print('')","position":{"start":{"line":2847,"column":1,"offset":55478},"end":{"line":2859,"column":4,"offset":55842},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"pathlib","position":{"start":{"line":2861,"column":1,"offset":55844},"end":{"line":2861,"column":10,"offset":55853},"indent":[]}},{"type":"text","value":" provides a lot more functionality than the ones listed above,\nlike getting file name, getting file extension, reading/writing a file without\nmanually opening it, etc. Check out the\n","position":{"start":{"line":2861,"column":10,"offset":55853},"end":{"line":2864,"column":1,"offset":56035},"indent":[1,1,1]}},{"type":"link","title":null,"url":"https://docs.python.org/3/library/pathlib.html","children":[{"type":"text","value":"official documentation","position":{"start":{"line":2864,"column":2,"offset":56036},"end":{"line":2864,"column":24,"offset":56058},"indent":[]}}],"position":{"start":{"line":2864,"column":1,"offset":56035},"end":{"line":2864,"column":73,"offset":56107},"indent":[]}},{"type":"text","value":"\nif you want to know more!","position":{"start":{"line":2864,"column":73,"offset":56107},"end":{"line":2865,"column":26,"offset":56133},"indent":[1]}}],"position":{"start":{"line":2861,"column":1,"offset":55844},"end":{"line":2865,"column":26,"offset":56133},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Reading and Writing Files","position":{"start":{"line":2867,"column":4,"offset":56138},"end":{"line":2867,"column":29,"offset":56163},"indent":[]}}],"position":{"start":{"line":2867,"column":1,"offset":56135},"end":{"line":2867,"column":29,"offset":56163},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"The File Reading/Writing Process","position":{"start":{"line":2869,"column":5,"offset":56169},"end":{"line":2869,"column":37,"offset":56201},"indent":[]}}],"position":{"start":{"line":2869,"column":1,"offset":56165},"end":{"line":2869,"column":37,"offset":56201},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To read/write to a file in Python, you will want to use the ","position":{"start":{"line":2871,"column":1,"offset":56203},"end":{"line":2871,"column":61,"offset":56263},"indent":[]}},{"type":"inlineCode","value":"with","position":{"start":{"line":2871,"column":61,"offset":56263},"end":{"line":2871,"column":67,"offset":56269},"indent":[]}},{"type":"text","value":"\nstatement, which will close the file for you after you are done.","position":{"start":{"line":2871,"column":67,"offset":56269},"end":{"line":2872,"column":65,"offset":56334},"indent":[1]}}],"position":{"start":{"line":2871,"column":1,"offset":56203},"end":{"line":2872,"column":65,"offset":56334},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Opening and reading files with the open function","position":{"start":{"line":2874,"column":5,"offset":56340},"end":{"line":2874,"column":53,"offset":56388},"indent":[]}}],"position":{"start":{"line":2874,"column":1,"offset":56336},"end":{"line":2874,"column":53,"offset":56388},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"with open('C:\\\\Users\\\\your_home_folder\\\\hello.txt') as hello_file:\n    hello_content = hello_file.read()\n\nhello_content","position":{"start":{"line":2876,"column":1,"offset":56390},"end":{"line":2881,"column":4,"offset":56523},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Alternatively, you can use the ","position":{"start":{"line":2883,"column":1,"offset":56525},"end":{"line":2883,"column":32,"offset":56556},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"readlines()","position":{"start":{"line":2883,"column":33,"offset":56557},"end":{"line":2883,"column":44,"offset":56568},"indent":[]}}],"position":{"start":{"line":2883,"column":32,"offset":56556},"end":{"line":2883,"column":45,"offset":56569},"indent":[]}},{"type":"text","value":" method to get a list of string values from the file, one string for each line of text:","position":{"start":{"line":2883,"column":45,"offset":56569},"end":{"line":2883,"column":132,"offset":56656},"indent":[]}}],"position":{"start":{"line":2883,"column":1,"offset":56525},"end":{"line":2883,"column":132,"offset":56656},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"with open('sonnet29.txt') as sonnet_file:\n    sonnet_file.readlines()","position":{"start":{"line":2885,"column":1,"offset":56658},"end":{"line":2888,"column":4,"offset":56741},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"You can also iterate through the file line by line:","position":{"start":{"line":2890,"column":1,"offset":56743},"end":{"line":2890,"column":52,"offset":56794},"indent":[]}}],"position":{"start":{"line":2890,"column":1,"offset":56743},"end":{"line":2890,"column":52,"offset":56794},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"with open('sonnet29.txt') as sonnet_file:\n    for line in sonnet_file: # note the new line character will be included in the line\n        print(line, end='')","position":{"start":{"line":2892,"column":1,"offset":56796},"end":{"line":2896,"column":4,"offset":56967},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Writing to Files","position":{"start":{"line":2898,"column":5,"offset":56973},"end":{"line":2898,"column":21,"offset":56989},"indent":[]}}],"position":{"start":{"line":2898,"column":1,"offset":56969},"end":{"line":2898,"column":21,"offset":56989},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"with open('bacon.txt', 'w') as bacon_file:\n    bacon_file.write('Hello world!\\n')","position":{"start":{"line":2900,"column":1,"offset":56991},"end":{"line":2903,"column":4,"offset":57086},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"with open('bacon.txt', 'a') as bacon_file:\n    bacon_file.write('Bacon is not a vegetable.')","position":{"start":{"line":2905,"column":1,"offset":57088},"end":{"line":2908,"column":4,"offset":57194},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"with open('bacon.txt') as bacon_file:\n    content = bacon_file.read()\n\nprint(content)","position":{"start":{"line":2910,"column":1,"offset":57196},"end":{"line":2915,"column":4,"offset":57295},"indent":[1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Saving Variables with the shelve Module","position":{"start":{"line":2917,"column":5,"offset":57301},"end":{"line":2917,"column":44,"offset":57340},"indent":[]}}],"position":{"start":{"line":2917,"column":1,"offset":57297},"end":{"line":2917,"column":44,"offset":57340},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To save variables:","position":{"start":{"line":2919,"column":1,"offset":57342},"end":{"line":2919,"column":19,"offset":57360},"indent":[]}}],"position":{"start":{"line":2919,"column":1,"offset":57342},"end":{"line":2919,"column":19,"offset":57360},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import shelve\n\ncats = ['Zophie', 'Pooka', 'Simon']\nwith shelve.open('mydata') as shelf_file:\n    shelf_file['cats'] = cats","position":{"start":{"line":2921,"column":1,"offset":57362},"end":{"line":2927,"column":4,"offset":57498},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"To open and read variables:","position":{"start":{"line":2929,"column":1,"offset":57500},"end":{"line":2929,"column":28,"offset":57527},"indent":[]}}],"position":{"start":{"line":2929,"column":1,"offset":57500},"end":{"line":2929,"column":28,"offset":57527},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"with shelve.open('mydata') as shelf_file:\n    print(type(shelf_file))\n    print(shelf_file['cats'])","position":{"start":{"line":2931,"column":1,"offset":57529},"end":{"line":2935,"column":4,"offset":57642},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Just like dictionaries, shelf values have keys() and values() methods that will return list-like values of the keys and values in the shelf. Since these methods return list-like values instead of true lists, you should pass them to the list() function to get them in list form.","position":{"start":{"line":2937,"column":1,"offset":57644},"end":{"line":2937,"column":278,"offset":57921},"indent":[]}}],"position":{"start":{"line":2937,"column":1,"offset":57644},"end":{"line":2937,"column":278,"offset":57921},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"with shelve.open('mydata') as shelf_file:\n    print(list(shelf_file.keys()))\n    print(list(shelf_file.values()))","position":{"start":{"line":2939,"column":1,"offset":57923},"end":{"line":2943,"column":4,"offset":58050},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Saving Variables with pprint.pformat","position":{"start":{"line":2945,"column":5,"offset":58056},"end":{"line":2945,"column":41,"offset":58092},"indent":[]}}],"position":{"start":{"line":2945,"column":1,"offset":58052},"end":{"line":2945,"column":41,"offset":58092},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import pprint\n\ncats = [{'name': 'Zophie', 'desc': 'chubby'}, {'name': 'Pooka', 'desc': 'fluffy'}]\npprint.pformat(cats)","position":{"start":{"line":2947,"column":1,"offset":58094},"end":{"line":2952,"column":4,"offset":58226},"indent":[1,1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"with open('myCats.py', 'w') as file_obj:\n    file_obj.write('cats = {}\\n'.format(pprint.pformat(cats)))","position":{"start":{"line":2954,"column":1,"offset":58228},"end":{"line":2957,"column":4,"offset":58345},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Reading ZIP Files","position":{"start":{"line":2959,"column":5,"offset":58351},"end":{"line":2959,"column":22,"offset":58368},"indent":[]}}],"position":{"start":{"line":2959,"column":1,"offset":58347},"end":{"line":2959,"column":22,"offset":58368},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import zipfile, os\n\nos.chdir('C:\\\\')    # move to the folder with example.zip\nwith zipfile.ZipFile('example.zip') as example_zip:\n    print(example_zip.namelist())\n    spam_info = example_zip.getinfo('spam.txt')\n    print(spam_info.file_size)\n    print(spam_info.compress_size)\n    print('Compressed file is %sx smaller!' % (round(spam_info.file_size / spam_info.compress_size, 2)))","position":{"start":{"line":2961,"column":1,"offset":58370},"end":{"line":2971,"column":4,"offset":58766},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Extracting from ZIP Files","position":{"start":{"line":2973,"column":5,"offset":58772},"end":{"line":2973,"column":30,"offset":58797},"indent":[]}}],"position":{"start":{"line":2973,"column":1,"offset":58768},"end":{"line":2973,"column":30,"offset":58797},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The extractall() method for ZipFile objects extracts all the files and folders from a ZIP file into the current working directory.","position":{"start":{"line":2975,"column":1,"offset":58799},"end":{"line":2975,"column":131,"offset":58929},"indent":[]}}],"position":{"start":{"line":2975,"column":1,"offset":58799},"end":{"line":2975,"column":131,"offset":58929},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import zipfile, os\n\nos.chdir('C:\\\\')    # move to the folder with example.zip\n\nwith zipfile.ZipFile('example.zip') as example_zip:\n    example_zip.extractall()","position":{"start":{"line":2977,"column":1,"offset":58931},"end":{"line":2984,"column":4,"offset":59104},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The extract() method for ZipFile objects will extract a single file from the ZIP file. Continue the interactive shell example:","position":{"start":{"line":2986,"column":1,"offset":59106},"end":{"line":2986,"column":127,"offset":59232},"indent":[]}}],"position":{"start":{"line":2986,"column":1,"offset":59106},"end":{"line":2986,"column":127,"offset":59232},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"with zipfile.ZipFile('example.zip') as example_zip:\n    print(example_zip.extract('spam.txt'))\n    print(example_zip.extract('spam.txt', 'C:\\\\some\\\\new\\\\folders'))","position":{"start":{"line":2988,"column":1,"offset":59234},"end":{"line":2992,"column":4,"offset":59411},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Creating and Adding to ZIP Files","position":{"start":{"line":2994,"column":5,"offset":59417},"end":{"line":2994,"column":37,"offset":59449},"indent":[]}}],"position":{"start":{"line":2994,"column":1,"offset":59413},"end":{"line":2994,"column":37,"offset":59449},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import zipfile\n\nwith zipfile.ZipFile('new.zip', 'w') as new_zip:\n    new_zip.write('spam.txt', compress_type=zipfile.ZIP_DEFLATED)","position":{"start":{"line":2996,"column":1,"offset":59451},"end":{"line":3001,"column":4,"offset":59595},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This code will create a new ZIP file named new.zip that has the compressed contents of spam.txt.","position":{"start":{"line":3003,"column":1,"offset":59597},"end":{"line":3003,"column":97,"offset":59693},"indent":[]}}],"position":{"start":{"line":3003,"column":1,"offset":59597},"end":{"line":3003,"column":97,"offset":59693},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"JSON, YAML and configuration files","position":{"start":{"line":3005,"column":4,"offset":59698},"end":{"line":3005,"column":38,"offset":59732},"indent":[]}}],"position":{"start":{"line":3005,"column":1,"offset":59695},"end":{"line":3005,"column":38,"offset":59732},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"JSON","position":{"start":{"line":3007,"column":5,"offset":59738},"end":{"line":3007,"column":9,"offset":59742},"indent":[]}}],"position":{"start":{"line":3007,"column":1,"offset":59734},"end":{"line":3007,"column":9,"offset":59742},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Open a JSON file with:","position":{"start":{"line":3009,"column":1,"offset":59744},"end":{"line":3009,"column":23,"offset":59766},"indent":[]}}],"position":{"start":{"line":3009,"column":1,"offset":59744},"end":{"line":3009,"column":23,"offset":59766},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import json\nwith open(\"filename.json\", \"r\") as f:\n    content = json.loads(f.read())","position":{"start":{"line":3011,"column":1,"offset":59768},"end":{"line":3015,"column":4,"offset":59866},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Write a JSON file with:","position":{"start":{"line":3017,"column":1,"offset":59868},"end":{"line":3017,"column":24,"offset":59891},"indent":[]}}],"position":{"start":{"line":3017,"column":1,"offset":59868},"end":{"line":3017,"column":24,"offset":59891},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import json\n\ncontent = {\"name\": \"Joe\", \"age\": 20}\nwith open(\"filename.json\", \"w\") as f:\n    f.write(json.dumps(content, indent=2))","position":{"start":{"line":3019,"column":1,"offset":59893},"end":{"line":3025,"column":4,"offset":60037},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"YAML","position":{"start":{"line":3027,"column":5,"offset":60043},"end":{"line":3027,"column":9,"offset":60047},"indent":[]}}],"position":{"start":{"line":3027,"column":1,"offset":60039},"end":{"line":3027,"column":9,"offset":60047},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Compared to JSON, YAML allows a much better humain maintainance and gives ability to add comments.\nIt is a convinient choice for configuration files where human will have to edit.","position":{"start":{"line":3029,"column":1,"offset":60049},"end":{"line":3030,"column":81,"offset":60228},"indent":[1]}}],"position":{"start":{"line":3029,"column":1,"offset":60049},"end":{"line":3030,"column":81,"offset":60228},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"There are two main librairies allowing to access to YAML files:","position":{"start":{"line":3032,"column":1,"offset":60230},"end":{"line":3032,"column":64,"offset":60293},"indent":[]}}],"position":{"start":{"line":3032,"column":1,"offset":60230},"end":{"line":3032,"column":64,"offset":60293},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://pypi.python.org/pypi/PyYAML","children":[{"type":"text","value":"PyYaml","position":{"start":{"line":3034,"column":6,"offset":60300},"end":{"line":3034,"column":12,"offset":60306},"indent":[]}}],"position":{"start":{"line":3034,"column":5,"offset":60299},"end":{"line":3034,"column":50,"offset":60344},"indent":[]}}],"position":{"start":{"line":3034,"column":5,"offset":60299},"end":{"line":3034,"column":50,"offset":60344},"indent":[]}}],"position":{"start":{"line":3034,"column":1,"offset":60295},"end":{"line":3034,"column":50,"offset":60344},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://pypi.python.org/pypi/ruamel.yaml","children":[{"type":"text","value":"Ruamel.yaml","position":{"start":{"line":3035,"column":6,"offset":60350},"end":{"line":3035,"column":17,"offset":60361},"indent":[]}}],"position":{"start":{"line":3035,"column":5,"offset":60349},"end":{"line":3035,"column":60,"offset":60404},"indent":[]}}],"position":{"start":{"line":3035,"column":5,"offset":60349},"end":{"line":3035,"column":60,"offset":60404},"indent":[]}}],"position":{"start":{"line":3035,"column":1,"offset":60345},"end":{"line":3035,"column":60,"offset":60404},"indent":[]}}],"position":{"start":{"line":3034,"column":1,"offset":60295},"end":{"line":3035,"column":60,"offset":60404},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Install them using ","position":{"start":{"line":3037,"column":1,"offset":60406},"end":{"line":3037,"column":20,"offset":60425},"indent":[]}},{"type":"inlineCode","value":"pip install","position":{"start":{"line":3037,"column":20,"offset":60425},"end":{"line":3037,"column":33,"offset":60438},"indent":[]}},{"type":"text","value":" in your virtual environment.","position":{"start":{"line":3037,"column":33,"offset":60438},"end":{"line":3037,"column":62,"offset":60467},"indent":[]}}],"position":{"start":{"line":3037,"column":1,"offset":60406},"end":{"line":3037,"column":62,"offset":60467},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The first one it easier to use but the second one, Ruamel, implements much better the YAML\nspecification, and allow for example to modify a YAML content without altering comments.","position":{"start":{"line":3039,"column":1,"offset":60469},"end":{"line":3040,"column":89,"offset":60648},"indent":[1]}}],"position":{"start":{"line":3039,"column":1,"offset":60469},"end":{"line":3040,"column":89,"offset":60648},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Open a YAML file with:","position":{"start":{"line":3042,"column":1,"offset":60650},"end":{"line":3042,"column":23,"offset":60672},"indent":[]}}],"position":{"start":{"line":3042,"column":1,"offset":60650},"end":{"line":3042,"column":23,"offset":60672},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"from ruamel.yaml import YAML\n\nwith open(\"filename.yaml\") as f:\n    yaml=YAML()\n    yaml.load(f)","position":{"start":{"line":3044,"column":1,"offset":60674},"end":{"line":3050,"column":4,"offset":60783},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Anyconfig","position":{"start":{"line":3052,"column":5,"offset":60789},"end":{"line":3052,"column":14,"offset":60798},"indent":[]}}],"position":{"start":{"line":3052,"column":1,"offset":60785},"end":{"line":3052,"column":14,"offset":60798},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://pypi.python.org/pypi/anyconfig","children":[{"type":"text","value":"Anyconfig","position":{"start":{"line":3054,"column":2,"offset":60801},"end":{"line":3054,"column":11,"offset":60810},"indent":[]}}],"position":{"start":{"line":3054,"column":1,"offset":60800},"end":{"line":3054,"column":52,"offset":60851},"indent":[]}},{"type":"text","value":" is a very handy package allowing to abstract completly the underlying configuration file format. It allows to load a Python dictionary from JSON, YAML, TOML, and so on.","position":{"start":{"line":3054,"column":52,"offset":60851},"end":{"line":3054,"column":221,"offset":61020},"indent":[]}}],"position":{"start":{"line":3054,"column":1,"offset":60800},"end":{"line":3054,"column":221,"offset":61020},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Install it with:","position":{"start":{"line":3056,"column":1,"offset":61022},"end":{"line":3056,"column":17,"offset":61038},"indent":[]}}],"position":{"start":{"line":3056,"column":1,"offset":61022},"end":{"line":3056,"column":17,"offset":61038},"indent":[]}},{"type":"code","lang":"bash","meta":null,"value":"pip install anyconfig","position":{"start":{"line":3058,"column":1,"offset":61040},"end":{"line":3060,"column":4,"offset":61073},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Usage:","position":{"start":{"line":3062,"column":1,"offset":61075},"end":{"line":3062,"column":7,"offset":61081},"indent":[]}}],"position":{"start":{"line":3062,"column":1,"offset":61075},"end":{"line":3062,"column":7,"offset":61081},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import anyconfig\n\nconf1 = anyconfig.load(\"/path/to/foo/conf.d/a.yml\")","position":{"start":{"line":3064,"column":1,"offset":61083},"end":{"line":3068,"column":4,"offset":61166},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Debugging","position":{"start":{"line":3070,"column":4,"offset":61171},"end":{"line":3070,"column":13,"offset":61180},"indent":[]}}],"position":{"start":{"line":3070,"column":1,"offset":61168},"end":{"line":3070,"column":13,"offset":61180},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Raising Exceptions","position":{"start":{"line":3072,"column":5,"offset":61186},"end":{"line":3072,"column":23,"offset":61204},"indent":[]}}],"position":{"start":{"line":3072,"column":1,"offset":61182},"end":{"line":3072,"column":23,"offset":61204},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Exceptions are raised with a raise statement. In code, a raise statement consists of the following:","position":{"start":{"line":3074,"column":1,"offset":61206},"end":{"line":3074,"column":100,"offset":61305},"indent":[]}}],"position":{"start":{"line":3074,"column":1,"offset":61206},"end":{"line":3074,"column":100,"offset":61305},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The raise keyword","position":{"start":{"line":3076,"column":5,"offset":61311},"end":{"line":3076,"column":22,"offset":61328},"indent":[]}}],"position":{"start":{"line":3076,"column":5,"offset":61311},"end":{"line":3076,"column":22,"offset":61328},"indent":[]}}],"position":{"start":{"line":3076,"column":1,"offset":61307},"end":{"line":3076,"column":22,"offset":61328},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"A call to the Exception() function","position":{"start":{"line":3077,"column":5,"offset":61333},"end":{"line":3077,"column":39,"offset":61367},"indent":[]}}],"position":{"start":{"line":3077,"column":5,"offset":61333},"end":{"line":3077,"column":39,"offset":61367},"indent":[]}}],"position":{"start":{"line":3077,"column":1,"offset":61329},"end":{"line":3077,"column":39,"offset":61367},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"A string with a helpful error message passed to the Exception() function","position":{"start":{"line":3078,"column":5,"offset":61372},"end":{"line":3078,"column":77,"offset":61444},"indent":[]}}],"position":{"start":{"line":3078,"column":5,"offset":61372},"end":{"line":3078,"column":77,"offset":61444},"indent":[]}}],"position":{"start":{"line":3078,"column":1,"offset":61368},"end":{"line":3078,"column":77,"offset":61444},"indent":[]}}],"position":{"start":{"line":3076,"column":1,"offset":61307},"end":{"line":3078,"column":77,"offset":61444},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"raise Exception('This is the error message.')\nTraceback (most recent call last):\n  File \"<pyshell#191>\", line 1, in <module>\n    raise Exception('This is the error message.')\nException: This is the error message.","position":{"start":{"line":3080,"column":1,"offset":61446},"end":{"line":3086,"column":4,"offset":61672},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Often it's the code that calls the function, not the function itself, that knows how to handle an expection. So you will commonly see a raise statement inside a function and the try and except statements in the code calling the function.","position":{"start":{"line":3088,"column":1,"offset":61674},"end":{"line":3088,"column":238,"offset":61911},"indent":[]}}],"position":{"start":{"line":3088,"column":1,"offset":61674},"end":{"line":3088,"column":238,"offset":61911},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"def box_print(symbol, width, height):\n    if len(symbol) != 1:\n      raise Exception('Symbol must be a single character string.')\n    if width <= 2:\n      raise Exception('Width must be greater than 2.')\n    if height <= 2:\n      raise Exception('Height must be greater than 2.')\n    print(symbol * width)\n    for i in range(height - 2):\n        print(symbol + (' ' * (width - 2)) + symbol)\n    print(symbol * width)\nfor sym, w, h in (('*', 4, 4), ('O', 20, 5), ('x', 1, 3), ('ZZ', 3, 3)):\n    try:\n        box_print(sym, w, h)\n    except Exception as err:\n        print('An exception happened: ' + str(err))","position":{"start":{"line":3090,"column":1,"offset":61913},"end":{"line":3107,"column":4,"offset":62535},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Getting the Traceback as a String","position":{"start":{"line":3109,"column":5,"offset":62541},"end":{"line":3109,"column":38,"offset":62574},"indent":[]}}],"position":{"start":{"line":3109,"column":1,"offset":62537},"end":{"line":3109,"column":38,"offset":62574},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The traceback is displayed by Python whenever a raised exception goes unhandled. But can also obtain it as a string by calling traceback.format_exc(). This function is useful if you want the information from an exception's traceback but also want an except statement to gracefully handle the exception. You will need to import Python's traceback module before calling this function.","position":{"start":{"line":3111,"column":1,"offset":62576},"end":{"line":3111,"column":383,"offset":62958},"indent":[]}}],"position":{"start":{"line":3111,"column":1,"offset":62576},"end":{"line":3111,"column":383,"offset":62958},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import traceback\n\ntry:\n     raise Exception('This is the error message.')\nexcept:\n     with open('errorInfo.txt', 'w') as error_file:\n         error_file.write(traceback.format_exc())\n     print('The traceback info was written to errorInfo.txt.')","position":{"start":{"line":3113,"column":1,"offset":62960},"end":{"line":3122,"column":4,"offset":63220},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The 116 is the return value from the write() method, since 116 characters were written to the file. The traceback text was written to errorInfo.txt.","position":{"start":{"line":3124,"column":1,"offset":63222},"end":{"line":3124,"column":149,"offset":63370},"indent":[]}}],"position":{"start":{"line":3124,"column":1,"offset":63222},"end":{"line":3124,"column":149,"offset":63370},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"Traceback (most recent call last):\n  File \"<pyshell#28>\", line 2, in <module>\nException: This is the error message.","position":{"start":{"line":3126,"column":1,"offset":63372},"end":{"line":3128,"column":42,"offset":63499},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Assertions","position":{"start":{"line":3130,"column":5,"offset":63505},"end":{"line":3130,"column":15,"offset":63515},"indent":[]}}],"position":{"start":{"line":3130,"column":1,"offset":63501},"end":{"line":3130,"column":15,"offset":63515},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"An assertion is a sanity check to make sure your code isn't doing something obviously wrong. These sanity checks are performed by assert statements. If the sanity check fails, then an AssertionError exception is raised. In code, an assert statement consists of the following:","position":{"start":{"line":3132,"column":1,"offset":63517},"end":{"line":3132,"column":276,"offset":63792},"indent":[]}}],"position":{"start":{"line":3132,"column":1,"offset":63517},"end":{"line":3132,"column":276,"offset":63792},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"The assert keyword","position":{"start":{"line":3134,"column":5,"offset":63798},"end":{"line":3134,"column":23,"offset":63816},"indent":[]}}],"position":{"start":{"line":3134,"column":5,"offset":63798},"end":{"line":3134,"column":23,"offset":63816},"indent":[]}}],"position":{"start":{"line":3134,"column":1,"offset":63794},"end":{"line":3134,"column":23,"offset":63816},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"A condition (that is, an expression that evaluates to True or False)","position":{"start":{"line":3135,"column":5,"offset":63821},"end":{"line":3135,"column":73,"offset":63889},"indent":[]}}],"position":{"start":{"line":3135,"column":5,"offset":63821},"end":{"line":3135,"column":73,"offset":63889},"indent":[]}}],"position":{"start":{"line":3135,"column":1,"offset":63817},"end":{"line":3135,"column":73,"offset":63889},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"A comma","position":{"start":{"line":3136,"column":5,"offset":63894},"end":{"line":3136,"column":12,"offset":63901},"indent":[]}}],"position":{"start":{"line":3136,"column":5,"offset":63894},"end":{"line":3136,"column":12,"offset":63901},"indent":[]}}],"position":{"start":{"line":3136,"column":1,"offset":63890},"end":{"line":3136,"column":12,"offset":63901},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"A string to display when the condition is False","position":{"start":{"line":3137,"column":5,"offset":63906},"end":{"line":3137,"column":52,"offset":63953},"indent":[]}}],"position":{"start":{"line":3137,"column":5,"offset":63906},"end":{"line":3137,"column":52,"offset":63953},"indent":[]}}],"position":{"start":{"line":3137,"column":1,"offset":63902},"end":{"line":3137,"column":52,"offset":63953},"indent":[]}}],"position":{"start":{"line":3134,"column":1,"offset":63794},"end":{"line":3137,"column":52,"offset":63953},"indent":[1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"pod_bay_door_status = 'open'\n\nassert pod_bay_door_status == 'open', 'The pod bay doors need to be \"open\".'\n\npod_bay_door_status = 'I\\'m sorry, Dave. I\\'m afraid I can\\'t do that.'\n\nassert pod_bay_door_status == 'open', 'The pod bay doors need to be \"open\".'","position":{"start":{"line":3139,"column":1,"offset":63955},"end":{"line":3147,"column":4,"offset":64226},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In plain English, an assert statement says, \"I assert that this condition holds true, and if not, there is a bug somewhere in the program.\" Unlike exceptions, your code should not handle assert statements with try and except; if an assert fails, your program should crash. By failing fast like this, you shorten the time between the original cause of the bug and when you first notice the bug. This will reduce the amount of code you will have to check before finding the code that's causing the bug.","position":{"start":{"line":3149,"column":1,"offset":64228},"end":{"line":3149,"column":501,"offset":64728},"indent":[]}}],"position":{"start":{"line":3149,"column":1,"offset":64228},"end":{"line":3149,"column":501,"offset":64728},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Disabling Assertions","position":{"start":{"line":3151,"column":1,"offset":64730},"end":{"line":3151,"column":21,"offset":64750},"indent":[]}}],"position":{"start":{"line":3151,"column":1,"offset":64730},"end":{"line":3151,"column":21,"offset":64750},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Assertions can be disabled by passing the -O option when running Python.","position":{"start":{"line":3153,"column":1,"offset":64752},"end":{"line":3153,"column":73,"offset":64824},"indent":[]}}],"position":{"start":{"line":3153,"column":1,"offset":64752},"end":{"line":3153,"column":73,"offset":64824},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Logging","position":{"start":{"line":3155,"column":5,"offset":64830},"end":{"line":3155,"column":12,"offset":64837},"indent":[]}}],"position":{"start":{"line":3155,"column":1,"offset":64826},"end":{"line":3155,"column":12,"offset":64837},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To enable the logging module to display log messages on your screen as your program runs, copy the following to the top of your program (but under the #! python shebang line):","position":{"start":{"line":3157,"column":1,"offset":64839},"end":{"line":3157,"column":176,"offset":65014},"indent":[]}}],"position":{"start":{"line":3157,"column":1,"offset":64839},"end":{"line":3157,"column":176,"offset":65014},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import logging\n\nlogging.basicConfig(level=logging.DEBUG, format=' %(asctime)s - %(levelname)s- %(message)s')","position":{"start":{"line":3159,"column":1,"offset":65016},"end":{"line":3163,"column":4,"offset":65138},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Say you wrote a function to calculate the factorial of a number. In mathematics, factorial 4 is 1 × 2 × 3 × 4, or 24. Factorial 7 is 1 × 2 × 3 × 4 × 5 × 6 × 7, or 5,040. Open a new file editor window and enter the following code. It has a bug in it, but you will also enter several log messages to help yourself figure out what is going wrong. Save the program as factorialLog.py.","position":{"start":{"line":3165,"column":1,"offset":65140},"end":{"line":3165,"column":381,"offset":65520},"indent":[]}}],"position":{"start":{"line":3165,"column":1,"offset":65140},"end":{"line":3165,"column":381,"offset":65520},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import logging\n\nlogging.basicConfig(level=logging.DEBUG, format=' %(asctime)s - %(levelname)s- %(message)s')\n\nlogging.debug('Start of program')\n\ndef factorial(n):\n\n    logging.debug('Start of factorial(%s)' % (n))\n    total = 1\n\n    for i in range(1, n + 1):\n        total *= i\n        logging.debug('i is ' + str(i) + ', total is ' + str(total))\n\n    logging.debug('End of factorial(%s)' % (n))\n\n    return total\n\nprint(factorial(5))\nlogging.debug('End of program')","position":{"start":{"line":3167,"column":1,"offset":65522},"end":{"line":3189,"column":4,"offset":66002},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Logging Levels","position":{"start":{"line":3191,"column":5,"offset":66008},"end":{"line":3191,"column":19,"offset":66022},"indent":[]}}],"position":{"start":{"line":3191,"column":1,"offset":66004},"end":{"line":3191,"column":19,"offset":66022},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Logging levels provide a way to categorize your log messages by importance. There are five logging levels, described in Table 10-1 from least to most important. Messages can be logged at each level using a different logging function.","position":{"start":{"line":3193,"column":1,"offset":66024},"end":{"line":3193,"column":234,"offset":66257},"indent":[]}}],"position":{"start":{"line":3193,"column":1,"offset":66024},"end":{"line":3193,"column":234,"offset":66257},"indent":[]}},{"type":"table","align":[null,null,null],"children":[{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Level","position":{"start":{"line":3195,"column":3,"offset":66261},"end":{"line":3195,"column":8,"offset":66266},"indent":[]}}],"position":{"start":{"line":3195,"column":3,"offset":66261},"end":{"line":3195,"column":13,"offset":66271},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Logging Function","position":{"start":{"line":3195,"column":16,"offset":66274},"end":{"line":3195,"column":32,"offset":66290},"indent":[]}}],"position":{"start":{"line":3195,"column":16,"offset":66274},"end":{"line":3195,"column":36,"offset":66294},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Description","position":{"start":{"line":3195,"column":39,"offset":66297},"end":{"line":3195,"column":50,"offset":66308},"indent":[]}}],"position":{"start":{"line":3195,"column":39,"offset":66297},"end":{"line":3195,"column":165,"offset":66423},"indent":[]}}],"position":{"start":{"line":3195,"column":1,"offset":66259},"end":{"line":3195,"column":167,"offset":66425},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"DEBUG","position":{"start":{"line":3197,"column":3,"offset":66595},"end":{"line":3197,"column":10,"offset":66602},"indent":[]}}],"position":{"start":{"line":3197,"column":3,"offset":66595},"end":{"line":3197,"column":13,"offset":66605},"indent":[]}},{"type":"tableCell","children":[{"type":"inlineCode","value":"logging.debug()","position":{"start":{"line":3197,"column":16,"offset":66608},"end":{"line":3197,"column":33,"offset":66625},"indent":[]}}],"position":{"start":{"line":3197,"column":16,"offset":66608},"end":{"line":3197,"column":36,"offset":66628},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"The lowest level. Used for small details. Usually you care about these messages only when diagnosing problems.","position":{"start":{"line":3197,"column":39,"offset":66631},"end":{"line":3197,"column":149,"offset":66741},"indent":[]}}],"position":{"start":{"line":3197,"column":39,"offset":66631},"end":{"line":3197,"column":165,"offset":66757},"indent":[]}}],"position":{"start":{"line":3197,"column":1,"offset":66593},"end":{"line":3197,"column":167,"offset":66759},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"INFO","position":{"start":{"line":3198,"column":3,"offset":66762},"end":{"line":3198,"column":9,"offset":66768},"indent":[]}}],"position":{"start":{"line":3198,"column":3,"offset":66762},"end":{"line":3198,"column":13,"offset":66772},"indent":[]}},{"type":"tableCell","children":[{"type":"inlineCode","value":"logging.info()","position":{"start":{"line":3198,"column":16,"offset":66775},"end":{"line":3198,"column":32,"offset":66791},"indent":[]}}],"position":{"start":{"line":3198,"column":16,"offset":66775},"end":{"line":3198,"column":36,"offset":66795},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Used to record information on general events in your program or confirm that things are working at their point in the program.","position":{"start":{"line":3198,"column":39,"offset":66798},"end":{"line":3198,"column":165,"offset":66924},"indent":[]}}],"position":{"start":{"line":3198,"column":39,"offset":66798},"end":{"line":3198,"column":165,"offset":66924},"indent":[]}}],"position":{"start":{"line":3198,"column":1,"offset":66760},"end":{"line":3198,"column":167,"offset":66926},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"WARNING","position":{"start":{"line":3199,"column":3,"offset":66929},"end":{"line":3199,"column":12,"offset":66938},"indent":[]}}],"position":{"start":{"line":3199,"column":3,"offset":66929},"end":{"line":3199,"column":13,"offset":66939},"indent":[]}},{"type":"tableCell","children":[{"type":"inlineCode","value":"logging.warning()","position":{"start":{"line":3199,"column":16,"offset":66942},"end":{"line":3199,"column":35,"offset":66961},"indent":[]}}],"position":{"start":{"line":3199,"column":16,"offset":66942},"end":{"line":3199,"column":36,"offset":66962},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Used to indicate a potential problem that doesn't prevent the program from working but might do so in the future.","position":{"start":{"line":3199,"column":39,"offset":66965},"end":{"line":3199,"column":152,"offset":67078},"indent":[]}}],"position":{"start":{"line":3199,"column":39,"offset":66965},"end":{"line":3199,"column":165,"offset":67091},"indent":[]}}],"position":{"start":{"line":3199,"column":1,"offset":66927},"end":{"line":3199,"column":167,"offset":67093},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"ERROR","position":{"start":{"line":3200,"column":3,"offset":67096},"end":{"line":3200,"column":10,"offset":67103},"indent":[]}}],"position":{"start":{"line":3200,"column":3,"offset":67096},"end":{"line":3200,"column":13,"offset":67106},"indent":[]}},{"type":"tableCell","children":[{"type":"inlineCode","value":"logging.error()","position":{"start":{"line":3200,"column":16,"offset":67109},"end":{"line":3200,"column":33,"offset":67126},"indent":[]}}],"position":{"start":{"line":3200,"column":16,"offset":67109},"end":{"line":3200,"column":36,"offset":67129},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Used to record an error that caused the program to fail to do something.","position":{"start":{"line":3200,"column":39,"offset":67132},"end":{"line":3200,"column":111,"offset":67204},"indent":[]}}],"position":{"start":{"line":3200,"column":39,"offset":67132},"end":{"line":3200,"column":165,"offset":67258},"indent":[]}}],"position":{"start":{"line":3200,"column":1,"offset":67094},"end":{"line":3200,"column":167,"offset":67260},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"inlineCode","value":"CRITICAL","position":{"start":{"line":3201,"column":3,"offset":67263},"end":{"line":3201,"column":13,"offset":67273},"indent":[]}}],"position":{"start":{"line":3201,"column":3,"offset":67263},"end":{"line":3201,"column":13,"offset":67273},"indent":[]}},{"type":"tableCell","children":[{"type":"inlineCode","value":"logging.critical()","position":{"start":{"line":3201,"column":16,"offset":67276},"end":{"line":3201,"column":36,"offset":67296},"indent":[]}}],"position":{"start":{"line":3201,"column":16,"offset":67276},"end":{"line":3201,"column":36,"offset":67296},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"The highest level. Used to indicate a fatal error that has caused or is about to cause the program to stop running entirely.","position":{"start":{"line":3201,"column":39,"offset":67299},"end":{"line":3201,"column":163,"offset":67423},"indent":[]}}],"position":{"start":{"line":3201,"column":39,"offset":67299},"end":{"line":3201,"column":165,"offset":67425},"indent":[]}}],"position":{"start":{"line":3201,"column":1,"offset":67261},"end":{"line":3201,"column":167,"offset":67427},"indent":[]}}],"position":{"start":{"line":3195,"column":1,"offset":66259},"end":{"line":3201,"column":167,"offset":67427},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Disabling Logging","position":{"start":{"line":3203,"column":5,"offset":67433},"end":{"line":3203,"column":22,"offset":67450},"indent":[]}}],"position":{"start":{"line":3203,"column":1,"offset":67429},"end":{"line":3203,"column":22,"offset":67450},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"After you've debugged your program, you probably don't want all these log messages cluttering the screen. The logging.disable() function disables these so that you don't have to go into your program and remove all the logging calls by hand.","position":{"start":{"line":3205,"column":1,"offset":67452},"end":{"line":3205,"column":241,"offset":67692},"indent":[]}}],"position":{"start":{"line":3205,"column":1,"offset":67452},"end":{"line":3205,"column":241,"offset":67692},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import logging\n\nlogging.basicConfig(level=logging.INFO, format=' %(asctime)s -%(levelname)s - %(message)s')\nlogging.critical('Critical error! Critical error!')\nlogging.disable(logging.CRITICAL)\nlogging.critical('Critical error! Critical error!')\nlogging.error('Error! Error!')","position":{"start":{"line":3207,"column":1,"offset":67694},"end":{"line":3215,"column":4,"offset":67984},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Logging to a File","position":{"start":{"line":3217,"column":5,"offset":67990},"end":{"line":3217,"column":22,"offset":68007},"indent":[]}}],"position":{"start":{"line":3217,"column":1,"offset":67986},"end":{"line":3217,"column":22,"offset":68007},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Instead of displaying the log messages to the screen, you can write them to a text file. The logging.basicConfig() function takes a filename keyword argument, like so:","position":{"start":{"line":3219,"column":1,"offset":68009},"end":{"line":3219,"column":168,"offset":68176},"indent":[]}}],"position":{"start":{"line":3219,"column":1,"offset":68009},"end":{"line":3219,"column":168,"offset":68176},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import logging\n\nlogging.basicConfig(filename='myProgramLog.txt', level=logging.DEBUG, format='%(asctime)s - %(levelname)s - %(message)s')","position":{"start":{"line":3221,"column":1,"offset":68178},"end":{"line":3225,"column":4,"offset":68329},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Lambda Functions","position":{"start":{"line":3227,"column":4,"offset":68334},"end":{"line":3227,"column":20,"offset":68350},"indent":[]}}],"position":{"start":{"line":3227,"column":1,"offset":68331},"end":{"line":3227,"column":20,"offset":68350},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This function:","position":{"start":{"line":3229,"column":1,"offset":68352},"end":{"line":3229,"column":15,"offset":68366},"indent":[]}}],"position":{"start":{"line":3229,"column":1,"offset":68352},"end":{"line":3229,"column":15,"offset":68366},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"def add(x, y):\n        return x + y\n\nadd(5, 3)","position":{"start":{"line":3231,"column":1,"offset":68368},"end":{"line":3236,"column":4,"offset":68428},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Is equivalent to the ","position":{"start":{"line":3238,"column":1,"offset":68430},"end":{"line":3238,"column":22,"offset":68451},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"lambda","position":{"start":{"line":3238,"column":23,"offset":68452},"end":{"line":3238,"column":29,"offset":68458},"indent":[]}}],"position":{"start":{"line":3238,"column":22,"offset":68451},"end":{"line":3238,"column":30,"offset":68459},"indent":[]}},{"type":"text","value":" function:","position":{"start":{"line":3238,"column":30,"offset":68459},"end":{"line":3238,"column":40,"offset":68469},"indent":[]}}],"position":{"start":{"line":3238,"column":1,"offset":68430},"end":{"line":3238,"column":40,"offset":68469},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"add = lambda x, y: x + y\nadd(5, 3)","position":{"start":{"line":3240,"column":1,"offset":68471},"end":{"line":3243,"column":4,"offset":68519},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"It's not even need to bind it to a name like add before:","position":{"start":{"line":3245,"column":1,"offset":68521},"end":{"line":3245,"column":57,"offset":68577},"indent":[]}}],"position":{"start":{"line":3245,"column":1,"offset":68521},"end":{"line":3245,"column":57,"offset":68577},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"(lambda x, y: x + y)(5, 3)","position":{"start":{"line":3247,"column":1,"offset":68579},"end":{"line":3249,"column":4,"offset":68619},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Like regular nested functions, lambdas also work as lexical closures:","position":{"start":{"line":3251,"column":1,"offset":68621},"end":{"line":3251,"column":70,"offset":68690},"indent":[]}}],"position":{"start":{"line":3251,"column":1,"offset":68621},"end":{"line":3251,"column":70,"offset":68690},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"def make_adder(n):\n        return lambda x: x + n\n\nplus_3 = make_adder(3)\nplus_5(4)","position":{"start":{"line":3253,"column":1,"offset":68692},"end":{"line":3259,"column":4,"offset":68789},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Note: lambda can only evaluate an expression, like a single line of code.","position":{"start":{"line":3261,"column":1,"offset":68791},"end":{"line":3261,"column":74,"offset":68864},"indent":[]}}],"position":{"start":{"line":3261,"column":1,"offset":68791},"end":{"line":3261,"column":74,"offset":68864},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Ternary Conditional Operator","position":{"start":{"line":3263,"column":4,"offset":68869},"end":{"line":3263,"column":32,"offset":68897},"indent":[]}}],"position":{"start":{"line":3263,"column":1,"offset":68866},"end":{"line":3263,"column":32,"offset":68897},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Many programming languages have a ternary operator, which define a conditional expression. The most common usage is to make a terse simple conditional assignment statement. In other words, it offers one-line code to evaluate the first expression if the condition is true, otherwise it evaluates the second expression.","position":{"start":{"line":3265,"column":1,"offset":68899},"end":{"line":3265,"column":318,"offset":69216},"indent":[]}}],"position":{"start":{"line":3265,"column":1,"offset":68899},"end":{"line":3265,"column":318,"offset":69216},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"<expression1> if <condition> else <expression2>","position":{"start":{"line":3267,"column":1,"offset":69218},"end":{"line":3267,"column":52,"offset":69269},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Example:","position":{"start":{"line":3269,"column":1,"offset":69271},"end":{"line":3269,"column":9,"offset":69279},"indent":[]}}],"position":{"start":{"line":3269,"column":1,"offset":69271},"end":{"line":3269,"column":9,"offset":69279},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"age = 15\n\nprint('kid' if age < 18 else 'adult')","position":{"start":{"line":3271,"column":1,"offset":69281},"end":{"line":3275,"column":4,"offset":69342},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Ternary operators can be changed:","position":{"start":{"line":3277,"column":1,"offset":69344},"end":{"line":3277,"column":34,"offset":69377},"indent":[]}}],"position":{"start":{"line":3277,"column":1,"offset":69344},"end":{"line":3277,"column":34,"offset":69377},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"age = 15\nprint('kid' if age < 13 else 'teenager' if age < 18 else 'adult')","position":{"start":{"line":3279,"column":1,"offset":69379},"end":{"line":3282,"column":4,"offset":69467},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The code above is equivalent to:","position":{"start":{"line":3284,"column":1,"offset":69469},"end":{"line":3284,"column":33,"offset":69501},"indent":[]}}],"position":{"start":{"line":3284,"column":1,"offset":69469},"end":{"line":3284,"column":33,"offset":69501},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"if age < 18:\n    if age < 12:\n        print('kid')\n    else:\n        print('teenager')\nelse:\n    print('adult')","position":{"start":{"line":3286,"column":1,"offset":69503},"end":{"line":3294,"column":4,"offset":69628},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"args and kwargs","position":{"start":{"line":3296,"column":4,"offset":69633},"end":{"line":3296,"column":19,"offset":69648},"indent":[]}}],"position":{"start":{"line":3296,"column":1,"offset":69630},"end":{"line":3296,"column":19,"offset":69648},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The names ","position":{"start":{"line":3298,"column":1,"offset":69650},"end":{"line":3298,"column":11,"offset":69660},"indent":[]}},{"type":"inlineCode","value":"args and kwargs","position":{"start":{"line":3298,"column":11,"offset":69660},"end":{"line":3298,"column":28,"offset":69677},"indent":[]}},{"type":"text","value":" are arbitrary - the important thing are the ","position":{"start":{"line":3298,"column":28,"offset":69677},"end":{"line":3298,"column":73,"offset":69722},"indent":[]}},{"type":"inlineCode","value":"*","position":{"start":{"line":3298,"column":73,"offset":69722},"end":{"line":3298,"column":76,"offset":69725},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":3298,"column":76,"offset":69725},"end":{"line":3298,"column":81,"offset":69730},"indent":[]}},{"type":"inlineCode","value":"**","position":{"start":{"line":3298,"column":81,"offset":69730},"end":{"line":3298,"column":85,"offset":69734},"indent":[]}},{"type":"text","value":" operators. They can mean:","position":{"start":{"line":3298,"column":85,"offset":69734},"end":{"line":3298,"column":111,"offset":69760},"indent":[]}}],"position":{"start":{"line":3298,"column":1,"offset":69650},"end":{"line":3298,"column":111,"offset":69760},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"In a function declaration, ","position":{"start":{"line":3300,"column":4,"offset":69765},"end":{"line":3300,"column":31,"offset":69792},"indent":[]}},{"type":"inlineCode","value":"*","position":{"start":{"line":3300,"column":31,"offset":69792},"end":{"line":3300,"column":34,"offset":69795},"indent":[]}},{"type":"text","value":" means \"pack all remaining positional arguments into a tuple named ","position":{"start":{"line":3300,"column":34,"offset":69795},"end":{"line":3300,"column":101,"offset":69862},"indent":[]}},{"type":"inlineCode","value":"<name>","position":{"start":{"line":3300,"column":101,"offset":69862},"end":{"line":3300,"column":109,"offset":69870},"indent":[]}},{"type":"text","value":"\", while ","position":{"start":{"line":3300,"column":109,"offset":69870},"end":{"line":3300,"column":118,"offset":69879},"indent":[]}},{"type":"inlineCode","value":"**","position":{"start":{"line":3300,"column":118,"offset":69879},"end":{"line":3300,"column":122,"offset":69883},"indent":[]}},{"type":"text","value":" is the same for keyword arguments (except it uses a dictionary, not a tuple).","position":{"start":{"line":3300,"column":122,"offset":69883},"end":{"line":3300,"column":200,"offset":69961},"indent":[]}}],"position":{"start":{"line":3300,"column":4,"offset":69765},"end":{"line":3300,"column":200,"offset":69961},"indent":[]}}],"position":{"start":{"line":3300,"column":1,"offset":69762},"end":{"line":3301,"column":1,"offset":69962},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"In a function call, ","position":{"start":{"line":3302,"column":4,"offset":69966},"end":{"line":3302,"column":24,"offset":69986},"indent":[]}},{"type":"inlineCode","value":"*","position":{"start":{"line":3302,"column":24,"offset":69986},"end":{"line":3302,"column":27,"offset":69989},"indent":[]}},{"type":"text","value":" means \"unpack tuple or list named ","position":{"start":{"line":3302,"column":27,"offset":69989},"end":{"line":3302,"column":62,"offset":70024},"indent":[]}},{"type":"inlineCode","value":"<name>","position":{"start":{"line":3302,"column":62,"offset":70024},"end":{"line":3302,"column":70,"offset":70032},"indent":[]}},{"type":"text","value":" to positional arguments at this position\", while ","position":{"start":{"line":3302,"column":70,"offset":70032},"end":{"line":3302,"column":120,"offset":70082},"indent":[]}},{"type":"inlineCode","value":"**","position":{"start":{"line":3302,"column":120,"offset":70082},"end":{"line":3302,"column":124,"offset":70086},"indent":[]}},{"type":"text","value":" is the same for keyword arguments.","position":{"start":{"line":3302,"column":124,"offset":70086},"end":{"line":3302,"column":159,"offset":70121},"indent":[]}}],"position":{"start":{"line":3302,"column":4,"offset":69966},"end":{"line":3302,"column":159,"offset":70121},"indent":[]}}],"position":{"start":{"line":3302,"column":1,"offset":69963},"end":{"line":3302,"column":159,"offset":70121},"indent":[]}}],"position":{"start":{"line":3300,"column":1,"offset":69762},"end":{"line":3302,"column":159,"offset":70121},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"For example you can make a function that you can use to call any other function, no matter what parameters it has:","position":{"start":{"line":3304,"column":1,"offset":70123},"end":{"line":3304,"column":115,"offset":70237},"indent":[]}}],"position":{"start":{"line":3304,"column":1,"offset":70123},"end":{"line":3304,"column":115,"offset":70237},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"def forward(f, *args, **kwargs):\n    return f(*args, **kwargs)","position":{"start":{"line":3306,"column":1,"offset":70239},"end":{"line":3309,"column":4,"offset":70315},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Inside forward, args is a tuple (of all positional arguments except the first one, because we specified it - the f), kwargs is a dict. Then we call f and unpack them so they become normal arguments to f.","position":{"start":{"line":3311,"column":1,"offset":70317},"end":{"line":3311,"column":204,"offset":70520},"indent":[]}}],"position":{"start":{"line":3311,"column":1,"offset":70317},"end":{"line":3311,"column":204,"offset":70520},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You use ","position":{"start":{"line":3313,"column":1,"offset":70522},"end":{"line":3313,"column":9,"offset":70530},"indent":[]}},{"type":"inlineCode","value":"*args","position":{"start":{"line":3313,"column":9,"offset":70530},"end":{"line":3313,"column":16,"offset":70537},"indent":[]}},{"type":"text","value":" when you have an indefinite amount of positional arguments.","position":{"start":{"line":3313,"column":16,"offset":70537},"end":{"line":3313,"column":76,"offset":70597},"indent":[]}}],"position":{"start":{"line":3313,"column":1,"offset":70522},"end":{"line":3313,"column":76,"offset":70597},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"def fruits(*args):\n   for fruit in args:\n      print(fruit)\n\nfruits(\"apples\", \"bananas\", \"grapes\")","position":{"start":{"line":3315,"column":1,"offset":70599},"end":{"line":3321,"column":4,"offset":70711},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Similarly, you use ","position":{"start":{"line":3323,"column":1,"offset":70713},"end":{"line":3323,"column":20,"offset":70732},"indent":[]}},{"type":"inlineCode","value":"**kwargs","position":{"start":{"line":3323,"column":20,"offset":70732},"end":{"line":3323,"column":30,"offset":70742},"indent":[]}},{"type":"text","value":" when you have an indefinite number of keyword arguments.","position":{"start":{"line":3323,"column":30,"offset":70742},"end":{"line":3323,"column":87,"offset":70799},"indent":[]}}],"position":{"start":{"line":3323,"column":1,"offset":70713},"end":{"line":3323,"column":87,"offset":70799},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"def fruit(**kwargs):\n   for key, value in kwargs.items():\n       print(\"{0}: {1}\".format(key, value))\n\nfruit(name = \"apple\", color = \"red\")","position":{"start":{"line":3325,"column":1,"offset":70801},"end":{"line":3331,"column":4,"offset":70954},"indent":[1,1,1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"def show(arg1, arg2, *args, kwarg1=None, kwarg2=None, **kwargs):\n  print(arg1)\n  print(arg2)\n  print(args)\n  print(kwarg1)\n  print(kwarg2)\n  print(kwargs)\n\ndata1 = [1,2,3]\ndata2 = [4,5,6]\ndata3 = {'a':7,'b':8,'c':9}\n\nshow(*data1,*data2, kwarg1=\"python\",kwarg2=\"cheatsheet\",**data3)","position":{"start":{"line":3333,"column":1,"offset":70956},"end":{"line":3347,"column":4,"offset":71251},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"show(*data1, *data2, **data3)","position":{"start":{"line":3349,"column":1,"offset":71253},"end":{"line":3351,"column":4,"offset":71296},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If you do not specify ","position":{"start":{"line":3353,"column":1,"offset":71298},"end":{"line":3353,"column":23,"offset":71320},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":3353,"column":23,"offset":71320},"end":{"line":3353,"column":25,"offset":71322},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":3353,"column":25,"offset":71322},"end":{"line":3353,"column":27,"offset":71324},"indent":[]}},{"type":"text","value":" for kwargs","position":{"start":{"line":3353,"column":27,"offset":71324},"end":{"line":3353,"column":38,"offset":71335},"indent":[]}}],"position":{"start":{"line":3353,"column":1,"offset":71298},"end":{"line":3353,"column":38,"offset":71335},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"show(*data1, *data2, *data3)","position":{"start":{"line":3355,"column":1,"offset":71337},"end":{"line":3357,"column":4,"offset":71379},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Thinks to Remember(args)","position":{"start":{"line":3359,"column":5,"offset":71385},"end":{"line":3359,"column":29,"offset":71409},"indent":[]}}],"position":{"start":{"line":3359,"column":1,"offset":71381},"end":{"line":3359,"column":29,"offset":71409},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Functions can accept a variable number of positional arguments by using ","position":{"start":{"line":3361,"column":4,"offset":71414},"end":{"line":3361,"column":76,"offset":71486},"indent":[]}},{"type":"inlineCode","value":"*args","position":{"start":{"line":3361,"column":76,"offset":71486},"end":{"line":3361,"column":83,"offset":71493},"indent":[]}},{"type":"text","value":" in the def statement.","position":{"start":{"line":3361,"column":83,"offset":71493},"end":{"line":3361,"column":105,"offset":71515},"indent":[]}}],"position":{"start":{"line":3361,"column":4,"offset":71414},"end":{"line":3361,"column":105,"offset":71515},"indent":[]}}],"position":{"start":{"line":3361,"column":1,"offset":71411},"end":{"line":3361,"column":105,"offset":71515},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"You can use the items from a sequence as the positional arguments for a function with the ","position":{"start":{"line":3362,"column":4,"offset":71519},"end":{"line":3362,"column":94,"offset":71609},"indent":[]}},{"type":"inlineCode","value":"*","position":{"start":{"line":3362,"column":94,"offset":71609},"end":{"line":3362,"column":97,"offset":71612},"indent":[]}},{"type":"text","value":" operator.","position":{"start":{"line":3362,"column":97,"offset":71612},"end":{"line":3362,"column":107,"offset":71622},"indent":[]}}],"position":{"start":{"line":3362,"column":4,"offset":71519},"end":{"line":3362,"column":107,"offset":71622},"indent":[]}}],"position":{"start":{"line":3362,"column":1,"offset":71516},"end":{"line":3362,"column":107,"offset":71622},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Using the ","position":{"start":{"line":3363,"column":4,"offset":71626},"end":{"line":3363,"column":14,"offset":71636},"indent":[]}},{"type":"inlineCode","value":"*","position":{"start":{"line":3363,"column":14,"offset":71636},"end":{"line":3363,"column":17,"offset":71639},"indent":[]}},{"type":"text","value":" operator with a generator may cause your program to run out of memory and crash.","position":{"start":{"line":3363,"column":17,"offset":71639},"end":{"line":3363,"column":98,"offset":71720},"indent":[]}}],"position":{"start":{"line":3363,"column":4,"offset":71626},"end":{"line":3363,"column":98,"offset":71720},"indent":[]}}],"position":{"start":{"line":3363,"column":1,"offset":71623},"end":{"line":3363,"column":98,"offset":71720},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Adding new positional parameters to functions that accept ","position":{"start":{"line":3364,"column":4,"offset":71724},"end":{"line":3364,"column":62,"offset":71782},"indent":[]}},{"type":"inlineCode","value":"*args","position":{"start":{"line":3364,"column":62,"offset":71782},"end":{"line":3364,"column":69,"offset":71789},"indent":[]}},{"type":"text","value":" can introduce hard-to-find bugs.","position":{"start":{"line":3364,"column":69,"offset":71789},"end":{"line":3364,"column":102,"offset":71822},"indent":[]}}],"position":{"start":{"line":3364,"column":4,"offset":71724},"end":{"line":3364,"column":102,"offset":71822},"indent":[]}}],"position":{"start":{"line":3364,"column":1,"offset":71721},"end":{"line":3364,"column":102,"offset":71822},"indent":[]}}],"position":{"start":{"line":3361,"column":1,"offset":71411},"end":{"line":3364,"column":102,"offset":71822},"indent":[1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Thinks to remember(kwargs)","position":{"start":{"line":3366,"column":5,"offset":71828},"end":{"line":3366,"column":31,"offset":71854},"indent":[]}}],"position":{"start":{"line":3366,"column":1,"offset":71824},"end":{"line":3366,"column":31,"offset":71854},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Function arguments can be specified by position or by keyword.","position":{"start":{"line":3368,"column":4,"offset":71859},"end":{"line":3368,"column":66,"offset":71921},"indent":[]}}],"position":{"start":{"line":3368,"column":4,"offset":71859},"end":{"line":3368,"column":66,"offset":71921},"indent":[]}}],"position":{"start":{"line":3368,"column":1,"offset":71856},"end":{"line":3368,"column":66,"offset":71921},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Keywords make it clear what the purpose of each argument is when it would be confusing with only positional arguments.","position":{"start":{"line":3369,"column":4,"offset":71925},"end":{"line":3369,"column":122,"offset":72043},"indent":[]}}],"position":{"start":{"line":3369,"column":4,"offset":71925},"end":{"line":3369,"column":122,"offset":72043},"indent":[]}}],"position":{"start":{"line":3369,"column":1,"offset":71922},"end":{"line":3369,"column":122,"offset":72043},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Keyword arguments with default values make it easy to add new behaviors to a function, especially when the function has existing callers.","position":{"start":{"line":3370,"column":4,"offset":72047},"end":{"line":3370,"column":141,"offset":72184},"indent":[]}}],"position":{"start":{"line":3370,"column":4,"offset":72047},"end":{"line":3370,"column":141,"offset":72184},"indent":[]}}],"position":{"start":{"line":3370,"column":1,"offset":72044},"end":{"line":3370,"column":141,"offset":72184},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Optional keyword arguments should always be passed by keyword instead of by position.","position":{"start":{"line":3371,"column":4,"offset":72188},"end":{"line":3371,"column":89,"offset":72273},"indent":[]}}],"position":{"start":{"line":3371,"column":4,"offset":72188},"end":{"line":3371,"column":89,"offset":72273},"indent":[]}}],"position":{"start":{"line":3371,"column":1,"offset":72185},"end":{"line":3371,"column":89,"offset":72273},"indent":[]}}],"position":{"start":{"line":3368,"column":1,"offset":71856},"end":{"line":3371,"column":89,"offset":72273},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Context Manager","position":{"start":{"line":3373,"column":4,"offset":72278},"end":{"line":3373,"column":19,"offset":72293},"indent":[]}}],"position":{"start":{"line":3373,"column":1,"offset":72275},"end":{"line":3373,"column":19,"offset":72293},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"While Python's context managers are widely used, few understand the purpose behind their use. These statements, commonly used with reading and writing files, assist the application in conserving system memory and improve resource management by ensuring specific resources are only in use for certain processes.","position":{"start":{"line":3375,"column":1,"offset":72295},"end":{"line":3375,"column":311,"offset":72605},"indent":[]}}],"position":{"start":{"line":3375,"column":1,"offset":72295},"end":{"line":3375,"column":311,"offset":72605},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"with statement","position":{"start":{"line":3377,"column":5,"offset":72611},"end":{"line":3377,"column":19,"offset":72625},"indent":[]}}],"position":{"start":{"line":3377,"column":1,"offset":72607},"end":{"line":3377,"column":19,"offset":72625},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A context manager is an object that is notified when a context (a block of code) starts and ends. You commonly use one with the with statement. It takes care of the notifying.","position":{"start":{"line":3379,"column":1,"offset":72627},"end":{"line":3379,"column":176,"offset":72802},"indent":[]}}],"position":{"start":{"line":3379,"column":1,"offset":72627},"end":{"line":3379,"column":176,"offset":72802},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For example, file objects are context managers. When a context ends, the file object is closed automatically:","position":{"start":{"line":3381,"column":1,"offset":72804},"end":{"line":3381,"column":110,"offset":72913},"indent":[]}}],"position":{"start":{"line":3381,"column":1,"offset":72804},"end":{"line":3381,"column":110,"offset":72913},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"with open(filename) as f:\n    file_contents = f.read()\n\n# the open_file object has automatically been closed.","position":{"start":{"line":3383,"column":1,"offset":72915},"end":{"line":3388,"column":4,"offset":73038},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Anything that ends execution of the block causes the context manager's exit method to be called. This includes exceptions, and can be useful when an error causes you to prematurely exit from an open file or connection. Exiting a script without properly closing files/connections is a bad idea, that may cause data loss or other problems. By using a context manager you can ensure that precautions are always taken to prevent damage or loss in this way.","position":{"start":{"line":3390,"column":1,"offset":73040},"end":{"line":3390,"column":453,"offset":73492},"indent":[]}}],"position":{"start":{"line":3390,"column":1,"offset":73040},"end":{"line":3390,"column":453,"offset":73492},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Writing your own contextmanager using generator syntax","position":{"start":{"line":3392,"column":5,"offset":73498},"end":{"line":3392,"column":59,"offset":73552},"indent":[]}}],"position":{"start":{"line":3392,"column":1,"offset":73494},"end":{"line":3392,"column":59,"offset":73552},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"It is also possible to write a context manager using generator syntax thanks to the ","position":{"start":{"line":3394,"column":1,"offset":73554},"end":{"line":3394,"column":85,"offset":73638},"indent":[]}},{"type":"inlineCode","value":"contextlib.contextmanager","position":{"start":{"line":3394,"column":85,"offset":73638},"end":{"line":3394,"column":112,"offset":73665},"indent":[]}},{"type":"text","value":" decorator:","position":{"start":{"line":3394,"column":112,"offset":73665},"end":{"line":3394,"column":123,"offset":73676},"indent":[]}}],"position":{"start":{"line":3394,"column":1,"offset":73554},"end":{"line":3394,"column":123,"offset":73676},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"import contextlib\n\n@contextlib.contextmanager\ndef context_manager(num):\n    print('Enter')\n    yield num + 1\n    print('Exit')\nwith context_manager(2) as cm:\n    # the following instructions are run when the 'yield' point of the context\n    # manager is reached.\n    # 'cm' will have the value that was yielded\n    print('Right in the middle with cm = {}'.format(cm))","position":{"start":{"line":3396,"column":1,"offset":73678},"end":{"line":3409,"column":4,"offset":74059},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"inlineCode","value":"__main__","position":{"start":{"line":3411,"column":4,"offset":74064},"end":{"line":3411,"column":14,"offset":74074},"indent":[]}},{"type":"text","value":" Top-level script environment","position":{"start":{"line":3411,"column":14,"offset":74074},"end":{"line":3411,"column":43,"offset":74103},"indent":[]}}],"position":{"start":{"line":3411,"column":1,"offset":74061},"end":{"line":3411,"column":43,"offset":74103},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"__main__","position":{"start":{"line":3413,"column":1,"offset":74105},"end":{"line":3413,"column":11,"offset":74115},"indent":[]}},{"type":"text","value":" is the name of the scope in which top-level code executes.\nA module's ","position":{"start":{"line":3413,"column":11,"offset":74115},"end":{"line":3414,"column":12,"offset":74186},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"name","position":{"start":{"line":3414,"column":14,"offset":74188},"end":{"line":3414,"column":18,"offset":74192},"indent":[]}}],"position":{"start":{"line":3414,"column":12,"offset":74186},"end":{"line":3414,"column":20,"offset":74194},"indent":[]}},{"type":"text","value":" is set equal to ","position":{"start":{"line":3414,"column":20,"offset":74194},"end":{"line":3414,"column":37,"offset":74211},"indent":[]}},{"type":"inlineCode","value":"__main__","position":{"start":{"line":3414,"column":37,"offset":74211},"end":{"line":3414,"column":47,"offset":74221},"indent":[]}},{"type":"text","value":" when read from standard input, a script, or from an interactive prompt.","position":{"start":{"line":3414,"column":47,"offset":74221},"end":{"line":3414,"column":119,"offset":74293},"indent":[]}}],"position":{"start":{"line":3413,"column":1,"offset":74105},"end":{"line":3414,"column":119,"offset":74293},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"A module can discover whether or not it is running in the main scope by checking its own ","position":{"start":{"line":3416,"column":1,"offset":74295},"end":{"line":3416,"column":90,"offset":74384},"indent":[]}},{"type":"inlineCode","value":"__name__","position":{"start":{"line":3416,"column":90,"offset":74384},"end":{"line":3416,"column":100,"offset":74394},"indent":[]}},{"type":"text","value":", which allows a common idiom for conditionally executing code in a module when it is run as a script or with ","position":{"start":{"line":3416,"column":100,"offset":74394},"end":{"line":3416,"column":210,"offset":74504},"indent":[]}},{"type":"inlineCode","value":"python -m","position":{"start":{"line":3416,"column":210,"offset":74504},"end":{"line":3416,"column":221,"offset":74515},"indent":[]}},{"type":"text","value":" but not when it is imported:","position":{"start":{"line":3416,"column":221,"offset":74515},"end":{"line":3416,"column":250,"offset":74544},"indent":[]}}],"position":{"start":{"line":3416,"column":1,"offset":74295},"end":{"line":3416,"column":250,"offset":74544},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"if __name__ == \"__main__\":\n    # execute only if run as a script\n    main()","position":{"start":{"line":3418,"column":1,"offset":74546},"end":{"line":3422,"column":4,"offset":74635},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"For a package, the same effect can be achieved by including a ","position":{"start":{"line":3424,"column":1,"offset":74637},"end":{"line":3424,"column":63,"offset":74699},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"main","position":{"start":{"line":3424,"column":65,"offset":74701},"end":{"line":3424,"column":69,"offset":74705},"indent":[]}}],"position":{"start":{"line":3424,"column":63,"offset":74699},"end":{"line":3424,"column":71,"offset":74707},"indent":[]}},{"type":"text","value":".py module, the contents of which will be executed when the module is run with -m.","position":{"start":{"line":3424,"column":71,"offset":74707},"end":{"line":3424,"column":153,"offset":74789},"indent":[]}}],"position":{"start":{"line":3424,"column":1,"offset":74637},"end":{"line":3424,"column":153,"offset":74789},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For example we are developing script which is designed to be used as module, we should do:","position":{"start":{"line":3426,"column":1,"offset":74791},"end":{"line":3426,"column":91,"offset":74881},"indent":[]}}],"position":{"start":{"line":3426,"column":1,"offset":74791},"end":{"line":3426,"column":91,"offset":74881},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"# Python program to execute function directly\ndef add(a, b):\n    return a+b\n\nadd(10, 20) # we can test it by calling the function save it as calculate.py","position":{"start":{"line":3428,"column":1,"offset":74883},"end":{"line":3434,"column":4,"offset":75050},"indent":[1,1,1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"# Now if we want to use that module by importing we have to comment out our call,\n# Instead we can write like this in calculate.py\nif __name__ == \"__main__\":\n    add(3, 5)","position":{"start":{"line":3436,"column":1,"offset":75052},"end":{"line":3441,"column":4,"offset":75237},"indent":[1,1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"import calculate\n\ncalculate.add(3, 5)","position":{"start":{"line":3443,"column":1,"offset":75239},"end":{"line":3447,"column":4,"offset":75290},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Advantages","position":{"start":{"line":3449,"column":5,"offset":75296},"end":{"line":3449,"column":15,"offset":75306},"indent":[]}}],"position":{"start":{"line":3449,"column":1,"offset":75292},"end":{"line":3449,"column":15,"offset":75306},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Every Python module has it's ","position":{"start":{"line":3451,"column":4,"offset":75311},"end":{"line":3451,"column":33,"offset":75340},"indent":[]}},{"type":"inlineCode","value":"__name__","position":{"start":{"line":3451,"column":33,"offset":75340},"end":{"line":3451,"column":43,"offset":75350},"indent":[]}},{"type":"text","value":" defined and if this is ","position":{"start":{"line":3451,"column":43,"offset":75350},"end":{"line":3451,"column":67,"offset":75374},"indent":[]}},{"type":"inlineCode","value":"__main__","position":{"start":{"line":3451,"column":67,"offset":75374},"end":{"line":3451,"column":77,"offset":75384},"indent":[]}},{"type":"text","value":", it implies that the module is being run standalone by the user and we can do corresponding appropriate actions.","position":{"start":{"line":3451,"column":77,"offset":75384},"end":{"line":3451,"column":190,"offset":75497},"indent":[]}}],"position":{"start":{"line":3451,"column":4,"offset":75311},"end":{"line":3451,"column":190,"offset":75497},"indent":[]}}],"position":{"start":{"line":3451,"column":1,"offset":75308},"end":{"line":3451,"column":190,"offset":75497},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"If you import this script as a module in another script, the ","position":{"start":{"line":3452,"column":4,"offset":75501},"end":{"line":3452,"column":65,"offset":75562},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"name","position":{"start":{"line":3452,"column":67,"offset":75564},"end":{"line":3452,"column":71,"offset":75568},"indent":[]}}],"position":{"start":{"line":3452,"column":65,"offset":75562},"end":{"line":3452,"column":73,"offset":75570},"indent":[]}},{"type":"text","value":" is set to the name of the script/module.","position":{"start":{"line":3452,"column":73,"offset":75570},"end":{"line":3452,"column":114,"offset":75611},"indent":[]}}],"position":{"start":{"line":3452,"column":4,"offset":75501},"end":{"line":3452,"column":114,"offset":75611},"indent":[]}}],"position":{"start":{"line":3452,"column":1,"offset":75498},"end":{"line":3452,"column":114,"offset":75611},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Python files can act as either reusable modules, or as standalone programs.","position":{"start":{"line":3453,"column":4,"offset":75615},"end":{"line":3453,"column":79,"offset":75690},"indent":[]}}],"position":{"start":{"line":3453,"column":4,"offset":75615},"end":{"line":3453,"column":79,"offset":75690},"indent":[]}}],"position":{"start":{"line":3453,"column":1,"offset":75612},"end":{"line":3453,"column":79,"offset":75690},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"if ","position":{"start":{"line":3454,"column":4,"offset":75694},"end":{"line":3454,"column":7,"offset":75697},"indent":[]}},{"type":"inlineCode","value":"__name__ == \"main\":","position":{"start":{"line":3454,"column":7,"offset":75697},"end":{"line":3454,"column":28,"offset":75718},"indent":[]}},{"type":"text","value":" is used to execute some code only if the file was run directly, and not imported.","position":{"start":{"line":3454,"column":28,"offset":75718},"end":{"line":3454,"column":110,"offset":75800},"indent":[]}}],"position":{"start":{"line":3454,"column":4,"offset":75694},"end":{"line":3454,"column":110,"offset":75800},"indent":[]}}],"position":{"start":{"line":3454,"column":1,"offset":75691},"end":{"line":3454,"column":110,"offset":75800},"indent":[]}}],"position":{"start":{"line":3451,"column":1,"offset":75308},"end":{"line":3454,"column":110,"offset":75800},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"setup.py","position":{"start":{"line":3456,"column":4,"offset":75805},"end":{"line":3456,"column":12,"offset":75813},"indent":[]}}],"position":{"start":{"line":3456,"column":1,"offset":75802},"end":{"line":3456,"column":12,"offset":75813},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The setup script is the centre of all activity in building, distributing, and installing modules using the Distutils. The main purpose of the setup script is to describe your module distribution to the Distutils, so that the various commands that operate on your modules do the right thing.","position":{"start":{"line":3458,"column":1,"offset":75815},"end":{"line":3458,"column":291,"offset":76105},"indent":[]}}],"position":{"start":{"line":3458,"column":1,"offset":75815},"end":{"line":3458,"column":291,"offset":76105},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The ","position":{"start":{"line":3460,"column":1,"offset":76107},"end":{"line":3460,"column":5,"offset":76111},"indent":[]}},{"type":"inlineCode","value":"setup.py","position":{"start":{"line":3460,"column":5,"offset":76111},"end":{"line":3460,"column":15,"offset":76121},"indent":[]}},{"type":"text","value":" file is at the heart of a Python project. It describes all of the metadata about your project. There a quite a few fields you can add to a project to give it a rich set of metadata describing the project. However, there are only three required fields: name, version, and packages. The name field must be unique if you wish to publish your package on the Python Package Index (PyPI). The version field keeps track of different releases of the project. The packages field describes where you've put the Python source code within your project.","position":{"start":{"line":3460,"column":15,"offset":76121},"end":{"line":3460,"column":556,"offset":76662},"indent":[]}}],"position":{"start":{"line":3460,"column":1,"offset":76107},"end":{"line":3460,"column":556,"offset":76662},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This allows you to easily install Python packages. Often it's enough to write:","position":{"start":{"line":3462,"column":1,"offset":76664},"end":{"line":3462,"column":79,"offset":76742},"indent":[]}}],"position":{"start":{"line":3462,"column":1,"offset":76664},"end":{"line":3462,"column":79,"offset":76742},"indent":[]}},{"type":"code","lang":"bash","meta":null,"value":"python setup.py install","position":{"start":{"line":3464,"column":1,"offset":76744},"end":{"line":3466,"column":4,"offset":76779},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"and module will install itself.","position":{"start":{"line":3468,"column":1,"offset":76781},"end":{"line":3468,"column":32,"offset":76812},"indent":[]}}],"position":{"start":{"line":3468,"column":1,"offset":76781},"end":{"line":3468,"column":32,"offset":76812},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Our initial setup.py will also include information about the license and will re-use the README.txt file for the long_description field. This will look like:","position":{"start":{"line":3470,"column":1,"offset":76814},"end":{"line":3470,"column":158,"offset":76971},"indent":[]}}],"position":{"start":{"line":3470,"column":1,"offset":76814},"end":{"line":3470,"column":158,"offset":76971},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"from distutils.core import setup\nsetup(\n   name='pythonCheatsheet',\n   version='0.1',\n   packages=['pipenv',],\n   license='MIT',\n   long_description=open('README.txt').read(),\n)","position":{"start":{"line":3472,"column":1,"offset":76973},"end":{"line":3481,"column":4,"offset":77164},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Find more information visit ","position":{"start":{"line":3483,"column":1,"offset":77166},"end":{"line":3483,"column":29,"offset":77194},"indent":[]}},{"type":"link","title":null,"url":"http://docs.python.org/install/index.html","children":[{"type":"text","value":"http://docs.python.org/install/index.html","position":{"start":{"line":3483,"column":30,"offset":77195},"end":{"line":3483,"column":71,"offset":77236},"indent":[]}}],"position":{"start":{"line":3483,"column":29,"offset":77194},"end":{"line":3483,"column":115,"offset":77280},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":3483,"column":115,"offset":77280},"end":{"line":3483,"column":116,"offset":77281},"indent":[]}}],"position":{"start":{"line":3483,"column":1,"offset":77166},"end":{"line":3483,"column":116,"offset":77281},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Dataclasses","position":{"start":{"line":3485,"column":4,"offset":77286},"end":{"line":3485,"column":15,"offset":77297},"indent":[]}}],"position":{"start":{"line":3485,"column":1,"offset":77283},"end":{"line":3485,"column":15,"offset":77297},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"Dataclasses","position":{"start":{"line":3487,"column":1,"offset":77299},"end":{"line":3487,"column":14,"offset":77312},"indent":[]}},{"type":"text","value":" are python classes but are suited for storing data objects.\nThis module provides a decorator and functions for automatically adding generated special methods such as ","position":{"start":{"line":3487,"column":14,"offset":77312},"end":{"line":3488,"column":107,"offset":77479},"indent":[1]}},{"type":"inlineCode","value":"__init__()","position":{"start":{"line":3488,"column":107,"offset":77479},"end":{"line":3488,"column":119,"offset":77491},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":3488,"column":119,"offset":77491},"end":{"line":3488,"column":124,"offset":77496},"indent":[]}},{"type":"inlineCode","value":"__repr__()","position":{"start":{"line":3488,"column":124,"offset":77496},"end":{"line":3488,"column":136,"offset":77508},"indent":[]}},{"type":"text","value":" to user-defined classes.","position":{"start":{"line":3488,"column":136,"offset":77508},"end":{"line":3488,"column":161,"offset":77533},"indent":[]}}],"position":{"start":{"line":3487,"column":1,"offset":77299},"end":{"line":3488,"column":161,"offset":77533},"indent":[1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Features","position":{"start":{"line":3490,"column":5,"offset":77539},"end":{"line":3490,"column":13,"offset":77547},"indent":[]}}],"position":{"start":{"line":3490,"column":1,"offset":77535},"end":{"line":3490,"column":13,"offset":77547},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"They store data and represent a certain data type. Ex: A number. For people familiar with ORMs, a model instance is a data object. It represents a specific kind of entity. It holds attributes that define or represent the entity.","position":{"start":{"line":3492,"column":4,"offset":77552},"end":{"line":3492,"column":232,"offset":77780},"indent":[]}}],"position":{"start":{"line":3492,"column":4,"offset":77552},"end":{"line":3492,"column":232,"offset":77780},"indent":[]}}],"position":{"start":{"line":3492,"column":1,"offset":77549},"end":{"line":3493,"column":1,"offset":77781},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"They can be compared to other objects of the same type. Ex: A number can be greater than, less than, or equal to another number.","position":{"start":{"line":3494,"column":4,"offset":77785},"end":{"line":3494,"column":132,"offset":77913},"indent":[]}}],"position":{"start":{"line":3494,"column":4,"offset":77785},"end":{"line":3494,"column":132,"offset":77913},"indent":[]}}],"position":{"start":{"line":3494,"column":1,"offset":77782},"end":{"line":3494,"column":132,"offset":77913},"indent":[]}}],"position":{"start":{"line":3492,"column":1,"offset":77549},"end":{"line":3494,"column":132,"offset":77913},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Python 3.7 provides a decorator dataclass that is used to convert a class into a dataclass.","position":{"start":{"line":3496,"column":1,"offset":77915},"end":{"line":3496,"column":92,"offset":78006},"indent":[]}}],"position":{"start":{"line":3496,"column":1,"offset":77915},"end":{"line":3496,"column":92,"offset":78006},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"python 2.7","position":{"start":{"line":3498,"column":1,"offset":78008},"end":{"line":3498,"column":11,"offset":78018},"indent":[]}}],"position":{"start":{"line":3498,"column":1,"offset":78008},"end":{"line":3498,"column":11,"offset":78018},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"class Number:\n    def __init__(self, val):\n        self.val = val\n\nobj = Number(2)\nobj.val","position":{"start":{"line":3500,"column":1,"offset":78020},"end":{"line":3507,"column":4,"offset":78124},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"with dataclass","position":{"start":{"line":3509,"column":1,"offset":78126},"end":{"line":3509,"column":15,"offset":78140},"indent":[]}}],"position":{"start":{"line":3509,"column":1,"offset":78126},"end":{"line":3509,"column":15,"offset":78140},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"from dataclasses import dataclass\n\n@dataclass\nclass Number:\n    val: int\n\nobj = Number(2)\nobj.val","position":{"start":{"line":3511,"column":1,"offset":78142},"end":{"line":3520,"column":4,"offset":78253},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Default values","position":{"start":{"line":3522,"column":5,"offset":78259},"end":{"line":3522,"column":19,"offset":78273},"indent":[]}}],"position":{"start":{"line":3522,"column":1,"offset":78255},"end":{"line":3522,"column":19,"offset":78273},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"It is easy to add default values to the fields of your data class.","position":{"start":{"line":3524,"column":1,"offset":78275},"end":{"line":3524,"column":67,"offset":78341},"indent":[]}}],"position":{"start":{"line":3524,"column":1,"offset":78275},"end":{"line":3524,"column":67,"offset":78341},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"from dataclasses import dataclass\n\n@dataclass\nclass Product:\n    name: str\n    count: int = 0\n    price: float = 0.0\n\nobj = Product(\"Python\")\nobj.name","position":{"start":{"line":3526,"column":1,"offset":78343},"end":{"line":3537,"column":4,"offset":78507},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"code","lang":"python","meta":null,"value":"obj.count","position":{"start":{"line":3539,"column":1,"offset":78509},"end":{"line":3541,"column":4,"offset":78532},"indent":[1,1]}},{"type":"code","lang":"python","meta":null,"value":"obj.price","position":{"start":{"line":3543,"column":1,"offset":78534},"end":{"line":3545,"column":4,"offset":78557},"indent":[1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Type hints","position":{"start":{"line":3547,"column":5,"offset":78563},"end":{"line":3547,"column":15,"offset":78573},"indent":[]}}],"position":{"start":{"line":3547,"column":1,"offset":78559},"end":{"line":3547,"column":15,"offset":78573},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"It is mandatory to define the data type in dataclass. However, If you don't want specify the datatype then, use ","position":{"start":{"line":3549,"column":1,"offset":78575},"end":{"line":3549,"column":113,"offset":78687},"indent":[]}},{"type":"inlineCode","value":"typing.Any","position":{"start":{"line":3549,"column":113,"offset":78687},"end":{"line":3549,"column":125,"offset":78699},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":3549,"column":125,"offset":78699},"end":{"line":3549,"column":126,"offset":78700},"indent":[]}}],"position":{"start":{"line":3549,"column":1,"offset":78575},"end":{"line":3549,"column":126,"offset":78700},"indent":[]}},{"type":"code","lang":"python","meta":null,"value":"from dataclasses import dataclass\nfrom typing import Any\n\n@dataclass\nclass WithoutExplicitTypes:\n   name: Any\n   value: Any = 42","position":{"start":{"line":3551,"column":1,"offset":78702},"end":{"line":3559,"column":4,"offset":78844},"indent":[1,1,1,1,1,1,1,1]}},{"type":"thematicBreak","position":{"start":{"line":3561,"column":1,"offset":78846},"end":{"line":3561,"column":4,"offset":78849},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":3563,"column":1,"offset":78851},"end":{"line":3563,"column":4,"offset":78854},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":3565,"column":1,"offset":78856},"end":{"line":3565,"column":4,"offset":78859},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":3567,"column":1,"offset":78861},"end":{"line":3567,"column":4,"offset":78864},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"PART 2:","position":{"start":{"line":3569,"column":3,"offset":78868},"end":{"line":3569,"column":10,"offset":78875},"indent":[]}}],"position":{"start":{"line":3569,"column":1,"offset":78866},"end":{"line":3569,"column":10,"offset":78875},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Single line comments start with a number symbol.","position":{"start":{"line":3571,"column":3,"offset":78879},"end":{"line":3571,"column":51,"offset":78927},"indent":[]}}],"position":{"start":{"line":3571,"column":1,"offset":78877},"end":{"line":3571,"column":51,"offset":78927},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"\"\"\" Multiline strings can be written\nusing three \"s, and are often used\nas documentation.\n\"\"\"","position":{"start":{"line":3573,"column":1,"offset":78929},"end":{"line":3576,"column":4,"offset":79022},"indent":[1,1,1]}}],"position":{"start":{"line":3573,"column":1,"offset":78929},"end":{"line":3576,"column":4,"offset":79022},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"####################################################","position":{"start":{"line":3578,"column":1,"offset":79024},"end":{"line":3578,"column":53,"offset":79076},"indent":[]}}],"position":{"start":{"line":3578,"column":1,"offset":79024},"end":{"line":3578,"column":53,"offset":79076},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"1. Primitive Datatypes and Operators","position":{"start":{"line":3580,"column":4,"offset":79081},"end":{"line":3580,"column":40,"offset":79117},"indent":[]}}],"position":{"start":{"line":3580,"column":1,"offset":79078},"end":{"line":3580,"column":40,"offset":79117},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"####################################################","position":{"start":{"line":3582,"column":1,"offset":79119},"end":{"line":3582,"column":53,"offset":79171},"indent":[]}}],"position":{"start":{"line":3582,"column":1,"offset":79119},"end":{"line":3582,"column":53,"offset":79171},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"You have numbers","position":{"start":{"line":3584,"column":3,"offset":79175},"end":{"line":3584,"column":19,"offset":79191},"indent":[]}}],"position":{"start":{"line":3584,"column":1,"offset":79173},"end":{"line":3584,"column":19,"offset":79191},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"3 # => 3","position":{"start":{"line":3586,"column":1,"offset":79193},"end":{"line":3586,"column":9,"offset":79201},"indent":[]}}],"position":{"start":{"line":3586,"column":1,"offset":79193},"end":{"line":3586,"column":9,"offset":79201},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Math is what you would expect","position":{"start":{"line":3588,"column":3,"offset":79205},"end":{"line":3588,"column":32,"offset":79234},"indent":[]}}],"position":{"start":{"line":3588,"column":1,"offset":79203},"end":{"line":3588,"column":32,"offset":79234},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"1 + 1 # => 2\n8 - 1 # => 7\n10 ","position":{"start":{"line":3590,"column":1,"offset":79236},"end":{"line":3592,"column":4,"offset":79265},"indent":[1,1]}},{"type":"text","value":"*","position":{"start":{"line":3592,"column":4,"offset":79265},"end":{"line":3592,"column":6,"offset":79267},"indent":[]}},{"type":"text","value":" 2 # => 20\n35 / 5 # => 7.0","position":{"start":{"line":3592,"column":6,"offset":79267},"end":{"line":3593,"column":16,"offset":79293},"indent":[1]}}],"position":{"start":{"line":3590,"column":1,"offset":79236},"end":{"line":3593,"column":16,"offset":79293},"indent":[1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Integer division rounds down for both positive and negative numbers.","position":{"start":{"line":3595,"column":3,"offset":79297},"end":{"line":3595,"column":71,"offset":79365},"indent":[]}}],"position":{"start":{"line":3595,"column":1,"offset":79295},"end":{"line":3595,"column":71,"offset":79365},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"5 // 3 # => 1\n-5 // 3 # => -2\n5.0 // 3.0 # => 1.0 # works on floats too\n-5.0 // 3.0 # => -2.0","position":{"start":{"line":3597,"column":1,"offset":79367},"end":{"line":3600,"column":22,"offset":79460},"indent":[1,1,1]}}],"position":{"start":{"line":3597,"column":1,"offset":79367},"end":{"line":3600,"column":22,"offset":79460},"indent":[1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"The result of division is always a float","position":{"start":{"line":3602,"column":3,"offset":79464},"end":{"line":3602,"column":43,"offset":79504},"indent":[]}}],"position":{"start":{"line":3602,"column":1,"offset":79462},"end":{"line":3602,"column":43,"offset":79504},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"10.0 / 3 # => 3.3333333333333335","position":{"start":{"line":3604,"column":1,"offset":79506},"end":{"line":3604,"column":33,"offset":79538},"indent":[]}}],"position":{"start":{"line":3604,"column":1,"offset":79506},"end":{"line":3604,"column":33,"offset":79538},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Modulo operation","position":{"start":{"line":3606,"column":3,"offset":79542},"end":{"line":3606,"column":19,"offset":79558},"indent":[]}}],"position":{"start":{"line":3606,"column":1,"offset":79540},"end":{"line":3606,"column":19,"offset":79558},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"7 % 3 # => 1","position":{"start":{"line":3608,"column":1,"offset":79560},"end":{"line":3608,"column":13,"offset":79572},"indent":[]}}],"position":{"start":{"line":3608,"column":1,"offset":79560},"end":{"line":3608,"column":13,"offset":79572},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Exponentiation (x","position":{"start":{"line":3610,"column":3,"offset":79576},"end":{"line":3610,"column":20,"offset":79593},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":3610,"column":20,"offset":79593},"end":{"line":3610,"column":22,"offset":79595},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":3610,"column":22,"offset":79595},"end":{"line":3610,"column":24,"offset":79597},"indent":[]}},{"type":"text","value":"y, x to the yth power)","position":{"start":{"line":3610,"column":24,"offset":79597},"end":{"line":3610,"column":46,"offset":79619},"indent":[]}}],"position":{"start":{"line":3610,"column":1,"offset":79574},"end":{"line":3610,"column":46,"offset":79619},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"2","position":{"start":{"line":3612,"column":1,"offset":79621},"end":{"line":3612,"column":2,"offset":79622},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":3612,"column":2,"offset":79622},"end":{"line":3612,"column":4,"offset":79624},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":3612,"column":4,"offset":79624},"end":{"line":3612,"column":6,"offset":79626},"indent":[]}},{"type":"text","value":"3 # => 8","position":{"start":{"line":3612,"column":6,"offset":79626},"end":{"line":3612,"column":14,"offset":79634},"indent":[]}}],"position":{"start":{"line":3612,"column":1,"offset":79621},"end":{"line":3612,"column":14,"offset":79634},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Enforce precedence with parentheses","position":{"start":{"line":3614,"column":3,"offset":79638},"end":{"line":3614,"column":38,"offset":79673},"indent":[]}}],"position":{"start":{"line":3614,"column":1,"offset":79636},"end":{"line":3614,"column":38,"offset":79673},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"(1 + 3) ","position":{"start":{"line":3616,"column":1,"offset":79675},"end":{"line":3616,"column":9,"offset":79683},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":3616,"column":9,"offset":79683},"end":{"line":3616,"column":11,"offset":79685},"indent":[]}},{"type":"text","value":" 2 # => 8","position":{"start":{"line":3616,"column":11,"offset":79685},"end":{"line":3616,"column":20,"offset":79694},"indent":[]}}],"position":{"start":{"line":3616,"column":1,"offset":79675},"end":{"line":3616,"column":20,"offset":79694},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Boolean values are primitives (Note: the capitalization)","position":{"start":{"line":3618,"column":3,"offset":79698},"end":{"line":3618,"column":59,"offset":79754},"indent":[]}}],"position":{"start":{"line":3618,"column":1,"offset":79696},"end":{"line":3618,"column":59,"offset":79754},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"True\nFalse","position":{"start":{"line":3620,"column":1,"offset":79756},"end":{"line":3621,"column":6,"offset":79766},"indent":[1]}}],"position":{"start":{"line":3620,"column":1,"offset":79756},"end":{"line":3621,"column":6,"offset":79766},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"negate with not","position":{"start":{"line":3623,"column":3,"offset":79770},"end":{"line":3623,"column":18,"offset":79785},"indent":[]}}],"position":{"start":{"line":3623,"column":1,"offset":79768},"end":{"line":3623,"column":18,"offset":79785},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"not True # => False\nnot False # => True","position":{"start":{"line":3625,"column":1,"offset":79787},"end":{"line":3626,"column":20,"offset":79826},"indent":[1]}}],"position":{"start":{"line":3625,"column":1,"offset":79787},"end":{"line":3626,"column":20,"offset":79826},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Boolean Operators","position":{"start":{"line":3628,"column":3,"offset":79830},"end":{"line":3628,"column":20,"offset":79847},"indent":[]}}],"position":{"start":{"line":3628,"column":1,"offset":79828},"end":{"line":3628,"column":20,"offset":79847},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Note \"and\" and \"or\" are case-sensitive","position":{"start":{"line":3630,"column":3,"offset":79851},"end":{"line":3630,"column":41,"offset":79889},"indent":[]}}],"position":{"start":{"line":3630,"column":1,"offset":79849},"end":{"line":3630,"column":41,"offset":79889},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"True and False # => False\nFalse or True # => True","position":{"start":{"line":3632,"column":1,"offset":79891},"end":{"line":3633,"column":24,"offset":79940},"indent":[1]}}],"position":{"start":{"line":3632,"column":1,"offset":79891},"end":{"line":3633,"column":24,"offset":79940},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"True and False are actually 1 and 0 but with different keywords","position":{"start":{"line":3635,"column":3,"offset":79944},"end":{"line":3635,"column":66,"offset":80007},"indent":[]}}],"position":{"start":{"line":3635,"column":1,"offset":79942},"end":{"line":3635,"column":66,"offset":80007},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"True + True # => 2\nTrue ","position":{"start":{"line":3637,"column":1,"offset":80009},"end":{"line":3638,"column":6,"offset":80033},"indent":[1]}},{"type":"text","value":"*","position":{"start":{"line":3638,"column":6,"offset":80033},"end":{"line":3638,"column":8,"offset":80035},"indent":[]}},{"type":"text","value":" 8 # => 8\nFalse - 5 # => -5","position":{"start":{"line":3638,"column":8,"offset":80035},"end":{"line":3639,"column":18,"offset":80062},"indent":[1]}}],"position":{"start":{"line":3637,"column":1,"offset":80009},"end":{"line":3639,"column":18,"offset":80062},"indent":[1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Comparison operators look at the numerical value of True and False","position":{"start":{"line":3641,"column":3,"offset":80066},"end":{"line":3641,"column":69,"offset":80132},"indent":[]}}],"position":{"start":{"line":3641,"column":1,"offset":80064},"end":{"line":3641,"column":69,"offset":80132},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"0 == False # => True\n1 == True # => True\n2 == True # => False\n-5 != False # => True","position":{"start":{"line":3643,"column":1,"offset":80134},"end":{"line":3646,"column":22,"offset":80217},"indent":[1,1,1]}}],"position":{"start":{"line":3643,"column":1,"offset":80134},"end":{"line":3646,"column":22,"offset":80217},"indent":[1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Using boolean logical operators on ints casts them to booleans for evaluation, but their non-cast value is returned","position":{"start":{"line":3648,"column":3,"offset":80221},"end":{"line":3648,"column":118,"offset":80336},"indent":[]}}],"position":{"start":{"line":3648,"column":1,"offset":80219},"end":{"line":3648,"column":118,"offset":80336},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Don't mix up with bool(ints) and bitwise and/or (&,|)","position":{"start":{"line":3650,"column":3,"offset":80340},"end":{"line":3650,"column":56,"offset":80393},"indent":[]}}],"position":{"start":{"line":3650,"column":1,"offset":80338},"end":{"line":3650,"column":56,"offset":80393},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"bool(0) # => False\nbool(4) # => True\nbool(-6) # => True\n0 and 2 # => 0\n-5 or 0 # => -5","position":{"start":{"line":3652,"column":1,"offset":80395},"end":{"line":3656,"column":16,"offset":80481},"indent":[1,1,1,1]}}],"position":{"start":{"line":3652,"column":1,"offset":80395},"end":{"line":3656,"column":16,"offset":80481},"indent":[1,1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Equality is ==","position":{"start":{"line":3658,"column":3,"offset":80485},"end":{"line":3658,"column":17,"offset":80499},"indent":[]}}],"position":{"start":{"line":3658,"column":1,"offset":80483},"end":{"line":3658,"column":17,"offset":80499},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"1 == 1 # => True\n2 == 1 # => False","position":{"start":{"line":3660,"column":1,"offset":80501},"end":{"line":3661,"column":18,"offset":80535},"indent":[1]}}],"position":{"start":{"line":3660,"column":1,"offset":80501},"end":{"line":3661,"column":18,"offset":80535},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Inequality is !=","position":{"start":{"line":3663,"column":3,"offset":80539},"end":{"line":3663,"column":19,"offset":80555},"indent":[]}}],"position":{"start":{"line":3663,"column":1,"offset":80537},"end":{"line":3663,"column":19,"offset":80555},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"1 != 1 # => False\n2 != 1 # => True","position":{"start":{"line":3665,"column":1,"offset":80557},"end":{"line":3666,"column":17,"offset":80591},"indent":[1]}}],"position":{"start":{"line":3665,"column":1,"offset":80557},"end":{"line":3666,"column":17,"offset":80591},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"More comparisons","position":{"start":{"line":3668,"column":3,"offset":80595},"end":{"line":3668,"column":19,"offset":80611},"indent":[]}}],"position":{"start":{"line":3668,"column":1,"offset":80593},"end":{"line":3668,"column":19,"offset":80611},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"1 < 10 # => True\n1 > 10 # => False\n2 <= 2 # => True\n2 >= 2 # => True","position":{"start":{"line":3670,"column":1,"offset":80613},"end":{"line":3673,"column":17,"offset":80681},"indent":[1,1,1]}}],"position":{"start":{"line":3670,"column":1,"offset":80613},"end":{"line":3673,"column":17,"offset":80681},"indent":[1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Seeing whether a value is in a range","position":{"start":{"line":3675,"column":3,"offset":80685},"end":{"line":3675,"column":39,"offset":80721},"indent":[]}}],"position":{"start":{"line":3675,"column":1,"offset":80683},"end":{"line":3675,"column":39,"offset":80721},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"1 < 2 and 2 < 3 # => True\n2 < 3 and 3 < 2 # => False","position":{"start":{"line":3677,"column":1,"offset":80723},"end":{"line":3678,"column":27,"offset":80775},"indent":[1]}}],"position":{"start":{"line":3677,"column":1,"offset":80723},"end":{"line":3678,"column":27,"offset":80775},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Chaining makes this look nicer","position":{"start":{"line":3680,"column":3,"offset":80779},"end":{"line":3680,"column":33,"offset":80809},"indent":[]}}],"position":{"start":{"line":3680,"column":1,"offset":80777},"end":{"line":3680,"column":33,"offset":80809},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"1 < 2 < 3 # => True\n2 < 3 < 2 # => False","position":{"start":{"line":3682,"column":1,"offset":80811},"end":{"line":3683,"column":21,"offset":80851},"indent":[1]}}],"position":{"start":{"line":3682,"column":1,"offset":80811},"end":{"line":3683,"column":21,"offset":80851},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"(is vs. ==) is checks if two variables refer to the same object, but == checks","position":{"start":{"line":3685,"column":3,"offset":80855},"end":{"line":3685,"column":81,"offset":80933},"indent":[]}}],"position":{"start":{"line":3685,"column":1,"offset":80853},"end":{"line":3685,"column":81,"offset":80933},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"if the objects pointed to have the same values.","position":{"start":{"line":3687,"column":3,"offset":80937},"end":{"line":3687,"column":50,"offset":80984},"indent":[]}}],"position":{"start":{"line":3687,"column":1,"offset":80935},"end":{"line":3687,"column":50,"offset":80984},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"a = ","position":{"start":{"line":3689,"column":1,"offset":80986},"end":{"line":3689,"column":5,"offset":80990},"indent":[]}},{"type":"linkReference","identifier":"1, 2, 3, 4","label":"1, 2, 3, 4","referenceType":"shortcut","children":[{"type":"text","value":"1, 2, 3, 4","position":{"start":{"line":3689,"column":6,"offset":80991},"end":{"line":3689,"column":16,"offset":81001},"indent":[]}}],"position":{"start":{"line":3689,"column":5,"offset":80990},"end":{"line":3689,"column":17,"offset":81002},"indent":[]}},{"type":"text","value":" # Point a at a new list, ","position":{"start":{"line":3689,"column":17,"offset":81002},"end":{"line":3689,"column":43,"offset":81028},"indent":[]}},{"type":"linkReference","identifier":"1, 2, 3, 4","label":"1, 2, 3, 4","referenceType":"shortcut","children":[{"type":"text","value":"1, 2, 3, 4","position":{"start":{"line":3689,"column":44,"offset":81029},"end":{"line":3689,"column":54,"offset":81039},"indent":[]}}],"position":{"start":{"line":3689,"column":43,"offset":81028},"end":{"line":3689,"column":55,"offset":81040},"indent":[]}},{"type":"text","value":"\nb = a # Point b at what a is pointing to\nb is a # => True, a and b refer to the same object\nb == a # => True, a's and b's objects are equal\nb = ","position":{"start":{"line":3689,"column":55,"offset":81040},"end":{"line":3693,"column":5,"offset":81185},"indent":[1,1,1,1]}},{"type":"linkReference","identifier":"1, 2, 3, 4","label":"1, 2, 3, 4","referenceType":"shortcut","children":[{"type":"text","value":"1, 2, 3, 4","position":{"start":{"line":3693,"column":6,"offset":81186},"end":{"line":3693,"column":16,"offset":81196},"indent":[]}}],"position":{"start":{"line":3693,"column":5,"offset":81185},"end":{"line":3693,"column":17,"offset":81197},"indent":[]}},{"type":"text","value":" # Point b at a new list, ","position":{"start":{"line":3693,"column":17,"offset":81197},"end":{"line":3693,"column":43,"offset":81223},"indent":[]}},{"type":"linkReference","identifier":"1, 2, 3, 4","label":"1, 2, 3, 4","referenceType":"shortcut","children":[{"type":"text","value":"1, 2, 3, 4","position":{"start":{"line":3693,"column":44,"offset":81224},"end":{"line":3693,"column":54,"offset":81234},"indent":[]}}],"position":{"start":{"line":3693,"column":43,"offset":81223},"end":{"line":3693,"column":55,"offset":81235},"indent":[]}},{"type":"text","value":"\nb is a # => False, a and b do not refer to the same object\nb == a # => True, a's and b's objects are equal","position":{"start":{"line":3693,"column":55,"offset":81235},"end":{"line":3695,"column":48,"offset":81342},"indent":[1,1]}}],"position":{"start":{"line":3689,"column":1,"offset":80986},"end":{"line":3695,"column":48,"offset":81342},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Strings are created with \" or '","position":{"start":{"line":3697,"column":3,"offset":81346},"end":{"line":3697,"column":34,"offset":81377},"indent":[]}}],"position":{"start":{"line":3697,"column":1,"offset":81344},"end":{"line":3697,"column":34,"offset":81377},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"\"This is a string.\"\n'This is also a string.'","position":{"start":{"line":3699,"column":1,"offset":81379},"end":{"line":3700,"column":25,"offset":81423},"indent":[1]}}],"position":{"start":{"line":3699,"column":1,"offset":81379},"end":{"line":3700,"column":25,"offset":81423},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Strings can be added too! But try not to do this.","position":{"start":{"line":3702,"column":3,"offset":81427},"end":{"line":3702,"column":52,"offset":81476},"indent":[]}}],"position":{"start":{"line":3702,"column":1,"offset":81425},"end":{"line":3702,"column":52,"offset":81476},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"\"Hello \" + \"world!\" # => \"Hello world!\"","position":{"start":{"line":3704,"column":1,"offset":81478},"end":{"line":3704,"column":40,"offset":81517},"indent":[]}}],"position":{"start":{"line":3704,"column":1,"offset":81478},"end":{"line":3704,"column":40,"offset":81517},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"String literals (but not variables) can be concatenated without using '+'","position":{"start":{"line":3706,"column":3,"offset":81521},"end":{"line":3706,"column":76,"offset":81594},"indent":[]}}],"position":{"start":{"line":3706,"column":1,"offset":81519},"end":{"line":3706,"column":76,"offset":81594},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"\"Hello \" \"world!\" # => \"Hello world!\"","position":{"start":{"line":3708,"column":1,"offset":81596},"end":{"line":3708,"column":38,"offset":81633},"indent":[]}}],"position":{"start":{"line":3708,"column":1,"offset":81596},"end":{"line":3708,"column":38,"offset":81633},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"A string can be treated like a list of characters","position":{"start":{"line":3710,"column":3,"offset":81637},"end":{"line":3710,"column":52,"offset":81686},"indent":[]}}],"position":{"start":{"line":3710,"column":1,"offset":81635},"end":{"line":3710,"column":52,"offset":81686},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"\"This is a string\"","position":{"start":{"line":3712,"column":1,"offset":81688},"end":{"line":3712,"column":19,"offset":81706},"indent":[]}},{"type":"linkReference","identifier":"0","label":"0","referenceType":"shortcut","children":[{"type":"text","value":"0","position":{"start":{"line":3712,"column":20,"offset":81707},"end":{"line":3712,"column":21,"offset":81708},"indent":[]}}],"position":{"start":{"line":3712,"column":19,"offset":81706},"end":{"line":3712,"column":22,"offset":81709},"indent":[]}},{"type":"text","value":" # => 'T'","position":{"start":{"line":3712,"column":22,"offset":81709},"end":{"line":3712,"column":31,"offset":81718},"indent":[]}}],"position":{"start":{"line":3712,"column":1,"offset":81688},"end":{"line":3712,"column":31,"offset":81718},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"You can find the length of a string","position":{"start":{"line":3714,"column":3,"offset":81722},"end":{"line":3714,"column":38,"offset":81757},"indent":[]}}],"position":{"start":{"line":3714,"column":1,"offset":81720},"end":{"line":3714,"column":38,"offset":81757},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"len(\"This is a string\") # => 16","position":{"start":{"line":3716,"column":1,"offset":81759},"end":{"line":3716,"column":32,"offset":81790},"indent":[]}}],"position":{"start":{"line":3716,"column":1,"offset":81759},"end":{"line":3716,"column":32,"offset":81790},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":".format can be used to format strings, like this:","position":{"start":{"line":3718,"column":3,"offset":81794},"end":{"line":3718,"column":52,"offset":81843},"indent":[]}}],"position":{"start":{"line":3718,"column":1,"offset":81792},"end":{"line":3718,"column":52,"offset":81843},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"\"{} can be {}\".format(\"Strings\", \"interpolated\") # => \"Strings can be interpolated\"","position":{"start":{"line":3720,"column":1,"offset":81845},"end":{"line":3720,"column":84,"offset":81928},"indent":[]}}],"position":{"start":{"line":3720,"column":1,"offset":81845},"end":{"line":3720,"column":84,"offset":81928},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"You can repeat the formatting arguments to save some typing.","position":{"start":{"line":3722,"column":3,"offset":81932},"end":{"line":3722,"column":63,"offset":81992},"indent":[]}}],"position":{"start":{"line":3722,"column":1,"offset":81930},"end":{"line":3722,"column":63,"offset":81992},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"\"{0} be nimble, {0} be quick, {0} jump over the {1}\".format(\"Jack\", \"candle stick\")","position":{"start":{"line":3724,"column":1,"offset":81994},"end":{"line":3724,"column":84,"offset":82077},"indent":[]}}],"position":{"start":{"line":3724,"column":1,"offset":81994},"end":{"line":3724,"column":84,"offset":82077},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"=> \"Jack be nimble, Jack be quick, Jack jump over the candle stick\"","position":{"start":{"line":3726,"column":3,"offset":82081},"end":{"line":3726,"column":70,"offset":82148},"indent":[]}}],"position":{"start":{"line":3726,"column":1,"offset":82079},"end":{"line":3726,"column":70,"offset":82148},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"You can use keywords if you don't want to count.","position":{"start":{"line":3728,"column":3,"offset":82152},"end":{"line":3728,"column":51,"offset":82200},"indent":[]}}],"position":{"start":{"line":3728,"column":1,"offset":82150},"end":{"line":3728,"column":51,"offset":82200},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"\"{name} wants to eat {food}\".format(name=\"Bob\", food=\"lasagna\") # => \"Bob wants to eat lasagna\"","position":{"start":{"line":3730,"column":1,"offset":82202},"end":{"line":3730,"column":96,"offset":82297},"indent":[]}}],"position":{"start":{"line":3730,"column":1,"offset":82202},"end":{"line":3730,"column":96,"offset":82297},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"If your Python 3 code also needs to run on Python 2.5 and below, you can also","position":{"start":{"line":3732,"column":3,"offset":82301},"end":{"line":3732,"column":80,"offset":82378},"indent":[]}}],"position":{"start":{"line":3732,"column":1,"offset":82299},"end":{"line":3732,"column":80,"offset":82378},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"still use the old style of formatting:","position":{"start":{"line":3734,"column":3,"offset":82382},"end":{"line":3734,"column":41,"offset":82420},"indent":[]}}],"position":{"start":{"line":3734,"column":1,"offset":82380},"end":{"line":3734,"column":41,"offset":82420},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"\"%s can be %s the %s way\" % (\"Strings\", \"interpolated\", \"old\") # => \"Strings can be interpolated the old way\"","position":{"start":{"line":3736,"column":1,"offset":82422},"end":{"line":3736,"column":110,"offset":82531},"indent":[]}}],"position":{"start":{"line":3736,"column":1,"offset":82422},"end":{"line":3736,"column":110,"offset":82531},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"You can also format using f-strings or formatted string literals (in Python 3.6+)","position":{"start":{"line":3738,"column":3,"offset":82535},"end":{"line":3738,"column":84,"offset":82616},"indent":[]}}],"position":{"start":{"line":3738,"column":1,"offset":82533},"end":{"line":3738,"column":84,"offset":82616},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"name = \"Reiko\"\nf\"She said her name is {name}.\" # => \"She said her name is Reiko\"","position":{"start":{"line":3740,"column":1,"offset":82618},"end":{"line":3741,"column":66,"offset":82698},"indent":[1]}}],"position":{"start":{"line":3740,"column":1,"offset":82618},"end":{"line":3741,"column":66,"offset":82698},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"You can basically put any Python statement inside the braces and it will be output in the string.","position":{"start":{"line":3743,"column":3,"offset":82702},"end":{"line":3743,"column":100,"offset":82799},"indent":[]}}],"position":{"start":{"line":3743,"column":1,"offset":82700},"end":{"line":3743,"column":100,"offset":82799},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"f\"{name} is {len(name)} characters long.\" # => \"Reiko is 5 characters long.\"","position":{"start":{"line":3745,"column":1,"offset":82801},"end":{"line":3745,"column":77,"offset":82877},"indent":[]}}],"position":{"start":{"line":3745,"column":1,"offset":82801},"end":{"line":3745,"column":77,"offset":82877},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"None is an object","position":{"start":{"line":3747,"column":3,"offset":82881},"end":{"line":3747,"column":20,"offset":82898},"indent":[]}}],"position":{"start":{"line":3747,"column":1,"offset":82879},"end":{"line":3747,"column":20,"offset":82898},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"None # => None","position":{"start":{"line":3749,"column":1,"offset":82900},"end":{"line":3749,"column":15,"offset":82914},"indent":[]}}],"position":{"start":{"line":3749,"column":1,"offset":82900},"end":{"line":3749,"column":15,"offset":82914},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Don't use the equality \"==\" symbol to compare objects to None","position":{"start":{"line":3751,"column":3,"offset":82918},"end":{"line":3751,"column":64,"offset":82979},"indent":[]}}],"position":{"start":{"line":3751,"column":1,"offset":82916},"end":{"line":3751,"column":64,"offset":82979},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Use \"is\" instead. This checks for equality of object identity.","position":{"start":{"line":3753,"column":3,"offset":82983},"end":{"line":3753,"column":65,"offset":83045},"indent":[]}}],"position":{"start":{"line":3753,"column":1,"offset":82981},"end":{"line":3753,"column":65,"offset":83045},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"\"etc\" is None # => False\nNone is None # => True","position":{"start":{"line":3755,"column":1,"offset":83047},"end":{"line":3756,"column":23,"offset":83094},"indent":[1]}}],"position":{"start":{"line":3755,"column":1,"offset":83047},"end":{"line":3756,"column":23,"offset":83094},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"None, 0, and empty strings/lists/dicts/tuples all evaluate to False.","position":{"start":{"line":3758,"column":3,"offset":83098},"end":{"line":3758,"column":71,"offset":83166},"indent":[]}}],"position":{"start":{"line":3758,"column":1,"offset":83096},"end":{"line":3758,"column":71,"offset":83166},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"All other values are True","position":{"start":{"line":3760,"column":3,"offset":83170},"end":{"line":3760,"column":28,"offset":83195},"indent":[]}}],"position":{"start":{"line":3760,"column":1,"offset":83168},"end":{"line":3760,"column":28,"offset":83195},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"bool(0) # => False\nbool(\"\") # => False\nbool([]) # => False\nbool({}) # => False\nbool(()) # => False","position":{"start":{"line":3762,"column":1,"offset":83197},"end":{"line":3766,"column":20,"offset":83295},"indent":[1,1,1,1]}}],"position":{"start":{"line":3762,"column":1,"offset":83197},"end":{"line":3766,"column":20,"offset":83295},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"####################################################","position":{"start":{"line":3768,"column":1,"offset":83297},"end":{"line":3768,"column":53,"offset":83349},"indent":[]}}],"position":{"start":{"line":3768,"column":1,"offset":83297},"end":{"line":3768,"column":53,"offset":83349},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"2. Variables and Collections","position":{"start":{"line":3770,"column":4,"offset":83354},"end":{"line":3770,"column":32,"offset":83382},"indent":[]}}],"position":{"start":{"line":3770,"column":1,"offset":83351},"end":{"line":3770,"column":32,"offset":83382},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"####################################################","position":{"start":{"line":3772,"column":1,"offset":83384},"end":{"line":3772,"column":53,"offset":83436},"indent":[]}}],"position":{"start":{"line":3772,"column":1,"offset":83384},"end":{"line":3772,"column":53,"offset":83436},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Python has a print function","position":{"start":{"line":3774,"column":3,"offset":83440},"end":{"line":3774,"column":30,"offset":83467},"indent":[]}}],"position":{"start":{"line":3774,"column":1,"offset":83438},"end":{"line":3774,"column":30,"offset":83467},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"print(\"I'm Python. Nice to meet you!\") # => I'm Python. Nice to meet you!","position":{"start":{"line":3776,"column":1,"offset":83469},"end":{"line":3776,"column":74,"offset":83542},"indent":[]}}],"position":{"start":{"line":3776,"column":1,"offset":83469},"end":{"line":3776,"column":74,"offset":83542},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"By default the print function also prints out a newline at the end.","position":{"start":{"line":3778,"column":3,"offset":83546},"end":{"line":3778,"column":70,"offset":83613},"indent":[]}}],"position":{"start":{"line":3778,"column":1,"offset":83544},"end":{"line":3778,"column":70,"offset":83613},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Use the optional argument end to change the end string.","position":{"start":{"line":3780,"column":3,"offset":83617},"end":{"line":3780,"column":58,"offset":83672},"indent":[]}}],"position":{"start":{"line":3780,"column":1,"offset":83615},"end":{"line":3780,"column":58,"offset":83672},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"print(\"Hello, World\", end=\"!\") # => Hello, World!","position":{"start":{"line":3782,"column":1,"offset":83674},"end":{"line":3782,"column":50,"offset":83723},"indent":[]}}],"position":{"start":{"line":3782,"column":1,"offset":83674},"end":{"line":3782,"column":50,"offset":83723},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Simple way to get input data from console","position":{"start":{"line":3784,"column":3,"offset":83727},"end":{"line":3784,"column":44,"offset":83768},"indent":[]}}],"position":{"start":{"line":3784,"column":1,"offset":83725},"end":{"line":3784,"column":44,"offset":83768},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"input","position":{"start":{"line":3786,"column":1,"offset":83770},"end":{"line":3786,"column":6,"offset":83775},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"string","position":{"start":{"line":3786,"column":7,"offset":83776},"end":{"line":3786,"column":13,"offset":83782},"indent":[]}}],"position":{"start":{"line":3786,"column":6,"offset":83775},"end":{"line":3786,"column":14,"offset":83783},"indent":[]}},{"type":"text","value":"var = input(\"Enter some data: \") # Returns the data as a string","position":{"start":{"line":3786,"column":14,"offset":83783},"end":{"line":3786,"column":77,"offset":83846},"indent":[]}}],"position":{"start":{"line":3786,"column":1,"offset":83770},"end":{"line":3786,"column":77,"offset":83846},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Note: In earlier versions of Python, input() method was named as raw_input()","position":{"start":{"line":3788,"column":3,"offset":83850},"end":{"line":3788,"column":79,"offset":83926},"indent":[]}}],"position":{"start":{"line":3788,"column":1,"offset":83848},"end":{"line":3788,"column":79,"offset":83926},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"There are no declarations, only assignments.","position":{"start":{"line":3790,"column":3,"offset":83930},"end":{"line":3790,"column":47,"offset":83974},"indent":[]}}],"position":{"start":{"line":3790,"column":1,"offset":83928},"end":{"line":3790,"column":47,"offset":83974},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Convention is to use lower","position":{"start":{"line":3792,"column":3,"offset":83978},"end":{"line":3792,"column":29,"offset":84004},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"case","position":{"start":{"line":3792,"column":30,"offset":84005},"end":{"line":3792,"column":34,"offset":84009},"indent":[]}}],"position":{"start":{"line":3792,"column":29,"offset":84004},"end":{"line":3792,"column":35,"offset":84010},"indent":[]}},{"type":"text","value":"with_underscores","position":{"start":{"line":3792,"column":35,"offset":84010},"end":{"line":3792,"column":51,"offset":84026},"indent":[]}}],"position":{"start":{"line":3792,"column":1,"offset":83976},"end":{"line":3792,"column":51,"offset":84026},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"some","position":{"start":{"line":3794,"column":1,"offset":84028},"end":{"line":3794,"column":5,"offset":84032},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"var = 5\nsome","position":{"start":{"line":3794,"column":6,"offset":84033},"end":{"line":3795,"column":5,"offset":84045},"indent":[1]}}],"position":{"start":{"line":3794,"column":5,"offset":84032},"end":{"line":3795,"column":6,"offset":84046},"indent":[1]}},{"type":"text","value":"var # => 5","position":{"start":{"line":3795,"column":6,"offset":84046},"end":{"line":3795,"column":16,"offset":84056},"indent":[]}}],"position":{"start":{"line":3794,"column":1,"offset":84028},"end":{"line":3795,"column":16,"offset":84056},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Accessing a previously unassigned variable is an exception.","position":{"start":{"line":3797,"column":3,"offset":84060},"end":{"line":3797,"column":62,"offset":84119},"indent":[]}}],"position":{"start":{"line":3797,"column":1,"offset":84058},"end":{"line":3797,"column":62,"offset":84119},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"See Control Flow to learn more about exception handling.","position":{"start":{"line":3799,"column":3,"offset":84123},"end":{"line":3799,"column":59,"offset":84179},"indent":[]}}],"position":{"start":{"line":3799,"column":1,"offset":84121},"end":{"line":3799,"column":59,"offset":84179},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"some","position":{"start":{"line":3801,"column":1,"offset":84181},"end":{"line":3801,"column":5,"offset":84185},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"unknown","position":{"start":{"line":3801,"column":6,"offset":84186},"end":{"line":3801,"column":13,"offset":84193},"indent":[]}}],"position":{"start":{"line":3801,"column":5,"offset":84185},"end":{"line":3801,"column":14,"offset":84194},"indent":[]}},{"type":"text","value":"var # Raises a NameError","position":{"start":{"line":3801,"column":14,"offset":84194},"end":{"line":3801,"column":38,"offset":84218},"indent":[]}}],"position":{"start":{"line":3801,"column":1,"offset":84181},"end":{"line":3801,"column":38,"offset":84218},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"if can be used as an expression","position":{"start":{"line":3803,"column":3,"offset":84222},"end":{"line":3803,"column":34,"offset":84253},"indent":[]}}],"position":{"start":{"line":3803,"column":1,"offset":84220},"end":{"line":3803,"column":34,"offset":84253},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Equivalent of C's '?:' ternary operator","position":{"start":{"line":3805,"column":3,"offset":84257},"end":{"line":3805,"column":42,"offset":84296},"indent":[]}}],"position":{"start":{"line":3805,"column":1,"offset":84255},"end":{"line":3805,"column":42,"offset":84296},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"\"yahoo!\" if 3 > 2 else 2 # => \"yahoo!\"","position":{"start":{"line":3807,"column":1,"offset":84298},"end":{"line":3807,"column":39,"offset":84336},"indent":[]}}],"position":{"start":{"line":3807,"column":1,"offset":84298},"end":{"line":3807,"column":39,"offset":84336},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Lists store sequences","position":{"start":{"line":3809,"column":3,"offset":84340},"end":{"line":3809,"column":24,"offset":84361},"indent":[]}}],"position":{"start":{"line":3809,"column":1,"offset":84338},"end":{"line":3809,"column":24,"offset":84361},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"li = []","position":{"start":{"line":3811,"column":1,"offset":84363},"end":{"line":3811,"column":8,"offset":84370},"indent":[]}}],"position":{"start":{"line":3811,"column":1,"offset":84363},"end":{"line":3811,"column":8,"offset":84370},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"You can start with a prefilled list","position":{"start":{"line":3813,"column":3,"offset":84374},"end":{"line":3813,"column":38,"offset":84409},"indent":[]}}],"position":{"start":{"line":3813,"column":1,"offset":84372},"end":{"line":3813,"column":38,"offset":84409},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"other_li = ","position":{"start":{"line":3815,"column":1,"offset":84411},"end":{"line":3815,"column":12,"offset":84422},"indent":[]}},{"type":"linkReference","identifier":"4, 5, 6","label":"4, 5, 6","referenceType":"shortcut","children":[{"type":"text","value":"4, 5, 6","position":{"start":{"line":3815,"column":13,"offset":84423},"end":{"line":3815,"column":20,"offset":84430},"indent":[]}}],"position":{"start":{"line":3815,"column":12,"offset":84422},"end":{"line":3815,"column":21,"offset":84431},"indent":[]}}],"position":{"start":{"line":3815,"column":1,"offset":84411},"end":{"line":3815,"column":21,"offset":84431},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Add stuff to the end of a list with append","position":{"start":{"line":3817,"column":3,"offset":84435},"end":{"line":3817,"column":45,"offset":84477},"indent":[]}}],"position":{"start":{"line":3817,"column":1,"offset":84433},"end":{"line":3817,"column":45,"offset":84477},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"li.append(1) # li is now ","position":{"start":{"line":3819,"column":1,"offset":84479},"end":{"line":3819,"column":26,"offset":84504},"indent":[]}},{"type":"linkReference","identifier":"1","label":"1","referenceType":"shortcut","children":[{"type":"text","value":"1","position":{"start":{"line":3819,"column":27,"offset":84505},"end":{"line":3819,"column":28,"offset":84506},"indent":[]}}],"position":{"start":{"line":3819,"column":26,"offset":84504},"end":{"line":3819,"column":29,"offset":84507},"indent":[]}},{"type":"text","value":"\nli.append(2) # li is now ","position":{"start":{"line":3819,"column":29,"offset":84507},"end":{"line":3820,"column":26,"offset":84533},"indent":[1]}},{"type":"linkReference","identifier":"1, 2","label":"1, 2","referenceType":"shortcut","children":[{"type":"text","value":"1, 2","position":{"start":{"line":3820,"column":27,"offset":84534},"end":{"line":3820,"column":31,"offset":84538},"indent":[]}}],"position":{"start":{"line":3820,"column":26,"offset":84533},"end":{"line":3820,"column":32,"offset":84539},"indent":[]}},{"type":"text","value":"\nli.append(4) # li is now ","position":{"start":{"line":3820,"column":32,"offset":84539},"end":{"line":3821,"column":26,"offset":84565},"indent":[1]}},{"type":"linkReference","identifier":"1, 2, 4","label":"1, 2, 4","referenceType":"shortcut","children":[{"type":"text","value":"1, 2, 4","position":{"start":{"line":3821,"column":27,"offset":84566},"end":{"line":3821,"column":34,"offset":84573},"indent":[]}}],"position":{"start":{"line":3821,"column":26,"offset":84565},"end":{"line":3821,"column":35,"offset":84574},"indent":[]}},{"type":"text","value":"\nli.append(3) # li is now ","position":{"start":{"line":3821,"column":35,"offset":84574},"end":{"line":3822,"column":26,"offset":84600},"indent":[1]}},{"type":"linkReference","identifier":"1, 2, 4, 3","label":"1, 2, 4, 3","referenceType":"shortcut","children":[{"type":"text","value":"1, 2, 4, 3","position":{"start":{"line":3822,"column":27,"offset":84601},"end":{"line":3822,"column":37,"offset":84611},"indent":[]}}],"position":{"start":{"line":3822,"column":26,"offset":84600},"end":{"line":3822,"column":38,"offset":84612},"indent":[]}}],"position":{"start":{"line":3819,"column":1,"offset":84479},"end":{"line":3822,"column":38,"offset":84612},"indent":[1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Remove from the end with pop","position":{"start":{"line":3824,"column":3,"offset":84616},"end":{"line":3824,"column":31,"offset":84644},"indent":[]}}],"position":{"start":{"line":3824,"column":1,"offset":84614},"end":{"line":3824,"column":31,"offset":84644},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"li.pop() # => 3 and li is now ","position":{"start":{"line":3826,"column":1,"offset":84646},"end":{"line":3826,"column":31,"offset":84676},"indent":[]}},{"type":"linkReference","identifier":"1, 2, 4","label":"1, 2, 4","referenceType":"shortcut","children":[{"type":"text","value":"1, 2, 4","position":{"start":{"line":3826,"column":32,"offset":84677},"end":{"line":3826,"column":39,"offset":84684},"indent":[]}}],"position":{"start":{"line":3826,"column":31,"offset":84676},"end":{"line":3826,"column":40,"offset":84685},"indent":[]}}],"position":{"start":{"line":3826,"column":1,"offset":84646},"end":{"line":3826,"column":40,"offset":84685},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Let's put it back","position":{"start":{"line":3828,"column":3,"offset":84689},"end":{"line":3828,"column":20,"offset":84706},"indent":[]}}],"position":{"start":{"line":3828,"column":1,"offset":84687},"end":{"line":3828,"column":20,"offset":84706},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"li.append(3) # li is now ","position":{"start":{"line":3830,"column":1,"offset":84708},"end":{"line":3830,"column":26,"offset":84733},"indent":[]}},{"type":"linkReference","identifier":"1, 2, 4, 3","label":"1, 2, 4, 3","referenceType":"shortcut","children":[{"type":"text","value":"1, 2, 4, 3","position":{"start":{"line":3830,"column":27,"offset":84734},"end":{"line":3830,"column":37,"offset":84744},"indent":[]}}],"position":{"start":{"line":3830,"column":26,"offset":84733},"end":{"line":3830,"column":38,"offset":84745},"indent":[]}},{"type":"text","value":" again.","position":{"start":{"line":3830,"column":38,"offset":84745},"end":{"line":3830,"column":45,"offset":84752},"indent":[]}}],"position":{"start":{"line":3830,"column":1,"offset":84708},"end":{"line":3830,"column":45,"offset":84752},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Access a list like you would any array","position":{"start":{"line":3832,"column":3,"offset":84756},"end":{"line":3832,"column":41,"offset":84794},"indent":[]}}],"position":{"start":{"line":3832,"column":1,"offset":84754},"end":{"line":3832,"column":41,"offset":84794},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"li","position":{"start":{"line":3834,"column":1,"offset":84796},"end":{"line":3834,"column":3,"offset":84798},"indent":[]}},{"type":"linkReference","identifier":"0","label":"0","referenceType":"shortcut","children":[{"type":"text","value":"0","position":{"start":{"line":3834,"column":4,"offset":84799},"end":{"line":3834,"column":5,"offset":84800},"indent":[]}}],"position":{"start":{"line":3834,"column":3,"offset":84798},"end":{"line":3834,"column":6,"offset":84801},"indent":[]}},{"type":"text","value":" # => 1","position":{"start":{"line":3834,"column":6,"offset":84801},"end":{"line":3834,"column":13,"offset":84808},"indent":[]}}],"position":{"start":{"line":3834,"column":1,"offset":84796},"end":{"line":3834,"column":13,"offset":84808},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Look at the last element","position":{"start":{"line":3836,"column":3,"offset":84812},"end":{"line":3836,"column":27,"offset":84836},"indent":[]}}],"position":{"start":{"line":3836,"column":1,"offset":84810},"end":{"line":3836,"column":27,"offset":84836},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"li","position":{"start":{"line":3838,"column":1,"offset":84838},"end":{"line":3838,"column":3,"offset":84840},"indent":[]}},{"type":"linkReference","identifier":"-1","label":"-1","referenceType":"shortcut","children":[{"type":"text","value":"-1","position":{"start":{"line":3838,"column":4,"offset":84841},"end":{"line":3838,"column":6,"offset":84843},"indent":[]}}],"position":{"start":{"line":3838,"column":3,"offset":84840},"end":{"line":3838,"column":7,"offset":84844},"indent":[]}},{"type":"text","value":" # => 3","position":{"start":{"line":3838,"column":7,"offset":84844},"end":{"line":3838,"column":14,"offset":84851},"indent":[]}}],"position":{"start":{"line":3838,"column":1,"offset":84838},"end":{"line":3838,"column":14,"offset":84851},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Looking out of bounds is an IndexError","position":{"start":{"line":3840,"column":3,"offset":84855},"end":{"line":3840,"column":41,"offset":84893},"indent":[]}}],"position":{"start":{"line":3840,"column":1,"offset":84853},"end":{"line":3840,"column":41,"offset":84893},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"li","position":{"start":{"line":3842,"column":1,"offset":84895},"end":{"line":3842,"column":3,"offset":84897},"indent":[]}},{"type":"linkReference","identifier":"4","label":"4","referenceType":"shortcut","children":[{"type":"text","value":"4","position":{"start":{"line":3842,"column":4,"offset":84898},"end":{"line":3842,"column":5,"offset":84899},"indent":[]}}],"position":{"start":{"line":3842,"column":3,"offset":84897},"end":{"line":3842,"column":6,"offset":84900},"indent":[]}},{"type":"text","value":" # Raises an IndexError","position":{"start":{"line":3842,"column":6,"offset":84900},"end":{"line":3842,"column":29,"offset":84923},"indent":[]}}],"position":{"start":{"line":3842,"column":1,"offset":84895},"end":{"line":3842,"column":29,"offset":84923},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"You can look at ranges with slice syntax.","position":{"start":{"line":3844,"column":3,"offset":84927},"end":{"line":3844,"column":44,"offset":84968},"indent":[]}}],"position":{"start":{"line":3844,"column":1,"offset":84925},"end":{"line":3844,"column":44,"offset":84968},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"The start index is included, the end index is not","position":{"start":{"line":3846,"column":3,"offset":84972},"end":{"line":3846,"column":52,"offset":85021},"indent":[]}}],"position":{"start":{"line":3846,"column":1,"offset":84970},"end":{"line":3846,"column":52,"offset":85021},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"(It's a closed/open range for you mathy types.)","position":{"start":{"line":3848,"column":3,"offset":85025},"end":{"line":3848,"column":50,"offset":85072},"indent":[]}}],"position":{"start":{"line":3848,"column":1,"offset":85023},"end":{"line":3848,"column":50,"offset":85072},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"li","position":{"start":{"line":3850,"column":1,"offset":85074},"end":{"line":3850,"column":3,"offset":85076},"indent":[]}},{"type":"linkReference","identifier":"1:3","label":"1:3","referenceType":"shortcut","children":[{"type":"text","value":"1:3","position":{"start":{"line":3850,"column":4,"offset":85077},"end":{"line":3850,"column":7,"offset":85080},"indent":[]}}],"position":{"start":{"line":3850,"column":3,"offset":85076},"end":{"line":3850,"column":8,"offset":85081},"indent":[]}},{"type":"text","value":" # Return list from index 1 to 3 => ","position":{"start":{"line":3850,"column":8,"offset":85081},"end":{"line":3850,"column":44,"offset":85117},"indent":[]}},{"type":"linkReference","identifier":"2, 4","label":"2, 4","referenceType":"shortcut","children":[{"type":"text","value":"2, 4","position":{"start":{"line":3850,"column":45,"offset":85118},"end":{"line":3850,"column":49,"offset":85122},"indent":[]}}],"position":{"start":{"line":3850,"column":44,"offset":85117},"end":{"line":3850,"column":50,"offset":85123},"indent":[]}},{"type":"text","value":"\nli","position":{"start":{"line":3850,"column":50,"offset":85123},"end":{"line":3851,"column":3,"offset":85126},"indent":[1]}},{"type":"linkReference","identifier":"2:","label":"2:","referenceType":"shortcut","children":[{"type":"text","value":"2:","position":{"start":{"line":3851,"column":4,"offset":85127},"end":{"line":3851,"column":6,"offset":85129},"indent":[]}}],"position":{"start":{"line":3851,"column":3,"offset":85126},"end":{"line":3851,"column":7,"offset":85130},"indent":[]}},{"type":"text","value":" # Return list starting from index 2 => ","position":{"start":{"line":3851,"column":7,"offset":85130},"end":{"line":3851,"column":47,"offset":85170},"indent":[]}},{"type":"linkReference","identifier":"4, 3","label":"4, 3","referenceType":"shortcut","children":[{"type":"text","value":"4, 3","position":{"start":{"line":3851,"column":48,"offset":85171},"end":{"line":3851,"column":52,"offset":85175},"indent":[]}}],"position":{"start":{"line":3851,"column":47,"offset":85170},"end":{"line":3851,"column":53,"offset":85176},"indent":[]}},{"type":"text","value":"\nli","position":{"start":{"line":3851,"column":53,"offset":85176},"end":{"line":3852,"column":3,"offset":85179},"indent":[1]}},{"type":"linkReference","identifier":":3","label":":3","referenceType":"shortcut","children":[{"type":"text","value":":3","position":{"start":{"line":3852,"column":4,"offset":85180},"end":{"line":3852,"column":6,"offset":85182},"indent":[]}}],"position":{"start":{"line":3852,"column":3,"offset":85179},"end":{"line":3852,"column":7,"offset":85183},"indent":[]}},{"type":"text","value":" # Return list from beginning until index 3 => ","position":{"start":{"line":3852,"column":7,"offset":85183},"end":{"line":3852,"column":54,"offset":85230},"indent":[]}},{"type":"linkReference","identifier":"1, 2, 4","label":"1, 2, 4","referenceType":"shortcut","children":[{"type":"text","value":"1, 2, 4","position":{"start":{"line":3852,"column":55,"offset":85231},"end":{"line":3852,"column":62,"offset":85238},"indent":[]}}],"position":{"start":{"line":3852,"column":54,"offset":85230},"end":{"line":3852,"column":63,"offset":85239},"indent":[]}},{"type":"text","value":"\nli","position":{"start":{"line":3852,"column":63,"offset":85239},"end":{"line":3853,"column":3,"offset":85242},"indent":[1]}},{"type":"linkReference","identifier":"::2","label":"::2","referenceType":"shortcut","children":[{"type":"text","value":"::2","position":{"start":{"line":3853,"column":4,"offset":85243},"end":{"line":3853,"column":7,"offset":85246},"indent":[]}}],"position":{"start":{"line":3853,"column":3,"offset":85242},"end":{"line":3853,"column":8,"offset":85247},"indent":[]}},{"type":"text","value":" # Return list selecting every second entry => ","position":{"start":{"line":3853,"column":8,"offset":85247},"end":{"line":3853,"column":55,"offset":85294},"indent":[]}},{"type":"linkReference","identifier":"1, 4","label":"1, 4","referenceType":"shortcut","children":[{"type":"text","value":"1, 4","position":{"start":{"line":3853,"column":56,"offset":85295},"end":{"line":3853,"column":60,"offset":85299},"indent":[]}}],"position":{"start":{"line":3853,"column":55,"offset":85294},"end":{"line":3853,"column":61,"offset":85300},"indent":[]}},{"type":"text","value":"\nli","position":{"start":{"line":3853,"column":61,"offset":85300},"end":{"line":3854,"column":3,"offset":85303},"indent":[1]}},{"type":"linkReference","identifier":"::-1","label":"::-1","referenceType":"shortcut","children":[{"type":"text","value":"::-1","position":{"start":{"line":3854,"column":4,"offset":85304},"end":{"line":3854,"column":8,"offset":85308},"indent":[]}}],"position":{"start":{"line":3854,"column":3,"offset":85303},"end":{"line":3854,"column":9,"offset":85309},"indent":[]}},{"type":"text","value":" # Return list in reverse order => ","position":{"start":{"line":3854,"column":9,"offset":85309},"end":{"line":3854,"column":44,"offset":85344},"indent":[]}},{"type":"linkReference","identifier":"3, 4, 2, 1","label":"3, 4, 2, 1","referenceType":"shortcut","children":[{"type":"text","value":"3, 4, 2, 1","position":{"start":{"line":3854,"column":45,"offset":85345},"end":{"line":3854,"column":55,"offset":85355},"indent":[]}}],"position":{"start":{"line":3854,"column":44,"offset":85344},"end":{"line":3854,"column":56,"offset":85356},"indent":[]}}],"position":{"start":{"line":3850,"column":1,"offset":85074},"end":{"line":3854,"column":56,"offset":85356},"indent":[1,1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Use any combination of these to make advanced slices","position":{"start":{"line":3856,"column":3,"offset":85360},"end":{"line":3856,"column":55,"offset":85412},"indent":[]}}],"position":{"start":{"line":3856,"column":1,"offset":85358},"end":{"line":3856,"column":55,"offset":85412},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"li","position":{"start":{"line":3858,"column":3,"offset":85416},"end":{"line":3858,"column":5,"offset":85418},"indent":[]}},{"type":"linkReference","identifier":"start:end:step","label":"start:end:step","referenceType":"shortcut","children":[{"type":"text","value":"start:end:step","position":{"start":{"line":3858,"column":6,"offset":85419},"end":{"line":3858,"column":20,"offset":85433},"indent":[]}}],"position":{"start":{"line":3858,"column":5,"offset":85418},"end":{"line":3858,"column":21,"offset":85434},"indent":[]}}],"position":{"start":{"line":3858,"column":1,"offset":85414},"end":{"line":3858,"column":21,"offset":85434},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Make a one layer deep copy using slices","position":{"start":{"line":3860,"column":3,"offset":85438},"end":{"line":3860,"column":42,"offset":85477},"indent":[]}}],"position":{"start":{"line":3860,"column":1,"offset":85436},"end":{"line":3860,"column":42,"offset":85477},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"li2 = li","position":{"start":{"line":3862,"column":1,"offset":85479},"end":{"line":3862,"column":9,"offset":85487},"indent":[]}},{"type":"linkReference","identifier":":","label":":","referenceType":"shortcut","children":[{"type":"text","value":":","position":{"start":{"line":3862,"column":10,"offset":85488},"end":{"line":3862,"column":11,"offset":85489},"indent":[]}}],"position":{"start":{"line":3862,"column":9,"offset":85487},"end":{"line":3862,"column":12,"offset":85490},"indent":[]}},{"type":"text","value":" # => li2 = ","position":{"start":{"line":3862,"column":12,"offset":85490},"end":{"line":3862,"column":24,"offset":85502},"indent":[]}},{"type":"linkReference","identifier":"1, 2, 4, 3","label":"1, 2, 4, 3","referenceType":"shortcut","children":[{"type":"text","value":"1, 2, 4, 3","position":{"start":{"line":3862,"column":25,"offset":85503},"end":{"line":3862,"column":35,"offset":85513},"indent":[]}}],"position":{"start":{"line":3862,"column":24,"offset":85502},"end":{"line":3862,"column":36,"offset":85514},"indent":[]}},{"type":"text","value":" but (li2 is li) will result in false.","position":{"start":{"line":3862,"column":36,"offset":85514},"end":{"line":3862,"column":74,"offset":85552},"indent":[]}}],"position":{"start":{"line":3862,"column":1,"offset":85479},"end":{"line":3862,"column":74,"offset":85552},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Remove arbitrary elements from a list with \"del\"","position":{"start":{"line":3864,"column":3,"offset":85556},"end":{"line":3864,"column":51,"offset":85604},"indent":[]}}],"position":{"start":{"line":3864,"column":1,"offset":85554},"end":{"line":3864,"column":51,"offset":85604},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"del li","position":{"start":{"line":3866,"column":1,"offset":85606},"end":{"line":3866,"column":7,"offset":85612},"indent":[]}},{"type":"linkReference","identifier":"2","label":"2","referenceType":"shortcut","children":[{"type":"text","value":"2","position":{"start":{"line":3866,"column":8,"offset":85613},"end":{"line":3866,"column":9,"offset":85614},"indent":[]}}],"position":{"start":{"line":3866,"column":7,"offset":85612},"end":{"line":3866,"column":10,"offset":85615},"indent":[]}},{"type":"text","value":" # li is now ","position":{"start":{"line":3866,"column":10,"offset":85615},"end":{"line":3866,"column":23,"offset":85628},"indent":[]}},{"type":"linkReference","identifier":"1, 2, 3","label":"1, 2, 3","referenceType":"shortcut","children":[{"type":"text","value":"1, 2, 3","position":{"start":{"line":3866,"column":24,"offset":85629},"end":{"line":3866,"column":31,"offset":85636},"indent":[]}}],"position":{"start":{"line":3866,"column":23,"offset":85628},"end":{"line":3866,"column":32,"offset":85637},"indent":[]}}],"position":{"start":{"line":3866,"column":1,"offset":85606},"end":{"line":3866,"column":32,"offset":85637},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Remove first occurrence of a value","position":{"start":{"line":3868,"column":3,"offset":85641},"end":{"line":3868,"column":37,"offset":85675},"indent":[]}}],"position":{"start":{"line":3868,"column":1,"offset":85639},"end":{"line":3868,"column":37,"offset":85675},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"li.remove(2) # li is now ","position":{"start":{"line":3870,"column":1,"offset":85677},"end":{"line":3870,"column":26,"offset":85702},"indent":[]}},{"type":"linkReference","identifier":"1, 3","label":"1, 3","referenceType":"shortcut","children":[{"type":"text","value":"1, 3","position":{"start":{"line":3870,"column":27,"offset":85703},"end":{"line":3870,"column":31,"offset":85707},"indent":[]}}],"position":{"start":{"line":3870,"column":26,"offset":85702},"end":{"line":3870,"column":32,"offset":85708},"indent":[]}},{"type":"text","value":"\nli.remove(2) # Raises a ValueError as 2 is not in the list","position":{"start":{"line":3870,"column":32,"offset":85708},"end":{"line":3871,"column":59,"offset":85767},"indent":[1]}}],"position":{"start":{"line":3870,"column":1,"offset":85677},"end":{"line":3871,"column":59,"offset":85767},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Insert an element at a specific index","position":{"start":{"line":3873,"column":3,"offset":85771},"end":{"line":3873,"column":40,"offset":85808},"indent":[]}}],"position":{"start":{"line":3873,"column":1,"offset":85769},"end":{"line":3873,"column":40,"offset":85808},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"li.insert(1, 2) # li is now ","position":{"start":{"line":3875,"column":1,"offset":85810},"end":{"line":3875,"column":29,"offset":85838},"indent":[]}},{"type":"linkReference","identifier":"1, 2, 3","label":"1, 2, 3","referenceType":"shortcut","children":[{"type":"text","value":"1, 2, 3","position":{"start":{"line":3875,"column":30,"offset":85839},"end":{"line":3875,"column":37,"offset":85846},"indent":[]}}],"position":{"start":{"line":3875,"column":29,"offset":85838},"end":{"line":3875,"column":38,"offset":85847},"indent":[]}},{"type":"text","value":" again","position":{"start":{"line":3875,"column":38,"offset":85847},"end":{"line":3875,"column":44,"offset":85853},"indent":[]}}],"position":{"start":{"line":3875,"column":1,"offset":85810},"end":{"line":3875,"column":44,"offset":85853},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Get the index of the first item found matching the argument","position":{"start":{"line":3877,"column":3,"offset":85857},"end":{"line":3877,"column":62,"offset":85916},"indent":[]}}],"position":{"start":{"line":3877,"column":1,"offset":85855},"end":{"line":3877,"column":62,"offset":85916},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"li.index(2) # => 1\nli.index(4) # Raises a ValueError as 4 is not in the list","position":{"start":{"line":3879,"column":1,"offset":85918},"end":{"line":3880,"column":58,"offset":85994},"indent":[1]}}],"position":{"start":{"line":3879,"column":1,"offset":85918},"end":{"line":3880,"column":58,"offset":85994},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"You can add lists","position":{"start":{"line":3882,"column":3,"offset":85998},"end":{"line":3882,"column":20,"offset":86015},"indent":[]}}],"position":{"start":{"line":3882,"column":1,"offset":85996},"end":{"line":3882,"column":20,"offset":86015},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Note: values for li and for other_li are not modified.","position":{"start":{"line":3884,"column":3,"offset":86019},"end":{"line":3884,"column":57,"offset":86073},"indent":[]}}],"position":{"start":{"line":3884,"column":1,"offset":86017},"end":{"line":3884,"column":57,"offset":86073},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"li + other_li # => ","position":{"start":{"line":3886,"column":1,"offset":86075},"end":{"line":3886,"column":20,"offset":86094},"indent":[]}},{"type":"linkReference","identifier":"1, 2, 3, 4, 5, 6","label":"1, 2, 3, 4, 5, 6","referenceType":"shortcut","children":[{"type":"text","value":"1, 2, 3, 4, 5, 6","position":{"start":{"line":3886,"column":21,"offset":86095},"end":{"line":3886,"column":37,"offset":86111},"indent":[]}}],"position":{"start":{"line":3886,"column":20,"offset":86094},"end":{"line":3886,"column":38,"offset":86112},"indent":[]}}],"position":{"start":{"line":3886,"column":1,"offset":86075},"end":{"line":3886,"column":38,"offset":86112},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Concatenate lists with \"extend()\"","position":{"start":{"line":3888,"column":3,"offset":86116},"end":{"line":3888,"column":36,"offset":86149},"indent":[]}}],"position":{"start":{"line":3888,"column":1,"offset":86114},"end":{"line":3888,"column":36,"offset":86149},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"li.extend(other_li) # Now li is ","position":{"start":{"line":3890,"column":1,"offset":86151},"end":{"line":3890,"column":33,"offset":86183},"indent":[]}},{"type":"linkReference","identifier":"1, 2, 3, 4, 5, 6","label":"1, 2, 3, 4, 5, 6","referenceType":"shortcut","children":[{"type":"text","value":"1, 2, 3, 4, 5, 6","position":{"start":{"line":3890,"column":34,"offset":86184},"end":{"line":3890,"column":50,"offset":86200},"indent":[]}}],"position":{"start":{"line":3890,"column":33,"offset":86183},"end":{"line":3890,"column":51,"offset":86201},"indent":[]}}],"position":{"start":{"line":3890,"column":1,"offset":86151},"end":{"line":3890,"column":51,"offset":86201},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Check for existence in a list with \"in\"","position":{"start":{"line":3892,"column":3,"offset":86205},"end":{"line":3892,"column":42,"offset":86244},"indent":[]}}],"position":{"start":{"line":3892,"column":1,"offset":86203},"end":{"line":3892,"column":42,"offset":86244},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"1 in li # => True","position":{"start":{"line":3894,"column":1,"offset":86246},"end":{"line":3894,"column":18,"offset":86263},"indent":[]}}],"position":{"start":{"line":3894,"column":1,"offset":86246},"end":{"line":3894,"column":18,"offset":86263},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Examine the length with \"len()\"","position":{"start":{"line":3896,"column":3,"offset":86267},"end":{"line":3896,"column":34,"offset":86298},"indent":[]}}],"position":{"start":{"line":3896,"column":1,"offset":86265},"end":{"line":3896,"column":34,"offset":86298},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"len(li) # => 6","position":{"start":{"line":3898,"column":1,"offset":86300},"end":{"line":3898,"column":15,"offset":86314},"indent":[]}}],"position":{"start":{"line":3898,"column":1,"offset":86300},"end":{"line":3898,"column":15,"offset":86314},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Tuples are like lists but are immutable.","position":{"start":{"line":3900,"column":3,"offset":86318},"end":{"line":3900,"column":43,"offset":86358},"indent":[]}}],"position":{"start":{"line":3900,"column":1,"offset":86316},"end":{"line":3900,"column":43,"offset":86358},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"tup = (1, 2, 3)\ntup","position":{"start":{"line":3902,"column":1,"offset":86360},"end":{"line":3903,"column":4,"offset":86379},"indent":[1]}},{"type":"linkReference","identifier":"0","label":"0","referenceType":"shortcut","children":[{"type":"text","value":"0","position":{"start":{"line":3903,"column":5,"offset":86380},"end":{"line":3903,"column":6,"offset":86381},"indent":[]}}],"position":{"start":{"line":3903,"column":4,"offset":86379},"end":{"line":3903,"column":7,"offset":86382},"indent":[]}},{"type":"text","value":" # => 1\ntup","position":{"start":{"line":3903,"column":7,"offset":86382},"end":{"line":3904,"column":4,"offset":86393},"indent":[1]}},{"type":"linkReference","identifier":"0","label":"0","referenceType":"shortcut","children":[{"type":"text","value":"0","position":{"start":{"line":3904,"column":5,"offset":86394},"end":{"line":3904,"column":6,"offset":86395},"indent":[]}}],"position":{"start":{"line":3904,"column":4,"offset":86393},"end":{"line":3904,"column":7,"offset":86396},"indent":[]}},{"type":"text","value":" = 3 # Raises a TypeError","position":{"start":{"line":3904,"column":7,"offset":86396},"end":{"line":3904,"column":32,"offset":86421},"indent":[]}}],"position":{"start":{"line":3902,"column":1,"offset":86360},"end":{"line":3904,"column":32,"offset":86421},"indent":[1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Note that a tuple of length one has to have a comma after the last element but","position":{"start":{"line":3906,"column":3,"offset":86425},"end":{"line":3906,"column":81,"offset":86503},"indent":[]}}],"position":{"start":{"line":3906,"column":1,"offset":86423},"end":{"line":3906,"column":81,"offset":86503},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"tuples of other lengths, even zero, do not.","position":{"start":{"line":3908,"column":3,"offset":86507},"end":{"line":3908,"column":46,"offset":86550},"indent":[]}}],"position":{"start":{"line":3908,"column":1,"offset":86505},"end":{"line":3908,"column":46,"offset":86550},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"type((1)) # => <class 'int'>\ntype((1,)) # => <class 'tuple'>\ntype(()) # => <class 'tuple'>","position":{"start":{"line":3910,"column":1,"offset":86552},"end":{"line":3912,"column":30,"offset":86642},"indent":[1,1]}}],"position":{"start":{"line":3910,"column":1,"offset":86552},"end":{"line":3912,"column":30,"offset":86642},"indent":[1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"You can do most of the list operations on tuples too","position":{"start":{"line":3914,"column":3,"offset":86646},"end":{"line":3914,"column":55,"offset":86698},"indent":[]}}],"position":{"start":{"line":3914,"column":1,"offset":86644},"end":{"line":3914,"column":55,"offset":86698},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"len(tup) # => 3\ntup + (4, 5, 6) # => (1, 2, 3, 4, 5, 6)\ntup","position":{"start":{"line":3916,"column":1,"offset":86700},"end":{"line":3918,"column":4,"offset":86759},"indent":[1,1]}},{"type":"linkReference","identifier":":2","label":":2","referenceType":"shortcut","children":[{"type":"text","value":":2","position":{"start":{"line":3918,"column":5,"offset":86760},"end":{"line":3918,"column":7,"offset":86762},"indent":[]}}],"position":{"start":{"line":3918,"column":4,"offset":86759},"end":{"line":3918,"column":8,"offset":86763},"indent":[]}},{"type":"text","value":" # => (1, 2)\n2 in tup # => True","position":{"start":{"line":3918,"column":8,"offset":86763},"end":{"line":3919,"column":19,"offset":86794},"indent":[1]}}],"position":{"start":{"line":3916,"column":1,"offset":86700},"end":{"line":3919,"column":19,"offset":86794},"indent":[1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"You can unpack tuples (or lists) into variables","position":{"start":{"line":3921,"column":3,"offset":86798},"end":{"line":3921,"column":50,"offset":86845},"indent":[]}}],"position":{"start":{"line":3921,"column":1,"offset":86796},"end":{"line":3921,"column":50,"offset":86845},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"a, b, c = (1, 2, 3) # a is now 1, b is now 2 and c is now 3","position":{"start":{"line":3923,"column":1,"offset":86847},"end":{"line":3923,"column":60,"offset":86906},"indent":[]}}],"position":{"start":{"line":3923,"column":1,"offset":86847},"end":{"line":3923,"column":60,"offset":86906},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"You can also do extended unpacking","position":{"start":{"line":3925,"column":3,"offset":86910},"end":{"line":3925,"column":37,"offset":86944},"indent":[]}}],"position":{"start":{"line":3925,"column":1,"offset":86908},"end":{"line":3925,"column":37,"offset":86944},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"a, ","position":{"start":{"line":3927,"column":1,"offset":86946},"end":{"line":3927,"column":4,"offset":86949},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":3927,"column":4,"offset":86949},"end":{"line":3927,"column":6,"offset":86951},"indent":[]}},{"type":"text","value":"b, c = (1, 2, 3, 4) # a is now 1, b is now ","position":{"start":{"line":3927,"column":6,"offset":86951},"end":{"line":3927,"column":49,"offset":86994},"indent":[]}},{"type":"linkReference","identifier":"2, 3","label":"2, 3","referenceType":"shortcut","children":[{"type":"text","value":"2, 3","position":{"start":{"line":3927,"column":50,"offset":86995},"end":{"line":3927,"column":54,"offset":86999},"indent":[]}}],"position":{"start":{"line":3927,"column":49,"offset":86994},"end":{"line":3927,"column":55,"offset":87000},"indent":[]}},{"type":"text","value":" and c is now 4","position":{"start":{"line":3927,"column":55,"offset":87000},"end":{"line":3927,"column":70,"offset":87015},"indent":[]}}],"position":{"start":{"line":3927,"column":1,"offset":86946},"end":{"line":3927,"column":70,"offset":87015},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Tuples are created by default if you leave out the parentheses","position":{"start":{"line":3929,"column":3,"offset":87019},"end":{"line":3929,"column":65,"offset":87081},"indent":[]}}],"position":{"start":{"line":3929,"column":1,"offset":87017},"end":{"line":3929,"column":65,"offset":87081},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"d, e, f = 4, 5, 6 # tuple 4, 5, 6 is unpacked into variables d, e and f","position":{"start":{"line":3931,"column":1,"offset":87083},"end":{"line":3931,"column":72,"offset":87154},"indent":[]}}],"position":{"start":{"line":3931,"column":1,"offset":87083},"end":{"line":3931,"column":72,"offset":87154},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"respectively such that d = 4, e = 5 and f = 6","position":{"start":{"line":3933,"column":3,"offset":87158},"end":{"line":3933,"column":48,"offset":87203},"indent":[]}}],"position":{"start":{"line":3933,"column":1,"offset":87156},"end":{"line":3933,"column":48,"offset":87203},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Now look how easy it is to swap two values","position":{"start":{"line":3935,"column":3,"offset":87207},"end":{"line":3935,"column":45,"offset":87249},"indent":[]}}],"position":{"start":{"line":3935,"column":1,"offset":87205},"end":{"line":3935,"column":45,"offset":87249},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"e, d = d, e # d is now 5 and e is now 4","position":{"start":{"line":3937,"column":1,"offset":87251},"end":{"line":3937,"column":40,"offset":87290},"indent":[]}}],"position":{"start":{"line":3937,"column":1,"offset":87251},"end":{"line":3937,"column":40,"offset":87290},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Dictionaries store mappings from keys to values","position":{"start":{"line":3939,"column":3,"offset":87294},"end":{"line":3939,"column":50,"offset":87341},"indent":[]}}],"position":{"start":{"line":3939,"column":1,"offset":87292},"end":{"line":3939,"column":50,"offset":87341},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"empty_dict = {}","position":{"start":{"line":3941,"column":1,"offset":87343},"end":{"line":3941,"column":16,"offset":87358},"indent":[]}}],"position":{"start":{"line":3941,"column":1,"offset":87343},"end":{"line":3941,"column":16,"offset":87358},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Here is a prefilled dictionary","position":{"start":{"line":3943,"column":3,"offset":87362},"end":{"line":3943,"column":33,"offset":87392},"indent":[]}}],"position":{"start":{"line":3943,"column":1,"offset":87360},"end":{"line":3943,"column":33,"offset":87392},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"filled_dict = {\"one\": 1, \"two\": 2, \"three\": 3}","position":{"start":{"line":3945,"column":1,"offset":87394},"end":{"line":3945,"column":47,"offset":87440},"indent":[]}}],"position":{"start":{"line":3945,"column":1,"offset":87394},"end":{"line":3945,"column":47,"offset":87440},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Note keys for dictionaries have to be immutable types. This is to ensure that","position":{"start":{"line":3947,"column":3,"offset":87444},"end":{"line":3947,"column":80,"offset":87521},"indent":[]}}],"position":{"start":{"line":3947,"column":1,"offset":87442},"end":{"line":3947,"column":80,"offset":87521},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"the key can be converted to a constant hash value for quick look-ups.","position":{"start":{"line":3949,"column":3,"offset":87525},"end":{"line":3949,"column":72,"offset":87594},"indent":[]}}],"position":{"start":{"line":3949,"column":1,"offset":87523},"end":{"line":3949,"column":72,"offset":87594},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Immutable types include ints, floats, strings, tuples.","position":{"start":{"line":3951,"column":3,"offset":87598},"end":{"line":3951,"column":57,"offset":87652},"indent":[]}}],"position":{"start":{"line":3951,"column":1,"offset":87596},"end":{"line":3951,"column":57,"offset":87652},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"invalid","position":{"start":{"line":3953,"column":1,"offset":87654},"end":{"line":3953,"column":8,"offset":87661},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"dict = {","position":{"start":{"line":3953,"column":9,"offset":87662},"end":{"line":3953,"column":17,"offset":87670},"indent":[]}},{"type":"linkReference","identifier":"1,2,3","label":"1,2,3","referenceType":"shortcut","children":[{"type":"text","value":"1,2,3","position":{"start":{"line":3953,"column":18,"offset":87671},"end":{"line":3953,"column":23,"offset":87676},"indent":[]}}],"position":{"start":{"line":3953,"column":17,"offset":87670},"end":{"line":3953,"column":24,"offset":87677},"indent":[]}},{"type":"text","value":": \"123\"} # => Raises a TypeError: unhashable type: 'list'\nvalid","position":{"start":{"line":3953,"column":24,"offset":87677},"end":{"line":3954,"column":6,"offset":87740},"indent":[1]}}],"position":{"start":{"line":3953,"column":8,"offset":87661},"end":{"line":3954,"column":7,"offset":87741},"indent":[1]}},{"type":"text","value":"dict = {(1,2,3):","position":{"start":{"line":3954,"column":7,"offset":87741},"end":{"line":3954,"column":23,"offset":87757},"indent":[]}},{"type":"linkReference","identifier":"1,2,3","label":"1,2,3","referenceType":"shortcut","children":[{"type":"text","value":"1,2,3","position":{"start":{"line":3954,"column":24,"offset":87758},"end":{"line":3954,"column":29,"offset":87763},"indent":[]}}],"position":{"start":{"line":3954,"column":23,"offset":87757},"end":{"line":3954,"column":30,"offset":87764},"indent":[]}},{"type":"text","value":"} # Values can be of any type, however.","position":{"start":{"line":3954,"column":30,"offset":87764},"end":{"line":3954,"column":69,"offset":87803},"indent":[]}}],"position":{"start":{"line":3953,"column":1,"offset":87654},"end":{"line":3954,"column":69,"offset":87803},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Look up values with []","position":{"start":{"line":3956,"column":3,"offset":87807},"end":{"line":3956,"column":25,"offset":87829},"indent":[]}}],"position":{"start":{"line":3956,"column":1,"offset":87805},"end":{"line":3956,"column":25,"offset":87829},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"filled_dict","position":{"start":{"line":3958,"column":1,"offset":87831},"end":{"line":3958,"column":12,"offset":87842},"indent":[]}},{"type":"linkReference","identifier":"\"one\"","label":"\"one\"","referenceType":"shortcut","children":[{"type":"text","value":"\"one\"","position":{"start":{"line":3958,"column":13,"offset":87843},"end":{"line":3958,"column":18,"offset":87848},"indent":[]}}],"position":{"start":{"line":3958,"column":12,"offset":87842},"end":{"line":3958,"column":19,"offset":87849},"indent":[]}},{"type":"text","value":" # => 1","position":{"start":{"line":3958,"column":19,"offset":87849},"end":{"line":3958,"column":26,"offset":87856},"indent":[]}}],"position":{"start":{"line":3958,"column":1,"offset":87831},"end":{"line":3958,"column":26,"offset":87856},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Get all keys as an iterable with \"keys()\". We need to wrap the call in list()","position":{"start":{"line":3960,"column":3,"offset":87860},"end":{"line":3960,"column":80,"offset":87937},"indent":[]}}],"position":{"start":{"line":3960,"column":1,"offset":87858},"end":{"line":3960,"column":80,"offset":87937},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"to turn it into a list. We'll talk about those later. Note - for Python","position":{"start":{"line":3962,"column":3,"offset":87941},"end":{"line":3962,"column":74,"offset":88012},"indent":[]}}],"position":{"start":{"line":3962,"column":1,"offset":87939},"end":{"line":3962,"column":74,"offset":88012},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"versions <3.7, dictionary key ordering is not guaranteed. Your results might","position":{"start":{"line":3964,"column":3,"offset":88016},"end":{"line":3964,"column":79,"offset":88092},"indent":[]}}],"position":{"start":{"line":3964,"column":1,"offset":88014},"end":{"line":3964,"column":79,"offset":88092},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"not match the example below exactly. However, as of Python 3.7, dictionary","position":{"start":{"line":3966,"column":3,"offset":88096},"end":{"line":3966,"column":77,"offset":88170},"indent":[]}}],"position":{"start":{"line":3966,"column":1,"offset":88094},"end":{"line":3966,"column":77,"offset":88170},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"items maintain the order at which they are inserted into the dictionary.","position":{"start":{"line":3968,"column":3,"offset":88174},"end":{"line":3968,"column":75,"offset":88246},"indent":[]}}],"position":{"start":{"line":3968,"column":1,"offset":88172},"end":{"line":3968,"column":75,"offset":88246},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"list(filled","position":{"start":{"line":3970,"column":1,"offset":88248},"end":{"line":3970,"column":12,"offset":88259},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"dict.keys()) # => ","position":{"start":{"line":3970,"column":13,"offset":88260},"end":{"line":3970,"column":31,"offset":88278},"indent":[]}},{"type":"linkReference","identifier":"\"three\", \"two\", \"one\"","label":"\"three\", \"two\", \"one\"","referenceType":"shortcut","children":[{"type":"text","value":"\"three\", \"two\", \"one\"","position":{"start":{"line":3970,"column":32,"offset":88279},"end":{"line":3970,"column":53,"offset":88300},"indent":[]}}],"position":{"start":{"line":3970,"column":31,"offset":88278},"end":{"line":3970,"column":54,"offset":88301},"indent":[]}},{"type":"text","value":" in Python <3.7\nlist(filled","position":{"start":{"line":3970,"column":54,"offset":88301},"end":{"line":3971,"column":12,"offset":88328},"indent":[1]}}],"position":{"start":{"line":3970,"column":12,"offset":88259},"end":{"line":3971,"column":13,"offset":88329},"indent":[1]}},{"type":"text","value":"dict.keys()) # => ","position":{"start":{"line":3971,"column":13,"offset":88329},"end":{"line":3971,"column":31,"offset":88347},"indent":[]}},{"type":"linkReference","identifier":"\"one\", \"two\", \"three\"","label":"\"one\", \"two\", \"three\"","referenceType":"shortcut","children":[{"type":"text","value":"\"one\", \"two\", \"three\"","position":{"start":{"line":3971,"column":32,"offset":88348},"end":{"line":3971,"column":53,"offset":88369},"indent":[]}}],"position":{"start":{"line":3971,"column":31,"offset":88347},"end":{"line":3971,"column":54,"offset":88370},"indent":[]}},{"type":"text","value":" in Python 3.7+","position":{"start":{"line":3971,"column":54,"offset":88370},"end":{"line":3971,"column":69,"offset":88385},"indent":[]}}],"position":{"start":{"line":3970,"column":1,"offset":88248},"end":{"line":3971,"column":69,"offset":88385},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Get all values as an iterable with \"values()\". Once again we need to wrap it","position":{"start":{"line":3973,"column":3,"offset":88389},"end":{"line":3973,"column":79,"offset":88465},"indent":[]}}],"position":{"start":{"line":3973,"column":1,"offset":88387},"end":{"line":3973,"column":79,"offset":88465},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"in list() to get it out of the iterable. Note - Same as above regarding key","position":{"start":{"line":3975,"column":3,"offset":88469},"end":{"line":3975,"column":78,"offset":88544},"indent":[]}}],"position":{"start":{"line":3975,"column":1,"offset":88467},"end":{"line":3975,"column":78,"offset":88544},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"ordering.","position":{"start":{"line":3977,"column":3,"offset":88548},"end":{"line":3977,"column":12,"offset":88557},"indent":[]}}],"position":{"start":{"line":3977,"column":1,"offset":88546},"end":{"line":3977,"column":12,"offset":88557},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"list(filled","position":{"start":{"line":3979,"column":1,"offset":88559},"end":{"line":3979,"column":12,"offset":88570},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"dict.values()) # => ","position":{"start":{"line":3979,"column":13,"offset":88571},"end":{"line":3979,"column":33,"offset":88591},"indent":[]}},{"type":"linkReference","identifier":"3, 2, 1","label":"3, 2, 1","referenceType":"shortcut","children":[{"type":"text","value":"3, 2, 1","position":{"start":{"line":3979,"column":34,"offset":88592},"end":{"line":3979,"column":41,"offset":88599},"indent":[]}}],"position":{"start":{"line":3979,"column":33,"offset":88591},"end":{"line":3979,"column":42,"offset":88600},"indent":[]}},{"type":"text","value":" in Python <3.7\nlist(filled","position":{"start":{"line":3979,"column":42,"offset":88600},"end":{"line":3980,"column":12,"offset":88627},"indent":[1]}}],"position":{"start":{"line":3979,"column":12,"offset":88570},"end":{"line":3980,"column":13,"offset":88628},"indent":[1]}},{"type":"text","value":"dict.values()) # => ","position":{"start":{"line":3980,"column":13,"offset":88628},"end":{"line":3980,"column":33,"offset":88648},"indent":[]}},{"type":"linkReference","identifier":"1, 2, 3","label":"1, 2, 3","referenceType":"shortcut","children":[{"type":"text","value":"1, 2, 3","position":{"start":{"line":3980,"column":34,"offset":88649},"end":{"line":3980,"column":41,"offset":88656},"indent":[]}}],"position":{"start":{"line":3980,"column":33,"offset":88648},"end":{"line":3980,"column":42,"offset":88657},"indent":[]}},{"type":"text","value":" in Python 3.7+","position":{"start":{"line":3980,"column":42,"offset":88657},"end":{"line":3980,"column":57,"offset":88672},"indent":[]}}],"position":{"start":{"line":3979,"column":1,"offset":88559},"end":{"line":3980,"column":57,"offset":88672},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Check for existence of keys in a dictionary with \"in\"","position":{"start":{"line":3982,"column":3,"offset":88676},"end":{"line":3982,"column":56,"offset":88729},"indent":[]}}],"position":{"start":{"line":3982,"column":1,"offset":88674},"end":{"line":3982,"column":56,"offset":88729},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"\"one\" in filled","position":{"start":{"line":3984,"column":1,"offset":88731},"end":{"line":3984,"column":16,"offset":88746},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"dict # => True\n1 in filled","position":{"start":{"line":3984,"column":17,"offset":88747},"end":{"line":3985,"column":12,"offset":88773},"indent":[1]}}],"position":{"start":{"line":3984,"column":16,"offset":88746},"end":{"line":3985,"column":13,"offset":88774},"indent":[1]}},{"type":"text","value":"dict # => False","position":{"start":{"line":3985,"column":13,"offset":88774},"end":{"line":3985,"column":28,"offset":88789},"indent":[]}}],"position":{"start":{"line":3984,"column":1,"offset":88731},"end":{"line":3985,"column":28,"offset":88789},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Looking up a non-existing key is a KeyError","position":{"start":{"line":3987,"column":3,"offset":88793},"end":{"line":3987,"column":46,"offset":88836},"indent":[]}}],"position":{"start":{"line":3987,"column":1,"offset":88791},"end":{"line":3987,"column":46,"offset":88836},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"filled_dict","position":{"start":{"line":3989,"column":1,"offset":88838},"end":{"line":3989,"column":12,"offset":88849},"indent":[]}},{"type":"linkReference","identifier":"\"four\"","label":"\"four\"","referenceType":"shortcut","children":[{"type":"text","value":"\"four\"","position":{"start":{"line":3989,"column":13,"offset":88850},"end":{"line":3989,"column":19,"offset":88856},"indent":[]}}],"position":{"start":{"line":3989,"column":12,"offset":88849},"end":{"line":3989,"column":20,"offset":88857},"indent":[]}},{"type":"text","value":" # KeyError","position":{"start":{"line":3989,"column":20,"offset":88857},"end":{"line":3989,"column":31,"offset":88868},"indent":[]}}],"position":{"start":{"line":3989,"column":1,"offset":88838},"end":{"line":3989,"column":31,"offset":88868},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Use \"get()\" method to avoid the KeyError","position":{"start":{"line":3991,"column":3,"offset":88872},"end":{"line":3991,"column":43,"offset":88912},"indent":[]}}],"position":{"start":{"line":3991,"column":1,"offset":88870},"end":{"line":3991,"column":43,"offset":88912},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"filled","position":{"start":{"line":3993,"column":1,"offset":88914},"end":{"line":3993,"column":7,"offset":88920},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"dict.get(\"one\") # => 1\nfilled","position":{"start":{"line":3993,"column":8,"offset":88921},"end":{"line":3994,"column":7,"offset":88950},"indent":[1]}}],"position":{"start":{"line":3993,"column":7,"offset":88920},"end":{"line":3994,"column":8,"offset":88951},"indent":[1]}},{"type":"text","value":"dict.get(\"four\") # => None","position":{"start":{"line":3994,"column":8,"offset":88951},"end":{"line":3994,"column":34,"offset":88977},"indent":[]}}],"position":{"start":{"line":3993,"column":1,"offset":88914},"end":{"line":3994,"column":34,"offset":88977},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"The get method supports a default argument when the value is missing","position":{"start":{"line":3996,"column":3,"offset":88981},"end":{"line":3996,"column":71,"offset":89049},"indent":[]}}],"position":{"start":{"line":3996,"column":1,"offset":88979},"end":{"line":3996,"column":71,"offset":89049},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"filled","position":{"start":{"line":3998,"column":1,"offset":89051},"end":{"line":3998,"column":7,"offset":89057},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"dict.get(\"one\", 4) # => 1\nfilled","position":{"start":{"line":3998,"column":8,"offset":89058},"end":{"line":3999,"column":7,"offset":89090},"indent":[1]}}],"position":{"start":{"line":3998,"column":7,"offset":89057},"end":{"line":3999,"column":8,"offset":89091},"indent":[1]}},{"type":"text","value":"dict.get(\"four\", 4) # => 4","position":{"start":{"line":3999,"column":8,"offset":89091},"end":{"line":3999,"column":34,"offset":89117},"indent":[]}}],"position":{"start":{"line":3998,"column":1,"offset":89051},"end":{"line":3999,"column":34,"offset":89117},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"\"setdefault()\" inserts into a dictionary only if the given key isn't present","position":{"start":{"line":4001,"column":3,"offset":89121},"end":{"line":4001,"column":79,"offset":89197},"indent":[]}}],"position":{"start":{"line":4001,"column":1,"offset":89119},"end":{"line":4001,"column":79,"offset":89197},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"filled","position":{"start":{"line":4003,"column":1,"offset":89199},"end":{"line":4003,"column":7,"offset":89205},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"dict.setdefault(\"five\", 5) # filled","position":{"start":{"line":4003,"column":8,"offset":89206},"end":{"line":4003,"column":43,"offset":89241},"indent":[]}}],"position":{"start":{"line":4003,"column":7,"offset":89205},"end":{"line":4003,"column":44,"offset":89242},"indent":[]}},{"type":"text","value":"dict","position":{"start":{"line":4003,"column":44,"offset":89242},"end":{"line":4003,"column":48,"offset":89246},"indent":[]}},{"type":"linkReference","identifier":"\"five\"","label":"\"five\"","referenceType":"shortcut","children":[{"type":"text","value":"\"five\"","position":{"start":{"line":4003,"column":49,"offset":89247},"end":{"line":4003,"column":55,"offset":89253},"indent":[]}}],"position":{"start":{"line":4003,"column":48,"offset":89246},"end":{"line":4003,"column":56,"offset":89254},"indent":[]}},{"type":"text","value":" is set to 5\nfilled","position":{"start":{"line":4003,"column":56,"offset":89254},"end":{"line":4004,"column":7,"offset":89273},"indent":[1]}},{"type":"emphasis","children":[{"type":"text","value":"dict.setdefault(\"five\", 6) # filled","position":{"start":{"line":4004,"column":8,"offset":89274},"end":{"line":4004,"column":43,"offset":89309},"indent":[]}}],"position":{"start":{"line":4004,"column":7,"offset":89273},"end":{"line":4004,"column":44,"offset":89310},"indent":[]}},{"type":"text","value":"dict","position":{"start":{"line":4004,"column":44,"offset":89310},"end":{"line":4004,"column":48,"offset":89314},"indent":[]}},{"type":"linkReference","identifier":"\"five\"","label":"\"five\"","referenceType":"shortcut","children":[{"type":"text","value":"\"five\"","position":{"start":{"line":4004,"column":49,"offset":89315},"end":{"line":4004,"column":55,"offset":89321},"indent":[]}}],"position":{"start":{"line":4004,"column":48,"offset":89314},"end":{"line":4004,"column":56,"offset":89322},"indent":[]}},{"type":"text","value":" is still 5","position":{"start":{"line":4004,"column":56,"offset":89322},"end":{"line":4004,"column":67,"offset":89333},"indent":[]}}],"position":{"start":{"line":4003,"column":1,"offset":89199},"end":{"line":4004,"column":67,"offset":89333},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Adding to a dictionary","position":{"start":{"line":4006,"column":3,"offset":89337},"end":{"line":4006,"column":25,"offset":89359},"indent":[]}}],"position":{"start":{"line":4006,"column":1,"offset":89335},"end":{"line":4006,"column":25,"offset":89359},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"filled","position":{"start":{"line":4008,"column":1,"offset":89361},"end":{"line":4008,"column":7,"offset":89367},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"dict.update({\"four\":4}) # => {\"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4}\nfilled","position":{"start":{"line":4008,"column":8,"offset":89368},"end":{"line":4009,"column":7,"offset":89447},"indent":[1]}}],"position":{"start":{"line":4008,"column":7,"offset":89367},"end":{"line":4009,"column":8,"offset":89448},"indent":[1]}},{"type":"text","value":"dict","position":{"start":{"line":4009,"column":8,"offset":89448},"end":{"line":4009,"column":12,"offset":89452},"indent":[]}},{"type":"linkReference","identifier":"\"four\"","label":"\"four\"","referenceType":"shortcut","children":[{"type":"text","value":"\"four\"","position":{"start":{"line":4009,"column":13,"offset":89453},"end":{"line":4009,"column":19,"offset":89459},"indent":[]}}],"position":{"start":{"line":4009,"column":12,"offset":89452},"end":{"line":4009,"column":20,"offset":89460},"indent":[]}},{"type":"text","value":" = 4 # another way to add to dict","position":{"start":{"line":4009,"column":20,"offset":89460},"end":{"line":4009,"column":53,"offset":89493},"indent":[]}}],"position":{"start":{"line":4008,"column":1,"offset":89361},"end":{"line":4009,"column":53,"offset":89493},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Remove keys from a dictionary with del","position":{"start":{"line":4011,"column":3,"offset":89497},"end":{"line":4011,"column":41,"offset":89535},"indent":[]}}],"position":{"start":{"line":4011,"column":1,"offset":89495},"end":{"line":4011,"column":41,"offset":89535},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"del filled_dict","position":{"start":{"line":4013,"column":1,"offset":89537},"end":{"line":4013,"column":16,"offset":89552},"indent":[]}},{"type":"linkReference","identifier":"\"one\"","label":"\"one\"","referenceType":"shortcut","children":[{"type":"text","value":"\"one\"","position":{"start":{"line":4013,"column":17,"offset":89553},"end":{"line":4013,"column":22,"offset":89558},"indent":[]}}],"position":{"start":{"line":4013,"column":16,"offset":89552},"end":{"line":4013,"column":23,"offset":89559},"indent":[]}},{"type":"text","value":" # Removes the key \"one\" from filled dict","position":{"start":{"line":4013,"column":23,"offset":89559},"end":{"line":4013,"column":64,"offset":89600},"indent":[]}}],"position":{"start":{"line":4013,"column":1,"offset":89537},"end":{"line":4013,"column":64,"offset":89600},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"From Python 3.5 you can also use the additional unpacking options","position":{"start":{"line":4015,"column":3,"offset":89604},"end":{"line":4015,"column":68,"offset":89669},"indent":[]}}],"position":{"start":{"line":4015,"column":1,"offset":89602},"end":{"line":4015,"column":68,"offset":89669},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"{'a': 1, **{'b': 2}} # => {'a': 1, 'b': 2}\n{'a': 1, **{'a': 2}} # => {'a': 2}","position":{"start":{"line":4017,"column":1,"offset":89671},"end":{"line":4018,"column":35,"offset":89748},"indent":[1]}}],"position":{"start":{"line":4017,"column":1,"offset":89671},"end":{"line":4018,"column":35,"offset":89748},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Sets store ... well sets","position":{"start":{"line":4020,"column":3,"offset":89752},"end":{"line":4020,"column":27,"offset":89776},"indent":[]}}],"position":{"start":{"line":4020,"column":1,"offset":89750},"end":{"line":4020,"column":27,"offset":89776},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"empty_set = set()","position":{"start":{"line":4022,"column":1,"offset":89778},"end":{"line":4022,"column":18,"offset":89795},"indent":[]}}],"position":{"start":{"line":4022,"column":1,"offset":89778},"end":{"line":4022,"column":18,"offset":89795},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Initialize a set with a bunch of values. Yeah, it looks a bit like a dict. Sorry.","position":{"start":{"line":4024,"column":3,"offset":89799},"end":{"line":4024,"column":84,"offset":89880},"indent":[]}}],"position":{"start":{"line":4024,"column":1,"offset":89797},"end":{"line":4024,"column":84,"offset":89880},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"some","position":{"start":{"line":4026,"column":1,"offset":89882},"end":{"line":4026,"column":5,"offset":89886},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"set = {1, 1, 2, 2, 3, 4} # some","position":{"start":{"line":4026,"column":6,"offset":89887},"end":{"line":4026,"column":37,"offset":89918},"indent":[]}}],"position":{"start":{"line":4026,"column":5,"offset":89886},"end":{"line":4026,"column":38,"offset":89919},"indent":[]}},{"type":"text","value":"set is now {1, 2, 3, 4}","position":{"start":{"line":4026,"column":38,"offset":89919},"end":{"line":4026,"column":61,"offset":89942},"indent":[]}}],"position":{"start":{"line":4026,"column":1,"offset":89882},"end":{"line":4026,"column":61,"offset":89942},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Similar to keys of a dictionary, elements of a set have to be immutable.","position":{"start":{"line":4028,"column":3,"offset":89946},"end":{"line":4028,"column":75,"offset":90018},"indent":[]}}],"position":{"start":{"line":4028,"column":1,"offset":89944},"end":{"line":4028,"column":75,"offset":90018},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"invalid","position":{"start":{"line":4030,"column":1,"offset":90020},"end":{"line":4030,"column":8,"offset":90027},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"set = {","position":{"start":{"line":4030,"column":9,"offset":90028},"end":{"line":4030,"column":16,"offset":90035},"indent":[]}},{"type":"linkReference","identifier":"1","label":"1","referenceType":"shortcut","children":[{"type":"text","value":"1","position":{"start":{"line":4030,"column":17,"offset":90036},"end":{"line":4030,"column":18,"offset":90037},"indent":[]}}],"position":{"start":{"line":4030,"column":16,"offset":90035},"end":{"line":4030,"column":19,"offset":90038},"indent":[]}},{"type":"text","value":", 1} # => Raises a TypeError: unhashable type: 'list'\nvalid","position":{"start":{"line":4030,"column":19,"offset":90038},"end":{"line":4031,"column":6,"offset":90097},"indent":[1]}}],"position":{"start":{"line":4030,"column":8,"offset":90027},"end":{"line":4031,"column":7,"offset":90098},"indent":[1]}},{"type":"text","value":"set = {(1,), 1}","position":{"start":{"line":4031,"column":7,"offset":90098},"end":{"line":4031,"column":22,"offset":90113},"indent":[]}}],"position":{"start":{"line":4030,"column":1,"offset":90020},"end":{"line":4031,"column":22,"offset":90113},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Add one more item to the set","position":{"start":{"line":4033,"column":3,"offset":90117},"end":{"line":4033,"column":31,"offset":90145},"indent":[]}}],"position":{"start":{"line":4033,"column":1,"offset":90115},"end":{"line":4033,"column":31,"offset":90145},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"filled","position":{"start":{"line":4035,"column":1,"offset":90147},"end":{"line":4035,"column":7,"offset":90153},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"set = some","position":{"start":{"line":4035,"column":8,"offset":90154},"end":{"line":4035,"column":18,"offset":90164},"indent":[]}}],"position":{"start":{"line":4035,"column":7,"offset":90153},"end":{"line":4035,"column":19,"offset":90165},"indent":[]}},{"type":"text","value":"set\nfilled","position":{"start":{"line":4035,"column":19,"offset":90165},"end":{"line":4036,"column":7,"offset":90175},"indent":[1]}},{"type":"emphasis","children":[{"type":"text","value":"set.add(5) # filled","position":{"start":{"line":4036,"column":8,"offset":90176},"end":{"line":4036,"column":27,"offset":90195},"indent":[]}}],"position":{"start":{"line":4036,"column":7,"offset":90175},"end":{"line":4036,"column":28,"offset":90196},"indent":[]}},{"type":"text","value":"set is now {1, 2, 3, 4, 5}","position":{"start":{"line":4036,"column":28,"offset":90196},"end":{"line":4036,"column":54,"offset":90222},"indent":[]}}],"position":{"start":{"line":4035,"column":1,"offset":90147},"end":{"line":4036,"column":54,"offset":90222},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Sets do not have duplicate elements","position":{"start":{"line":4038,"column":3,"offset":90226},"end":{"line":4038,"column":38,"offset":90261},"indent":[]}}],"position":{"start":{"line":4038,"column":1,"offset":90224},"end":{"line":4038,"column":38,"offset":90261},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"filled_set.add(5) # it remains as before {1, 2, 3, 4, 5}","position":{"start":{"line":4040,"column":1,"offset":90263},"end":{"line":4040,"column":57,"offset":90319},"indent":[]}}],"position":{"start":{"line":4040,"column":1,"offset":90263},"end":{"line":4040,"column":57,"offset":90319},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Do set intersection with &","position":{"start":{"line":4042,"column":3,"offset":90323},"end":{"line":4042,"column":29,"offset":90349},"indent":[]}}],"position":{"start":{"line":4042,"column":1,"offset":90321},"end":{"line":4042,"column":29,"offset":90349},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"other","position":{"start":{"line":4044,"column":1,"offset":90351},"end":{"line":4044,"column":6,"offset":90356},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"set = {3, 4, 5, 6}\nfilled","position":{"start":{"line":4044,"column":7,"offset":90357},"end":{"line":4045,"column":7,"offset":90382},"indent":[1]}}],"position":{"start":{"line":4044,"column":6,"offset":90356},"end":{"line":4045,"column":8,"offset":90383},"indent":[1]}},{"type":"text","value":"set & other_set # => {3, 4, 5}","position":{"start":{"line":4045,"column":8,"offset":90383},"end":{"line":4045,"column":38,"offset":90413},"indent":[]}}],"position":{"start":{"line":4044,"column":1,"offset":90351},"end":{"line":4045,"column":38,"offset":90413},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Do set union with |","position":{"start":{"line":4047,"column":3,"offset":90417},"end":{"line":4047,"column":22,"offset":90436},"indent":[]}}],"position":{"start":{"line":4047,"column":1,"offset":90415},"end":{"line":4047,"column":22,"offset":90436},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"filled","position":{"start":{"line":4049,"column":1,"offset":90438},"end":{"line":4049,"column":7,"offset":90444},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"set | other","position":{"start":{"line":4049,"column":8,"offset":90445},"end":{"line":4049,"column":19,"offset":90456},"indent":[]}}],"position":{"start":{"line":4049,"column":7,"offset":90444},"end":{"line":4049,"column":20,"offset":90457},"indent":[]}},{"type":"text","value":"set # => {1, 2, 3, 4, 5, 6}","position":{"start":{"line":4049,"column":20,"offset":90457},"end":{"line":4049,"column":47,"offset":90484},"indent":[]}}],"position":{"start":{"line":4049,"column":1,"offset":90438},"end":{"line":4049,"column":47,"offset":90484},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Do set difference with -","position":{"start":{"line":4051,"column":3,"offset":90488},"end":{"line":4051,"column":27,"offset":90512},"indent":[]}}],"position":{"start":{"line":4051,"column":1,"offset":90486},"end":{"line":4051,"column":27,"offset":90512},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"{1, 2, 3, 4} - {2, 3, 5} # => {1, 4}","position":{"start":{"line":4053,"column":1,"offset":90514},"end":{"line":4053,"column":37,"offset":90550},"indent":[]}}],"position":{"start":{"line":4053,"column":1,"offset":90514},"end":{"line":4053,"column":37,"offset":90550},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Do set symmetric difference with ^","position":{"start":{"line":4055,"column":3,"offset":90554},"end":{"line":4055,"column":37,"offset":90588},"indent":[]}}],"position":{"start":{"line":4055,"column":1,"offset":90552},"end":{"line":4055,"column":37,"offset":90588},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"{1, 2, 3, 4} ^ {2, 3, 5} # => {1, 4, 5}","position":{"start":{"line":4057,"column":1,"offset":90590},"end":{"line":4057,"column":40,"offset":90629},"indent":[]}}],"position":{"start":{"line":4057,"column":1,"offset":90590},"end":{"line":4057,"column":40,"offset":90629},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Check if set on the left is a superset of set on the right","position":{"start":{"line":4059,"column":3,"offset":90633},"end":{"line":4059,"column":61,"offset":90691},"indent":[]}}],"position":{"start":{"line":4059,"column":1,"offset":90631},"end":{"line":4059,"column":61,"offset":90691},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"{1, 2} >= {1, 2, 3} # => False","position":{"start":{"line":4061,"column":1,"offset":90693},"end":{"line":4061,"column":31,"offset":90723},"indent":[]}}],"position":{"start":{"line":4061,"column":1,"offset":90693},"end":{"line":4061,"column":31,"offset":90723},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Check if set on the left is a subset of set on the right","position":{"start":{"line":4063,"column":3,"offset":90727},"end":{"line":4063,"column":59,"offset":90783},"indent":[]}}],"position":{"start":{"line":4063,"column":1,"offset":90725},"end":{"line":4063,"column":59,"offset":90783},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"{1, 2} <= {1, 2, 3} # => True","position":{"start":{"line":4065,"column":1,"offset":90785},"end":{"line":4065,"column":30,"offset":90814},"indent":[]}}],"position":{"start":{"line":4065,"column":1,"offset":90785},"end":{"line":4065,"column":30,"offset":90814},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Check for existence in a set with in","position":{"start":{"line":4067,"column":3,"offset":90818},"end":{"line":4067,"column":39,"offset":90854},"indent":[]}}],"position":{"start":{"line":4067,"column":1,"offset":90816},"end":{"line":4067,"column":39,"offset":90854},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"2 in filled","position":{"start":{"line":4069,"column":1,"offset":90856},"end":{"line":4069,"column":12,"offset":90867},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"set # => True\n10 in filled","position":{"start":{"line":4069,"column":13,"offset":90868},"end":{"line":4070,"column":13,"offset":90894},"indent":[1]}}],"position":{"start":{"line":4069,"column":12,"offset":90867},"end":{"line":4070,"column":14,"offset":90895},"indent":[1]}},{"type":"text","value":"set # => False","position":{"start":{"line":4070,"column":14,"offset":90895},"end":{"line":4070,"column":28,"offset":90909},"indent":[]}}],"position":{"start":{"line":4069,"column":1,"offset":90856},"end":{"line":4070,"column":28,"offset":90909},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"####################################################","position":{"start":{"line":4072,"column":1,"offset":90911},"end":{"line":4072,"column":53,"offset":90963},"indent":[]}}],"position":{"start":{"line":4072,"column":1,"offset":90911},"end":{"line":4072,"column":53,"offset":90963},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"3. Control Flow and Iterables","position":{"start":{"line":4074,"column":4,"offset":90968},"end":{"line":4074,"column":33,"offset":90997},"indent":[]}}],"position":{"start":{"line":4074,"column":1,"offset":90965},"end":{"line":4074,"column":33,"offset":90997},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"####################################################","position":{"start":{"line":4076,"column":1,"offset":90999},"end":{"line":4076,"column":53,"offset":91051},"indent":[]}}],"position":{"start":{"line":4076,"column":1,"offset":90999},"end":{"line":4076,"column":53,"offset":91051},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Let's just make a variable","position":{"start":{"line":4078,"column":3,"offset":91055},"end":{"line":4078,"column":29,"offset":91081},"indent":[]}}],"position":{"start":{"line":4078,"column":1,"offset":91053},"end":{"line":4078,"column":29,"offset":91081},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"some_var = 5","position":{"start":{"line":4080,"column":1,"offset":91083},"end":{"line":4080,"column":13,"offset":91095},"indent":[]}}],"position":{"start":{"line":4080,"column":1,"offset":91083},"end":{"line":4080,"column":13,"offset":91095},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Here is an if statement. Indentation is significant in Python!","position":{"start":{"line":4082,"column":3,"offset":91099},"end":{"line":4082,"column":65,"offset":91161},"indent":[]}}],"position":{"start":{"line":4082,"column":1,"offset":91097},"end":{"line":4082,"column":65,"offset":91161},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Convention is to use four spaces, not tabs.","position":{"start":{"line":4084,"column":3,"offset":91165},"end":{"line":4084,"column":46,"offset":91208},"indent":[]}}],"position":{"start":{"line":4084,"column":1,"offset":91163},"end":{"line":4084,"column":46,"offset":91208},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"This prints \"some_var is smaller than 10\"","position":{"start":{"line":4086,"column":3,"offset":91212},"end":{"line":4086,"column":44,"offset":91253},"indent":[]}}],"position":{"start":{"line":4086,"column":1,"offset":91210},"end":{"line":4086,"column":44,"offset":91253},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"if some","position":{"start":{"line":4088,"column":1,"offset":91255},"end":{"line":4088,"column":8,"offset":91262},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"var > 10:\nprint(\"some","position":{"start":{"line":4088,"column":9,"offset":91263},"end":{"line":4089,"column":12,"offset":91284},"indent":[1]}}],"position":{"start":{"line":4088,"column":8,"offset":91262},"end":{"line":4089,"column":13,"offset":91285},"indent":[1]}},{"type":"text","value":"var is totally bigger than 10.\")\nelif some","position":{"start":{"line":4089,"column":13,"offset":91285},"end":{"line":4090,"column":10,"offset":91327},"indent":[1]}},{"type":"emphasis","children":[{"type":"text","value":"var < 10: # This elif clause is optional.\nprint(\"some","position":{"start":{"line":4090,"column":11,"offset":91328},"end":{"line":4091,"column":12,"offset":91381},"indent":[1]}}],"position":{"start":{"line":4090,"column":10,"offset":91327},"end":{"line":4091,"column":13,"offset":91382},"indent":[1]}},{"type":"text","value":"var is smaller than 10.\")\nelse: # This is optional too.\nprint(\"some_var is indeed 10.\")","position":{"start":{"line":4091,"column":13,"offset":91382},"end":{"line":4093,"column":32,"offset":91469},"indent":[1,1]}}],"position":{"start":{"line":4088,"column":1,"offset":91255},"end":{"line":4093,"column":32,"offset":91469},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"\"\"\"\nFor loops iterate over lists\nprints:\ndog is a mammal\ncat is a mammal\nmouse is a mammal\n\"\"\"\nfor animal in ","position":{"start":{"line":4095,"column":1,"offset":91471},"end":{"line":4102,"column":15,"offset":91580},"indent":[1,1,1,1,1,1,1]}},{"type":"linkReference","identifier":"\"dog\", \"cat\", \"mouse\"","label":"\"dog\", \"cat\", \"mouse\"","referenceType":"shortcut","children":[{"type":"text","value":"\"dog\", \"cat\", \"mouse\"","position":{"start":{"line":4102,"column":16,"offset":91581},"end":{"line":4102,"column":37,"offset":91602},"indent":[]}}],"position":{"start":{"line":4102,"column":15,"offset":91580},"end":{"line":4102,"column":38,"offset":91603},"indent":[]}},{"type":"text","value":": # You can use format() to interpolate formatted strings\nprint(\"{} is a mammal\".format(animal))","position":{"start":{"line":4102,"column":38,"offset":91603},"end":{"line":4103,"column":39,"offset":91699},"indent":[1]}}],"position":{"start":{"line":4095,"column":1,"offset":91471},"end":{"line":4103,"column":39,"offset":91699},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"\"\"\"\n\"range(number)\" returns an iterable of numbers\nfrom zero to the given number\nprints:\n0\n1\n2\n3\n\"\"\"\nfor i in range(4):\nprint(i)","position":{"start":{"line":4105,"column":1,"offset":91701},"end":{"line":4115,"column":9,"offset":91829},"indent":[1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":4105,"column":1,"offset":91701},"end":{"line":4115,"column":9,"offset":91829},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"\"\"\"\n\"range(lower, upper)\" returns an iterable of numbers\nfrom the lower number to the upper number\nprints:\n4\n5\n6\n7\n\"\"\"\nfor i in range(4, 8):\nprint(i)","position":{"start":{"line":4117,"column":1,"offset":91831},"end":{"line":4127,"column":9,"offset":91980},"indent":[1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":4117,"column":1,"offset":91831},"end":{"line":4127,"column":9,"offset":91980},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"\"\"\"\n\"range(lower, upper, step)\" returns an iterable of numbers\nfrom the lower number to the upper number, while incrementing\nby step. If step is not indicated, the default value is 1.\nprints:\n4\n6\n\"\"\"\nfor i in range(4, 8, 2):\nprint(i)","position":{"start":{"line":4129,"column":1,"offset":91982},"end":{"line":4138,"column":9,"offset":92215},"indent":[1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":4129,"column":1,"offset":91982},"end":{"line":4138,"column":9,"offset":92215},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"\"\"\"\nTo loop over a list, and retrieve both the index and the value of each item in the list\nprints:\n0 dog\n1 cat\n2 mouse\n\"\"\"\nlist = ","position":{"start":{"line":4140,"column":1,"offset":92217},"end":{"line":4147,"column":8,"offset":92348},"indent":[1,1,1,1,1,1,1]}},{"type":"linkReference","identifier":"\"dog\", \"cat\", \"mouse\"","label":"\"dog\", \"cat\", \"mouse\"","referenceType":"shortcut","children":[{"type":"text","value":"\"dog\", \"cat\", \"mouse\"","position":{"start":{"line":4147,"column":9,"offset":92349},"end":{"line":4147,"column":30,"offset":92370},"indent":[]}}],"position":{"start":{"line":4147,"column":8,"offset":92348},"end":{"line":4147,"column":31,"offset":92371},"indent":[]}},{"type":"text","value":"\nfor i, value in enumerate(list):\nprint(i, value)","position":{"start":{"line":4147,"column":31,"offset":92371},"end":{"line":4149,"column":16,"offset":92420},"indent":[1,1]}}],"position":{"start":{"line":4140,"column":1,"offset":92217},"end":{"line":4149,"column":16,"offset":92420},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"\"\"\"\nWhile loops go until a condition is no longer met.\nprints:\n0\n1\n2\n3\n\"\"\"\nx = 0\nwhile x < 4:\nprint(x)\nx += 1 # Shorthand for x = x + 1","position":{"start":{"line":4151,"column":1,"offset":92422},"end":{"line":4162,"column":33,"offset":92557},"indent":[1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":4151,"column":1,"offset":92422},"end":{"line":4162,"column":33,"offset":92557},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Handle exceptions with a try/except block","position":{"start":{"line":4164,"column":3,"offset":92561},"end":{"line":4164,"column":44,"offset":92602},"indent":[]}}],"position":{"start":{"line":4164,"column":1,"offset":92559},"end":{"line":4164,"column":44,"offset":92602},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"try: # Use \"raise\" to raise an error\nraise IndexError(\"This is an index error\")\nexcept IndexError as e:\npass # Pass is just a no-op. Usually you would do recovery here.\nexcept (TypeError, NameError):\npass # Multiple exceptions can be handled together, if required.\nelse: # Optional clause to the try/except block. Must follow all except blocks\nprint(\"All good!\") # Runs only if the code in try raises no exceptions\nfinally: # Execute under all circumstances\nprint(\"We can clean up resources here\")","position":{"start":{"line":4166,"column":1,"offset":92604},"end":{"line":4175,"column":40,"offset":93101},"indent":[1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":4166,"column":1,"offset":92604},"end":{"line":4175,"column":40,"offset":93101},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Instead of try/finally to cleanup resources you can use a with statement","position":{"start":{"line":4177,"column":3,"offset":93105},"end":{"line":4177,"column":75,"offset":93177},"indent":[]}}],"position":{"start":{"line":4177,"column":1,"offset":93103},"end":{"line":4177,"column":75,"offset":93177},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"with open(\"myfile.txt\") as f:\nfor line in f:\nprint(line)","position":{"start":{"line":4179,"column":1,"offset":93179},"end":{"line":4181,"column":12,"offset":93235},"indent":[1,1]}}],"position":{"start":{"line":4179,"column":1,"offset":93179},"end":{"line":4181,"column":12,"offset":93235},"indent":[1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Writing to a file","position":{"start":{"line":4183,"column":3,"offset":93239},"end":{"line":4183,"column":20,"offset":93256},"indent":[]}}],"position":{"start":{"line":4183,"column":1,"offset":93237},"end":{"line":4183,"column":20,"offset":93256},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"contents = {\"aa\": 12, \"bb\": 21}\nwith open(\"myfile1.txt\", \"w+\") as file:\nfile.write(str(contents)) # writes a string to a file","position":{"start":{"line":4185,"column":1,"offset":93258},"end":{"line":4187,"column":54,"offset":93383},"indent":[1,1]}}],"position":{"start":{"line":4185,"column":1,"offset":93258},"end":{"line":4187,"column":54,"offset":93383},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"with open(\"myfile2.txt\", \"w+\") as file:\nfile.write(json.dumps(contents)) # writes an object to a file","position":{"start":{"line":4189,"column":1,"offset":93385},"end":{"line":4190,"column":62,"offset":93486},"indent":[1]}}],"position":{"start":{"line":4189,"column":1,"offset":93385},"end":{"line":4190,"column":62,"offset":93486},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Reading from a file","position":{"start":{"line":4192,"column":3,"offset":93490},"end":{"line":4192,"column":22,"offset":93509},"indent":[]}}],"position":{"start":{"line":4192,"column":1,"offset":93488},"end":{"line":4192,"column":22,"offset":93509},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"with open('myfile1.txt', \"r+\") as file:\ncontents = file.read() # reads a string from a file\nprint(contents)","position":{"start":{"line":4194,"column":1,"offset":93511},"end":{"line":4196,"column":16,"offset":93618},"indent":[1,1]}}],"position":{"start":{"line":4194,"column":1,"offset":93511},"end":{"line":4196,"column":16,"offset":93618},"indent":[1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"print: {\"aa\": 12, \"bb\": 21}","position":{"start":{"line":4198,"column":3,"offset":93622},"end":{"line":4198,"column":30,"offset":93649},"indent":[]}}],"position":{"start":{"line":4198,"column":1,"offset":93620},"end":{"line":4198,"column":30,"offset":93649},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"with open('myfile2.txt', \"r+\") as file:\ncontents = json.load(file) # reads a json object from a file\nprint(contents)","position":{"start":{"line":4200,"column":1,"offset":93651},"end":{"line":4202,"column":16,"offset":93767},"indent":[1,1]}}],"position":{"start":{"line":4200,"column":1,"offset":93651},"end":{"line":4202,"column":16,"offset":93767},"indent":[1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"print: {\"aa\": 12, \"bb\": 21}","position":{"start":{"line":4204,"column":3,"offset":93771},"end":{"line":4204,"column":30,"offset":93798},"indent":[]}}],"position":{"start":{"line":4204,"column":1,"offset":93769},"end":{"line":4204,"column":30,"offset":93798},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Python offers a fundamental abstraction called the Iterable.","position":{"start":{"line":4206,"column":3,"offset":93802},"end":{"line":4206,"column":63,"offset":93862},"indent":[]}}],"position":{"start":{"line":4206,"column":1,"offset":93800},"end":{"line":4206,"column":63,"offset":93862},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"An iterable is an object that can be treated as a sequence.","position":{"start":{"line":4208,"column":3,"offset":93866},"end":{"line":4208,"column":62,"offset":93925},"indent":[]}}],"position":{"start":{"line":4208,"column":1,"offset":93864},"end":{"line":4208,"column":62,"offset":93925},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"The object returned by the range function, is an iterable.","position":{"start":{"line":4210,"column":3,"offset":93929},"end":{"line":4210,"column":61,"offset":93987},"indent":[]}}],"position":{"start":{"line":4210,"column":1,"offset":93927},"end":{"line":4210,"column":61,"offset":93987},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"filled","position":{"start":{"line":4212,"column":1,"offset":93989},"end":{"line":4212,"column":7,"offset":93995},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"dict = {\"one\": 1, \"two\": 2, \"three\": 3}\nour","position":{"start":{"line":4212,"column":8,"offset":93996},"end":{"line":4213,"column":4,"offset":94039},"indent":[1]}}],"position":{"start":{"line":4212,"column":7,"offset":93995},"end":{"line":4213,"column":5,"offset":94040},"indent":[1]}},{"type":"text","value":"iterable = filled","position":{"start":{"line":4213,"column":5,"offset":94040},"end":{"line":4213,"column":22,"offset":94057},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"dict.keys()\nprint(our","position":{"start":{"line":4213,"column":23,"offset":94058},"end":{"line":4214,"column":10,"offset":94079},"indent":[1]}}],"position":{"start":{"line":4213,"column":22,"offset":94057},"end":{"line":4214,"column":11,"offset":94080},"indent":[1]}},{"type":"text","value":"iterable) # => dict_keys(","position":{"start":{"line":4214,"column":11,"offset":94080},"end":{"line":4214,"column":36,"offset":94105},"indent":[]}},{"type":"linkReference","identifier":"'one', 'two', 'three'","label":"'one', 'two', 'three'","referenceType":"shortcut","children":[{"type":"text","value":"'one', 'two', 'three'","position":{"start":{"line":4214,"column":37,"offset":94106},"end":{"line":4214,"column":58,"offset":94127},"indent":[]}}],"position":{"start":{"line":4214,"column":36,"offset":94105},"end":{"line":4214,"column":59,"offset":94128},"indent":[]}},{"type":"text","value":"). This is an object that implements our Iterable interface.","position":{"start":{"line":4214,"column":59,"offset":94128},"end":{"line":4214,"column":119,"offset":94188},"indent":[]}}],"position":{"start":{"line":4212,"column":1,"offset":93989},"end":{"line":4214,"column":119,"offset":94188},"indent":[1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"We can loop over it.","position":{"start":{"line":4216,"column":3,"offset":94192},"end":{"line":4216,"column":23,"offset":94212},"indent":[]}}],"position":{"start":{"line":4216,"column":1,"offset":94190},"end":{"line":4216,"column":23,"offset":94212},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"for i in our_iterable:\nprint(i) # Prints one, two, three","position":{"start":{"line":4218,"column":1,"offset":94214},"end":{"line":4219,"column":34,"offset":94270},"indent":[1]}}],"position":{"start":{"line":4218,"column":1,"offset":94214},"end":{"line":4219,"column":34,"offset":94270},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"However we cannot address elements by index.","position":{"start":{"line":4221,"column":3,"offset":94274},"end":{"line":4221,"column":47,"offset":94318},"indent":[]}}],"position":{"start":{"line":4221,"column":1,"offset":94272},"end":{"line":4221,"column":47,"offset":94318},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"our_iterable","position":{"start":{"line":4223,"column":1,"offset":94320},"end":{"line":4223,"column":13,"offset":94332},"indent":[]}},{"type":"linkReference","identifier":"1","label":"1","referenceType":"shortcut","children":[{"type":"text","value":"1","position":{"start":{"line":4223,"column":14,"offset":94333},"end":{"line":4223,"column":15,"offset":94334},"indent":[]}}],"position":{"start":{"line":4223,"column":13,"offset":94332},"end":{"line":4223,"column":16,"offset":94335},"indent":[]}},{"type":"text","value":" # Raises a TypeError","position":{"start":{"line":4223,"column":16,"offset":94335},"end":{"line":4223,"column":37,"offset":94356},"indent":[]}}],"position":{"start":{"line":4223,"column":1,"offset":94320},"end":{"line":4223,"column":37,"offset":94356},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"An iterable is an object that knows how to create an iterator.","position":{"start":{"line":4225,"column":3,"offset":94360},"end":{"line":4225,"column":65,"offset":94422},"indent":[]}}],"position":{"start":{"line":4225,"column":1,"offset":94358},"end":{"line":4225,"column":65,"offset":94422},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"our","position":{"start":{"line":4227,"column":1,"offset":94424},"end":{"line":4227,"column":4,"offset":94427},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"iterator = iter(our","position":{"start":{"line":4227,"column":5,"offset":94428},"end":{"line":4227,"column":24,"offset":94447},"indent":[]}}],"position":{"start":{"line":4227,"column":4,"offset":94427},"end":{"line":4227,"column":25,"offset":94448},"indent":[]}},{"type":"text","value":"iterable)","position":{"start":{"line":4227,"column":25,"offset":94448},"end":{"line":4227,"column":34,"offset":94457},"indent":[]}}],"position":{"start":{"line":4227,"column":1,"offset":94424},"end":{"line":4227,"column":34,"offset":94457},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Our iterator is an object that can remember the state as we traverse through it.","position":{"start":{"line":4229,"column":3,"offset":94461},"end":{"line":4229,"column":83,"offset":94541},"indent":[]}}],"position":{"start":{"line":4229,"column":1,"offset":94459},"end":{"line":4229,"column":83,"offset":94541},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"We get the next object with \"next()\".","position":{"start":{"line":4231,"column":3,"offset":94545},"end":{"line":4231,"column":40,"offset":94582},"indent":[]}}],"position":{"start":{"line":4231,"column":1,"offset":94543},"end":{"line":4231,"column":40,"offset":94582},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"next(our_iterator) # => \"one\"","position":{"start":{"line":4233,"column":1,"offset":94584},"end":{"line":4233,"column":30,"offset":94613},"indent":[]}}],"position":{"start":{"line":4233,"column":1,"offset":94584},"end":{"line":4233,"column":30,"offset":94613},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"It maintains state as we iterate.","position":{"start":{"line":4235,"column":3,"offset":94617},"end":{"line":4235,"column":36,"offset":94650},"indent":[]}}],"position":{"start":{"line":4235,"column":1,"offset":94615},"end":{"line":4235,"column":36,"offset":94650},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"next(our","position":{"start":{"line":4237,"column":1,"offset":94652},"end":{"line":4237,"column":9,"offset":94660},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"iterator) # => \"two\"\nnext(our","position":{"start":{"line":4237,"column":10,"offset":94661},"end":{"line":4238,"column":9,"offset":94690},"indent":[1]}}],"position":{"start":{"line":4237,"column":9,"offset":94660},"end":{"line":4238,"column":10,"offset":94691},"indent":[1]}},{"type":"text","value":"iterator) # => \"three\"","position":{"start":{"line":4238,"column":10,"offset":94691},"end":{"line":4238,"column":32,"offset":94713},"indent":[]}}],"position":{"start":{"line":4237,"column":1,"offset":94652},"end":{"line":4238,"column":32,"offset":94713},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"After the iterator has returned all of its data, it raises a StopIteration exception","position":{"start":{"line":4240,"column":3,"offset":94717},"end":{"line":4240,"column":87,"offset":94801},"indent":[]}}],"position":{"start":{"line":4240,"column":1,"offset":94715},"end":{"line":4240,"column":87,"offset":94801},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"next(our_iterator) # Raises StopIteration","position":{"start":{"line":4242,"column":1,"offset":94803},"end":{"line":4242,"column":42,"offset":94844},"indent":[]}}],"position":{"start":{"line":4242,"column":1,"offset":94803},"end":{"line":4242,"column":42,"offset":94844},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"We can also loop over it, in fact, \"for\" does this implicitly!","position":{"start":{"line":4244,"column":3,"offset":94848},"end":{"line":4244,"column":65,"offset":94910},"indent":[]}}],"position":{"start":{"line":4244,"column":1,"offset":94846},"end":{"line":4244,"column":65,"offset":94910},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"our","position":{"start":{"line":4246,"column":1,"offset":94912},"end":{"line":4246,"column":4,"offset":94915},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"iterator = iter(our","position":{"start":{"line":4246,"column":5,"offset":94916},"end":{"line":4246,"column":24,"offset":94935},"indent":[]}}],"position":{"start":{"line":4246,"column":4,"offset":94915},"end":{"line":4246,"column":25,"offset":94936},"indent":[]}},{"type":"text","value":"iterable)\nfor i in our_iterator:\nprint(i) # Prints one, two, three","position":{"start":{"line":4246,"column":25,"offset":94936},"end":{"line":4248,"column":34,"offset":95002},"indent":[1,1]}}],"position":{"start":{"line":4246,"column":1,"offset":94912},"end":{"line":4248,"column":34,"offset":95002},"indent":[1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"You can grab all the elements of an iterable or iterator by calling list() on it.","position":{"start":{"line":4250,"column":3,"offset":95006},"end":{"line":4250,"column":84,"offset":95087},"indent":[]}}],"position":{"start":{"line":4250,"column":1,"offset":95004},"end":{"line":4250,"column":84,"offset":95087},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"list(our","position":{"start":{"line":4252,"column":1,"offset":95089},"end":{"line":4252,"column":9,"offset":95097},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"iterable) # => Returns ","position":{"start":{"line":4252,"column":10,"offset":95098},"end":{"line":4252,"column":33,"offset":95121},"indent":[]}},{"type":"linkReference","identifier":"\"one\", \"two\", \"three\"","label":"\"one\", \"two\", \"three\"","referenceType":"shortcut","children":[{"type":"text","value":"\"one\", \"two\", \"three\"","position":{"start":{"line":4252,"column":34,"offset":95122},"end":{"line":4252,"column":55,"offset":95143},"indent":[]}}],"position":{"start":{"line":4252,"column":33,"offset":95121},"end":{"line":4252,"column":56,"offset":95144},"indent":[]}},{"type":"text","value":"\nlist(our","position":{"start":{"line":4252,"column":56,"offset":95144},"end":{"line":4253,"column":9,"offset":95153},"indent":[1]}}],"position":{"start":{"line":4252,"column":9,"offset":95097},"end":{"line":4253,"column":10,"offset":95154},"indent":[1]}},{"type":"text","value":"iterator) # => Returns [] because state is saved","position":{"start":{"line":4253,"column":10,"offset":95154},"end":{"line":4253,"column":58,"offset":95202},"indent":[]}}],"position":{"start":{"line":4252,"column":1,"offset":95089},"end":{"line":4253,"column":58,"offset":95202},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"####################################################","position":{"start":{"line":4255,"column":1,"offset":95204},"end":{"line":4255,"column":53,"offset":95256},"indent":[]}}],"position":{"start":{"line":4255,"column":1,"offset":95204},"end":{"line":4255,"column":53,"offset":95256},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"4. Functions","position":{"start":{"line":4257,"column":4,"offset":95261},"end":{"line":4257,"column":16,"offset":95273},"indent":[]}}],"position":{"start":{"line":4257,"column":1,"offset":95258},"end":{"line":4257,"column":16,"offset":95273},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"####################################################","position":{"start":{"line":4259,"column":1,"offset":95275},"end":{"line":4259,"column":53,"offset":95327},"indent":[]}}],"position":{"start":{"line":4259,"column":1,"offset":95275},"end":{"line":4259,"column":53,"offset":95327},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Use \"def\" to create new functions","position":{"start":{"line":4261,"column":3,"offset":95331},"end":{"line":4261,"column":36,"offset":95364},"indent":[]}}],"position":{"start":{"line":4261,"column":1,"offset":95329},"end":{"line":4261,"column":36,"offset":95364},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"def add(x, y):\nprint(\"x is {} and y is {}\".format(x, y))\nreturn x + y # Return values with a return statement","position":{"start":{"line":4263,"column":1,"offset":95366},"end":{"line":4265,"column":53,"offset":95475},"indent":[1,1]}}],"position":{"start":{"line":4263,"column":1,"offset":95366},"end":{"line":4265,"column":53,"offset":95475},"indent":[1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Calling functions with parameters","position":{"start":{"line":4267,"column":3,"offset":95479},"end":{"line":4267,"column":36,"offset":95512},"indent":[]}}],"position":{"start":{"line":4267,"column":1,"offset":95477},"end":{"line":4267,"column":36,"offset":95512},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"add(5, 6) # => prints out \"x is 5 and y is 6\" and returns 11","position":{"start":{"line":4269,"column":1,"offset":95514},"end":{"line":4269,"column":61,"offset":95574},"indent":[]}}],"position":{"start":{"line":4269,"column":1,"offset":95514},"end":{"line":4269,"column":61,"offset":95574},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Another way to call functions is with keyword arguments","position":{"start":{"line":4271,"column":3,"offset":95578},"end":{"line":4271,"column":58,"offset":95633},"indent":[]}}],"position":{"start":{"line":4271,"column":1,"offset":95576},"end":{"line":4271,"column":58,"offset":95633},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"add(y=6, x=5) # Keyword arguments can arrive in any order.","position":{"start":{"line":4273,"column":1,"offset":95635},"end":{"line":4273,"column":59,"offset":95693},"indent":[]}}],"position":{"start":{"line":4273,"column":1,"offset":95635},"end":{"line":4273,"column":59,"offset":95693},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"You can define functions that take a variable number of","position":{"start":{"line":4275,"column":3,"offset":95697},"end":{"line":4275,"column":58,"offset":95752},"indent":[]}}],"position":{"start":{"line":4275,"column":1,"offset":95695},"end":{"line":4275,"column":58,"offset":95752},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"positional arguments","position":{"start":{"line":4277,"column":3,"offset":95756},"end":{"line":4277,"column":23,"offset":95776},"indent":[]}}],"position":{"start":{"line":4277,"column":1,"offset":95754},"end":{"line":4277,"column":23,"offset":95776},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"def varargs(","position":{"start":{"line":4279,"column":1,"offset":95778},"end":{"line":4279,"column":13,"offset":95790},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":4279,"column":13,"offset":95790},"end":{"line":4279,"column":15,"offset":95792},"indent":[]}},{"type":"text","value":"args):\nreturn args","position":{"start":{"line":4279,"column":15,"offset":95792},"end":{"line":4280,"column":12,"offset":95810},"indent":[1]}}],"position":{"start":{"line":4279,"column":1,"offset":95778},"end":{"line":4280,"column":12,"offset":95810},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"varargs(1, 2, 3) # => (1, 2, 3)","position":{"start":{"line":4282,"column":1,"offset":95812},"end":{"line":4282,"column":32,"offset":95843},"indent":[]}}],"position":{"start":{"line":4282,"column":1,"offset":95812},"end":{"line":4282,"column":32,"offset":95843},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"You can define functions that take a variable number of","position":{"start":{"line":4284,"column":3,"offset":95847},"end":{"line":4284,"column":58,"offset":95902},"indent":[]}}],"position":{"start":{"line":4284,"column":1,"offset":95845},"end":{"line":4284,"column":58,"offset":95902},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"keyword arguments, as well","position":{"start":{"line":4286,"column":3,"offset":95906},"end":{"line":4286,"column":29,"offset":95932},"indent":[]}}],"position":{"start":{"line":4286,"column":1,"offset":95904},"end":{"line":4286,"column":29,"offset":95932},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"def keyword_args(","position":{"start":{"line":4288,"column":1,"offset":95934},"end":{"line":4288,"column":18,"offset":95951},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":4288,"column":18,"offset":95951},"end":{"line":4288,"column":20,"offset":95953},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":4288,"column":20,"offset":95953},"end":{"line":4288,"column":22,"offset":95955},"indent":[]}},{"type":"text","value":"kwargs):\nreturn kwargs","position":{"start":{"line":4288,"column":22,"offset":95955},"end":{"line":4289,"column":14,"offset":95977},"indent":[1]}}],"position":{"start":{"line":4288,"column":1,"offset":95934},"end":{"line":4289,"column":14,"offset":95977},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Let's call it to see what happens","position":{"start":{"line":4291,"column":3,"offset":95981},"end":{"line":4291,"column":36,"offset":96014},"indent":[]}}],"position":{"start":{"line":4291,"column":1,"offset":95979},"end":{"line":4291,"column":36,"offset":96014},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"keyword_args(big=\"foot\", loch=\"ness\") # => {\"big\": \"foot\", \"loch\": \"ness\"}","position":{"start":{"line":4293,"column":1,"offset":96016},"end":{"line":4293,"column":75,"offset":96090},"indent":[]}}],"position":{"start":{"line":4293,"column":1,"offset":96016},"end":{"line":4293,"column":75,"offset":96090},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"You can do both at once, if you like","position":{"start":{"line":4295,"column":3,"offset":96094},"end":{"line":4295,"column":39,"offset":96130},"indent":[]}}],"position":{"start":{"line":4295,"column":1,"offset":96092},"end":{"line":4295,"column":39,"offset":96130},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"def all","position":{"start":{"line":4297,"column":1,"offset":96132},"end":{"line":4297,"column":8,"offset":96139},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"the","position":{"start":{"line":4297,"column":9,"offset":96140},"end":{"line":4297,"column":12,"offset":96143},"indent":[]}}],"position":{"start":{"line":4297,"column":8,"offset":96139},"end":{"line":4297,"column":13,"offset":96144},"indent":[]}},{"type":"text","value":"args(","position":{"start":{"line":4297,"column":13,"offset":96144},"end":{"line":4297,"column":18,"offset":96149},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":4297,"column":18,"offset":96149},"end":{"line":4297,"column":20,"offset":96151},"indent":[]}},{"type":"text","value":"args, ","position":{"start":{"line":4297,"column":20,"offset":96151},"end":{"line":4297,"column":26,"offset":96157},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":4297,"column":26,"offset":96157},"end":{"line":4297,"column":28,"offset":96159},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":4297,"column":28,"offset":96159},"end":{"line":4297,"column":30,"offset":96161},"indent":[]}},{"type":"text","value":"kwargs):\nprint(args)\nprint(kwargs)\n\"\"\"\nall","position":{"start":{"line":4297,"column":30,"offset":96161},"end":{"line":4301,"column":4,"offset":96203},"indent":[1,1,1,1]}},{"type":"emphasis","children":[{"type":"text","value":"the","position":{"start":{"line":4301,"column":5,"offset":96204},"end":{"line":4301,"column":8,"offset":96207},"indent":[]}}],"position":{"start":{"line":4301,"column":4,"offset":96203},"end":{"line":4301,"column":9,"offset":96208},"indent":[]}},{"type":"text","value":"args(1, 2, a=3, b=4) prints:\n(1, 2)\n{\"a\": 3, \"b\": 4}\n\"\"\"","position":{"start":{"line":4301,"column":9,"offset":96208},"end":{"line":4304,"column":4,"offset":96264},"indent":[1,1,1]}}],"position":{"start":{"line":4297,"column":1,"offset":96132},"end":{"line":4304,"column":4,"offset":96264},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"When calling functions, you can do the opposite of args/kwargs!","position":{"start":{"line":4306,"column":3,"offset":96268},"end":{"line":4306,"column":66,"offset":96331},"indent":[]}}],"position":{"start":{"line":4306,"column":1,"offset":96266},"end":{"line":4306,"column":66,"offset":96331},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Use ","position":{"start":{"line":4308,"column":3,"offset":96335},"end":{"line":4308,"column":7,"offset":96339},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":4308,"column":7,"offset":96339},"end":{"line":4308,"column":9,"offset":96341},"indent":[]}},{"type":"text","value":" to expand tuples and use ","position":{"start":{"line":4308,"column":9,"offset":96341},"end":{"line":4308,"column":35,"offset":96367},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":4308,"column":35,"offset":96367},"end":{"line":4308,"column":37,"offset":96369},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":4308,"column":37,"offset":96369},"end":{"line":4308,"column":39,"offset":96371},"indent":[]}},{"type":"text","value":" to expand kwargs.","position":{"start":{"line":4308,"column":39,"offset":96371},"end":{"line":4308,"column":57,"offset":96389},"indent":[]}}],"position":{"start":{"line":4308,"column":1,"offset":96333},"end":{"line":4308,"column":57,"offset":96389},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"args = (1, 2, 3, 4)\nkwargs = {\"a\": 3, \"b\": 4}\nall","position":{"start":{"line":4310,"column":1,"offset":96391},"end":{"line":4312,"column":4,"offset":96440},"indent":[1,1]}},{"type":"emphasis","children":[{"type":"text","value":"the","position":{"start":{"line":4312,"column":5,"offset":96441},"end":{"line":4312,"column":8,"offset":96444},"indent":[]}}],"position":{"start":{"line":4312,"column":4,"offset":96440},"end":{"line":4312,"column":9,"offset":96445},"indent":[]}},{"type":"text","value":"args(","position":{"start":{"line":4312,"column":9,"offset":96445},"end":{"line":4312,"column":14,"offset":96450},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"args) # equivalent to all","position":{"start":{"line":4312,"column":15,"offset":96451},"end":{"line":4312,"column":40,"offset":96476},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"the","position":{"start":{"line":4312,"column":41,"offset":96477},"end":{"line":4312,"column":44,"offset":96480},"indent":[]}}],"position":{"start":{"line":4312,"column":40,"offset":96476},"end":{"line":4312,"column":45,"offset":96481},"indent":[]}},{"type":"text","value":"args(1, 2, 3, 4)\nall","position":{"start":{"line":4312,"column":45,"offset":96481},"end":{"line":4313,"column":4,"offset":96501},"indent":[1]}},{"type":"emphasis","children":[{"type":"text","value":"the","position":{"start":{"line":4313,"column":5,"offset":96502},"end":{"line":4313,"column":8,"offset":96505},"indent":[]}}],"position":{"start":{"line":4313,"column":4,"offset":96501},"end":{"line":4313,"column":9,"offset":96506},"indent":[]}},{"type":"text","value":"args(\\","position":{"start":{"line":4313,"column":9,"offset":96506},"end":{"line":4313,"column":15,"offset":96512},"indent":[]}}],"position":{"start":{"line":4312,"column":14,"offset":96450},"end":{"line":4313,"column":16,"offset":96513},"indent":[1]}},{"type":"text","value":"*","position":{"start":{"line":4313,"column":16,"offset":96513},"end":{"line":4313,"column":18,"offset":96515},"indent":[]}},{"type":"text","value":"kwargs) # equivalent to all","position":{"start":{"line":4313,"column":18,"offset":96515},"end":{"line":4313,"column":45,"offset":96542},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"the","position":{"start":{"line":4313,"column":46,"offset":96543},"end":{"line":4313,"column":49,"offset":96546},"indent":[]}}],"position":{"start":{"line":4313,"column":45,"offset":96542},"end":{"line":4313,"column":50,"offset":96547},"indent":[]}},{"type":"text","value":"args(a=3, b=4)\nall","position":{"start":{"line":4313,"column":50,"offset":96547},"end":{"line":4314,"column":4,"offset":96565},"indent":[1]}},{"type":"emphasis","children":[{"type":"text","value":"the","position":{"start":{"line":4314,"column":5,"offset":96566},"end":{"line":4314,"column":8,"offset":96569},"indent":[]}}],"position":{"start":{"line":4314,"column":4,"offset":96565},"end":{"line":4314,"column":9,"offset":96570},"indent":[]}},{"type":"text","value":"args(","position":{"start":{"line":4314,"column":9,"offset":96570},"end":{"line":4314,"column":14,"offset":96575},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"args, \\","position":{"start":{"line":4314,"column":15,"offset":96576},"end":{"line":4314,"column":22,"offset":96583},"indent":[]}}],"position":{"start":{"line":4314,"column":14,"offset":96575},"end":{"line":4314,"column":23,"offset":96584},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":4314,"column":23,"offset":96584},"end":{"line":4314,"column":25,"offset":96586},"indent":[]}},{"type":"text","value":"kwargs) # equivalent to all","position":{"start":{"line":4314,"column":25,"offset":96586},"end":{"line":4314,"column":52,"offset":96613},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"the","position":{"start":{"line":4314,"column":53,"offset":96614},"end":{"line":4314,"column":56,"offset":96617},"indent":[]}}],"position":{"start":{"line":4314,"column":52,"offset":96613},"end":{"line":4314,"column":57,"offset":96618},"indent":[]}},{"type":"text","value":"args(1, 2, 3, 4, a=3, b=4)","position":{"start":{"line":4314,"column":57,"offset":96618},"end":{"line":4314,"column":83,"offset":96644},"indent":[]}}],"position":{"start":{"line":4310,"column":1,"offset":96391},"end":{"line":4314,"column":83,"offset":96644},"indent":[1,1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Returning multiple values (with tuple assignments)","position":{"start":{"line":4316,"column":3,"offset":96648},"end":{"line":4316,"column":53,"offset":96698},"indent":[]}}],"position":{"start":{"line":4316,"column":1,"offset":96646},"end":{"line":4316,"column":53,"offset":96698},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"def swap(x, y):\nreturn y, x # Return multiple values as a tuple without the parenthesis. # (Note: parenthesis have been excluded but can be included)","position":{"start":{"line":4318,"column":1,"offset":96700},"end":{"line":4319,"column":134,"offset":96849},"indent":[1]}}],"position":{"start":{"line":4318,"column":1,"offset":96700},"end":{"line":4319,"column":134,"offset":96849},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"x = 1\ny = 2\nx, y = swap(x, y) # => x = 2, y = 1","position":{"start":{"line":4321,"column":1,"offset":96851},"end":{"line":4323,"column":36,"offset":96898},"indent":[1,1]}}],"position":{"start":{"line":4321,"column":1,"offset":96851},"end":{"line":4323,"column":36,"offset":96898},"indent":[1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"(x, y) = swap(x,y) # Again parenthesis have been excluded but can be included.","position":{"start":{"line":4325,"column":3,"offset":96902},"end":{"line":4325,"column":81,"offset":96980},"indent":[]}}],"position":{"start":{"line":4325,"column":1,"offset":96900},"end":{"line":4325,"column":81,"offset":96980},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Function Scope","position":{"start":{"line":4327,"column":3,"offset":96984},"end":{"line":4327,"column":17,"offset":96998},"indent":[]}}],"position":{"start":{"line":4327,"column":1,"offset":96982},"end":{"line":4327,"column":17,"offset":96998},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"x = 5","position":{"start":{"line":4329,"column":1,"offset":97000},"end":{"line":4329,"column":6,"offset":97005},"indent":[]}}],"position":{"start":{"line":4329,"column":1,"offset":97000},"end":{"line":4329,"column":6,"offset":97005},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"def set_x(num): # Local var x not the same as global variable x\nx = num # => 43\nprint(x) # => 43","position":{"start":{"line":4331,"column":1,"offset":97007},"end":{"line":4333,"column":17,"offset":97103},"indent":[1,1]}}],"position":{"start":{"line":4331,"column":1,"offset":97007},"end":{"line":4333,"column":17,"offset":97103},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"def set","position":{"start":{"line":4335,"column":1,"offset":97105},"end":{"line":4335,"column":8,"offset":97112},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"global","position":{"start":{"line":4335,"column":9,"offset":97113},"end":{"line":4335,"column":15,"offset":97119},"indent":[]}}],"position":{"start":{"line":4335,"column":8,"offset":97112},"end":{"line":4335,"column":16,"offset":97120},"indent":[]}},{"type":"text","value":"x(num):\nglobal x\nprint(x) # => 5\nx = num # global var x is now set to 6\nprint(x) # => 6","position":{"start":{"line":4335,"column":16,"offset":97120},"end":{"line":4339,"column":16,"offset":97207},"indent":[1,1,1,1]}}],"position":{"start":{"line":4335,"column":1,"offset":97105},"end":{"line":4339,"column":16,"offset":97207},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"set","position":{"start":{"line":4341,"column":1,"offset":97209},"end":{"line":4341,"column":4,"offset":97212},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"x(43)\nset","position":{"start":{"line":4341,"column":5,"offset":97213},"end":{"line":4342,"column":4,"offset":97222},"indent":[1]}}],"position":{"start":{"line":4341,"column":4,"offset":97212},"end":{"line":4342,"column":5,"offset":97223},"indent":[1]}},{"type":"text","value":"global_x(6)","position":{"start":{"line":4342,"column":5,"offset":97223},"end":{"line":4342,"column":16,"offset":97234},"indent":[]}}],"position":{"start":{"line":4341,"column":1,"offset":97209},"end":{"line":4342,"column":16,"offset":97234},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Python has first class functions","position":{"start":{"line":4344,"column":3,"offset":97238},"end":{"line":4344,"column":35,"offset":97270},"indent":[]}}],"position":{"start":{"line":4344,"column":1,"offset":97236},"end":{"line":4344,"column":35,"offset":97270},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"def create_adder(x):\ndef adder(y):\nreturn x + y\nreturn adder","position":{"start":{"line":4346,"column":1,"offset":97272},"end":{"line":4349,"column":13,"offset":97332},"indent":[1,1,1]}}],"position":{"start":{"line":4346,"column":1,"offset":97272},"end":{"line":4349,"column":13,"offset":97332},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"add","position":{"start":{"line":4351,"column":1,"offset":97334},"end":{"line":4351,"column":4,"offset":97337},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"10 = create","position":{"start":{"line":4351,"column":5,"offset":97338},"end":{"line":4351,"column":16,"offset":97349},"indent":[]}}],"position":{"start":{"line":4351,"column":4,"offset":97337},"end":{"line":4351,"column":17,"offset":97350},"indent":[]}},{"type":"text","value":"adder(10)\nadd_10(3) # => 13","position":{"start":{"line":4351,"column":17,"offset":97350},"end":{"line":4352,"column":18,"offset":97377},"indent":[1]}}],"position":{"start":{"line":4351,"column":1,"offset":97334},"end":{"line":4352,"column":18,"offset":97377},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"There are also anonymous functions","position":{"start":{"line":4354,"column":3,"offset":97381},"end":{"line":4354,"column":37,"offset":97415},"indent":[]}}],"position":{"start":{"line":4354,"column":1,"offset":97379},"end":{"line":4354,"column":37,"offset":97415},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"(lambda x: x > 2)(3) # => True\n(lambda x, y: x ** 2 + y ** 2)(2, 1) # => 5","position":{"start":{"line":4356,"column":1,"offset":97417},"end":{"line":4357,"column":44,"offset":97491},"indent":[1]}}],"position":{"start":{"line":4356,"column":1,"offset":97417},"end":{"line":4357,"column":44,"offset":97491},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"There are built-in higher order functions","position":{"start":{"line":4359,"column":3,"offset":97495},"end":{"line":4359,"column":44,"offset":97536},"indent":[]}}],"position":{"start":{"line":4359,"column":1,"offset":97493},"end":{"line":4359,"column":44,"offset":97536},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"list(map(add_10, ","position":{"start":{"line":4361,"column":1,"offset":97538},"end":{"line":4361,"column":18,"offset":97555},"indent":[]}},{"type":"linkReference","identifier":"1, 2, 3","label":"1, 2, 3","referenceType":"shortcut","children":[{"type":"text","value":"1, 2, 3","position":{"start":{"line":4361,"column":19,"offset":97556},"end":{"line":4361,"column":26,"offset":97563},"indent":[]}}],"position":{"start":{"line":4361,"column":18,"offset":97555},"end":{"line":4361,"column":27,"offset":97564},"indent":[]}},{"type":"text","value":")) # => ","position":{"start":{"line":4361,"column":27,"offset":97564},"end":{"line":4361,"column":35,"offset":97572},"indent":[]}},{"type":"linkReference","identifier":"11, 12, 13","label":"11, 12, 13","referenceType":"shortcut","children":[{"type":"text","value":"11, 12, 13","position":{"start":{"line":4361,"column":36,"offset":97573},"end":{"line":4361,"column":46,"offset":97583},"indent":[]}}],"position":{"start":{"line":4361,"column":35,"offset":97572},"end":{"line":4361,"column":47,"offset":97584},"indent":[]}},{"type":"text","value":"\nlist(map(max, ","position":{"start":{"line":4361,"column":47,"offset":97584},"end":{"line":4362,"column":15,"offset":97599},"indent":[1]}},{"type":"linkReference","identifier":"1, 2, 3","label":"1, 2, 3","referenceType":"shortcut","children":[{"type":"text","value":"1, 2, 3","position":{"start":{"line":4362,"column":16,"offset":97600},"end":{"line":4362,"column":23,"offset":97607},"indent":[]}}],"position":{"start":{"line":4362,"column":15,"offset":97599},"end":{"line":4362,"column":24,"offset":97608},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":4362,"column":24,"offset":97608},"end":{"line":4362,"column":26,"offset":97610},"indent":[]}},{"type":"linkReference","identifier":"4, 2, 1","label":"4, 2, 1","referenceType":"shortcut","children":[{"type":"text","value":"4, 2, 1","position":{"start":{"line":4362,"column":27,"offset":97611},"end":{"line":4362,"column":34,"offset":97618},"indent":[]}}],"position":{"start":{"line":4362,"column":26,"offset":97610},"end":{"line":4362,"column":35,"offset":97619},"indent":[]}},{"type":"text","value":")) # => ","position":{"start":{"line":4362,"column":35,"offset":97619},"end":{"line":4362,"column":43,"offset":97627},"indent":[]}},{"type":"linkReference","identifier":"4, 2, 3","label":"4, 2, 3","referenceType":"shortcut","children":[{"type":"text","value":"4, 2, 3","position":{"start":{"line":4362,"column":44,"offset":97628},"end":{"line":4362,"column":51,"offset":97635},"indent":[]}}],"position":{"start":{"line":4362,"column":43,"offset":97627},"end":{"line":4362,"column":52,"offset":97636},"indent":[]}}],"position":{"start":{"line":4361,"column":1,"offset":97538},"end":{"line":4362,"column":52,"offset":97636},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"list(filter(lambda x: x > 5, ","position":{"start":{"line":4364,"column":1,"offset":97638},"end":{"line":4364,"column":30,"offset":97667},"indent":[]}},{"type":"linkReference","identifier":"3, 4, 5, 6, 7","label":"3, 4, 5, 6, 7","referenceType":"shortcut","children":[{"type":"text","value":"3, 4, 5, 6, 7","position":{"start":{"line":4364,"column":31,"offset":97668},"end":{"line":4364,"column":44,"offset":97681},"indent":[]}}],"position":{"start":{"line":4364,"column":30,"offset":97667},"end":{"line":4364,"column":45,"offset":97682},"indent":[]}},{"type":"text","value":")) # => ","position":{"start":{"line":4364,"column":45,"offset":97682},"end":{"line":4364,"column":53,"offset":97690},"indent":[]}},{"type":"linkReference","identifier":"6, 7","label":"6, 7","referenceType":"shortcut","children":[{"type":"text","value":"6, 7","position":{"start":{"line":4364,"column":54,"offset":97691},"end":{"line":4364,"column":58,"offset":97695},"indent":[]}}],"position":{"start":{"line":4364,"column":53,"offset":97690},"end":{"line":4364,"column":59,"offset":97696},"indent":[]}}],"position":{"start":{"line":4364,"column":1,"offset":97638},"end":{"line":4364,"column":59,"offset":97696},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"We can use list comprehensions for nice maps and filters","position":{"start":{"line":4366,"column":3,"offset":97700},"end":{"line":4366,"column":59,"offset":97756},"indent":[]}}],"position":{"start":{"line":4366,"column":1,"offset":97698},"end":{"line":4366,"column":59,"offset":97756},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"List comprehension stores the output as a list which can itself be a nested list","position":{"start":{"line":4368,"column":3,"offset":97760},"end":{"line":4368,"column":83,"offset":97840},"indent":[]}}],"position":{"start":{"line":4368,"column":1,"offset":97758},"end":{"line":4368,"column":83,"offset":97840},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"[add_10(i) for i in ","position":{"start":{"line":4370,"column":1,"offset":97842},"end":{"line":4370,"column":21,"offset":97862},"indent":[]}},{"type":"linkReference","identifier":"1, 2, 3","label":"1, 2, 3","referenceType":"shortcut","children":[{"type":"text","value":"1, 2, 3","position":{"start":{"line":4370,"column":22,"offset":97863},"end":{"line":4370,"column":29,"offset":97870},"indent":[]}}],"position":{"start":{"line":4370,"column":21,"offset":97862},"end":{"line":4370,"column":30,"offset":97871},"indent":[]}},{"type":"text","value":"] # => ","position":{"start":{"line":4370,"column":30,"offset":97871},"end":{"line":4370,"column":37,"offset":97878},"indent":[]}},{"type":"linkReference","identifier":"11, 12, 13","label":"11, 12, 13","referenceType":"shortcut","children":[{"type":"text","value":"11, 12, 13","position":{"start":{"line":4370,"column":38,"offset":97879},"end":{"line":4370,"column":48,"offset":97889},"indent":[]}}],"position":{"start":{"line":4370,"column":37,"offset":97878},"end":{"line":4370,"column":49,"offset":97890},"indent":[]}},{"type":"text","value":"\n[x for x in ","position":{"start":{"line":4370,"column":49,"offset":97890},"end":{"line":4371,"column":13,"offset":97903},"indent":[1]}},{"type":"linkReference","identifier":"3, 4, 5, 6, 7","label":"3, 4, 5, 6, 7","referenceType":"shortcut","children":[{"type":"text","value":"3, 4, 5, 6, 7","position":{"start":{"line":4371,"column":14,"offset":97904},"end":{"line":4371,"column":27,"offset":97917},"indent":[]}}],"position":{"start":{"line":4371,"column":13,"offset":97903},"end":{"line":4371,"column":28,"offset":97918},"indent":[]}},{"type":"text","value":" if x > 5] # => ","position":{"start":{"line":4371,"column":28,"offset":97918},"end":{"line":4371,"column":44,"offset":97934},"indent":[]}},{"type":"linkReference","identifier":"6, 7","label":"6, 7","referenceType":"shortcut","children":[{"type":"text","value":"6, 7","position":{"start":{"line":4371,"column":45,"offset":97935},"end":{"line":4371,"column":49,"offset":97939},"indent":[]}}],"position":{"start":{"line":4371,"column":44,"offset":97934},"end":{"line":4371,"column":50,"offset":97940},"indent":[]}}],"position":{"start":{"line":4370,"column":1,"offset":97842},"end":{"line":4371,"column":50,"offset":97940},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"You can construct set and dict comprehensions as well.","position":{"start":{"line":4373,"column":3,"offset":97944},"end":{"line":4373,"column":57,"offset":97998},"indent":[]}}],"position":{"start":{"line":4373,"column":1,"offset":97942},"end":{"line":4373,"column":57,"offset":97998},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"{x for x in 'abcddeef' if x not in 'abc'} # => {'d', 'e', 'f'}\n{x: x","position":{"start":{"line":4375,"column":1,"offset":98000},"end":{"line":4376,"column":6,"offset":98068},"indent":[1]}},{"type":"text","value":"*","position":{"start":{"line":4376,"column":6,"offset":98068},"end":{"line":4376,"column":8,"offset":98070},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":4376,"column":8,"offset":98070},"end":{"line":4376,"column":10,"offset":98072},"indent":[]}},{"type":"text","value":"2 for x in range(5)} # => {0: 0, 1: 1, 2: 4, 3: 9, 4: 16}","position":{"start":{"line":4376,"column":10,"offset":98072},"end":{"line":4376,"column":67,"offset":98129},"indent":[]}}],"position":{"start":{"line":4375,"column":1,"offset":98000},"end":{"line":4376,"column":67,"offset":98129},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"####################################################","position":{"start":{"line":4378,"column":1,"offset":98131},"end":{"line":4378,"column":53,"offset":98183},"indent":[]}}],"position":{"start":{"line":4378,"column":1,"offset":98131},"end":{"line":4378,"column":53,"offset":98183},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"5. Modules","position":{"start":{"line":4380,"column":4,"offset":98188},"end":{"line":4380,"column":14,"offset":98198},"indent":[]}}],"position":{"start":{"line":4380,"column":1,"offset":98185},"end":{"line":4380,"column":14,"offset":98198},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"####################################################","position":{"start":{"line":4382,"column":1,"offset":98200},"end":{"line":4382,"column":53,"offset":98252},"indent":[]}}],"position":{"start":{"line":4382,"column":1,"offset":98200},"end":{"line":4382,"column":53,"offset":98252},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"You can import modules","position":{"start":{"line":4384,"column":3,"offset":98256},"end":{"line":4384,"column":25,"offset":98278},"indent":[]}}],"position":{"start":{"line":4384,"column":1,"offset":98254},"end":{"line":4384,"column":25,"offset":98278},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"import math\nprint(math.sqrt(16)) # => 4.0","position":{"start":{"line":4386,"column":1,"offset":98280},"end":{"line":4387,"column":30,"offset":98321},"indent":[1]}}],"position":{"start":{"line":4386,"column":1,"offset":98280},"end":{"line":4387,"column":30,"offset":98321},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"You can get specific functions from a module","position":{"start":{"line":4389,"column":3,"offset":98325},"end":{"line":4389,"column":47,"offset":98369},"indent":[]}}],"position":{"start":{"line":4389,"column":1,"offset":98323},"end":{"line":4389,"column":47,"offset":98369},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"from math import ceil, floor\nprint(ceil(3.7)) # => 4.0\nprint(floor(3.7)) # => 3.0","position":{"start":{"line":4391,"column":1,"offset":98371},"end":{"line":4393,"column":27,"offset":98452},"indent":[1,1]}}],"position":{"start":{"line":4391,"column":1,"offset":98371},"end":{"line":4393,"column":27,"offset":98452},"indent":[1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"You can import all functions from a module.","position":{"start":{"line":4395,"column":3,"offset":98456},"end":{"line":4395,"column":46,"offset":98499},"indent":[]}}],"position":{"start":{"line":4395,"column":1,"offset":98454},"end":{"line":4395,"column":46,"offset":98499},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Warning: this is not recommended","position":{"start":{"line":4397,"column":3,"offset":98503},"end":{"line":4397,"column":35,"offset":98535},"indent":[]}}],"position":{"start":{"line":4397,"column":1,"offset":98501},"end":{"line":4397,"column":35,"offset":98535},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"from math import ","position":{"start":{"line":4399,"column":1,"offset":98537},"end":{"line":4399,"column":18,"offset":98554},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":4399,"column":18,"offset":98554},"end":{"line":4399,"column":20,"offset":98556},"indent":[]}}],"position":{"start":{"line":4399,"column":1,"offset":98537},"end":{"line":4399,"column":20,"offset":98556},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"You can shorten module names","position":{"start":{"line":4401,"column":3,"offset":98560},"end":{"line":4401,"column":31,"offset":98588},"indent":[]}}],"position":{"start":{"line":4401,"column":1,"offset":98558},"end":{"line":4401,"column":31,"offset":98588},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"import math as m\nmath.sqrt(16) == m.sqrt(16) # => True","position":{"start":{"line":4403,"column":1,"offset":98590},"end":{"line":4404,"column":38,"offset":98644},"indent":[1]}}],"position":{"start":{"line":4403,"column":1,"offset":98590},"end":{"line":4404,"column":38,"offset":98644},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Python modules are just ordinary Python files. You","position":{"start":{"line":4406,"column":3,"offset":98648},"end":{"line":4406,"column":53,"offset":98698},"indent":[]}}],"position":{"start":{"line":4406,"column":1,"offset":98646},"end":{"line":4406,"column":53,"offset":98698},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"can write your own, and import them. The name of the","position":{"start":{"line":4408,"column":3,"offset":98702},"end":{"line":4408,"column":55,"offset":98754},"indent":[]}}],"position":{"start":{"line":4408,"column":1,"offset":98700},"end":{"line":4408,"column":55,"offset":98754},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"module is the same as the name of the file.","position":{"start":{"line":4410,"column":3,"offset":98758},"end":{"line":4410,"column":46,"offset":98801},"indent":[]}}],"position":{"start":{"line":4410,"column":1,"offset":98756},"end":{"line":4410,"column":46,"offset":98801},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"You can find out which functions and attributes","position":{"start":{"line":4412,"column":3,"offset":98805},"end":{"line":4412,"column":50,"offset":98852},"indent":[]}}],"position":{"start":{"line":4412,"column":1,"offset":98803},"end":{"line":4412,"column":50,"offset":98852},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"are defined in a module.","position":{"start":{"line":4414,"column":3,"offset":98856},"end":{"line":4414,"column":27,"offset":98880},"indent":[]}}],"position":{"start":{"line":4414,"column":1,"offset":98854},"end":{"line":4414,"column":27,"offset":98880},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"import math\ndir(math)","position":{"start":{"line":4416,"column":1,"offset":98882},"end":{"line":4417,"column":10,"offset":98903},"indent":[1]}}],"position":{"start":{"line":4416,"column":1,"offset":98882},"end":{"line":4417,"column":10,"offset":98903},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"If you have a Python script named math.py in the same","position":{"start":{"line":4419,"column":3,"offset":98907},"end":{"line":4419,"column":56,"offset":98960},"indent":[]}}],"position":{"start":{"line":4419,"column":1,"offset":98905},"end":{"line":4419,"column":56,"offset":98960},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"folder as your current script, the file math.py will","position":{"start":{"line":4421,"column":3,"offset":98964},"end":{"line":4421,"column":55,"offset":99016},"indent":[]}}],"position":{"start":{"line":4421,"column":1,"offset":98962},"end":{"line":4421,"column":55,"offset":99016},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"be loaded instead of the built-in Python module.","position":{"start":{"line":4423,"column":3,"offset":99020},"end":{"line":4423,"column":51,"offset":99068},"indent":[]}}],"position":{"start":{"line":4423,"column":1,"offset":99018},"end":{"line":4423,"column":51,"offset":99068},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"This happens because the local folder has priority","position":{"start":{"line":4425,"column":3,"offset":99072},"end":{"line":4425,"column":53,"offset":99122},"indent":[]}}],"position":{"start":{"line":4425,"column":1,"offset":99070},"end":{"line":4425,"column":53,"offset":99122},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"over Python's built-in libraries.","position":{"start":{"line":4427,"column":3,"offset":99126},"end":{"line":4427,"column":36,"offset":99159},"indent":[]}}],"position":{"start":{"line":4427,"column":1,"offset":99124},"end":{"line":4427,"column":36,"offset":99159},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"####################################################","position":{"start":{"line":4429,"column":1,"offset":99161},"end":{"line":4429,"column":53,"offset":99213},"indent":[]}}],"position":{"start":{"line":4429,"column":1,"offset":99161},"end":{"line":4429,"column":53,"offset":99213},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"6. Classes","position":{"start":{"line":4431,"column":4,"offset":99218},"end":{"line":4431,"column":14,"offset":99228},"indent":[]}}],"position":{"start":{"line":4431,"column":1,"offset":99215},"end":{"line":4431,"column":14,"offset":99228},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"####################################################","position":{"start":{"line":4433,"column":1,"offset":99230},"end":{"line":4433,"column":53,"offset":99282},"indent":[]}}],"position":{"start":{"line":4433,"column":1,"offset":99230},"end":{"line":4433,"column":53,"offset":99282},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"We use the \"class\" statement to create a class","position":{"start":{"line":4435,"column":3,"offset":99286},"end":{"line":4435,"column":49,"offset":99332},"indent":[]}}],"position":{"start":{"line":4435,"column":1,"offset":99284},"end":{"line":4435,"column":49,"offset":99332},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"class Human:","position":{"start":{"line":4437,"column":1,"offset":99334},"end":{"line":4437,"column":13,"offset":99346},"indent":[]}}],"position":{"start":{"line":4437,"column":1,"offset":99334},"end":{"line":4437,"column":13,"offset":99346},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"# A class attribute. It is shared by all instances of this class\nspecies = \"H. sapiens\"\n\n# Basic initializer, this is called when this class is instantiated.\n# Note that the double leading and trailing underscores denote objects\n# or attributes that are used by Python but that live in user-controlled\n# namespaces. Methods(or objects or attributes) like: __init__, __str__,\n# __repr__ etc. are called special methods (or sometimes called dunder methods)\n# You should not invent such names on your own.\ndef __init__(self, name):\n    # Assign the argument to the instance's name attribute\n    self.name = name\n\n    # Initialize property\n    self._age = 0\n\n# An instance method. All methods take \"self\" as the first argument\ndef say(self, msg):\n    print(\"{name}: {message}\".format(name=self.name, message=msg))\n\n# Another instance method\ndef sing(self):\n    return 'yo... yo... microphone check... one two... one two...'\n\n# A class method is shared among all instances\n# They are called with the calling class as the first argument\n@classmethod\ndef get_species(cls):\n    return cls.species\n\n# A static method is called without a class or instance reference\n@staticmethod\ndef grunt():\n    return \"*grunt*\"\n\n# A property is just like a getter.\n# It turns the method age() into an read-only attribute of the same name.\n# There's no need to write trivial getters and setters in Python, though.\n@property\ndef age(self):\n    return self._age\n\n# This allows the property to be set\n@age.setter\ndef age(self, age):\n    self._age = age\n\n# This allows the property to be deleted\n@age.deleter\ndef age(self):\n    del self._age","position":{"start":{"line":4439,"column":1,"offset":99348},"end":{"line":4489,"column":22,"offset":101128},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"When a Python interpreter reads a source file it executes all its code.","position":{"start":{"line":4491,"column":3,"offset":101132},"end":{"line":4491,"column":74,"offset":101203},"indent":[]}}],"position":{"start":{"line":4491,"column":1,"offset":101130},"end":{"line":4491,"column":74,"offset":101203},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"This ","position":{"start":{"line":4493,"column":3,"offset":101207},"end":{"line":4493,"column":8,"offset":101212},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"name","position":{"start":{"line":4493,"column":10,"offset":101214},"end":{"line":4493,"column":14,"offset":101218},"indent":[]}}],"position":{"start":{"line":4493,"column":8,"offset":101212},"end":{"line":4493,"column":16,"offset":101220},"indent":[]}},{"type":"text","value":" check makes sure this code block is only executed when this","position":{"start":{"line":4493,"column":16,"offset":101220},"end":{"line":4493,"column":76,"offset":101280},"indent":[]}}],"position":{"start":{"line":4493,"column":1,"offset":101205},"end":{"line":4493,"column":76,"offset":101280},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"module is the main program.","position":{"start":{"line":4495,"column":3,"offset":101284},"end":{"line":4495,"column":30,"offset":101311},"indent":[]}}],"position":{"start":{"line":4495,"column":1,"offset":101282},"end":{"line":4495,"column":30,"offset":101311},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"if ","position":{"start":{"line":4497,"column":1,"offset":101313},"end":{"line":4497,"column":4,"offset":101316},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"name","position":{"start":{"line":4497,"column":6,"offset":101318},"end":{"line":4497,"column":10,"offset":101322},"indent":[]}}],"position":{"start":{"line":4497,"column":4,"offset":101316},"end":{"line":4497,"column":12,"offset":101324},"indent":[]}},{"type":"text","value":" == '","position":{"start":{"line":4497,"column":12,"offset":101324},"end":{"line":4497,"column":17,"offset":101329},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"main","position":{"start":{"line":4497,"column":19,"offset":101331},"end":{"line":4497,"column":23,"offset":101335},"indent":[]}}],"position":{"start":{"line":4497,"column":17,"offset":101329},"end":{"line":4497,"column":25,"offset":101337},"indent":[]}},{"type":"text","value":"': # Instantiate a class\ni = Human(name=\"Ian\")\ni.say(\"hi\") # \"Ian: hi\"\nj = Human(\"Joel\")\nj.say(\"hello\") # \"Joel: hello\" # i and j are instances of type Human, or in other words: they are Human objects","position":{"start":{"line":4497,"column":25,"offset":101337},"end":{"line":4501,"column":112,"offset":101537},"indent":[1,1,1,1]}}],"position":{"start":{"line":4497,"column":1,"offset":101313},"end":{"line":4501,"column":112,"offset":101537},"indent":[1,1,1,1]}},{"type":"code","lang":null,"meta":null,"value":"# Call our class method\ni.say(i.get_species())          # \"Ian: H. sapiens\"\n# Change the shared attribute\nHuman.species = \"H. neanderthalensis\"\ni.say(i.get_species())          # => \"Ian: H. neanderthalensis\"\nj.say(j.get_species())          # => \"Joel: H. neanderthalensis\"\n\n# Call the static method\nprint(Human.grunt())            # => \"*grunt*\"\n\n# Cannot call static method with instance of object\n# because i.grunt() will automatically put \"self\" (the object i) as an argument\nprint(i.grunt())                # => TypeError: grunt() takes 0 positional arguments but 1 was given\n\n# Update the property for this instance\ni.age = 42\n# Get the property\ni.say(i.age)                    # => \"Ian: 42\"\nj.say(j.age)                    # => \"Joel: 0\"\n# Delete the property\ndel i.age\n# i.age                         # => this would raise an AttributeError","position":{"start":{"line":4503,"column":1,"offset":101539},"end":{"line":4524,"column":76,"offset":102463},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"####################################################","position":{"start":{"line":4526,"column":1,"offset":102465},"end":{"line":4526,"column":53,"offset":102517},"indent":[]}}],"position":{"start":{"line":4526,"column":1,"offset":102465},"end":{"line":4526,"column":53,"offset":102517},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"6.1 Inheritance","position":{"start":{"line":4528,"column":4,"offset":102522},"end":{"line":4528,"column":19,"offset":102537},"indent":[]}}],"position":{"start":{"line":4528,"column":1,"offset":102519},"end":{"line":4528,"column":19,"offset":102537},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"####################################################","position":{"start":{"line":4530,"column":1,"offset":102539},"end":{"line":4530,"column":53,"offset":102591},"indent":[]}}],"position":{"start":{"line":4530,"column":1,"offset":102539},"end":{"line":4530,"column":53,"offset":102591},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Inheritance allows new child classes to be defined that inherit methods and","position":{"start":{"line":4532,"column":3,"offset":102595},"end":{"line":4532,"column":78,"offset":102670},"indent":[]}}],"position":{"start":{"line":4532,"column":1,"offset":102593},"end":{"line":4532,"column":78,"offset":102670},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"variables from their parent class.","position":{"start":{"line":4534,"column":3,"offset":102674},"end":{"line":4534,"column":37,"offset":102708},"indent":[]}}],"position":{"start":{"line":4534,"column":1,"offset":102672},"end":{"line":4534,"column":37,"offset":102708},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Using the Human class defined above as the base or parent class, we can","position":{"start":{"line":4536,"column":3,"offset":102712},"end":{"line":4536,"column":74,"offset":102783},"indent":[]}}],"position":{"start":{"line":4536,"column":1,"offset":102710},"end":{"line":4536,"column":74,"offset":102783},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"define a child class, Superhero, which inherits the class variables like","position":{"start":{"line":4538,"column":3,"offset":102787},"end":{"line":4538,"column":75,"offset":102859},"indent":[]}}],"position":{"start":{"line":4538,"column":1,"offset":102785},"end":{"line":4538,"column":75,"offset":102859},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"\"species\", \"name\", and \"age\", as well as methods, like \"sing\" and \"grunt\"","position":{"start":{"line":4540,"column":3,"offset":102863},"end":{"line":4540,"column":76,"offset":102936},"indent":[]}}],"position":{"start":{"line":4540,"column":1,"offset":102861},"end":{"line":4540,"column":76,"offset":102936},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"from the Human class, but can also have its own unique properties.","position":{"start":{"line":4542,"column":3,"offset":102940},"end":{"line":4542,"column":69,"offset":103006},"indent":[]}}],"position":{"start":{"line":4542,"column":1,"offset":102938},"end":{"line":4542,"column":69,"offset":103006},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"To take advantage of modularization by file you could place the classes above in their own files,","position":{"start":{"line":4544,"column":3,"offset":103010},"end":{"line":4544,"column":100,"offset":103107},"indent":[]}}],"position":{"start":{"line":4544,"column":1,"offset":103008},"end":{"line":4544,"column":100,"offset":103107},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"say, human.py","position":{"start":{"line":4546,"column":3,"offset":103111},"end":{"line":4546,"column":16,"offset":103124},"indent":[]}}],"position":{"start":{"line":4546,"column":1,"offset":103109},"end":{"line":4546,"column":16,"offset":103124},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"To import functions from other files use the following format","position":{"start":{"line":4548,"column":3,"offset":103128},"end":{"line":4548,"column":64,"offset":103189},"indent":[]}}],"position":{"start":{"line":4548,"column":1,"offset":103126},"end":{"line":4548,"column":64,"offset":103189},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"from \"filename-without-extension\" import \"function-or-class\"","position":{"start":{"line":4550,"column":3,"offset":103193},"end":{"line":4550,"column":63,"offset":103253},"indent":[]}}],"position":{"start":{"line":4550,"column":1,"offset":103191},"end":{"line":4550,"column":63,"offset":103253},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"from human import Human","position":{"start":{"line":4552,"column":1,"offset":103255},"end":{"line":4552,"column":24,"offset":103278},"indent":[]}}],"position":{"start":{"line":4552,"column":1,"offset":103255},"end":{"line":4552,"column":24,"offset":103278},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Specify the parent class(es) as parameters to the class definition","position":{"start":{"line":4554,"column":3,"offset":103282},"end":{"line":4554,"column":69,"offset":103348},"indent":[]}}],"position":{"start":{"line":4554,"column":1,"offset":103280},"end":{"line":4554,"column":69,"offset":103348},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"class Superhero(Human):","position":{"start":{"line":4556,"column":1,"offset":103350},"end":{"line":4556,"column":24,"offset":103373},"indent":[]}}],"position":{"start":{"line":4556,"column":1,"offset":103350},"end":{"line":4556,"column":24,"offset":103373},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"# If the child class should inherit all of the parent's definitions without\n# any modifications, you can just use the \"pass\" keyword (and nothing else)\n# but in this case it is commented out to allow for a unique child class:\n# pass\n\n# Child classes can override their parents' attributes\nspecies = 'Superhuman'\n\n# Children automatically inherit their parent class's constructor including\n# its arguments, but can also define additional arguments or definitions\n# and override its methods such as the class constructor.\n# This constructor inherits the \"name\" argument from the \"Human\" class and\n# adds the \"superpower\" and \"movie\" arguments:\ndef __init__(self, name, movie=False,\n             superpowers=[\"super strength\", \"bulletproofing\"]):\n\n    # add additional class attributes:\n    self.fictional = True\n    self.movie = movie\n    # be aware of mutable default values, since defaults are shared\n    self.superpowers = superpowers\n\n    # The \"super\" function lets you access the parent class's methods\n    # that are overridden by the child, in this case, the __init__ method.\n    # This calls the parent class constructor:\n    super().__init__(name)\n\n# override the sing method\ndef sing(self):\n    return 'Dun, dun, DUN!'\n\n# add an additional instance method\ndef boast(self):\n    for power in self.superpowers:\n        print(\"I wield the power of {pow}!\".format(pow=power))","position":{"start":{"line":4558,"column":1,"offset":103375},"end":{"line":4592,"column":67,"offset":104870},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"if ","position":{"start":{"line":4594,"column":1,"offset":104872},"end":{"line":4594,"column":4,"offset":104875},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"name","position":{"start":{"line":4594,"column":6,"offset":104877},"end":{"line":4594,"column":10,"offset":104881},"indent":[]}}],"position":{"start":{"line":4594,"column":4,"offset":104875},"end":{"line":4594,"column":12,"offset":104883},"indent":[]}},{"type":"text","value":" == '","position":{"start":{"line":4594,"column":12,"offset":104883},"end":{"line":4594,"column":17,"offset":104888},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"main","position":{"start":{"line":4594,"column":19,"offset":104890},"end":{"line":4594,"column":23,"offset":104894},"indent":[]}}],"position":{"start":{"line":4594,"column":17,"offset":104888},"end":{"line":4594,"column":25,"offset":104896},"indent":[]}},{"type":"text","value":"':\nsup = Superhero(name=\"Tick\")","position":{"start":{"line":4594,"column":25,"offset":104896},"end":{"line":4595,"column":29,"offset":104927},"indent":[1]}}],"position":{"start":{"line":4594,"column":1,"offset":104872},"end":{"line":4595,"column":29,"offset":104927},"indent":[1]}},{"type":"code","lang":null,"meta":null,"value":"# Instance type checks\nif isinstance(sup, Human):\n    print('I am human')\nif type(sup) is Superhero:\n    print('I am a superhero')\n\n# Get the Method Resolution search Order used by both getattr() and super()\n# This attribute is dynamic and can be updated\nprint(Superhero.__mro__)    # => (<class '__main__.Superhero'>,\n                            # => <class 'human.Human'>, <class 'object'>)\n\n# Calls parent method but uses its own class attribute\nprint(sup.get_species())    # => Superhuman\n\n# Calls overridden method\nprint(sup.sing())           # => Dun, dun, DUN!\n\n# Calls method from Human\nsup.say('Spoon')            # => Tick: Spoon\n\n# Call method that exists only in Superhero\nsup.boast()                 # => I wield the power of super strength!\n                            # => I wield the power of bulletproofing!\n\n# Inherited class attribute\nsup.age = 31\nprint(sup.age)              # => 31\n\n# Attribute that only exists within Superhero\nprint('Am I Oscar eligible? ' + str(sup.movie))","position":{"start":{"line":4597,"column":1,"offset":104929},"end":{"line":4626,"column":52,"offset":106018},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"####################################################","position":{"start":{"line":4628,"column":1,"offset":106020},"end":{"line":4628,"column":53,"offset":106072},"indent":[]}}],"position":{"start":{"line":4628,"column":1,"offset":106020},"end":{"line":4628,"column":53,"offset":106072},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"6.2 Multiple Inheritance","position":{"start":{"line":4630,"column":4,"offset":106077},"end":{"line":4630,"column":28,"offset":106101},"indent":[]}}],"position":{"start":{"line":4630,"column":1,"offset":106074},"end":{"line":4630,"column":28,"offset":106101},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"####################################################","position":{"start":{"line":4632,"column":1,"offset":106103},"end":{"line":4632,"column":53,"offset":106155},"indent":[]}}],"position":{"start":{"line":4632,"column":1,"offset":106103},"end":{"line":4632,"column":53,"offset":106155},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Another class definition","position":{"start":{"line":4634,"column":3,"offset":106159},"end":{"line":4634,"column":27,"offset":106183},"indent":[]}}],"position":{"start":{"line":4634,"column":1,"offset":106157},"end":{"line":4634,"column":27,"offset":106183},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"bat.py","position":{"start":{"line":4636,"column":3,"offset":106187},"end":{"line":4636,"column":9,"offset":106193},"indent":[]}}],"position":{"start":{"line":4636,"column":1,"offset":106185},"end":{"line":4636,"column":9,"offset":106193},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"class Bat:","position":{"start":{"line":4638,"column":1,"offset":106195},"end":{"line":4638,"column":11,"offset":106205},"indent":[]}}],"position":{"start":{"line":4638,"column":1,"offset":106195},"end":{"line":4638,"column":11,"offset":106205},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"species = 'Baty'\n\ndef __init__(self, can_fly=True):\n    self.fly = can_fly\n\n# This class also has a say method\ndef say(self, msg):\n    msg = '... ... ...'\n    return msg\n\n# And its own method as well\ndef sonar(self):\n    return '))) ... ((('","position":{"start":{"line":4640,"column":1,"offset":106207},"end":{"line":4652,"column":29,"offset":106488},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"if ","position":{"start":{"line":4654,"column":1,"offset":106490},"end":{"line":4654,"column":4,"offset":106493},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"name","position":{"start":{"line":4654,"column":6,"offset":106495},"end":{"line":4654,"column":10,"offset":106499},"indent":[]}}],"position":{"start":{"line":4654,"column":4,"offset":106493},"end":{"line":4654,"column":12,"offset":106501},"indent":[]}},{"type":"text","value":" == '","position":{"start":{"line":4654,"column":12,"offset":106501},"end":{"line":4654,"column":17,"offset":106506},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"main","position":{"start":{"line":4654,"column":19,"offset":106508},"end":{"line":4654,"column":23,"offset":106512},"indent":[]}}],"position":{"start":{"line":4654,"column":17,"offset":106506},"end":{"line":4654,"column":25,"offset":106514},"indent":[]}},{"type":"text","value":"':\nb = Bat()\nprint(b.say('hello'))\nprint(b.fly)","position":{"start":{"line":4654,"column":25,"offset":106514},"end":{"line":4657,"column":13,"offset":106561},"indent":[1,1,1]}}],"position":{"start":{"line":4654,"column":1,"offset":106490},"end":{"line":4657,"column":13,"offset":106561},"indent":[1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"And yet another class definition that inherits from Superhero and Bat","position":{"start":{"line":4659,"column":3,"offset":106565},"end":{"line":4659,"column":72,"offset":106634},"indent":[]}}],"position":{"start":{"line":4659,"column":1,"offset":106563},"end":{"line":4659,"column":72,"offset":106634},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"superhero.py","position":{"start":{"line":4661,"column":3,"offset":106638},"end":{"line":4661,"column":15,"offset":106650},"indent":[]}}],"position":{"start":{"line":4661,"column":1,"offset":106636},"end":{"line":4661,"column":15,"offset":106650},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"from superhero import Superhero\nfrom bat import Bat","position":{"start":{"line":4663,"column":1,"offset":106652},"end":{"line":4664,"column":20,"offset":106703},"indent":[1]}}],"position":{"start":{"line":4663,"column":1,"offset":106652},"end":{"line":4664,"column":20,"offset":106703},"indent":[1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Define Batman as a child that inherits from both Superhero and Bat","position":{"start":{"line":4666,"column":3,"offset":106707},"end":{"line":4666,"column":69,"offset":106773},"indent":[]}}],"position":{"start":{"line":4666,"column":1,"offset":106705},"end":{"line":4666,"column":69,"offset":106773},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"class Batman(Superhero, Bat):","position":{"start":{"line":4668,"column":1,"offset":106775},"end":{"line":4668,"column":30,"offset":106804},"indent":[]}}],"position":{"start":{"line":4668,"column":1,"offset":106775},"end":{"line":4668,"column":30,"offset":106804},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"def __init__(self, *args, **kwargs):\n    # Typically to inherit attributes you have to call super:\n    # super(Batman, self).__init__(*args, **kwargs)\n    # However we are dealing with multiple inheritance here, and super()\n    # only works with the next base class in the MRO list.\n    # So instead we explicitly call __init__ for all ancestors.\n    # The use of *args and **kwargs allows for a clean way to pass arguments,\n    # with each parent \"peeling a layer of the onion\".\n    Superhero.__init__(self, 'anonymous', movie=True,\n                       superpowers=['Wealthy'], *args, **kwargs)\n    Bat.__init__(self, *args, can_fly=False, **kwargs)\n    # override the value for the name attribute\n    self.name = 'Sad Affleck'\n\ndef sing(self):\n    return 'nan nan nan nan nan batman!'","position":{"start":{"line":4670,"column":1,"offset":106806},"end":{"line":4685,"column":45,"offset":107655},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"if ","position":{"start":{"line":4687,"column":1,"offset":107657},"end":{"line":4687,"column":4,"offset":107660},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"name","position":{"start":{"line":4687,"column":6,"offset":107662},"end":{"line":4687,"column":10,"offset":107666},"indent":[]}}],"position":{"start":{"line":4687,"column":4,"offset":107660},"end":{"line":4687,"column":12,"offset":107668},"indent":[]}},{"type":"text","value":" == '","position":{"start":{"line":4687,"column":12,"offset":107668},"end":{"line":4687,"column":17,"offset":107673},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"main","position":{"start":{"line":4687,"column":19,"offset":107675},"end":{"line":4687,"column":23,"offset":107679},"indent":[]}}],"position":{"start":{"line":4687,"column":17,"offset":107673},"end":{"line":4687,"column":25,"offset":107681},"indent":[]}},{"type":"text","value":"':\nsup = Batman()","position":{"start":{"line":4687,"column":25,"offset":107681},"end":{"line":4688,"column":15,"offset":107698},"indent":[1]}}],"position":{"start":{"line":4687,"column":1,"offset":107657},"end":{"line":4688,"column":15,"offset":107698},"indent":[1]}},{"type":"code","lang":null,"meta":null,"value":"# Get the Method Resolution search Order used by both getattr() and super().\n# This attribute is dynamic and can be updated\nprint(Batman.__mro__)       # => (<class '__main__.Batman'>,\n                            # => <class 'superhero.Superhero'>,\n                            # => <class 'human.Human'>,\n                            # => <class 'bat.Bat'>, <class 'object'>)\n\n# Calls parent method but uses its own class attribute\nprint(sup.get_species())    # => Superhuman\n\n# Calls overridden method\nprint(sup.sing())           # => nan nan nan nan nan batman!\n\n# Calls method from Human, because inheritance order matters\nsup.say('I agree')          # => Sad Affleck: I agree\n\n# Call method that exists only in 2nd ancestor\nprint(sup.sonar())          # => ))) ... (((\n\n# Inherited class attribute\nsup.age = 100\nprint(sup.age)              # => 100\n\n# Inherited attribute from 2nd ancestor whose default value was overridden.\nprint('Can I fly? ' + str(sup.fly)) # => Can I fly? False","position":{"start":{"line":4690,"column":1,"offset":107700},"end":{"line":4714,"column":62,"offset":108762},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"####################################################","position":{"start":{"line":4716,"column":1,"offset":108764},"end":{"line":4716,"column":53,"offset":108816},"indent":[]}}],"position":{"start":{"line":4716,"column":1,"offset":108764},"end":{"line":4716,"column":53,"offset":108816},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"7. Advanced","position":{"start":{"line":4718,"column":4,"offset":108821},"end":{"line":4718,"column":15,"offset":108832},"indent":[]}}],"position":{"start":{"line":4718,"column":1,"offset":108818},"end":{"line":4718,"column":15,"offset":108832},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"####################################################","position":{"start":{"line":4720,"column":1,"offset":108834},"end":{"line":4720,"column":53,"offset":108886},"indent":[]}}],"position":{"start":{"line":4720,"column":1,"offset":108834},"end":{"line":4720,"column":53,"offset":108886},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Generators help you make lazy code.","position":{"start":{"line":4722,"column":3,"offset":108890},"end":{"line":4722,"column":38,"offset":108925},"indent":[]}}],"position":{"start":{"line":4722,"column":1,"offset":108888},"end":{"line":4722,"column":38,"offset":108925},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"def double_numbers(iterable):\nfor i in iterable:\nyield i + i","position":{"start":{"line":4724,"column":1,"offset":108927},"end":{"line":4726,"column":12,"offset":108987},"indent":[1,1]}}],"position":{"start":{"line":4724,"column":1,"offset":108927},"end":{"line":4726,"column":12,"offset":108987},"indent":[1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Generators are memory-efficient because they only load the data needed to","position":{"start":{"line":4728,"column":3,"offset":108991},"end":{"line":4728,"column":76,"offset":109064},"indent":[]}}],"position":{"start":{"line":4728,"column":1,"offset":108989},"end":{"line":4728,"column":76,"offset":109064},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"process the next value in the iterable. This allows them to perform","position":{"start":{"line":4730,"column":3,"offset":109068},"end":{"line":4730,"column":70,"offset":109135},"indent":[]}}],"position":{"start":{"line":4730,"column":1,"offset":109066},"end":{"line":4730,"column":70,"offset":109135},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"operations on otherwise prohibitively large value ranges.","position":{"start":{"line":4732,"column":3,"offset":109139},"end":{"line":4732,"column":60,"offset":109196},"indent":[]}}],"position":{"start":{"line":4732,"column":1,"offset":109137},"end":{"line":4732,"column":60,"offset":109196},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"NOTE: ","position":{"start":{"line":4734,"column":3,"offset":109200},"end":{"line":4734,"column":9,"offset":109206},"indent":[]}},{"type":"inlineCode","value":"range","position":{"start":{"line":4734,"column":9,"offset":109206},"end":{"line":4734,"column":16,"offset":109213},"indent":[]}},{"type":"text","value":" replaces ","position":{"start":{"line":4734,"column":16,"offset":109213},"end":{"line":4734,"column":26,"offset":109223},"indent":[]}},{"type":"inlineCode","value":"xrange","position":{"start":{"line":4734,"column":26,"offset":109223},"end":{"line":4734,"column":34,"offset":109231},"indent":[]}},{"type":"text","value":" in Python 3.","position":{"start":{"line":4734,"column":34,"offset":109231},"end":{"line":4734,"column":47,"offset":109244},"indent":[]}}],"position":{"start":{"line":4734,"column":1,"offset":109198},"end":{"line":4734,"column":47,"offset":109244},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"for i in double_numbers(range(1, 900000000)): # ","position":{"start":{"line":4736,"column":1,"offset":109246},"end":{"line":4736,"column":49,"offset":109294},"indent":[]}},{"type":"inlineCode","value":"range","position":{"start":{"line":4736,"column":49,"offset":109294},"end":{"line":4736,"column":56,"offset":109301},"indent":[]}},{"type":"text","value":" is a generator.\nprint(i)\nif i >= 30:\nbreak","position":{"start":{"line":4736,"column":56,"offset":109301},"end":{"line":4739,"column":6,"offset":109344},"indent":[1,1,1]}}],"position":{"start":{"line":4736,"column":1,"offset":109246},"end":{"line":4739,"column":6,"offset":109344},"indent":[1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Just as you can create a list comprehension, you can create generator","position":{"start":{"line":4741,"column":3,"offset":109348},"end":{"line":4741,"column":72,"offset":109417},"indent":[]}}],"position":{"start":{"line":4741,"column":1,"offset":109346},"end":{"line":4741,"column":72,"offset":109417},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"comprehensions as well.","position":{"start":{"line":4743,"column":3,"offset":109421},"end":{"line":4743,"column":26,"offset":109444},"indent":[]}}],"position":{"start":{"line":4743,"column":1,"offset":109419},"end":{"line":4743,"column":26,"offset":109444},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"values = (-x for x in ","position":{"start":{"line":4745,"column":1,"offset":109446},"end":{"line":4745,"column":23,"offset":109468},"indent":[]}},{"type":"linkReference","identifier":"1,2,3,4,5","label":"1,2,3,4,5","referenceType":"shortcut","children":[{"type":"text","value":"1,2,3,4,5","position":{"start":{"line":4745,"column":24,"offset":109469},"end":{"line":4745,"column":33,"offset":109478},"indent":[]}}],"position":{"start":{"line":4745,"column":23,"offset":109468},"end":{"line":4745,"column":34,"offset":109479},"indent":[]}},{"type":"text","value":")\nfor x in values:\nprint(x) # prints -1 -2 -3 -4 -5 to console/terminal","position":{"start":{"line":4745,"column":34,"offset":109479},"end":{"line":4747,"column":53,"offset":109550},"indent":[1,1]}}],"position":{"start":{"line":4745,"column":1,"offset":109446},"end":{"line":4747,"column":53,"offset":109550},"indent":[1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"You can also cast a generator comprehension directly to a list.","position":{"start":{"line":4749,"column":3,"offset":109554},"end":{"line":4749,"column":66,"offset":109617},"indent":[]}}],"position":{"start":{"line":4749,"column":1,"offset":109552},"end":{"line":4749,"column":66,"offset":109617},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"values = (-x for x in ","position":{"start":{"line":4751,"column":1,"offset":109619},"end":{"line":4751,"column":23,"offset":109641},"indent":[]}},{"type":"linkReference","identifier":"1,2,3,4,5","label":"1,2,3,4,5","referenceType":"shortcut","children":[{"type":"text","value":"1,2,3,4,5","position":{"start":{"line":4751,"column":24,"offset":109642},"end":{"line":4751,"column":33,"offset":109651},"indent":[]}}],"position":{"start":{"line":4751,"column":23,"offset":109641},"end":{"line":4751,"column":34,"offset":109652},"indent":[]}},{"type":"text","value":")\ngen","position":{"start":{"line":4751,"column":34,"offset":109652},"end":{"line":4752,"column":4,"offset":109657},"indent":[1]}},{"type":"emphasis","children":[{"type":"text","value":"to","position":{"start":{"line":4752,"column":5,"offset":109658},"end":{"line":4752,"column":7,"offset":109660},"indent":[]}}],"position":{"start":{"line":4752,"column":4,"offset":109657},"end":{"line":4752,"column":8,"offset":109661},"indent":[]}},{"type":"text","value":"list = list(values)\nprint(gen","position":{"start":{"line":4752,"column":8,"offset":109661},"end":{"line":4753,"column":10,"offset":109690},"indent":[1]}},{"type":"emphasis","children":[{"type":"text","value":"to","position":{"start":{"line":4753,"column":11,"offset":109691},"end":{"line":4753,"column":13,"offset":109693},"indent":[]}}],"position":{"start":{"line":4753,"column":10,"offset":109690},"end":{"line":4753,"column":14,"offset":109694},"indent":[]}},{"type":"text","value":"list) # => ","position":{"start":{"line":4753,"column":14,"offset":109694},"end":{"line":4753,"column":25,"offset":109705},"indent":[]}},{"type":"linkReference","identifier":"-1, -2, -3, -4, -5","label":"-1, -2, -3, -4, -5","referenceType":"shortcut","children":[{"type":"text","value":"-1, -2, -3, -4, -5","position":{"start":{"line":4753,"column":26,"offset":109706},"end":{"line":4753,"column":44,"offset":109724},"indent":[]}}],"position":{"start":{"line":4753,"column":25,"offset":109705},"end":{"line":4753,"column":45,"offset":109725},"indent":[]}}],"position":{"start":{"line":4751,"column":1,"offset":109619},"end":{"line":4753,"column":45,"offset":109725},"indent":[1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Decorators","position":{"start":{"line":4755,"column":3,"offset":109729},"end":{"line":4755,"column":13,"offset":109739},"indent":[]}}],"position":{"start":{"line":4755,"column":1,"offset":109727},"end":{"line":4755,"column":13,"offset":109739},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"In this example ","position":{"start":{"line":4757,"column":3,"offset":109743},"end":{"line":4757,"column":19,"offset":109759},"indent":[]}},{"type":"inlineCode","value":"beg","position":{"start":{"line":4757,"column":19,"offset":109759},"end":{"line":4757,"column":24,"offset":109764},"indent":[]}},{"type":"text","value":" wraps ","position":{"start":{"line":4757,"column":24,"offset":109764},"end":{"line":4757,"column":31,"offset":109771},"indent":[]}},{"type":"inlineCode","value":"say","position":{"start":{"line":4757,"column":31,"offset":109771},"end":{"line":4757,"column":36,"offset":109776},"indent":[]}},{"type":"text","value":". If say_please is True then it","position":{"start":{"line":4757,"column":36,"offset":109776},"end":{"line":4757,"column":67,"offset":109807},"indent":[]}}],"position":{"start":{"line":4757,"column":1,"offset":109741},"end":{"line":4757,"column":67,"offset":109807},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"will change the returned message.","position":{"start":{"line":4759,"column":3,"offset":109811},"end":{"line":4759,"column":36,"offset":109844},"indent":[]}}],"position":{"start":{"line":4759,"column":1,"offset":109809},"end":{"line":4759,"column":36,"offset":109844},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"from functools import wraps","position":{"start":{"line":4761,"column":1,"offset":109846},"end":{"line":4761,"column":28,"offset":109873},"indent":[]}}],"position":{"start":{"line":4761,"column":1,"offset":109846},"end":{"line":4761,"column":28,"offset":109873},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"def beg(target","position":{"start":{"line":4763,"column":1,"offset":109875},"end":{"line":4763,"column":15,"offset":109889},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"function):\n@wraps(target","position":{"start":{"line":4763,"column":16,"offset":109890},"end":{"line":4764,"column":14,"offset":109914},"indent":[1]}}],"position":{"start":{"line":4763,"column":15,"offset":109889},"end":{"line":4764,"column":15,"offset":109915},"indent":[1]}},{"type":"text","value":"function)\ndef wrapper(","position":{"start":{"line":4764,"column":15,"offset":109915},"end":{"line":4765,"column":13,"offset":109937},"indent":[1]}},{"type":"emphasis","children":[{"type":"text","value":"args, \\","position":{"start":{"line":4765,"column":14,"offset":109938},"end":{"line":4765,"column":21,"offset":109945},"indent":[]}}],"position":{"start":{"line":4765,"column":13,"offset":109937},"end":{"line":4765,"column":22,"offset":109946},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":4765,"column":22,"offset":109946},"end":{"line":4765,"column":24,"offset":109948},"indent":[]}},{"type":"text","value":"kwargs):\nmsg, say","position":{"start":{"line":4765,"column":24,"offset":109948},"end":{"line":4766,"column":9,"offset":109965},"indent":[1]}},{"type":"emphasis","children":[{"type":"text","value":"please = target","position":{"start":{"line":4766,"column":10,"offset":109966},"end":{"line":4766,"column":25,"offset":109981},"indent":[]}}],"position":{"start":{"line":4766,"column":9,"offset":109965},"end":{"line":4766,"column":26,"offset":109982},"indent":[]}},{"type":"text","value":"function(","position":{"start":{"line":4766,"column":26,"offset":109982},"end":{"line":4766,"column":35,"offset":109991},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"args, \\","position":{"start":{"line":4766,"column":36,"offset":109992},"end":{"line":4766,"column":43,"offset":109999},"indent":[]}}],"position":{"start":{"line":4766,"column":35,"offset":109991},"end":{"line":4766,"column":44,"offset":110000},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":4766,"column":44,"offset":110000},"end":{"line":4766,"column":46,"offset":110002},"indent":[]}},{"type":"text","value":"kwargs)\nif say_please:\nreturn \"{} {}\".format(msg, \"Please! I am poor :(\")\nreturn msg","position":{"start":{"line":4766,"column":46,"offset":110002},"end":{"line":4769,"column":11,"offset":110086},"indent":[1,1,1]}}],"position":{"start":{"line":4763,"column":1,"offset":109875},"end":{"line":4769,"column":11,"offset":110086},"indent":[1,1,1,1,1,1]}},{"type":"code","lang":null,"meta":null,"value":"return wrapper","position":{"start":{"line":4771,"column":1,"offset":110088},"end":{"line":4771,"column":19,"offset":110106},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"@beg\ndef say(say","position":{"start":{"line":4773,"column":1,"offset":110108},"end":{"line":4774,"column":12,"offset":110124},"indent":[1]}},{"type":"emphasis","children":[{"type":"text","value":"please=False):\nmsg = \"Can you buy me a beer?\"\nreturn msg, say","position":{"start":{"line":4774,"column":13,"offset":110125},"end":{"line":4776,"column":16,"offset":110186},"indent":[1,1]}}],"position":{"start":{"line":4774,"column":12,"offset":110124},"end":{"line":4776,"column":17,"offset":110187},"indent":[1,1]}},{"type":"text","value":"please","position":{"start":{"line":4776,"column":17,"offset":110187},"end":{"line":4776,"column":23,"offset":110193},"indent":[]}}],"position":{"start":{"line":4773,"column":1,"offset":110108},"end":{"line":4776,"column":23,"offset":110193},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"print(say()) # Can you buy me a beer?\nprint(say(say_please=True)) # Can you buy me a beer? Please! I am poor :(","position":{"start":{"line":4778,"column":1,"offset":110195},"end":{"line":4779,"column":74,"offset":110306},"indent":[1]}}],"position":{"start":{"line":4778,"column":1,"offset":110195},"end":{"line":4779,"column":74,"offset":110306},"indent":[1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":4780,"column":1,"offset":110307}}}}