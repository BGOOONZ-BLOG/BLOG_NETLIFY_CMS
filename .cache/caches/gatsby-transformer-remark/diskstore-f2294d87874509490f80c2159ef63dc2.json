{"expireTime":9007200904342771000,"key":"transformer-remark-markdown-html-eb0027b8b4ba5b3c3949685642b07128--","val":"<h1>Archives:</h1>\n<br>\n<br>\n<br>\n<br>\n<h1> Text Tools     </h1>\n<br>\n<iframe sandbox=\"allow-scripts\" style=\"resize:both; overflow:scroll;\"    src=\"https://devtools42.netlify.app/\" height=\"800px\" width=\"1000px\" scrolling=\"yes\"   frameborder=\"yes\" loading=\"lazy\"  allowfullscreen=\"true\"  frameborder=\"0\" ></iframe>\n<br>\n<br>\n<hr>\n<br>\n<br>\n<br>\n<h1> Ternary Converter   </h1>\n<br>\n<iframe sandbox=\"allow-scripts\" style=\"resize:both; overflow:scroll;\"    src=\"https://ternary42.netlify.app/\" height=\"800px\" width=\"1000px\" scrolling=\"yes\"   frameborder=\"yes\" loading=\"lazy\"  allowfullscreen=\"true\"  frameborder=\"0\" ></iframe>\n<table>\n<thead>\n<tr>\n<th>---</th>\n<th>---</th>\n<th>---</th>\n<th>---</th>\n<th>---</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>leonardomso/33-js-concepts<em>This repository was created with the intention of helping developers master their concepts in JavaScript. It is not a…</em>github.com</td>\n<td>Call stack - MDN Web Docs Glossary: Definitions of Web-related terms MDN<em>A call stack is a mechanism for an interpreter (like the JavaScript interpreter in a web browser) to keep track of its…</em>developer.mozilla.org</td>\n<td>Understanding Javascript Function Executions — Call Stack, Event Loop , Tasks &#x26; more<em>Web developers or Front end engineers, as that's what we like to be called, nowadays do everything right from acting as…</em>medium.com</td>\n<td>Understanding the JavaScript call stack<em>The JavaScript engine (which is found in a hosting environment like the browser), is a single-threaded interpreter…</em>medium.freecodecamp.org Javascript: What Is The Execution Context? What Is The Call Stack?<em>What is the Execution Context in Javascript? I bet you don't know the answer. What are the most basic components of a…</em>web.archive.org</td>\n<td>Understanding Execution Context and Execution Stack in Javascript<em>Understanding execution context and stack to become a better Javascript developer.</em>blog.bitsrc.io</td>\n</tr>\n<tr>\n<td>JavaScript data types and data structures - JavaScript MDN<em>Programming languages all have built-in data structures, but these often differ from one language to another. This…</em>developer.mozilla.org</td>\n<td>How numbers are encoded in JavaScript<em>Edit description</em>2ality.com</td>\n<td>Here is what you need to know about JavaScript's Number type<em>Why 0.1+0.2 IS NOT equal to 0.3 and 9007199254740992 IS equal to 9007199254740993</em>medium.com</td>\n<td>What Every JavaScript Developer Should Know About Floating Point Numbers<em>After I gave my talk on JavaScript (really, I was there trying to shamelessly plug my book - Underhanded JavaScript and…</em>blog.chewxy.com</td>\n<td>The Secret Life of JavaScript Primitives<em>You may not know it but, in JavaScript, whenever you interact with string, number or boolean primitives you enter a…</em>javascriptweblog.wordpress.com</td>\n</tr>\n<tr>\n<td>JavaScript Reference and Copy Variables Hacker Noon<em>Each programming language has its own peculiarities (and JavaScript has a lot), and today I'm going to talk about…</em>hackernoon.com</td>\n<td>JavaScript Primitive vs. Reference Values<em>Summary: in this tutorial, you will learn the differences between primitive and reference values. In JavaScript, a…</em>www.javascripttutorial.net</td>\n<td>JavaScript by reference vs. by value<em>I'm looking for some good comprehensive reading material on when JavaScript passes something by value and when by…</em>stackoverflow.com</td>\n<td>JavaScript Interview Prep: Primitive vs. Reference Types<em>original article In a JavaScript interview, they might ask if you understand the difference between primitive and…</em>dev.to</td>\n<td>What you need to know about Javascript's Implicit Coercion<em>Javascript's implicit coercion simply refers to Javascript attempting to coerce an unexpected value type to the…</em>dev.to</td>\n</tr>\n<tr>\n<td>Javascript Coercion Explained<em>Along with some practical examples</em>hackernoon.com</td>\n<td>What exactly is Type Coercion in Javascript?<em>Let's start with a short intro to type systems which I think will help you understand the general idea of type…</em>stackoverflow.com</td>\n<td><a href=\"https://thedevs.network/*Weak\">https://thedevs.network/*Weak</a> dynamic typing is arguably one of those things everybody likes to pick at about JavaScript. For an elegant dynamic…*thedevs.network</td>\n<td>getify/You-Dont-Know-JS<em>A book series on JavaScript. @YDKJS on twitter. Contribute to getify/You-Dont-Know-JS development by creating an…</em>github.com</td>\n<td>JavaScript — Double Equals vs. Triple Equals<em>Learn equality in JavaScript in 3 minutes</em>codeburst.io</td>\n</tr>\n<tr>\n<td>Why Use the Triple-Equals Operator in JavaScript? - Impressive Webs<em>\"Determining whether two variables are equivalent is one of the most important operations in programming.\" That's…</em>www.impressivewebs.com</td>\n<td>What is the difference between == and === in JavaScript?_On the surface == and === appear to be functionally the same, so why bother typing an extra character? In this video…_www.oreilly.com</td>\n<td>Why javascript's typeof always return \"object\"?<em>To add in with the others, typeof returns both objects and primitives. There are 5 primitive types in javascript…</em>stackoverflow.com</td>\n<td>Checking Types in Javascript<em>Have you ever wondered: what is the correct way to check if a Javascript variable is an Array? Do a Google search and…</em>tobyho.com</td>\n<td>How to better check data types in javascript - Webbjocke<em>To check what data type something has in javascript is not always the easiest. The language itself provides an operator…</em>webbjocke.com</td>\n</tr>\n<tr>\n<td>A JavaScript Fundamentals Cheat Sheet: Scope, Context, and \"this\"<em>Scope Scope refers to where a variable can be accessed within a program. Some variables can be accessed from anywhere…</em>dev.to</td>\n<td>Quick Tip: Function Expressions vs Function Declarations - SitePoint<em>This article was peer reviewed by Jeff Mott. Thanks to all of SitePoint's peer reviewers for making SitePoint content…</em>www.sitepoint.com</td>\n<td>JavaScript Function — Declaration vs Expression<em>Functions are considered as First Class citizen in JavaScript and it is really important to be clear with the concept…</em>medium.com</td>\n<td>Function Declarations vs. Function Expressions<em>What is Function Statement/Declarations in JavaScript?</em>medium.com</td>\n<td>Function Declarations vs. Function Expressions<em>Lets start with a short quiz. What is alerted in each case?: Question 1: Question 2: Question 3: Question 4: If you…</em>javascriptweblog.wordpress.com</td>\n</tr>\n<tr>\n<td>16. Modules<em>Edit description</em>exploringjs.com</td>\n<td>ES modules: A cartoon deep-dive - Mozilla Hacks - the Web developer blog<em>ES modules bring an official, standardized module system to JavaScript. With the release of Firefox 60 in May, all…</em>hacks.mozilla.org</td>\n<td>Understanding ES6 Modules - SitePoint<em>Almost every language has a concept of modules - a way to include functionality declared in one file within another…</em>www.sitepoint.com</td>\n<td>An overview of ES6 Modules in JavaScript<em>Introduction Until recently if you wanted to take full advantage of modules in JavaScript you needed to make use of…</em>blog.cloud66.com</td>\n<td>ES6 Modules in Depth<em>Welcome back to ES6 - \"Oh, good. It's not another article about Unicode\" - in Depth series. If you've never been around…</em>ponyfoo.com</td>\n</tr>\n<tr>\n<td>How JavaScript works: Event loop and the rise of Async programming + 5 ways to better coding with…<em>Welcome to post # 4 of the series dedicated to exploring JavaScript and its building components. In the process of…</em>blog.sessionstack.com</td>\n<td>Tasks, microtasks, queues and schedules<em>Edit description</em>jakearchibald.com</td>\n<td>Visualising the JavaScript Event Loop with a Pizza Restaurant analogy<em>Consider a pizza restaurant. There are two types of orders that we currently have from a single customer - one is an…</em>dev.to</td>\n<td>✨♻️ JavaScript Visualized: Event Loop<em>Oh boi the event loop. It's one of those things that every JavaScript developer has to deal with in one way or another…</em>dev.to</td>\n<td>Scheduling: setTimeout and setInterval<em>Edit description</em>javascript.info</td>\n</tr>\n<tr>\n<td>Understanding How the Chrome V8 Engine Translates JavaScript into Machine Code<em>Before diving deep into the core of Chrome's V8, first, let's get our fundamentals down. All of our systems consist of…</em>medium.freecodecamp.org</td>\n<td>Understanding V8's Bytecode<em>V8 is Google's open source JavaScript engine. Chrome, Node.js, and many other applications use V8. This article…</em>medium.com</td>\n<td>A Brief History of Google's V8 JavaScript Engine<em>Javascript has a reputation in developer circles as a terrible language. It's classless, loosely typed, and plagued by…</em>www.mediacurrent.com</td>\n<td>JavaScript essentials: why you should know how the engine works<em>This article is also available in Spanish.</em>medium.freecodecamp.org</td>\n<td>JavaScript engine fundamentals: Shapes and Inline Caches<em>This article describes some key fundamentals that are common to all JavaScript engines - and not just V8, the engine…</em>mathiasbynens.be</td>\n</tr>\n<tr>\n<td>JavaScript engine fundamentals: optimizing prototypes<em>This article describes some key fundamentals that are common to all JavaScript engines - and not just V8, the engine…</em>mathiasbynens.be</td>\n<td>Elements kinds in V8<em>Note: If you prefer watching a presentation over reading articles, then enjoy the video below! JavaScript objects can…</em>v8.dev</td>\n<td>Programming with JS: Bitwise Operations<em>In this series of articles we take a look at different Computer Science topics from the prism of JavaScript. We've…</em>hackernoon.com</td>\n<td>Using JavaScript's Bitwise Operators in Real Life<em>Let's pretend we're machine code programmers!</em>codeburst.io</td>\n<td>JavaScript Bitwise Operators - w3resource<em>Bitwise operators perform an operation on the bitwise (0,1) representation of their arguments, rather than as decimal…</em>www.w3resource.com</td>\n</tr>\n<tr>\n<td>JavaScript DOM Tutorial with Example<em>Details JavaScript can access all the elements in a webpage making use of Document Object Model (DOM). In fact, the web…</em>www.guru99.com</td>\n<td>What is the DOM?<em>A reader recently wrote in asking me what the DOM was. They said they've heard it mentioned and alluded to, but aren't…</em>css-tricks.com</td>\n<td>Traversing the DOM with JavaScript<em>A good JavaScript developer needs to know how to traverse the DOM-it's the act of selecting an element from another…</em>zellwk.com</td>\n<td>DOM tree<em>The backbone of an HTML document is tags. According to the Document Object Model (DOM), every HTML tag is an object…</em>javascript.info</td>\n<td>How to traverse the DOM in JavaScript<em>Learn how to navigate your way through the DOM tree.</em>javascript.plainenglish.io</td>\n</tr>\n<tr>\n<td>A Vanilla JS Guide On Mastering the DOM<em>Note: The contents of this post are intended to be introductory and does not include use of any libraries like jQuery…</em>dev.to</td>\n<td>How To Use Classes in JavaScript DigitalOcean<em>JavaScript is a prototype-based language, and every object in JavaScript has a hidden internal property called…</em>www.digitalocean.com</td>\n<td>Javascript Classes — Under The Hood<em>Javascript classes are nothing but a syntactic sugar over existing prototype based inheritance and constructor…</em>medium.com</td>\n<td>ES6 Classes - JavaScript January<em>Object-Oriented Programming (OOP) can be a great way to organize your projects. Introduced with ES6, the javascript…</em>www.javascriptjanuary.com</td>\n<td>Practical Ways to Write Better JavaScript<em>Solid methods of improving your JS. Tagged with javascript, webdev, beginners, react.</em>dev.to</td>\n</tr>\n<tr>\n<td>Better JavaScript with ES6, Pt. II: A Deep Dive into Classes<em>Out with the Old, In with the new Let's be clear about one thing from the start: Under the hood, ES6 classes are not…</em>scotch.io</td>\n<td>Understand the Factory Design Pattern in plain javascript<em>The simplest way to understand Factory Design Pattern</em>medium.com</td>\n<td>Factory Functions in JavaScript Aten Design Group<em>As we move from an age of jQuery plugins and script drop-ins to a world of CommonJS and modular architectures it's…</em>atendesigngroup.com</td>\n<td>The Factory Pattern in JS ES6<em>I'm trying to get the most out of all the new things in ES6 (ES2015). And I'm writing a new library where I need a…</em>medium.com</td>\n<td>Class vs Factory function: exploring the way forward<em>ECMAScript 2015 (aka ES6) comes with the class syntax, so now we have two competing patterns for creating objects. In…</em>medium.freecodecamp.org</td>\n</tr>\n<tr>\n<td>Prototype in Javascript Codementor<em>By default every function has a property name as prototype which is EMPTY ( by default). We can add properties and…</em>www.codementor.io</td>\n<td>Prototypes in JavaScript<em>In this post, we will discuss what are prototypes in JavaScript, how they help JavaScript in achieving the concepts of…</em>betterprogramming.pub</td>\n<td>Prototype in JavaScript: it's quirky, but here's how it works<em>The following four lines are enough to confuse most JavaScript developers:</em>medium.freecodecamp.org</td>\n<td>Understanding JavaScript: Prototype and Inheritance<em>Due to the amazing quantity of libraries, tools and all kinds of things that make your development easier, a lot of…</em>hackernoon.com</td>\n<td>Understanding Classes (ES5) and Prototypal Inheritance in JavaScript<em>In a nutshell the above snippet creates a Person class that can have multiple instances. By convention functional…</em>dev.to</td>\n</tr>\n<tr>\n<td>_Master JavaScript Prototypes &#x26; _Inheritance__\\ Inheritancecodeburst.io</td>\n<td>JavaScript's Prototypal Inheritance Explained Using CSS<em>Prototypal inheritance is arguably the least understood aspect of JavaScript. Well the good news is that if you…</em>medium.freecodecamp.org</td>\n<td>Demystifying ES6 Classes And Prototypal Inheritance<em>In the early history of the JavaScript language, a cloud of animosity formed over the lack of a proper syntax for…</em>scotch.io</td>\n<td>Intro To Prototypal Inheritance - JS<em>In this article I will try to give an introduction to protypal inheritance. As an \"optional\" pre-requisite, you can…</em>dev.to</td>\n<td>Let's Build Prototypal Inheritance in JS<em>The idea for this post is pretty simple. I want to some extent build and with that, illustrate how prototypes work in…</em>dev.to</td>\n</tr>\n<tr>\n<td>Understanding Prototypal Inheritance In JavaScript<em>What Is Object-oriented Programming (OOP) Classical vs Prototypal Inheritance The Prototype Object And The Prototype…</em>dev.to</td>\n<td>Object.create() - JavaScript MDN<em>The Object.create() method creates a new object, using an existing object as the prototype of the newly created object…</em>developer.mozilla.org</td>\n<td>Object.assign() - JavaScript MDN<em>The Object.assign() method copies all enumerable own properties from one or more source objects to a target object. It…</em>developer.mozilla.org</td>\n<td>Object.create in JavaScript<em>The Object.create method is one of the methods to create a new object in JavaScript.</em>medium.com</td>\n<td>Javascript Objects A New Way to Create Objects HTML Goodies<em>There are a lot of ways to create Objects in JavaScript, perhaps even more to integrate inheritance into them. Just…</em>www.htmlgoodies.com</td>\n</tr>\n<tr>\n<td>JavaScript Object Creation: Patterns and Best Practices - SitePoint<em>Jeff Mott guides you through a step-by-step approach to JavaScript object creation - from object literals to factory…</em>www.sitepoint.com</td>\n<td>Dealing With Objects in JavaScript With Object.assign, Object.keys and hasOwnProperty …<em>This post is a sort of grab bag to help you explore a few very useful methods to help you manage your objects in…</em>alligator.io</td>\n<td>Copying Objects in JavaScript DigitalOcean<em>Objects are the fundamental blocks of JavaScript. An object is a collection of properties, and a property is an…</em>scotch.io</td>\n<td>JavaScript: Object.assign()<em>Veja nesse artigo como utilizar o Object.assign() do ECMAScript 6</em>codeburst.io</td>\n<td>How to deep clone a JavaScript object<em>Copying objects in JavaScript can be tricky. Some ways perform a shallow copy, which is the default behavior in most of…</em>flaviocopes.com</td>\n</tr>\n<tr>\n<td>How to Use Map, Filter, and Reduce in JavaScript<em>Functional programming has been making quite a splash in the development world these days. And for good reason…</em>code.tutsplus.com</td>\n<td>JavaScript — Learn to Chain Map, Filter, and Reduce<em>Learn how to chain map, filter, and reduce in JavaScript</em>codeburst.io</td>\n<td>Understanding map, filter and reduce in Javascript<em>When working on Javascript projects you inevitably come across situations where you have to do some data manipulation…</em>hackernoon.com</td>\n<td>Functional Programming in JS: map, filter, reduce (Pt. 5)<em>Note: This is part of the \"Javascript and Functional Programming\" series on learning functional programming techniques…</em>hackernoon.com</td>\n<td>JavaScript: Map, Filter, Reduce<em>JavaScript's built-in map, filter, and reduce array methods are invaluable to a modern JavaScript developer. First…</em>wsvincent.com</td>\n</tr>\n<tr>\n<td>A simple guide to help you understand closures in JavaScript<em>Closures in JavaScript are one of those concepts that many struggle to get their heads around. In the following…</em>medium.freecodecamp.org</td>\n<td>Understanding JavaScript Closures: A Practical Approach<em>Learning a new language involves a series of steps, whereas its mastery is a product of patience, practice, mistakes…</em>scotch.io</td>\n<td>Understanding JavaScript: Closures<em>Why learn JavaScript in depth?</em>hackernoon.com</td>\n<td>How to use JavaScript closures with confidence<em>Using closures will be a piece of (chocolate) cake</em>hackernoon.com</td>\n<td>JavaScript Closures by Example<em>At some point you may have run into a problem when executing functions from within a for loop. The first time it…</em>howchoo.com</td>\n</tr>\n<tr>\n<td>Higher-Order Functions :: Eloquent JavaScript<em>Tzu-li and Tzu-ssu were boasting about the size of their latest programs. 'Two-hundred thousand lines,' said Tzu-li…</em>eloquentjavascript.net</td>\n<td>Higher-Order Functions in JavaScript - SitePoint<em>Continuing his look at functional programming in JavaScript, M. David Green examines higher-order functions and how…</em>www.sitepoint.com</td>\n<td>Higher Order Functions: Using Filter, Map and Reduce for More Maintainable Code<em>Higher order functions can help you to step up your JavaScript game by making your code more declarative. That is…</em>medium.freecodecamp.org</td>\n<td>First-class and Higher Order Functions: Effective Functional JavaScript<em>Functions: the killer JavaScript feature we never talk about.</em>hackernoon.com</td>\n<td>Higher Order Functions in JavaScript<em>Higher-order functions can be intimidating at first, but they're not that hard to learn. A higher-order function is…</em>www.lullabot.com</td>\n</tr>\n<tr>\n<td>ES6 Promises: Patterns and Anti-Patterns<em>When I first got started with NodeJS a few years ago, I was mortified by what is now affectionately known as \"callback…</em>medium.com</td>\n<td>A Simple Guide to ES6 Promises<em>The woods are lovely, dark and deep. But I have promises to keep, and miles to go before I sleep. — Robert Frost</em>codeburst.io</td>\n<td>The ES6 Promises<em>A very helpful feature in ES6</em>codeburst.io</td>\n<td>ES6 Promises in Depth<em>Promises are a very involved paradigm, so we'll take it slow. Here's a table of contents with the topics we'll cover in…</em>ponyfoo.com</td>\n<td>Javascript Promises: An In-Depth Approach<em>\"Write down the syntax for promises on this sheet of paper\", is enough to give nightmares to a lot of junior and even…</em>codeburst.io</td>\n</tr>\n<tr>\n<td>Promises - JavaScript concepts<em>This is part of a series where I try to explain through each of 33 JS Concepts. This part corresponds to Promises…</em>dev.to</td>\n<td>Javascript Promise 101<em>Knowing how Promise works in javascript will boost your development skill exponentially. Here I will share: I promise…</em>dev.to</td>\n<td>Simplify JavaScript Promises<em>I love promises. Not from people, but from JavaScript. Tweet Quote I love promises. Not from people, but from…</em>dev.to</td>\n<td>The Lowdown on Promises<em>A quick and concise guide on how Promises work in JavaScript</em>medium.com</td>\n<td>⭐️🎀 JavaScript Visualized: Promises &#x26; Async/Await<em>Ever had to deal with JS code that just… didn't run the way you expected it to? Maybe it seemed like functions got…</em>dev.to</td>\n</tr>\n<tr>\n<td>How to escape async/await hell<em>async/await freed us from callback hell, but people have started abusing it — leading to the birth of async/await hell.</em>medium.freecodecamp.org</td>\n<td>Understanding JavaScript's async await<em>Let's suppose we had code like the following. Here I'm wrapping an HTTP request in a Promise. The promise fulfills with…</em>ponyfoo.com</td>\n<td>JavaScript Async/Await: Serial, Parallel and Complex Flow - TechBrij<em>If you have experience on ASP.NET MVC then probably you are familiar with async/await keywords in C#. The same thing is…</em>techbrij.com</td>\n<td>From JavaScript Promises to Async/Await: why bother?<em>In this tutorial, we will cover why we need async/await when we could achieve the same fit with JavaScript Promises, to…</em>blog.pusher.com</td>\n<td>Flow Control in Modern JS: Callbacks to Promises to Async/Await - SitePoint<em>JavaScript is regularly claimed to be asynchronous. What does that mean? How does it affect development? How has the…</em>www.sitepoint.com</td>\n</tr>\n<tr>\n<td>Time Complexity Analysis in JavaScript<em>An algorithm is a self-contained step-by-step set of instructions to solve a problem. It takes time for these steps to…</em>www.jenniferbland.com</td>\n<td>Algorithms in plain English: time complexity and Big-O notation<em>Every good developer has time on their mind. They want to give their users more of it, so they can do all those things…</em>medium.freecodecamp.org</td>\n<td>An Introduction to Big O Notation<em>Big O notation is a big topic, and its universal importance stems from the fact that it describes the efficiency of…</em>dev.to</td>\n<td>[Crizstian/data-structure-and-algorithms-with-ES6<em>Num Type Exercises Description 10.- Graph Data Structure 2 A graph consists of a set of vertices and a set of edges. A…</em>github.com](<a href=\"https://github.com/Crizstian/data-structure-and-algorithms-with-ES6\">https://github.com/Crizstian/data-structure-and-algorithms-with-ES6</a> \"<a href=\"https://github.com/Crizs\">https://github.com/Crizs</a></td>\n<td></td>\n</tr>\n</tbody>\n</table>"}