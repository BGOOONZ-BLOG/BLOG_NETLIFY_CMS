{"expireTime":9007200904342771000,"key":"transformer-remark-markdown-html-6b21790e9b922352202419e68baf140e--","val":"<h2><a href=\"https://leetcode.com/problems/palindrome-number/description/\">9. Palindrome Number</a></h2>\n<h3>Problem:</h3>\n<p>Determine whether an integer is a palindrome. An integer is a palindrome when it reads the same backward as forward.</p>\n<p><strong>Example 1:</strong></p>\n<pre><code>Input: 121\nOutput: true\n</code></pre>\n<p><strong>Example 2:</strong></p>\n<pre><code>Input: -121\nOutput: false\nExplanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.\n</code></pre>\n<p><strong>Example 3:</strong></p>\n<pre><code>Input: 10\nOutput: false\nExplanation: Reads 01 from right to left. Therefore it is not a palindrome.\n</code></pre>\n<p><strong>Follow up:</strong></p>\n<p>Coud you solve it without converting the integer to a string?</p>\n<h3>Solution:</h3>\n<h4>ONE</h4>\n<p>Easy to write but slow since it generates an array.</p>\n<pre><code class=\"language-js\">/**\n * @param {number} x\n * @return {boolean}\n */\nlet isPalindrome = function (x) {\n    return x == String(x).split('').reverse().join('');\n};\n</code></pre>\n<h4>TWO</h4>\n<p>A bit faster.</p>\n<pre><code class=\"language-js\">/**\n * @param {number} x\n * @return {boolean}\n */\nlet isPalindrome = function (x) {\n    const s = String(x);\n    for (let i = 0, j = s.length - 1; i &#x3C; j; i++, j--) {\n        if (s[i] !== s[j]) {\n            return false;\n        }\n    }\n    return true;\n};\n</code></pre>\n<h4>THREE</h4>\n<p>General solution. Combining <a href=\"./007.%20Reverse%20Integer.md\">7. Reverse Integer</a>.</p>\n<pre><code class=\"language-js\">/**\n * @param {number} x\n * @return {boolean}\n */\nlet isPalindrome = function (x) {\n    if (x &#x3C; 0) {\n        return false;\n    }\n    return x === reverse(x);\n};\n\n/**\n * @param {number} x\n * @return {number}\n */\nfunction reverse(x) {\n    let result = 0;\n    while (x) {\n        result = result * 10 + (x % 10);\n        x = (x / 10) | 0;\n    }\n    return result;\n}\n</code></pre>\n<hr>\n<p>☆<em>: .｡. o(≧▽≦)o .｡.:</em>☆☆<em>: .｡. o(≧▽≦)o .｡.:</em>☆☆<em>: .｡. o(≧▽≦)o .｡.:</em>☆</p>\n<hr>\n<hr>\n<p>☆<em>: .｡. o(≧▽≦)o .｡.:</em>☆☆<em>: .｡. o(≧▽≦)o .｡.:</em>☆</p>\n<hr>"}