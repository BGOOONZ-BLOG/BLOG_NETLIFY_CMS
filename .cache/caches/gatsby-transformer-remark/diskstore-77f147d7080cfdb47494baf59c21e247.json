{"expireTime":9007200904342768000,"key":"transformer-remark-markdown-ast-72c849ba91aa75df2a48447b9a5f1751--","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"The easiest way to write to files in Node.js is to use the ","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":60,"offset":60},"indent":[]}},{"type":"inlineCode","value":"fs.writeFile()","position":{"start":{"line":2,"column":60,"offset":60},"end":{"line":2,"column":76,"offset":76},"indent":[]}},{"type":"text","value":" API.","position":{"start":{"line":2,"column":76,"offset":76},"end":{"line":2,"column":81,"offset":81},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":81,"offset":81},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Example:","position":{"start":{"line":4,"column":1,"offset":83},"end":{"line":4,"column":9,"offset":91},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":83},"end":{"line":4,"column":9,"offset":91},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const fs = require('fs');\n\nconst content = 'Some content!';\n\nfs.writeFile('/Users/joe/test.txt', content, (err) => {\n    if (err) {\n        console.error(err);\n        return;\n    }\n    //file written successfully\n});","position":{"start":{"line":6,"column":1,"offset":93},"end":{"line":18,"column":4,"offset":320},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Alternatively, you can use the synchronous version ","position":{"start":{"line":20,"column":1,"offset":322},"end":{"line":20,"column":52,"offset":373},"indent":[]}},{"type":"inlineCode","value":"fs.writeFileSync()","position":{"start":{"line":20,"column":52,"offset":373},"end":{"line":20,"column":72,"offset":393},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":20,"column":72,"offset":393},"end":{"line":20,"column":73,"offset":394},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":322},"end":{"line":20,"column":73,"offset":394},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const fs = require('fs');\n\nconst content = 'Some content!';\n\ntry {\n    const data = fs.writeFileSync('/Users/joe/test.txt', content);\n    //file written successfully\n} catch (err) {\n    console.error(err);\n}","position":{"start":{"line":22,"column":1,"offset":396},"end":{"line":33,"column":4,"offset":613},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"By default, this API will ","position":{"start":{"line":35,"column":1,"offset":615},"end":{"line":35,"column":27,"offset":641},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"replace the contents of the file","position":{"start":{"line":35,"column":29,"offset":643},"end":{"line":35,"column":61,"offset":675},"indent":[]}}],"position":{"start":{"line":35,"column":27,"offset":641},"end":{"line":35,"column":63,"offset":677},"indent":[]}},{"type":"text","value":" if it does already exist.","position":{"start":{"line":35,"column":63,"offset":677},"end":{"line":35,"column":89,"offset":703},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":615},"end":{"line":35,"column":89,"offset":703},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can modify the default by specifying a flag:","position":{"start":{"line":37,"column":1,"offset":705},"end":{"line":37,"column":49,"offset":753},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":705},"end":{"line":37,"column":49,"offset":753},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"fs.writeFile('/Users/joe/test.txt', content, { flag: 'a+' }, (err) => {});","position":{"start":{"line":39,"column":1,"offset":755},"end":{"line":41,"column":4,"offset":839},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The flags you'll likely use are","position":{"start":{"line":43,"column":1,"offset":841},"end":{"line":43,"column":32,"offset":872},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":841},"end":{"line":43,"column":32,"offset":872},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"r+","position":{"start":{"line":45,"column":3,"offset":876},"end":{"line":45,"column":7,"offset":880},"indent":[]}},{"type":"text","value":" open the file for reading and writing","position":{"start":{"line":45,"column":7,"offset":880},"end":{"line":45,"column":45,"offset":918},"indent":[]}}],"position":{"start":{"line":45,"column":3,"offset":876},"end":{"line":45,"column":45,"offset":918},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":874},"end":{"line":45,"column":45,"offset":918},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"w+","position":{"start":{"line":46,"column":3,"offset":921},"end":{"line":46,"column":7,"offset":925},"indent":[]}},{"type":"text","value":" open the file for reading and writing, positioning the stream at the beginning of the file. The file is created if not existing","position":{"start":{"line":46,"column":7,"offset":925},"end":{"line":46,"column":135,"offset":1053},"indent":[]}}],"position":{"start":{"line":46,"column":3,"offset":921},"end":{"line":46,"column":135,"offset":1053},"indent":[]}}],"position":{"start":{"line":46,"column":1,"offset":919},"end":{"line":46,"column":135,"offset":1053},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"a","position":{"start":{"line":47,"column":3,"offset":1056},"end":{"line":47,"column":6,"offset":1059},"indent":[]}},{"type":"text","value":" open the file for writing, positioning the stream at the end of the file. The file is created if not existing","position":{"start":{"line":47,"column":6,"offset":1059},"end":{"line":47,"column":116,"offset":1169},"indent":[]}}],"position":{"start":{"line":47,"column":3,"offset":1056},"end":{"line":47,"column":116,"offset":1169},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":1054},"end":{"line":47,"column":116,"offset":1169},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"inlineCode","value":"a+","position":{"start":{"line":48,"column":3,"offset":1172},"end":{"line":48,"column":7,"offset":1176},"indent":[]}},{"type":"text","value":" open the file for reading and writing, positioning the stream at the end of the file. The file is created if not existing","position":{"start":{"line":48,"column":7,"offset":1176},"end":{"line":48,"column":129,"offset":1298},"indent":[]}}],"position":{"start":{"line":48,"column":3,"offset":1172},"end":{"line":48,"column":129,"offset":1298},"indent":[]}}],"position":{"start":{"line":48,"column":1,"offset":1170},"end":{"line":48,"column":129,"offset":1298},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":874},"end":{"line":48,"column":129,"offset":1298},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"(you can find more flags at ","position":{"start":{"line":50,"column":1,"offset":1300},"end":{"line":50,"column":29,"offset":1328},"indent":[]}},{"type":"link","title":null,"url":"https://nodejs.org/api/fs.html#fs_file_system_flags","children":[{"type":"text","value":"https://nodejs.org/api/fs.html#fs_file_system_flags","position":{"start":{"line":50,"column":30,"offset":1329},"end":{"line":50,"column":81,"offset":1380},"indent":[]}}],"position":{"start":{"line":50,"column":29,"offset":1328},"end":{"line":50,"column":82,"offset":1381},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":50,"column":82,"offset":1381},"end":{"line":50,"column":83,"offset":1382},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":1300},"end":{"line":50,"column":83,"offset":1382},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Append to a file","position":{"start":{"line":52,"column":4,"offset":1387},"end":{"line":52,"column":20,"offset":1403},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":1384},"end":{"line":52,"column":20,"offset":1403},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A handy method to append content to the end of a file is ","position":{"start":{"line":54,"column":1,"offset":1405},"end":{"line":54,"column":58,"offset":1462},"indent":[]}},{"type":"inlineCode","value":"fs.appendFile()","position":{"start":{"line":54,"column":58,"offset":1462},"end":{"line":54,"column":75,"offset":1479},"indent":[]}},{"type":"text","value":" (and its ","position":{"start":{"line":54,"column":75,"offset":1479},"end":{"line":54,"column":85,"offset":1489},"indent":[]}},{"type":"inlineCode","value":"fs.appendFileSync()","position":{"start":{"line":54,"column":85,"offset":1489},"end":{"line":54,"column":106,"offset":1510},"indent":[]}},{"type":"text","value":" counterpart):","position":{"start":{"line":54,"column":106,"offset":1510},"end":{"line":54,"column":120,"offset":1524},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":1405},"end":{"line":54,"column":120,"offset":1524},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const content = 'Some content!';\n\nfs.appendFile('file.log', content, (err) => {\n    if (err) {\n        console.error(err);\n        return;\n    }\n    //done!\n});","position":{"start":{"line":56,"column":1,"offset":1526},"end":{"line":66,"column":4,"offset":1696},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Using streams","position":{"start":{"line":68,"column":4,"offset":1701},"end":{"line":68,"column":17,"offset":1714},"indent":[]}}],"position":{"start":{"line":68,"column":1,"offset":1698},"end":{"line":68,"column":17,"offset":1714},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"All those methods write the full content to the file before returning the control back to your program (in the async version, this means executing the callback)","position":{"start":{"line":70,"column":1,"offset":1716},"end":{"line":70,"column":161,"offset":1876},"indent":[]}}],"position":{"start":{"line":70,"column":1,"offset":1716},"end":{"line":70,"column":161,"offset":1876},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In this case, a better option is to write the file content using streams.","position":{"start":{"line":72,"column":1,"offset":1878},"end":{"line":72,"column":74,"offset":1951},"indent":[]}}],"position":{"start":{"line":72,"column":1,"offset":1878},"end":{"line":72,"column":74,"offset":1951},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"72","position":{"start":{"line":74,"column":1,"offset":1953},"end":{"line":74,"column":3,"offset":1955},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":1953},"end":{"line":74,"column":3,"offset":1955},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://stackoverflow.com/posts/11194896/timeline","children":[],"position":{"start":{"line":76,"column":1,"offset":1957},"end":{"line":76,"column":54,"offset":2010},"indent":[]}}],"position":{"start":{"line":76,"column":1,"offset":1957},"end":{"line":76,"column":54,"offset":2010},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Here's a sketch. Error handling is left as an exercise for the reader.","position":{"start":{"line":78,"column":1,"offset":2012},"end":{"line":78,"column":71,"offset":2082},"indent":[]}}],"position":{"start":{"line":78,"column":1,"offset":2012},"end":{"line":78,"column":71,"offset":2082},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"let fs = require('fs'),\n    path = require('path');\n\nfunction dirTree(filename) {\n    let stats = fs.lstatSync(filename),\n        info = {\n            path: filename,\n            name: path.basename(filename)\n        };\n\n    if (stats.isDirectory()) {\n        info.type = 'folder';\n        info.children = fs.readdirSync(filename).map(function (child) {\n            return dirTree(filename + '/' + child);\n        });\n    } else {\n        // Assuming it's a file. In real life it could be a symlink or\n        // something else!\n        info.type = 'file';\n    }\n\n    return info;\n}\n\nif (module.parent == undefined) {\n    // node dirTree.js ~/foo/bar\n    let util = require('util');\n    console.log(util.inspect(dirTree(process.argv[2]), false, null));\n}","position":{"start":{"line":80,"column":1,"offset":2084},"end":{"line":110,"column":4,"offset":2848},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":111,"column":1,"offset":2849}}}}