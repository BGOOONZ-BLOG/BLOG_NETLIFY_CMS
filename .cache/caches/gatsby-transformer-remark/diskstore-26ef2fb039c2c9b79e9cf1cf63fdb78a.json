{"expireTime":9007200904342772000,"key":"transformer-remark-markdown-html-d8eba595f3d3148331baf93a3ef98356--","val":"<h1>Rules</h1>\n<p>This document contains a description of all rules, what they are checking for,\nas well as examples of documents that break the rule and corrected\nversions of the examples. Any rule whose heading is <del>struck through</del> is\ndeprecated, but still provided for backward-compatibility.</p>\n<p><a name=\"md001\"></a></p>\n<h2>MD001 - Heading levels should only increment by one level at a time</h2>\n<p>Tags: headings, headers</p>\n<p>Aliases: heading-increment, header-increment</p>\n<p>This rule is triggered when you skip heading levels in a markdown document, for\nexample:</p>\n<pre><code class=\"language-markdown\"># Heading 1\n\n### Heading 3\n\nWe skipped out a 2nd level heading in this document\n</code></pre>\n<p>When using multiple heading levels, nested headings should increase by only one\nlevel at a time:</p>\n<pre><code class=\"language-markdown\"># Heading 1\n\n## Heading 2\n\n### Heading 3\n\n#### Heading 4\n\n## Another Heading 2\n\n### Another Heading 3\n</code></pre>\n<p>Rationale: Headings represent the structure of a document and can be confusing\nwhen skipped - especially for accessibility scenarios. More information:\n<a href=\"https://www.w3.org/WAI/tutorials/page-structure/headings/\">https://www.w3.org/WAI/tutorials/page-structure/headings/</a>.</p>\n<p><a name=\"md002\"></a></p>\n<h2><del>MD002 - First heading should be a top-level heading</del></h2>\n<p>Tags: headings, headers</p>\n<p>Aliases: first-heading-h1, first-header-h1</p>\n<p>Parameters: level (number; default 1)</p>\n<blockquote>\n<p>Note: <em>MD002 has been deprecated and is disabled by default.</em> > <a href=\"#md041\">MD041/first-line-heading</a> offers an improved implementation.</p>\n</blockquote>\n<p>This rule is intended to ensure document headings start at the top level and\nis triggered when the first heading in the document isn't an h1 heading:</p>\n<pre><code class=\"language-markdown\">## This isn't an H1 heading\n\n### Another heading\n</code></pre>\n<p>The first heading in the document should be an h1 heading:</p>\n<pre><code class=\"language-markdown\"># Start with an H1 heading\n\n## Then use an H2 for subsections\n</code></pre>\n<p>Note: The <code>level</code> parameter can be used to change the top-level (ex: to h2) in\ncases where an h1 is added externally.</p>\n<p>Rationale: The top-level heading often acts as the title of a document. More\ninformation: <a href=\"https://cirosantilli.com/markdown-style-guide#top-level-header\">https://cirosantilli.com/markdown-style-guide#top-level-header</a>.</p>\n<p><a name=\"md003\"></a></p>\n<h2>MD003 - Heading style</h2>\n<p>Tags: headings, headers</p>\n<p>Aliases: heading-style, header-style</p>\n<p>Parameters: style (\"consistent\", \"atx\", \"atx<em>closed\", \"setext\",\n\"setext</em>with<em>atx\", \"setext</em>with<em>atx</em>closed\"; default \"consistent\")</p>\n<p>This rule is triggered when different heading styles (atx, setext, and 'closed'\natx) are used in the same document:</p>\n<pre><code class=\"language-markdown\"># ATX style H1\n\n## Closed ATX style H2\n\n# Setext style H1\n</code></pre>\n<p>Be consistent with the style of heading used in a document:</p>\n<pre><code class=\"language-markdown\"># ATX style H1\n\n## ATX style H2\n</code></pre>\n<p>The setext<em>with</em>atx and setext<em>with</em>atx_closed doc styles allow atx-style\nheadings of level 3 or more in documents with setext style headings:</p>\n<pre><code class=\"language-markdown\"># Setext style H1\n\n## Setext style H2\n\n### ATX style H3\n</code></pre>\n<p>Note: the configured heading style can be a specific style to use (atx,\natx<em>closed, setext, setext</em>with<em>atx, setext</em>with<em>atx</em>closed), or simply require\nthat the usage is consistent within the document.</p>\n<p>Rationale: Consistent formatting makes it easier to understand a document.</p>\n<p><a name=\"md004\"></a></p>\n<h2>MD004 - Unordered list style</h2>\n<p>Tags: bullet, ul</p>\n<p>Aliases: ul-style</p>\n<p>Parameters: style (\"consistent\", \"asterisk\", \"plus\", \"dash\", \"sublist\"; default\n\"consistent\")</p>\n<p>Fixable: Most violations can be fixed by tooling</p>\n<p>This rule is triggered when the symbols used in the document for unordered\nlist items do not match the configured unordered list style:</p>\n<pre><code class=\"language-markdown\">-   Item 1\n\n*   Item 2\n\n-   Item 3\n</code></pre>\n<p>To fix this issue, use the configured style for list items throughout the\ndocument:</p>\n<pre><code class=\"language-markdown\">-   Item 1\n-   Item 2\n-   Item 3\n</code></pre>\n<p>The configured list style can be a specific symbol to use (asterisk, plus, dash),\nto ensure that all list styling is consistent, or to ensure that each\nsublist has a consistent symbol that differs from its parent list.</p>\n<p>For example, the following is valid for the <code>sublist</code> style because the outer-most\nindent uses asterisk, the middle indent uses plus, and the inner-most indent uses\ndash:</p>\n<pre><code class=\"language-markdown\">-   Item 1\n    -   Item 2\n        -   Item 3\n    -   Item 4\n-   Item 4\n    -   Item 5\n</code></pre>\n<p>Rationale: Consistent formatting makes it easier to understand a document.</p>\n<p><a name=\"md005\"></a></p>\n<h2>MD005 - Inconsistent indentation for list items at the same level</h2>\n<p>Tags: bullet, ul, indentation</p>\n<p>Aliases: list-indent</p>\n<p>Fixable: Most violations can be fixed by tooling</p>\n<p>This rule is triggered when list items are parsed as being at the same level,\nbut don't have the same indentation:</p>\n<pre><code class=\"language-markdown\">-   Item 1\n    -   Nested Item 1\n    -   Nested Item 2\n    -   A misaligned item\n</code></pre>\n<p>Usually, this rule will be triggered because of a typo. Correct the indentation\nfor the list to fix it:</p>\n<pre><code class=\"language-markdown\">-   Item 1\n    -   Nested Item 1\n    -   Nested Item 2\n    -   Nested Item 3\n</code></pre>\n<p>Sequentially-ordered list markers are usually left-aligned such that all items\nhave the same starting column:</p>\n<pre><code class=\"language-markdown\">... 8. Item 9. Item 10. Item 11. Item\n...\n</code></pre>\n<p>This rule also supports right-alignment of list markers such that all items have\nthe same ending column:</p>\n<pre><code class=\"language-markdown\">... 8. Item 9. Item 10. Item 11. Item\n...\n</code></pre>\n<p>Rationale: Violations of this rule can lead to improperly rendered content.</p>\n<p><a name=\"md006\"></a></p>\n<h2><del>MD006 - Consider starting bulleted lists at the beginning of the line</del></h2>\n<p>Tags: bullet, ul, indentation</p>\n<p>Aliases: ul-start-left</p>\n<p>Fixable: Most violations can be fixed by tooling</p>\n<p>This rule is triggered when top-level lists don't start at the beginning of a\nline:</p>\n<pre><code class=\"language-markdown\">Some text\n\n-   List item\n-   List item\n</code></pre>\n<p>To fix, ensure that top-level list items are not indented:</p>\n<pre><code class=\"language-markdown\">Some test\n\n-   List item\n-   List item\n</code></pre>\n<p>Note: This rule is triggered for the following scenario because the unordered\nsublist is not recognized as such by the parser. Not being nested 3 characters\nas required by the outer ordered list, it creates a top-level unordered list\ninstead.</p>\n<pre><code class=\"language-markdown\">1. List item\n\n-   List item\n-   List item\n\n1. List item\n</code></pre>\n<p>Rationale: Starting lists at the beginning of the line means that nested list\nitems can all be indented by the same amount when an editor's indent function\nor the tab key is used to indent. Starting a list 1 space in means that the\nindent of the first nested list is less than the indent of the second level (3\ncharacters if you use 4 space tabs, or 1 character if you use 2 space tabs).</p>\n<p><a name=\"md007\"></a></p>\n<h2>MD007 - Unordered list indentation</h2>\n<p>Tags: bullet, ul, indentation</p>\n<p>Aliases: ul-indent</p>\n<p>Parameters: indent, start_indented (number; default 2, boolean; default false)</p>\n<p>Fixable: Most violations can be fixed by tooling</p>\n<p>This rule is triggered when list items are not indented by the configured\nnumber of spaces (default: 2).</p>\n<p>Example:</p>\n<pre><code class=\"language-markdown\">-   List item\n    -   Nested list item indented by 3 spaces\n</code></pre>\n<p>Corrected Example:</p>\n<pre><code class=\"language-markdown\">-   List item\n    -   Nested list item indented by 2 spaces\n</code></pre>\n<p>Note: This rule applies to a sublist only if its parent lists are all also\nunordered (otherwise, extra indentation of ordered lists interferes with the\nrule).</p>\n<p>The <code>start_indented</code> parameter allows the first level of lists to be indented by\nthe configured number of spaces rather than starting at zero (the inverse of\nMD006).</p>\n<p>Rationale: Indenting by 2 spaces allows the content of a nested list to be in\nline with the start of the content of the parent list when a single space is\nused after the list marker. Indenting by 4 spaces is consistent with code blocks\nand simpler for editors to implement. Additionally, this can be a compatibility\nissue for multi-markdown parsers, which require 4-space indents. More information:\n<a href=\"https://cirosantilli.com/markdown-style-guide#indentation-of-content-inside-lists\">https://cirosantilli.com/markdown-style-guide#indentation-of-content-inside-lists</a>\nand <a href=\"http://support.markedapp.com/discussions/problems/21-sub-lists-not-indenting\">http://support.markedapp.com/discussions/problems/21-sub-lists-not-indenting</a>.</p>\n<p>Note: See <a href=\"Prettier.md\">Prettier.md</a> for compatibility information.</p>\n<p><a name=\"md009\"></a></p>\n<h2>MD009 - Trailing spaces</h2>\n<p>Tags: whitespace</p>\n<p>Aliases: no-trailing-spaces</p>\n<!-- markdownlint-disable line-length -->\n<p>Parameters: br<em>spaces, list</em>item<em>empty</em>lines, strict (number; default 2, boolean; default false, boolean; default false)</p>\n<!-- markdownlint-restore -->\n<p>Fixable: Most violations can be fixed by tooling</p>\n<p>This rule is triggered on any lines that end with unexpected whitespace. To fix this,\nremove the trailing space from the end of the line.</p>\n<p>Note: Trailing space is allowed in indented and fenced code blocks because some\nlanguages require it.</p>\n<p>The <code>br_spaces</code> parameter allows an exception to this rule for a specific number\nof trailing spaces, typically used to insert an explicit line break. The default\nvalue allows 2 spaces to indicate a hard break (&#x3C;br> element).</p>\n<p>Note: You must set <code>br_spaces</code> to a value >= 2 for this parameter to take effect.\nSetting <code>br_spaces</code> to 1 behaves the same as 0, disallowing any trailing spaces.</p>\n<p>By default, this rule will not trigger when the allowed number of spaces is used,\neven when it doesn't create a hard break (for example, at the end of a paragraph).\nTo report such instances as well, set the <code>strict</code> parameter to <code>true</code>.</p>\n<pre><code class=\"language-markdown\">Text text text\ntext[2 spaces]\n</code></pre>\n<p>Using spaces to indent blank lines inside a list item is usually not necessary,\nbut some parsers require it. Set the <code>list_item_empty_lines</code> parameter to <code>true</code>\nto allow this (even when <code>strict</code> is <code>true</code>):</p>\n<pre><code class=\"language-markdown\">-   list item text\n    [2 spaces]\n    list item text\n</code></pre>\n<p>Rationale: Except when being used to create a line break, trailing whitespace\nhas no purpose and does not affect the rendering of content.</p>\n<p><a name=\"md010\"></a></p>\n<h2>MD010 - Hard tabs</h2>\n<p>Tags: whitespace, hard_tab</p>\n<p>Aliases: no-hard-tabs</p>\n<p>Parameters: code<em>blocks, spaces</em>per_tab (boolean; default true, number; default 1)</p>\n<p>Fixable: Most violations can be fixed by tooling</p>\n<p>This rule is triggered by any lines that contain hard tab characters instead\nof using spaces for indentation. To fix this, replace any hard tab characters\nwith spaces instead.</p>\n<p>Example:</p>\n<!-- markdownlint-disable no-hard-tabs -->\n<pre><code class=\"language-markdown\">Some text\n\n    * hard tab character used to indent the list item\n</code></pre>\n<!-- markdownlint-restore -->\n<p>Corrected example:</p>\n<pre><code class=\"language-markdown\">Some text\n\n    * Spaces used to indent the list item instead\n</code></pre>\n<p>You have the option to exclude this rule for code blocks. To do so, set the\n<code>code_blocks</code> parameter to <code>false</code>. Code blocks are included by default since\nhandling of tabs by tools is often inconsistent (ex: using 4 vs. 8 spaces).</p>\n<p>If you would like the fixer to change tabs to x spaces, then configure the <code>spaces_per_tab</code>\nparameter to the number x. The default value would be 1.</p>\n<p>Rationale: Hard tabs are often rendered inconsistently by different editors and\ncan be harder to work with than spaces.</p>\n<p><a name=\"md011\"></a></p>\n<h2>MD011 - Reversed link syntax</h2>\n<p>Tags: links</p>\n<p>Aliases: no-reversed-links</p>\n<p>Fixable: Most violations can be fixed by tooling</p>\n<p>This rule is triggered when text that appears to be a link is encountered, but\nwhere the syntax appears to have been reversed (the <code>[]</code> and <code>()</code> are\nreversed):</p>\n<pre><code class=\"language-markdown\">(Incorrect link syntax)[https://www.example.com/]\n</code></pre>\n<p>To fix this, swap the <code>[]</code> and <code>()</code> around:</p>\n<pre><code class=\"language-markdown\">[Correct link syntax](https://www.example.com/)\n</code></pre>\n<p>Note: <a href=\"https://en.wikipedia.org/wiki/Markdown_Extra\">Markdown Extra</a>-style\nfootnotes do not trigger this rule:</p>\n<pre><code class=\"language-markdown\">For (example)[^1]\n</code></pre>\n<p>Rationale: Reversed links are not rendered as usable links.</p>\n<p><a name=\"md012\"></a></p>\n<h2>MD012 - Multiple consecutive blank lines</h2>\n<p>Tags: whitespace, blank_lines</p>\n<p>Aliases: no-multiple-blanks</p>\n<p>Parameters: maximum (number; default 1)</p>\n<p>Fixable: Most violations can be fixed by tooling</p>\n<p>This rule is triggered when there are multiple consecutive blank lines in the\ndocument:</p>\n<pre><code class=\"language-markdown\">Some text here\n\nSome more text here\n</code></pre>\n<p>To fix this, delete the offending lines:</p>\n<pre><code class=\"language-markdown\">Some text here\n\nSome more text here\n</code></pre>\n<p>Note: this rule will not be triggered if there are multiple consecutive blank\nlines inside code blocks.</p>\n<p>Note: The <code>maximum</code> parameter can be used to configure the maximum number of\nconsecutive blank lines.</p>\n<p>Rationale: Except in a code block, blank lines serve no purpose and do not\naffect the rendering of content.</p>\n<p><a name=\"md013\"></a></p>\n<h2>MD013 - Line length</h2>\n<p>Tags: line_length</p>\n<p>Aliases: line-length</p>\n<!-- markdownlint-disable line-length -->\n<p>Parameters: line<em>length, heading</em>line<em>length, code</em>block<em>line</em>length, code<em>blocks, tables, headings, headers, strict, stern (number; default 80 for *\\</em>length, boolean; default true (except strict/stern which default false))</p>\n<!-- markdownlint-restore -->\n<blockquote>\n<p>If <code>headings</code> is not provided, <code>headers</code> (deprecated) will be used.</p>\n</blockquote>\n<p>This rule is triggered when there are lines that are longer than the\nconfigured <code>line_length</code> (default: 80 characters). To fix this, split the line\nup into multiple lines. To set a different maximum length for headings, use\n<code>heading_line_length</code>. To set a different maximum length for code blocks, use\n<code>code_block_line_length</code></p>\n<p>This rule has an exception when there is no whitespace beyond the configured\nline length. This allows you to still include items such as long URLs without\nbeing forced to break them in the middle. To disable this exception, set the\n<code>strict</code> parameter to <code>true</code> to report an issue when any line is too long.\nTo warn for lines that are too long and could be fixed but allow lines without\nspaces, set the <code>stern</code> parameter to <code>true</code>.</p>\n<p>For example (assuming normal behavior):</p>\n<pre><code class=\"language-markdown\">IF THIS LINE IS THE MAXIMUM LENGTH\nThis line is okay because there are-no-spaces-beyond-that-length\nAnd this line is a violation because there are\nThis-line-is-also-okay-because-there-are-no-spaces\n</code></pre>\n<p>In <code>strict</code> or <code>stern</code> modes, the two middle lines above are a violation. The\nthird line is a violation in <code>strict</code> mode but allowed in <code>stern</code> mode.</p>\n<p>You have the option to exclude this rule for code blocks, tables, or headings.\nTo do so, set the <code>code_blocks</code>, <code>tables</code>, or <code>headings</code> parameter(s) to false.</p>\n<p>Code blocks are included in this rule by default since it is often a\nrequirement for document readability, and tentatively compatible with code\nrules. Still, some languages do not lend themselves to short lines.</p>\n<p>Rationale: Extremely long lines can be difficult to work with in some editors.\nMore information: <a href=\"https://cirosantilli.com/markdown-style-guide#line-wrapping\">https://cirosantilli.com/markdown-style-guide#line-wrapping</a>.</p>\n<p><a name=\"md014\"></a></p>\n<h2>MD014 - Dollar signs used before commands without showing output</h2>\n<p>Tags: code</p>\n<p>Aliases: commands-show-output</p>\n<p>Fixable: Most violations can be fixed by tooling</p>\n<p>This rule is triggered when there are code blocks showing shell commands to be\ntyped, and <em>all</em> of the shell commands are preceded by dollar signs ($):</p>\n<!-- markdownlint-disable commands-show-output -->\n<pre><code class=\"language-markdown\">$ ls\n$ cat foo\n$ less bar\n</code></pre>\n<!-- markdownlint-restore -->\n<p>The dollar signs are unnecessary in this situation, and should not be\nincluded:</p>\n<pre><code class=\"language-markdown\">ls\ncat foo\nless bar\n</code></pre>\n<p>Showing output for commands preceded by dollar signs does not trigger this rule:</p>\n<pre><code class=\"language-markdown\">$ ls\nfoo bar\n$ cat foo\nHello world\n$ cat bar\nbaz\n</code></pre>\n<p>Because some commands do not produce output, it is not a violation if <em>some</em>\ncommands do not have output:</p>\n<pre><code class=\"language-markdown\">$ mkdir test\nmkdir: created directory 'test'\n$ ls test\n</code></pre>\n<p>Rationale: It is easier to copy/paste and less noisy if the dollar signs\nare omitted when they are not needed. See\n<a href=\"https://cirosantilli.com/markdown-style-guide#dollar-signs-in-shell-code\">https://cirosantilli.com/markdown-style-guide#dollar-signs-in-shell-code</a>\nfor more information.</p>\n<p><a name=\"md018\"></a></p>\n<h2>MD018 - No space after hash on atx style heading</h2>\n<p>Tags: headings, headers, atx, spaces</p>\n<p>Aliases: no-missing-space-atx</p>\n<p>Fixable: Most violations can be fixed by tooling</p>\n<p>This rule is triggered when spaces are missing after the hash characters\nin an atx style heading:</p>\n<pre><code class=\"language-markdown\">#Heading 1\n\n##Heading 2\n</code></pre>\n<p>To fix this, separate the heading text from the hash character by a single\nspace:</p>\n<pre><code class=\"language-markdown\"># Heading 1\n\n## Heading 2\n</code></pre>\n<p>Rationale: Violations of this rule can lead to improperly rendered content.</p>\n<p><a name=\"md019\"></a></p>\n<h2>MD019 - Multiple spaces after hash on atx style heading</h2>\n<p>Tags: headings, headers, atx, spaces</p>\n<p>Aliases: no-multiple-space-atx</p>\n<p>Fixable: Most violations can be fixed by tooling</p>\n<p>This rule is triggered when more than one space is used to separate the\nheading text from the hash characters in an atx style heading:</p>\n<pre><code class=\"language-markdown\"># Heading 1\n\n## Heading 2\n</code></pre>\n<p>To fix this, separate the heading text from the hash character by a single\nspace:</p>\n<pre><code class=\"language-markdown\"># Heading 1\n\n## Heading 2\n</code></pre>\n<p>Rationale: Extra space has no purpose and does not affect the rendering of\ncontent.</p>\n<p><a name=\"md020\"></a></p>\n<h2>MD020 - No space inside hashes on closed atx style heading</h2>\n<p>Tags: headings, headers, atx_closed, spaces</p>\n<p>Aliases: no-missing-space-closed-atx</p>\n<p>Fixable: Most violations can be fixed by tooling</p>\n<p>This rule is triggered when spaces are missing inside the hash characters\nin a closed atx style heading:</p>\n<pre><code class=\"language-markdown\">#Heading 1#\n\n##Heading 2##\n</code></pre>\n<p>To fix this, separate the heading text from the hash character by a single\nspace:</p>\n<pre><code class=\"language-markdown\"># Heading 1\n\n## Heading 2\n</code></pre>\n<p>Note: this rule will fire if either side of the heading is missing spaces.</p>\n<p>Rationale: Violations of this rule can lead to improperly rendered content.</p>\n<p><a name=\"md021\"></a></p>\n<h2>MD021 - Multiple spaces inside hashes on closed atx style heading</h2>\n<p>Tags: headings, headers, atx_closed, spaces</p>\n<p>Aliases: no-multiple-space-closed-atx</p>\n<p>Fixable: Most violations can be fixed by tooling</p>\n<p>This rule is triggered when more than one space is used to separate the\nheading text from the hash characters in a closed atx style heading:</p>\n<pre><code class=\"language-markdown\"># Heading 1\n\n## Heading 2\n</code></pre>\n<p>To fix this, separate the heading text from the hash character by a single\nspace:</p>\n<pre><code class=\"language-markdown\"># Heading 1\n\n## Heading 2\n</code></pre>\n<p>Note: this rule will fire if either side of the heading contains multiple\nspaces.</p>\n<p>Rationale: Extra space has no purpose and does not affect the rendering of\ncontent.</p>\n<p><a name=\"md022\"></a></p>\n<h2>MD022 - Headings should be surrounded by blank lines</h2>\n<p>Tags: headings, headers, blank_lines</p>\n<p>Aliases: blanks-around-headings, blanks-around-headers</p>\n<p>Parameters: lines<em>above, lines</em>below (number; default 1)</p>\n<p>Fixable: Most violations can be fixed by tooling</p>\n<p>This rule is triggered when headings (any style) are either not preceded or not\nfollowed by at least one blank line:</p>\n<pre><code class=\"language-markdown\"># Heading 1\n\nSome text\n\nSome more text\n\n## Heading 2\n</code></pre>\n<p>To fix this, ensure that all headings have a blank line both before and after\n(except where the heading is at the beginning or end of the document):</p>\n<pre><code class=\"language-markdown\"># Heading 1\n\nSome text\n\nSome more text\n\n## Heading 2\n</code></pre>\n<p>The <code>lines_above</code> and <code>lines_below</code> parameters can be used to specify a different\nnumber of blank lines (including 0) above or below each heading.</p>\n<p>Note: If <code>lines_above</code> or <code>lines_below</code> are configured to require more than one\nblank line, <a href=\"#md012\">MD012/no-multiple-blanks</a> should also be customized.</p>\n<p>Rationale: Aside from aesthetic reasons, some parsers, including <code>kramdown</code>, will\nnot parse headings that don't have a blank line before, and will parse them as\nregular text.</p>\n<p><a name=\"md023\"></a></p>\n<h2>MD023 - Headings must start at the beginning of the line</h2>\n<p>Tags: headings, headers, spaces</p>\n<p>Aliases: heading-start-left, header-start-left</p>\n<p>Fixable: Most violations can be fixed by tooling</p>\n<p>This rule is triggered when a heading is indented by one or more spaces:</p>\n<pre><code class=\"language-markdown\">Some text\n\n# Indented heading\n</code></pre>\n<p>To fix this, ensure that all headings start at the beginning of the line:</p>\n<pre><code class=\"language-markdown\">Some text\n\n# Heading\n</code></pre>\n<p>Rationale: Headings that don't start at the beginning of the line will not be\nparsed as headings, and will instead appear as regular text.</p>\n<p><a name=\"md024\"></a></p>\n<h2>MD024 - Multiple headings with the same content</h2>\n<p>Tags: headings, headers</p>\n<p>Aliases: no-duplicate-heading, no-duplicate-header</p>\n<p>Parameters: siblings<em>only, allow</em>different_nesting (boolean; default <code>false</code>)</p>\n<p>This rule is triggered if there are multiple headings in the document that have\nthe same text:</p>\n<pre><code class=\"language-markdown\"># Some text\n\n## Some text\n</code></pre>\n<p>To fix this, ensure that the content of each heading is different:</p>\n<pre><code class=\"language-markdown\"># Some text\n\n## Some more text\n</code></pre>\n<p>If the parameter <code>siblings_only</code> (alternatively <code>allow_different_nesting</code>) is\nset to <code>true</code>, heading duplication is allowed for non-sibling headings (common\nin changelogs):</p>\n<pre><code class=\"language-markdown\"># Change log\n\n## 1.0.0\n\n### Features\n\n## 2.0.0\n\n### Features\n</code></pre>\n<p>Rationale: Some markdown parsers generate anchors for headings based on the\nheading name; headings with the same content can cause problems with that.</p>\n<p><a name=\"md025\"></a></p>\n<h2>MD025 - Multiple top-level headings in the same document</h2>\n<p>Tags: headings, headers</p>\n<p>Aliases: single-title, single-h1</p>\n<p>Parameters: level, front<em>matter</em>title (number; default 1, string; default \"^\\s<em>\"?title\"?\\s</em>[:=]\")</p>\n<p>This rule is triggered when a top-level heading is in use (the first line of\nthe file is an h1 heading), and more than one h1 heading is in use in the\ndocument:</p>\n<pre><code class=\"language-markdown\"># Top level heading\n\n# Another top-level heading\n</code></pre>\n<p>To fix, structure your document so there is a single h1 heading that is\nthe title for the document. Subsequent headings must be\nlower-level headings (h2, h3, etc.):</p>\n<pre><code class=\"language-markdown\"># Title\n\n## Heading\n\n## Another heading\n</code></pre>\n<p>Note: The <code>level</code> parameter can be used to change the top-level (ex: to h2) in\ncases where an h1 is added externally.</p>\n<p>If <a href=\"https://en.wikipedia.org/wiki/YAML\">YAML</a> front matter is present and contains\na <code>title</code> property (commonly used with blog posts), this rule treats that as a top\nlevel heading and will report a violation for any subsequent top-level headings.\nTo use a different property name in the front matter, specify the text of a regular\nexpression via the <code>front_matter_title</code> parameter. To disable the use of front\nmatter by this rule, specify <code>\"\"</code> for <code>front_matter_title</code>.</p>\n<p>Rationale: A top-level heading is an h1 on the first line of the file, and\nserves as the title for the document. If this convention is in use, then there\ncan not be more than one title for the document, and the entire document\nshould be contained within this heading.</p>\n<p><a name=\"md026\"></a></p>\n<h2>MD026 - Trailing punctuation in heading</h2>\n<p>Tags: headings, headers</p>\n<p>Aliases: no-trailing-punctuation</p>\n<p>Parameters: punctuation (string; default \".,;:!。，；：！\")</p>\n<p>Fixable: Most violations can be fixed by tooling</p>\n<p>This rule is triggered on any heading that has one of the specified normal or\nfull-width punctuation characters as the last character in the line:</p>\n<pre><code class=\"language-markdown\"># This is a heading.\n</code></pre>\n<p>To fix this, remove the trailing punctuation:</p>\n<pre><code class=\"language-markdown\"># This is a heading\n</code></pre>\n<p>Note: The <code>punctuation</code> parameter can be used to specify what characters count\nas punctuation at the end of a heading. For example, you can change it to\n<code>\".,;:\"</code> to allow headings that end with an exclamation point. <code>?</code> is\nallowed by default because of how common it is in headings of FAQ-style documents.\nSetting the <code>punctuation</code> parameter to <code>\"\"</code> allows all characters - and is\nequivalent to disabling the rule.</p>\n<p>Note: The trailing semicolon of\n<a href=\"https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references\">HTML entity references</a>\nlike <code>&#x26;copy;</code>, <code>&#x26;#169;</code>, and <code>&#x26;#x000A9;</code> is ignored by this rule.</p>\n<p>Rationale: Headings are not meant to be full sentences. More information:\n<a href=\"https://cirosantilli.com/markdown-style-guide#punctuation-at-the-end-of-headers\">https://cirosantilli.com/markdown-style-guide#punctuation-at-the-end-of-headers</a></p>\n<p><a name=\"md027\"></a></p>\n<h2>MD027 - Multiple spaces after blockquote symbol</h2>\n<p>Tags: blockquote, whitespace, indentation</p>\n<p>Aliases: no-multiple-space-blockquote</p>\n<p>Fixable: Most violations can be fixed by tooling</p>\n<p>This rule is triggered when blockquotes have more than one space after the\nblockquote (<code>></code>) symbol:</p>\n<pre><code class=\"language-markdown\">> This is a blockquote with bad indentation\n> there should only be one.\n</code></pre>\n<p>To fix, remove any extraneous space:</p>\n<pre><code class=\"language-markdown\">> This is a blockquote with correct\n> indentation.\n</code></pre>\n<p>Rationale: Consistent formatting makes it easier to understand a document.</p>\n<p><a name=\"md028\"></a></p>\n<h2>MD028 - Blank line inside blockquote</h2>\n<p>Tags: blockquote, whitespace</p>\n<p>Aliases: no-blanks-blockquote</p>\n<p>This rule is triggered when two blockquote blocks are separated by nothing\nexcept for a blank line:</p>\n<pre><code class=\"language-markdown\">> This is a blockquote\n> which is immediately followed by\n\n> this blockquote. Unfortunately\n> In some parsers, these are treated as the same blockquote.\n</code></pre>\n<p>To fix this, ensure that any blockquotes that are right next to each other\nhave some text in between:</p>\n<pre><code class=\"language-markdown\">> This is a blockquote.\n\nAnd Jimmy also said:\n\n> This too is a blockquote.\n</code></pre>\n<p>Alternatively, if they are supposed to be the same quote, then add the\nblockquote symbol at the beginning of the blank line:</p>\n<pre><code class=\"language-markdown\">> This is a blockquote.\n>\n> This is the same blockquote.\n</code></pre>\n<p>Rationale: Some markdown parsers will treat two blockquotes separated by one\nor more blank lines as the same blockquote, while others will treat them as\nseparate blockquotes.</p>\n<p><a name=\"md029\"></a></p>\n<h2>MD029 - Ordered list item prefix</h2>\n<p>Tags: ol</p>\n<p>Aliases: ol-prefix</p>\n<p>Parameters: style (\"one\", \"ordered\", \"one<em>or</em>ordered\", \"zero\"; default \"one<em>or</em>ordered\")</p>\n<p>This rule is triggered for ordered lists that do not either start with '1.' or\ndo not have a prefix that increases in numerical order (depending on the\nconfigured style). The less-common pattern of using '0.' as a first prefix or\nfor all prefixes is also supported.</p>\n<p>Example valid list if the style is configured as 'one':</p>\n<pre><code class=\"language-markdown\">1. Do this.\n1. Do that.\n1. Done.\n</code></pre>\n<p>Examples of valid lists if the style is configured as 'ordered':</p>\n<pre><code class=\"language-markdown\">1. Do this.\n2. Do that.\n3. Done.\n</code></pre>\n<pre><code class=\"language-markdown\">0. Do this.\n1. Do that.\n2. Done.\n</code></pre>\n<p>All three examples are valid when the style is configured as 'one<em>or</em>ordered'.</p>\n<p>Example valid list if the style is configured as 'zero':</p>\n<pre><code class=\"language-markdown\">0. Do this.\n1. Do that.\n2. Done.\n</code></pre>\n<p>Example invalid list for all styles:</p>\n<pre><code class=\"language-markdown\">1. Do this.\n2. Done.\n</code></pre>\n<p>This rule supports 0-prefixing ordered list items for uniform indentation:</p>\n<pre><code class=\"language-markdown\">... 08. Item 09. Item 10. Item 11. Item\n...\n</code></pre>\n<p>Note: This rule will report violations for cases like the following where an\nimproperly-indented code block (or similar) appears between two list items and\n\"breaks\" the list in two:</p>\n<!-- markdownlint-disable code-fence-style -->\n<pre><code class=\"language-markdown\">1. First list\n\n```text\nCode block\n</code></pre>\n<pre><code>1. Second list\n</code></pre>\n<p>The fix is to indent the code block so it becomes part of the preceding list\nitem as intended:</p>\n<pre><code class=\"language-markdown\">1. First list\n\n    ```text\n    Code block\n    ```\n\n2. Still first list\n</code></pre>\n<!-- markdownlint-restore -->\n<p>Rationale: Consistent formatting makes it easier to understand a document.</p>\n<p><a name=\"md030\"></a></p>\n<h2>MD030 - Spaces after list markers</h2>\n<p>Tags: ol, ul, whitespace</p>\n<p>Aliases: list-marker-space</p>\n<p>Parameters: ul<em>single, ol</em>single, ul<em>multi, ol</em>multi (number; default 1)</p>\n<p>Fixable: Most violations can be fixed by tooling</p>\n<p>This rule checks for the number of spaces between a list marker (e.g. '<code>-</code>',\n'<code>*</code>', '<code>+</code>' or '<code>1.</code>') and the text of the list item.</p>\n<p>The number of spaces checked for depends on the document style in use, but the\ndefault is 1 space after any list marker:</p>\n<pre><code class=\"language-markdown\">-   Foo\n-   Bar\n-   Baz\n\n1. Foo\n1. Bar\n1. Baz\n\n1. Foo\n    - Bar\n1. Baz\n</code></pre>\n<p>A document style may change the number of spaces after unordered list items\nand ordered list items independently, as well as based on whether the content\nof every item in the list consists of a single paragraph or multiple\nparagraphs (including sub-lists and code blocks).</p>\n<p>For example, the style guide at\n<a href=\"https://cirosantilli.com/markdown-style-guide#spaces-after-list-marker\">https://cirosantilli.com/markdown-style-guide#spaces-after-list-marker</a>\nspecifies that 1 space after the list marker should be used if every item in\nthe list fits within a single paragraph, but to use 2 or 3 spaces (for ordered\nand unordered lists respectively) if there are multiple paragraphs of content\ninside the list:</p>\n<pre><code class=\"language-markdown\">-   Foo\n-   Bar\n-   Baz\n</code></pre>\n<p>vs.</p>\n<pre><code class=\"language-markdown\">-   Foo\n\n    Second paragraph\n\n-   Bar\n</code></pre>\n<p>or</p>\n<pre><code class=\"language-markdown\">1.  Foo\n\n    Second paragraph\n\n1.  Bar\n</code></pre>\n<p>To fix this, ensure the correct number of spaces are used after the list marker\nfor your selected document style.</p>\n<p>Rationale: Violations of this rule can lead to improperly rendered content.</p>\n<p>Note: See <a href=\"Prettier.md\">Prettier.md</a> for compatibility information.</p>\n<p><a name=\"md031\"></a></p>\n<h2>MD031 - Fenced code blocks should be surrounded by blank lines</h2>\n<p>Tags: code, blank_lines</p>\n<p>Aliases: blanks-around-fences</p>\n<p>Parameters: list_items (boolean; default true)</p>\n<p>Fixable: Most violations can be fixed by tooling</p>\n<p>This rule is triggered when fenced code blocks are either not preceded or not\nfollowed by a blank line:</p>\n<pre><code class=\"language-markdown\">Some text\n</code></pre>\n<p>Code block</p>\n<pre><code></code></pre>\n<p>Another code block</p>\n<pre><code>Some more text\n</code></pre>\n<p>To fix this, ensure that all fenced code blocks have a blank line both before\nand after (except where the block is at the beginning or end of the document):</p>\n<pre><code class=\"language-markdown\">Some text\n</code></pre>\n<p>Code block</p>\n<pre><code></code></pre>\n<p>Another code block</p>\n<pre><code>Some more text\n</code></pre>\n<p>Set the <code>list_items</code> parameter to <code>false</code> to disable this rule for list items.\nDisabling this behavior for lists can be useful if it is necessary to create a\n<a href=\"https://spec.commonmark.org/0.29/#tight\">tight</a> list containing a code fence.</p>\n<p>Rationale: Aside from aesthetic reasons, some parsers, including kramdown, will\nnot parse fenced code blocks that don't have blank lines before and after them.</p>\n<p><a name=\"md032\"></a></p>\n<h2>MD032 - Lists should be surrounded by blank lines</h2>\n<p>Tags: bullet, ul, ol, blank_lines</p>\n<p>Aliases: blanks-around-lists</p>\n<p>Fixable: Most violations can be fixed by tooling</p>\n<p>This rule is triggered when lists (of any kind) are either not preceded or not\nfollowed by a blank line:</p>\n<pre><code class=\"language-markdown\">Some text\n\n-   Some\n-   List\n\n1. Some\n2. List\n   Some text\n</code></pre>\n<p>To fix this, ensure that all lists have a blank line both before and after\n(except where the block is at the beginning or end of the document):</p>\n<pre><code class=\"language-markdown\">Some text\n\n-   Some\n-   List\n\n1. Some\n2. List\n\nSome text\n</code></pre>\n<p>Rationale: Aside from aesthetic reasons, some parsers, including kramdown, will\nnot parse lists that don't have blank lines before and after them.</p>\n<p><a name=\"md033\"></a></p>\n<h2>MD033 - Inline HTML</h2>\n<p>Tags: html</p>\n<p>Aliases: no-inline-html</p>\n<p>Parameters: allowed_elements (array of string; default empty)</p>\n<p>This rule is triggered whenever raw HTML is used in a markdown document:</p>\n<pre><code class=\"language-markdown\">&#x3C;h1>Inline HTML heading&#x3C;/h1>\n</code></pre>\n<p>To fix this, use 'pure' markdown instead of including raw HTML:</p>\n<pre><code class=\"language-markdown\"># Markdown heading\n</code></pre>\n<p>Note: To allow specific HTML elements, use the 'allowed_elements' parameter.</p>\n<p>Rationale: Raw HTML is allowed in markdown, but this rule is included for\nthose who want their documents to only include \"pure\" markdown, or for those\nwho are rendering markdown documents in something other than HTML.</p>\n<p><a name=\"md034\"></a></p>\n<h2>MD034 - Bare URL used</h2>\n<p>Tags: links, url</p>\n<p>Aliases: no-bare-urls</p>\n<p>Fixable: Most violations can be fixed by tooling</p>\n<p>This rule is triggered whenever a URL is given that isn't surrounded by angle\nbrackets:</p>\n<pre><code class=\"language-markdown\">For more information, see https://www.example.com/.\n</code></pre>\n<p>To fix this, add angle brackets around the URL:</p>\n<pre><code class=\"language-markdown\">For more information, see &#x3C;https://www.example.com/>.\n</code></pre>\n<p>Note: To use a bare URL without it being converted into a link, enclose it in\na code block, otherwise in some markdown parsers it <em>will</em> be converted:</p>\n<pre><code class=\"language-markdown\">`https://www.example.com`\n</code></pre>\n<p>Note: The following scenario does <em>not</em> trigger this rule to avoid conflicts\nwith <code>MD011</code>/<code>no-reversed-links</code>:</p>\n<pre><code class=\"language-markdown\">[https://www.example.com]\n</code></pre>\n<p>The use of quotes around a bare link will <em>not</em> trigger this rule, either:</p>\n<pre><code class=\"language-markdown\">\"https://www.example.com\"\n'https://www.example.com'\n</code></pre>\n<p>Rationale: Without angle brackets, the URL isn't converted into a link by many\nmarkdown parsers.</p>\n<p><a name=\"md035\"></a></p>\n<h2>MD035 - Horizontal rule style</h2>\n<p>Tags: hr</p>\n<p>Aliases: hr-style</p>\n<p>Parameters: style (\"consistent\", \"---\", \"***\", or other string specifying the\nhorizontal rule; default \"consistent\")</p>\n<p>This rule is triggered when inconsistent styles of horizontal rules are used\nin the document:</p>\n<pre><code class=\"language-markdown\">---\n---\n\n---\n\n---\n\n---\n</code></pre>\n<p>To fix this, ensure any horizontal rules used in the document are consistent,\nor match the given style if the rule is so configured:</p>\n<pre><code class=\"language-markdown\">---\n---\n</code></pre>\n<p>Note: by default, this rule is configured to just require that all horizontal\nrules in the document are the same and will trigger if any of the horizontal\nrules are different than the first one encountered in the document. If you\nwant to configure the rule to match a specific style, the parameter given to\nthe 'style' option is a string containing the exact horizontal rule text that\nis allowed.</p>\n<p>Rationale: Consistent formatting makes it easier to understand a document.</p>\n<p><a name=\"md036\"></a></p>\n<h2>MD036 - Emphasis used instead of a heading</h2>\n<p>Tags: headings, headers, emphasis</p>\n<p>Aliases: no-emphasis-as-heading, no-emphasis-as-header</p>\n<p>Parameters: punctuation (string; default \".,;:!?。，；：！？\")</p>\n<p>This check looks for instances where emphasized (i.e. bold or italic) text is\nused to separate sections, where a heading should be used instead:</p>\n<pre><code class=\"language-markdown\">**My document**\n\nLorem ipsum dolor sit amet...\n\n_Another section_\n\nConsectetur adipiscing elit, sed do eiusmod.\n</code></pre>\n<p>To fix this, use markdown headings instead of emphasized text to denote\nsections:</p>\n<pre><code class=\"language-markdown\"># My document\n\nLorem ipsum dolor sit amet...\n\n## Another section\n\nConsectetur adipiscing elit, sed do eiusmod.\n</code></pre>\n<p>Note: This rule looks for single-line paragraphs that consist entirely\nof emphasized text. It won't fire on emphasis used within regular text,\nmulti-line emphasized paragraphs, or paragraphs ending in punctuation\n(normal or full-width). Similarly to rule MD026, you can configure what\ncharacters are recognized as punctuation.</p>\n<p>Rationale: Using emphasis instead of a heading prevents tools from inferring\nthe structure of a document. More information:\n<a href=\"https://cirosantilli.com/markdown-style-guide#emphasis-vs-headers\">https://cirosantilli.com/markdown-style-guide#emphasis-vs-headers</a>.</p>\n<p><a name=\"md037\"></a></p>\n<h2>MD037 - Spaces inside emphasis markers</h2>\n<p>Tags: whitespace, emphasis</p>\n<p>Aliases: no-space-in-emphasis</p>\n<p>Fixable: Most violations can be fixed by tooling</p>\n<p>This rule is triggered when emphasis markers (bold, italic) are used, but they\nhave spaces between the markers and the text:</p>\n<pre><code class=\"language-markdown\">Here is some ** bold ** text.\n\nHere is some _ italic _ text.\n\nHere is some more ** bold ** text.\n\nHere is some more _ italic _ text.\n</code></pre>\n<p>To fix this, remove the spaces around the emphasis markers:</p>\n<pre><code class=\"language-markdown\">Here is some **bold** text.\n\nHere is some _italic_ text.\n\nHere is some more **bold** text.\n\nHere is some more _italic_ text.\n</code></pre>\n<p>Rationale: Emphasis is only parsed as such when the asterisks/underscores\naren't surrounded by spaces. This rule attempts to detect where\nthey were surrounded by spaces, but it appears that emphasized text was\nintended by the author.</p>\n<p><a name=\"md038\"></a></p>\n<h2>MD038 - Spaces inside code span elements</h2>\n<p>Tags: whitespace, code</p>\n<p>Aliases: no-space-in-code</p>\n<p>Fixable: Most violations can be fixed by tooling</p>\n<p>This rule is triggered for code span elements that have spaces adjacent to the\nbackticks:</p>\n<pre><code class=\"language-markdown\">`some text `\n\n` some text`\n</code></pre>\n<p>To fix this, remove any spaces adjacent to the backticks:</p>\n<pre><code class=\"language-markdown\">`some text`\n</code></pre>\n<p>Note: A single leading and trailing space is allowed by the specification and\nautomatically trimmed (to allow for embedded backticks):</p>\n<pre><code class=\"language-markdown\">`` `backticks` ``\n</code></pre>\n<p>Note: A single leading or trailing space is allowed if used to separate code span\nmarkers from an embedded backtick:</p>\n<pre><code class=\"language-markdown\">`` ` embedded backtick``\n</code></pre>\n<p>Rationale: Violations of this rule can lead to improperly rendered content.</p>\n<p><a name=\"md039\"></a></p>\n<h2>MD039 - Spaces inside link text</h2>\n<p>Tags: whitespace, links</p>\n<p>Aliases: no-space-in-links</p>\n<p>Fixable: Most violations can be fixed by tooling</p>\n<p>This rule is triggered on links that have spaces surrounding the link text:</p>\n<pre><code class=\"language-markdown\">[ a link ](https://www.example.com/)\n</code></pre>\n<p>To fix this, remove the spaces surrounding the link text:</p>\n<pre><code class=\"language-markdown\">[a link](https://www.example.com/)\n</code></pre>\n<p>Rationale: Consistent formatting makes it easier to understand a document.</p>\n<p><a name=\"md040\"></a></p>\n<h2>MD040 - Fenced code blocks should have a language specified</h2>\n<p>Tags: code, language</p>\n<p>Aliases: fenced-code-language</p>\n<p>This rule is triggered when fenced code blocks are used, but a language isn't\nspecified:</p>\n<pre><code class=\"language-markdown\"></code></pre>\n<h1>!/bin/bash</h1>\n<p>echo Hello world</p>\n<pre><code></code></pre>\n<p>To fix this, add a language specifier to the code block:</p>\n<pre><code class=\"language-markdown\">```bash\n#!/bin/bash\necho Hello world\n</code></pre>\n<pre><code></code></pre>\n<pre><code>To display a code block without syntax highlighting, use:\n\n```markdown\n```text\nPlain text in a code block\n</code></pre>\n<pre><code></code></pre>\n<p>Rationale: Specifying a language improves content rendering by using the\ncorrect syntax highlighting for code. More information:\n<a href=\"https://cirosantilli.com/markdown-style-guide#option-code-fenced\">https://cirosantilli.com/markdown-style-guide#option-code-fenced</a>.</p>\n<p><a name=\"md041\"></a></p>\n<h2>MD041 - First line in a file should be a top-level heading</h2>\n<p>Tags: headings, headers</p>\n<p>Aliases: first-line-heading, first-line-h1</p>\n<p>Parameters: level, front<em>matter</em>title (number; default 1, string; default \"^\\s<em>\"?title\"?\\s</em>[:=]\")</p>\n<p>This rule is intended to ensure documents have a title and is triggered when\nthe first line in the file isn't a top-level (h1) heading:</p>\n<pre><code class=\"language-markdown\">This is a file without a heading\n</code></pre>\n<p>To fix this, add a top-level heading to the beginning of the file:</p>\n<pre><code class=\"language-markdown\"># File with heading\n\nThis is a file with a top-level heading\n</code></pre>\n<p>Because it is common for projects on GitHub to use an image for the heading of\n<code>README.md</code> and that is not well-supported by Markdown, HTML headings are also\npermitted by this rule. For example:</p>\n<pre><code class=\"language-markdown\">&#x3C;h1 align=\"center\">&#x3C;img src=\"https://placekitten.com/300/150\"/>&#x3C;/h1>\n\nThis is a file with a top-level HTML heading\n</code></pre>\n<p>Note: The <code>level</code> parameter can be used to change the top-level (ex: to h2) in cases\nwhere an h1 is added externally.</p>\n<p>If <a href=\"https://en.wikipedia.org/wiki/YAML\">YAML</a> front matter is present and\ncontains a <code>title</code> property (commonly used with blog posts), this rule will not\nreport a violation. To use a different property name in the front matter,\nspecify the text of a regular expression via the <code>front_matter_title</code> parameter.\nTo disable the use of front matter by this rule, specify <code>\"\"</code> for <code>front_matter_title</code>.</p>\n<p>Rationale: The top-level heading often acts as the title of a document. More\ninformation: <a href=\"https://cirosantilli.com/markdown-style-guide#top-level-header\">https://cirosantilli.com/markdown-style-guide#top-level-header</a>.</p>\n<p><a name=\"md042\"></a></p>\n<h2>MD042 - No empty links</h2>\n<p>Tags: links</p>\n<p>Aliases: no-empty-links</p>\n<p>This rule is triggered when an empty link is encountered:</p>\n<pre><code class=\"language-markdown\">[an empty link]()\n</code></pre>\n<p>To fix the violation, provide a destination for the link:</p>\n<pre><code class=\"language-markdown\">[a valid link](https://example.com/)\n</code></pre>\n<p>Empty fragments will trigger this rule:</p>\n<pre><code class=\"language-markdown\">[an empty fragment](#)\n</code></pre>\n<p>But non-empty fragments will not:</p>\n<pre><code class=\"language-markdown\">[a valid fragment](#fragment)\n</code></pre>\n<p>Rationale: Empty links do not lead anywhere and therefore don't function as links.</p>\n<p><a name=\"md043\"></a></p>\n<h2>MD043 - Required heading structure</h2>\n<p>Tags: headings, headers</p>\n<p>Aliases: required-headings, required-headers</p>\n<p>Parameters: headings, headers (array of string; default <code>null</code> for disabled)</p>\n<blockquote>\n<p>If <code>headings</code> is not provided, <code>headers</code> (deprecated) will be used.</p>\n</blockquote>\n<p>This rule is triggered when the headings in a file do not match the array of\nheadings passed to the rule. It can be used to enforce a standard heading\nstructure for a set of files.</p>\n<p>To require exactly the following structure:</p>\n<pre><code class=\"language-markdown\"># Head\n\n## Item\n\n### Detail\n</code></pre>\n<p>Set the <code>headings</code> parameter to:</p>\n<pre><code class=\"language-json\">[\"# Head\", \"## Item\", \"### Detail\"]\n</code></pre>\n<p>To allow optional headings as with the following structure:</p>\n<pre><code class=\"language-markdown\"># Head\n\n## Item\n\n### Detail (optional)\n\n## Foot\n\n### Notes (optional)\n</code></pre>\n<p>Use the special value <code>\"*\"</code> meaning \"zero or more unspecified headings\" or the\nspecial value <code>\"+\"</code> meaning \"one or more unspecified headings\" and set the\n<code>headings</code> parameter to:</p>\n<pre><code class=\"language-json\">[\"# Head\", \"## Item\", \"*\", \"## Foot\", \"*\"]\n</code></pre>\n<p>When an error is detected, this rule outputs the line number of the first\nproblematic heading (otherwise, it outputs the last line number of the file).</p>\n<p>Note that while the <code>headings</code> parameter uses the \"## Text\" ATX heading style for\nsimplicity, a file may use any supported heading style.</p>\n<p>Rationale: Projects may wish to enforce a consistent document structure across\na set of similar content.</p>\n<p><a name=\"md044\"></a></p>\n<h2>MD044 - Proper names should have the correct capitalization</h2>\n<p>Tags: spelling</p>\n<p>Aliases: proper-names</p>\n<p>Parameters: names, code_blocks (string array; default <code>null</code>, boolean; default <code>true</code>)</p>\n<p>Fixable: Most violations can be fixed by tooling</p>\n<p>This rule is triggered when any of the strings in the <code>names</code> array do not have\nthe specified capitalization. It can be used to enforce a standard letter case\nfor the names of projects and products.</p>\n<p>For example, the language \"JavaScript\" is usually written with both the 'J' and\n'S' capitalized - though sometimes the 's' or 'j' appear in lower-case. To enforce\nthe proper capitalization, specify the desired letter case in the <code>names</code> array:</p>\n<pre><code class=\"language-json\">[\"JavaScript\"]\n</code></pre>\n<p>Set the <code>code_blocks</code> parameter to <code>false</code> to disable this rule for code blocks.</p>\n<p>Rationale: Incorrect capitalization of proper names is usually a mistake.</p>\n<p><a name=\"md045\"></a></p>\n<h2>MD045 - Images should have alternate text (alt text)</h2>\n<p>Tags: accessibility, images</p>\n<p>Aliases: no-alt-text</p>\n<p>This rule is triggered when an image is missing alternate text (alt text) information.</p>\n<p>Alternate text is commonly specified inline as:</p>\n<pre><code class=\"language-markdown\">![Alternate text](image.jpg)\n</code></pre>\n<p>Or with reference syntax as:</p>\n<pre><code class=\"language-markdown\">![Alternate text][ref]\n\n...\n\n[ref]: image.jpg 'Optional title'\n</code></pre>\n<p>Guidance for writing alternate text is available from the <a href=\"https://www.w3.org/WAI/alt/\">W3C</a>,\n<a href=\"https://en.wikipedia.org/wiki/Alt_attribute\">Wikipedia</a>, and\n<a href=\"https://www.phase2technology.com/blog/no-more-excuses\">other locations</a>.</p>\n<p>Rationale: Alternate text is important for accessibility and describes the\ncontent of an image for people who may not be able to see it.</p>\n<p><a name=\"md046\"></a></p>\n<h2>MD046 - Code block style</h2>\n<p>Tags: code</p>\n<p>Aliases: code-block-style</p>\n<p>Parameters: style (\"consistent\", \"fenced\", \"indented\"; default \"consistent\")</p>\n<p>This rule is triggered when unwanted or different code block styles are used in\nthe same document.</p>\n<p>In the default configuration this rule reports a violation for the following document:</p>\n<!-- markdownlint-disable code-block-style -->\n<pre><code>Some text.\n\n    # Indented code\n\nMore text.\n\n```ruby\n# Fenced code\n```\n\nMore text.\n</code></pre>\n<!-- markdownlint-restore -->\n<p>To fix violations of this rule, use a consistent style (either indenting or code\nfences).</p>\n<p>The specified style can be specific (<code>fenced</code>, <code>indented</code>) or simply require\nthat usage be consistent within the document (<code>consistent</code>).</p>\n<p>Rationale: Consistent formatting makes it easier to understand a document.</p>\n<p><a name=\"md047\"></a></p>\n<h2>MD047 - Files should end with a single newline character</h2>\n<p>Tags: blank_lines</p>\n<p>Aliases: single-trailing-newline</p>\n<p>Fixable: Most violations can be fixed by tooling</p>\n<p>This rule is triggered when there is not a single newline character at the end\nof a file.</p>\n<p>An example that triggers the rule:</p>\n<pre><code class=\"language-markdown\"># Heading\n\nThis file ends without a newline.[EOF]\n</code></pre>\n<p>To fix the violation, add a newline character to the end of the file:</p>\n<pre><code class=\"language-markdown\"># Heading\n\nThis file ends with a newline.\n[EOF]\n</code></pre>\n<p>Rationale: Some programs have trouble with files that do not end with a newline.\nMore information: <a href=\"https://unix.stackexchange.com/questions/18743/whats-the-point-in-adding-a-new-line-to-the-end-of-a-file\">https://unix.stackexchange.com/questions/18743/whats-the-point-in-adding-a-new-line-to-the-end-of-a-file</a>.</p>\n<p><a name=\"md048\"></a></p>\n<h2>MD048 - Code fence style</h2>\n<p>Tags: code</p>\n<p>Aliases: code-fence-style</p>\n<p>Parameters: style (\"consistent\", \"tilde\", \"backtick\"; default \"consistent\")</p>\n<p>This rule is triggered when the symbols used in the document for fenced code\nblocks do not match the configured code fence style:</p>\n<pre><code class=\"language-markdown\">```ruby\n# Fenced code\n</code></pre>\n<pre><code></code></pre>\n<pre><code class=\"language-ruby\"># Fenced code\n</code></pre>\n<pre><code>To fix this issue, use the configured code fence style throughout the\ndocument:\n\n```markdown\n```ruby\n# Fenced code\n</code></pre>\n<pre><code class=\"language-ruby\"># Fenced code\n</code></pre>\n<pre><code>The configured list style can be a specific symbol to use (backtick, tilde), or\ncan require that usage be consistent within the document.\n\nRationale: Consistent formatting makes it easier to understand a document.\n</code></pre>"}