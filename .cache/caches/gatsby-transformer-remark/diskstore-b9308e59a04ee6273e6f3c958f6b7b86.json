{"expireTime":9007200904342771000,"key":"transformer-remark-markdown-html-804c78118cd313524bb23a0e29c24870--","val":"<h2><a href=\"https://leetcode.com/problems/longest-common-prefix/description/\">14. Longest Common Prefix</a></h2>\n<h3>Problem:</h3>\n<p>Write a function to find the longest common prefix string amongst an array of strings.</p>\n<p>If there is no common prefix, return an empty string <code>\"\"</code>.</p>\n<p><strong>Example 1:</strong></p>\n<pre><code>Input: [\"flower\",\"flow\",\"flight\"]\nOutput: \"fl\"\n</code></pre>\n<p><strong>Example 2:</strong></p>\n<pre><code>Input: [\"dog\",\"racecar\",\"car\"]\nOutput: \"\"\nExplanation: There is no common prefix among the input strings.\n</code></pre>\n<p><strong>Note:</strong></p>\n<p>All given inputs are in lowercase letters <code>a-z</code>.</p>\n<h3>Solution:</h3>\n<h4>ONE</h4>\n<p>JavaScript specific solution. Get the min len then narrow down the prefix.</p>\n<pre><code class=\"language-js\">/**\n * @param {string[]} strs\n * @return {string}\n */\nlet longestCommonPrefix = function (strs) {\n    if (strs.length > 0) {\n        let minLen = Math.min(...strs.map((s) => s.length));\n        const anyStr = strs[0];\n        while (minLen) {\n            const prefix = anyStr.slice(0, minLen--);\n            if (strs.every((s) => s.startsWith(prefix))) {\n                return prefix;\n            }\n        }\n    }\n    return '';\n};\n</code></pre>\n<h4>TWO</h4>\n<pre><code class=\"language-js\">/**\n * @param {string[]} strs\n * @return {string}\n */\nlet longestCommonPrefix = function (strs) {\n    if (strs.length &#x3C;= 0) {\n        return '';\n    }\n\n    let i = 0;\n    while (strs.every((s) => s[i] &#x26;&#x26; s[i] === strs[0][i])) {\n        i++;\n    }\n    return strs[0].slice(0, i);\n};\n</code></pre>\n<h4>THREE</h4>\n<p>General solution. Build up the prefix.</p>\n<pre><code class=\"language-js\">/**\n * @param {string[]} strs\n * @return {string}\n */\nlet longestCommonPrefix = function (strs) {\n    let prefix = '';\n    if (strs.length > 0) {\n        for (let i = 0; ; i++) {\n            const c = strs[0][i];\n            if (!c) {\n                return prefix;\n            }\n            for (let j = 0; j &#x3C; strs.length; j++) {\n                if (strs[j][i] !== c) {\n                    return prefix;\n                }\n            }\n            prefix += c;\n        }\n    }\n    return prefix;\n};\n</code></pre>\n<hr>\n<p>☆<em>: .｡. o(≧▽≦)o .｡.:</em>☆☆<em>: .｡. o(≧▽≦)o .｡.:</em>☆☆<em>: .｡. o(≧▽≦)o .｡.:</em>☆</p>\n<hr>\n<hr>\n<p>☆<em>: .｡. o(≧▽≦)o .｡.:</em>☆☆<em>: .｡. o(≧▽≦)o .｡.:</em>☆</p>\n<hr>"}