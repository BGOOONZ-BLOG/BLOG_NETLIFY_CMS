{"expireTime":9007200904342769000,"key":"transformer-remark-markdown-ast-5f7ff5ce2c811bedb62b667009b3237b--","val":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"this","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":7,"offset":7},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":7,"offset":7},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A ","position":{"start":{"line":4,"column":1,"offset":9},"end":{"line":4,"column":3,"offset":11},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":4,"column":3,"offset":11},"end":{"line":4,"column":9,"offset":17},"indent":[]}},{"type":"text","value":" behaves a little differently in JavaScript compared to other languages. It also has some differences between ","position":{"start":{"line":4,"column":9,"offset":17},"end":{"line":4,"column":119,"offset":127},"indent":[]}},{"type":"link","title":null,"url":"../strict_mode","children":[{"type":"text","value":"strict mode","position":{"start":{"line":4,"column":120,"offset":128},"end":{"line":4,"column":131,"offset":139},"indent":[]}}],"position":{"start":{"line":4,"column":119,"offset":127},"end":{"line":4,"column":148,"offset":156},"indent":[]}},{"type":"text","value":" and non-strict mode.","position":{"start":{"line":4,"column":148,"offset":156},"end":{"line":4,"column":169,"offset":177},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":9},"end":{"line":4,"column":169,"offset":177},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In most cases, the value of ","position":{"start":{"line":6,"column":1,"offset":179},"end":{"line":6,"column":29,"offset":207},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":6,"column":29,"offset":207},"end":{"line":6,"column":35,"offset":213},"indent":[]}},{"type":"text","value":" is determined by how a function is called (runtime binding). It can't be set by assignment during execution, and it may be different each time the function is called. ES5 introduced the ","position":{"start":{"line":6,"column":35,"offset":213},"end":{"line":6,"column":222,"offset":400},"indent":[]}},{"type":"link","title":null,"url":"../global_objects/function/bind","children":[{"type":"inlineCode","value":"bind()","position":{"start":{"line":6,"column":223,"offset":401},"end":{"line":6,"column":231,"offset":409},"indent":[]}}],"position":{"start":{"line":6,"column":222,"offset":400},"end":{"line":6,"column":265,"offset":443},"indent":[]}},{"type":"text","value":" method to ","position":{"start":{"line":6,"column":265,"offset":443},"end":{"line":6,"column":276,"offset":454},"indent":[]}},{"type":"link","title":null,"url":"#The_bind_method","children":[{"type":"text","value":"set the value of a function's ","position":{"start":{"line":6,"column":277,"offset":455},"end":{"line":6,"column":307,"offset":485},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":6,"column":307,"offset":485},"end":{"line":6,"column":313,"offset":491},"indent":[]}},{"type":"text","value":" regardless of how it's called","position":{"start":{"line":6,"column":313,"offset":491},"end":{"line":6,"column":343,"offset":521},"indent":[]}}],"position":{"start":{"line":6,"column":276,"offset":454},"end":{"line":6,"column":362,"offset":540},"indent":[]}},{"type":"text","value":", and ES2015 introduced ","position":{"start":{"line":6,"column":362,"offset":540},"end":{"line":6,"column":386,"offset":564},"indent":[]}},{"type":"link","title":null,"url":"../functions/arrow_functions","children":[{"type":"text","value":"arrow functions","position":{"start":{"line":6,"column":387,"offset":565},"end":{"line":6,"column":402,"offset":580},"indent":[]}}],"position":{"start":{"line":6,"column":386,"offset":564},"end":{"line":6,"column":433,"offset":611},"indent":[]}},{"type":"text","value":" which don't provide their own ","position":{"start":{"line":6,"column":433,"offset":611},"end":{"line":6,"column":464,"offset":642},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":6,"column":464,"offset":642},"end":{"line":6,"column":470,"offset":648},"indent":[]}},{"type":"text","value":" binding (it retains the ","position":{"start":{"line":6,"column":470,"offset":648},"end":{"line":6,"column":495,"offset":673},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":6,"column":495,"offset":673},"end":{"line":6,"column":501,"offset":679},"indent":[]}},{"type":"text","value":" value of the enclosing lexical context).","position":{"start":{"line":6,"column":501,"offset":679},"end":{"line":6,"column":542,"offset":720},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":179},"end":{"line":6,"column":542,"offset":720},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Syntax","position":{"start":{"line":8,"column":4,"offset":725},"end":{"line":8,"column":10,"offset":731},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":722},"end":{"line":8,"column":10,"offset":731},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"this","position":{"start":{"line":10,"column":1,"offset":733},"end":{"line":10,"column":9,"offset":741},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Value","position":{"start":{"line":12,"column":5,"offset":747},"end":{"line":12,"column":10,"offset":752},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":743},"end":{"line":12,"column":10,"offset":752},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A property of an execution context (global, function or eval) that, in non-strict mode, is always a reference to an object and in strict mode can be any value.","position":{"start":{"line":14,"column":1,"offset":754},"end":{"line":14,"column":160,"offset":913},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":754},"end":{"line":14,"column":160,"offset":913},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Description","position":{"start":{"line":16,"column":4,"offset":918},"end":{"line":16,"column":15,"offset":929},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":915},"end":{"line":16,"column":15,"offset":929},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Global context","position":{"start":{"line":18,"column":5,"offset":935},"end":{"line":18,"column":19,"offset":949},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":931},"end":{"line":18,"column":19,"offset":949},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In the global execution context (outside of any function), ","position":{"start":{"line":20,"column":1,"offset":951},"end":{"line":20,"column":60,"offset":1010},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":20,"column":60,"offset":1010},"end":{"line":20,"column":66,"offset":1016},"indent":[]}},{"type":"text","value":" refers to the global object whether in strict mode or not.","position":{"start":{"line":20,"column":66,"offset":1016},"end":{"line":20,"column":125,"offset":1075},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":951},"end":{"line":20,"column":125,"offset":1075},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"// In web browsers, the window object is also the global object:\nconsole.log(this === window); // true\n\na = 37;\nconsole.log(window.a); // 37\n\nthis.b = \"MDN\";\nconsole.log(window.b)  // \"MDN\"\nconsole.log(b)         // \"MDN\"","position":{"start":{"line":22,"column":1,"offset":1077},"end":{"line":30,"column":36,"offset":1326},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":32,"column":3,"offset":1330},"end":{"line":32,"column":8,"offset":1335},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":1328},"end":{"line":32,"column":10,"offset":1337},"indent":[]}},{"type":"text","value":" You can always easily get the global object using the global ","position":{"start":{"line":32,"column":10,"offset":1337},"end":{"line":32,"column":72,"offset":1399},"indent":[]}},{"type":"link","title":null,"url":"../global_objects/globalthis","children":[{"type":"inlineCode","value":"globalThis","position":{"start":{"line":32,"column":73,"offset":1400},"end":{"line":32,"column":85,"offset":1412},"indent":[]}}],"position":{"start":{"line":32,"column":72,"offset":1399},"end":{"line":32,"column":116,"offset":1443},"indent":[]}},{"type":"text","value":" property, regardless of the current context in which your code is running.","position":{"start":{"line":32,"column":116,"offset":1443},"end":{"line":32,"column":191,"offset":1518},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":1328},"end":{"line":32,"column":191,"offset":1518},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Function context","position":{"start":{"line":34,"column":5,"offset":1524},"end":{"line":34,"column":21,"offset":1540},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":1520},"end":{"line":34,"column":21,"offset":1540},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Inside a function, the value of ","position":{"start":{"line":36,"column":1,"offset":1542},"end":{"line":36,"column":33,"offset":1574},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":36,"column":33,"offset":1574},"end":{"line":36,"column":39,"offset":1580},"indent":[]}},{"type":"text","value":" depends on how the function is called.","position":{"start":{"line":36,"column":39,"offset":1580},"end":{"line":36,"column":78,"offset":1619},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":1542},"end":{"line":36,"column":78,"offset":1619},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Since the following code is not in ","position":{"start":{"line":38,"column":1,"offset":1621},"end":{"line":38,"column":36,"offset":1656},"indent":[]}},{"type":"link","title":null,"url":"../strict_mode","children":[{"type":"text","value":"strict mode","position":{"start":{"line":38,"column":37,"offset":1657},"end":{"line":38,"column":48,"offset":1668},"indent":[]}}],"position":{"start":{"line":38,"column":36,"offset":1656},"end":{"line":38,"column":65,"offset":1685},"indent":[]}},{"type":"text","value":", and because the value of ","position":{"start":{"line":38,"column":65,"offset":1685},"end":{"line":38,"column":92,"offset":1712},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":38,"column":92,"offset":1712},"end":{"line":38,"column":98,"offset":1718},"indent":[]}},{"type":"text","value":" is not set by the call, ","position":{"start":{"line":38,"column":98,"offset":1718},"end":{"line":38,"column":123,"offset":1743},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":38,"column":123,"offset":1743},"end":{"line":38,"column":129,"offset":1749},"indent":[]}},{"type":"text","value":" will default to the global object, which is ","position":{"start":{"line":38,"column":129,"offset":1749},"end":{"line":38,"column":174,"offset":1794},"indent":[]}},{"type":"link","title":null,"url":"https://developer.mozilla.org/en-US/docs/Web/API/Window","children":[{"type":"inlineCode","value":"window","position":{"start":{"line":38,"column":175,"offset":1795},"end":{"line":38,"column":183,"offset":1803},"indent":[]}}],"position":{"start":{"line":38,"column":174,"offset":1794},"end":{"line":38,"column":241,"offset":1861},"indent":[]}},{"type":"text","value":" in a browser.","position":{"start":{"line":38,"column":241,"offset":1861},"end":{"line":38,"column":255,"offset":1875},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":1621},"end":{"line":38,"column":255,"offset":1875},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"function f1() {\n  return this;\n}\n\n// In a browser:\nf1() === window; // true\n\n// In Node:\nf1() === globalThis; // true","position":{"start":{"line":40,"column":1,"offset":1877},"end":{"line":48,"column":33,"offset":2022},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In strict mode, however, if the value of ","position":{"start":{"line":50,"column":1,"offset":2024},"end":{"line":50,"column":42,"offset":2065},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":50,"column":42,"offset":2065},"end":{"line":50,"column":48,"offset":2071},"indent":[]}},{"type":"text","value":" is not set when entering an execution context, it remains as ","position":{"start":{"line":50,"column":48,"offset":2071},"end":{"line":50,"column":110,"offset":2133},"indent":[]}},{"type":"inlineCode","value":"undefined","position":{"start":{"line":50,"column":110,"offset":2133},"end":{"line":50,"column":121,"offset":2144},"indent":[]}},{"type":"text","value":", as shown in the following example:","position":{"start":{"line":50,"column":121,"offset":2144},"end":{"line":50,"column":157,"offset":2180},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":2024},"end":{"line":50,"column":157,"offset":2180},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"function f2() {\n  'use strict'; // see strict mode\n  return this;\n}\n\nf2() === undefined; // true","position":{"start":{"line":52,"column":1,"offset":2182},"end":{"line":57,"column":32,"offset":2298},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":59,"column":3,"offset":2302},"end":{"line":59,"column":8,"offset":2307},"indent":[]}}],"position":{"start":{"line":59,"column":1,"offset":2300},"end":{"line":59,"column":10,"offset":2309},"indent":[]}},{"type":"text","value":" In the second example, ","position":{"start":{"line":59,"column":10,"offset":2309},"end":{"line":59,"column":34,"offset":2333},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":59,"column":34,"offset":2333},"end":{"line":59,"column":40,"offset":2339},"indent":[]}},{"type":"text","value":" should be ","position":{"start":{"line":59,"column":40,"offset":2339},"end":{"line":59,"column":51,"offset":2350},"indent":[]}},{"type":"link","title":null,"url":"../global_objects/undefined","children":[{"type":"inlineCode","value":"undefined","position":{"start":{"line":59,"column":52,"offset":2351},"end":{"line":59,"column":63,"offset":2362},"indent":[]}}],"position":{"start":{"line":59,"column":51,"offset":2350},"end":{"line":59,"column":93,"offset":2392},"indent":[]}},{"type":"text","value":", because ","position":{"start":{"line":59,"column":93,"offset":2392},"end":{"line":59,"column":103,"offset":2402},"indent":[]}},{"type":"inlineCode","value":"f2","position":{"start":{"line":59,"column":103,"offset":2402},"end":{"line":59,"column":107,"offset":2406},"indent":[]}},{"type":"text","value":" was called directly and not as a method or property of an object (e.g. ","position":{"start":{"line":59,"column":107,"offset":2406},"end":{"line":59,"column":179,"offset":2478},"indent":[]}},{"type":"inlineCode","value":"window.f2()","position":{"start":{"line":59,"column":179,"offset":2478},"end":{"line":59,"column":192,"offset":2491},"indent":[]}},{"type":"text","value":"). This feature wasn't implemented in some browsers when they first started to support ","position":{"start":{"line":59,"column":192,"offset":2491},"end":{"line":59,"column":279,"offset":2578},"indent":[]}},{"type":"link","title":null,"url":"../strict_mode","children":[{"type":"text","value":"strict mode","position":{"start":{"line":59,"column":280,"offset":2579},"end":{"line":59,"column":291,"offset":2590},"indent":[]}}],"position":{"start":{"line":59,"column":279,"offset":2578},"end":{"line":59,"column":308,"offset":2607},"indent":[]}},{"type":"text","value":". As a result, they incorrectly returned the ","position":{"start":{"line":59,"column":308,"offset":2607},"end":{"line":59,"column":353,"offset":2652},"indent":[]}},{"type":"inlineCode","value":"window","position":{"start":{"line":59,"column":353,"offset":2652},"end":{"line":59,"column":361,"offset":2660},"indent":[]}},{"type":"text","value":" object.","position":{"start":{"line":59,"column":361,"offset":2660},"end":{"line":59,"column":369,"offset":2668},"indent":[]}}],"position":{"start":{"line":59,"column":1,"offset":2300},"end":{"line":59,"column":369,"offset":2668},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To set the value of ","position":{"start":{"line":61,"column":1,"offset":2670},"end":{"line":61,"column":21,"offset":2690},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":61,"column":21,"offset":2690},"end":{"line":61,"column":27,"offset":2696},"indent":[]}},{"type":"text","value":" to a particular value when calling a function, use ","position":{"start":{"line":61,"column":27,"offset":2696},"end":{"line":61,"column":79,"offset":2748},"indent":[]}},{"type":"link","title":null,"url":"../global_objects/function/call","children":[{"type":"inlineCode","value":"call()","position":{"start":{"line":61,"column":80,"offset":2749},"end":{"line":61,"column":88,"offset":2757},"indent":[]}}],"position":{"start":{"line":61,"column":79,"offset":2748},"end":{"line":61,"column":122,"offset":2791},"indent":[]}},{"type":"text","value":", or ","position":{"start":{"line":61,"column":122,"offset":2791},"end":{"line":61,"column":127,"offset":2796},"indent":[]}},{"type":"link","title":null,"url":"../global_objects/function/apply","children":[{"type":"inlineCode","value":"apply()","position":{"start":{"line":61,"column":128,"offset":2797},"end":{"line":61,"column":137,"offset":2806},"indent":[]}}],"position":{"start":{"line":61,"column":127,"offset":2796},"end":{"line":61,"column":172,"offset":2841},"indent":[]}},{"type":"text","value":" as in the examples below.","position":{"start":{"line":61,"column":172,"offset":2841},"end":{"line":61,"column":198,"offset":2867},"indent":[]}}],"position":{"start":{"line":61,"column":1,"offset":2670},"end":{"line":61,"column":198,"offset":2867},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Class context","position":{"start":{"line":63,"column":5,"offset":2873},"end":{"line":63,"column":18,"offset":2886},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":2869},"end":{"line":63,"column":18,"offset":2886},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The behavior of ","position":{"start":{"line":65,"column":1,"offset":2888},"end":{"line":65,"column":17,"offset":2904},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":65,"column":17,"offset":2904},"end":{"line":65,"column":23,"offset":2910},"indent":[]}},{"type":"text","value":" in ","position":{"start":{"line":65,"column":23,"offset":2910},"end":{"line":65,"column":27,"offset":2914},"indent":[]}},{"type":"link","title":null,"url":"../classes","children":[{"type":"text","value":"classes","position":{"start":{"line":65,"column":28,"offset":2915},"end":{"line":65,"column":35,"offset":2922},"indent":[]}}],"position":{"start":{"line":65,"column":27,"offset":2914},"end":{"line":65,"column":48,"offset":2935},"indent":[]}},{"type":"text","value":" and functions is similar, since classes are functions under the hood. But there are some differences and caveats.","position":{"start":{"line":65,"column":48,"offset":2935},"end":{"line":65,"column":162,"offset":3049},"indent":[]}}],"position":{"start":{"line":65,"column":1,"offset":2888},"end":{"line":65,"column":162,"offset":3049},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Within a class constructor, ","position":{"start":{"line":67,"column":1,"offset":3051},"end":{"line":67,"column":29,"offset":3079},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":67,"column":29,"offset":3079},"end":{"line":67,"column":35,"offset":3085},"indent":[]}},{"type":"text","value":" is a regular object. All non-static methods within the class are added to the prototype of ","position":{"start":{"line":67,"column":35,"offset":3085},"end":{"line":67,"column":127,"offset":3177},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":67,"column":127,"offset":3177},"end":{"line":67,"column":133,"offset":3183},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":67,"column":133,"offset":3183},"end":{"line":67,"column":134,"offset":3184},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":3051},"end":{"line":67,"column":134,"offset":3184},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"class Example {\n  constructor() {\n    const proto = Object.getPrototypeOf(this);\n    console.log(Object.getOwnPropertyNames(proto));\n  }\n  first(){}\n  second(){}\n  static third(){}\n}\n\nnew Example(); // ['constructor', 'first', 'second']","position":{"start":{"line":69,"column":1,"offset":3186},"end":{"line":79,"column":57,"offset":3462},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":81,"column":3,"offset":3466},"end":{"line":81,"column":8,"offset":3471},"indent":[]}}],"position":{"start":{"line":81,"column":1,"offset":3464},"end":{"line":81,"column":10,"offset":3473},"indent":[]}},{"type":"text","value":" Static methods are not properties of ","position":{"start":{"line":81,"column":10,"offset":3473},"end":{"line":81,"column":48,"offset":3511},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":81,"column":48,"offset":3511},"end":{"line":81,"column":54,"offset":3517},"indent":[]}},{"type":"text","value":". They are properties of the class itself.","position":{"start":{"line":81,"column":54,"offset":3517},"end":{"line":81,"column":96,"offset":3559},"indent":[]}}],"position":{"start":{"line":81,"column":1,"offset":3464},"end":{"line":81,"column":96,"offset":3559},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Derived classes","position":{"start":{"line":83,"column":5,"offset":3565},"end":{"line":83,"column":20,"offset":3580},"indent":[]}}],"position":{"start":{"line":83,"column":1,"offset":3561},"end":{"line":83,"column":20,"offset":3580},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Unlike base class constructors, derived constructors have no initial ","position":{"start":{"line":85,"column":1,"offset":3582},"end":{"line":85,"column":70,"offset":3651},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":85,"column":70,"offset":3651},"end":{"line":85,"column":76,"offset":3657},"indent":[]}},{"type":"text","value":" binding. Calling ","position":{"start":{"line":85,"column":76,"offset":3657},"end":{"line":85,"column":94,"offset":3675},"indent":[]}},{"type":"link","title":null,"url":"super","children":[{"type":"inlineCode","value":"super()","position":{"start":{"line":85,"column":95,"offset":3676},"end":{"line":85,"column":104,"offset":3685},"indent":[]}}],"position":{"start":{"line":85,"column":94,"offset":3675},"end":{"line":85,"column":112,"offset":3693},"indent":[]}},{"type":"text","value":" creates a ","position":{"start":{"line":85,"column":112,"offset":3693},"end":{"line":85,"column":123,"offset":3704},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":85,"column":123,"offset":3704},"end":{"line":85,"column":129,"offset":3710},"indent":[]}},{"type":"text","value":" binding within the constructor and essentially has the effect of evaluating the following line of code, where Base is the inherited class:","position":{"start":{"line":85,"column":129,"offset":3710},"end":{"line":85,"column":268,"offset":3849},"indent":[]}}],"position":{"start":{"line":85,"column":1,"offset":3582},"end":{"line":85,"column":268,"offset":3849},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"this = new Base();","position":{"start":{"line":87,"column":1,"offset":3851},"end":{"line":87,"column":23,"offset":3873},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Warning:","position":{"start":{"line":89,"column":3,"offset":3877},"end":{"line":89,"column":11,"offset":3885},"indent":[]}}],"position":{"start":{"line":89,"column":1,"offset":3875},"end":{"line":89,"column":13,"offset":3887},"indent":[]}},{"type":"text","value":" Referring to ","position":{"start":{"line":89,"column":13,"offset":3887},"end":{"line":89,"column":27,"offset":3901},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":89,"column":27,"offset":3901},"end":{"line":89,"column":33,"offset":3907},"indent":[]}},{"type":"text","value":" before calling ","position":{"start":{"line":89,"column":33,"offset":3907},"end":{"line":89,"column":49,"offset":3923},"indent":[]}},{"type":"inlineCode","value":"super()","position":{"start":{"line":89,"column":49,"offset":3923},"end":{"line":89,"column":58,"offset":3932},"indent":[]}},{"type":"text","value":" will throw an error.","position":{"start":{"line":89,"column":58,"offset":3932},"end":{"line":89,"column":79,"offset":3953},"indent":[]}}],"position":{"start":{"line":89,"column":1,"offset":3875},"end":{"line":89,"column":79,"offset":3953},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Derived classes must not return before calling ","position":{"start":{"line":91,"column":1,"offset":3955},"end":{"line":91,"column":48,"offset":4002},"indent":[]}},{"type":"inlineCode","value":"super()","position":{"start":{"line":91,"column":48,"offset":4002},"end":{"line":91,"column":57,"offset":4011},"indent":[]}},{"type":"text","value":", unless they return an ","position":{"start":{"line":91,"column":57,"offset":4011},"end":{"line":91,"column":81,"offset":4035},"indent":[]}},{"type":"inlineCode","value":"Object","position":{"start":{"line":91,"column":81,"offset":4035},"end":{"line":91,"column":89,"offset":4043},"indent":[]}},{"type":"text","value":" or have no constructor at all.","position":{"start":{"line":91,"column":89,"offset":4043},"end":{"line":91,"column":120,"offset":4074},"indent":[]}}],"position":{"start":{"line":91,"column":1,"offset":3955},"end":{"line":91,"column":120,"offset":4074},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"class Base {}\nclass Good extends Base {}\nclass AlsoGood extends Base {\n  constructor() {\n    return {a: 5};\n  }\n}\nclass Bad extends Base {\n  constructor() {}\n}\n\nnew Good();\nnew AlsoGood();\nnew Bad(); // ReferenceError","position":{"start":{"line":93,"column":1,"offset":4076},"end":{"line":106,"column":33,"offset":4345},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Examples","position":{"start":{"line":108,"column":4,"offset":4350},"end":{"line":108,"column":12,"offset":4358},"indent":[]}}],"position":{"start":{"line":108,"column":1,"offset":4347},"end":{"line":108,"column":12,"offset":4358},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"this in function contexts","position":{"start":{"line":110,"column":5,"offset":4364},"end":{"line":110,"column":30,"offset":4389},"indent":[]}}],"position":{"start":{"line":110,"column":1,"offset":4360},"end":{"line":110,"column":30,"offset":4389},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"// An object can be passed as the first argument to call or apply and this will be bound to it.\nvar obj = {a: 'Custom'};\n\n// We declare a variable and the variable is assigned to the global window as its property.\nvar a = 'Global';\n\nfunction whatsThis() {\n  return this.a;  // The value of this is dependent on how the function is called\n}\n\nwhatsThis();          // 'Global' as this in the function isn't set, so it defaults to the global/window object\nwhatsThis.call(obj);  // 'Custom' as this in the function is set to obj\nwhatsThis.apply(obj); // 'Custom' as this in the function is set to obj","position":{"start":{"line":112,"column":1,"offset":4391},"end":{"line":124,"column":76,"offset":5027},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"this and object conversion","position":{"start":{"line":126,"column":5,"offset":5033},"end":{"line":126,"column":31,"offset":5059},"indent":[]}}],"position":{"start":{"line":126,"column":1,"offset":5029},"end":{"line":126,"column":31,"offset":5059},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"function add(c, d) {\n  return this.a + this.b + c + d;\n}\n\nvar o = {a: 1, b: 3};\n\n// The first parameter is the object to use as\n// 'this', subsequent parameters are passed as\n// arguments in the function call\nadd.call(o, 5, 7); // 16\n\n// The first parameter is the object to use as\n// 'this', the second is an array whose\n// members are used as the arguments in the function call\nadd.apply(o, [10, 20]); // 34","position":{"start":{"line":128,"column":1,"offset":5061},"end":{"line":142,"column":34,"offset":5518},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Note that in non-strict mode, with ","position":{"start":{"line":144,"column":1,"offset":5520},"end":{"line":144,"column":36,"offset":5555},"indent":[]}},{"type":"inlineCode","value":"call","position":{"start":{"line":144,"column":36,"offset":5555},"end":{"line":144,"column":42,"offset":5561},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":144,"column":42,"offset":5561},"end":{"line":144,"column":47,"offset":5566},"indent":[]}},{"type":"inlineCode","value":"apply","position":{"start":{"line":144,"column":47,"offset":5566},"end":{"line":144,"column":54,"offset":5573},"indent":[]}},{"type":"text","value":", if the value passed as ","position":{"start":{"line":144,"column":54,"offset":5573},"end":{"line":144,"column":79,"offset":5598},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":144,"column":79,"offset":5598},"end":{"line":144,"column":85,"offset":5604},"indent":[]}},{"type":"text","value":" is not an object, an attempt will be made to convert it to an object. Values ","position":{"start":{"line":144,"column":85,"offset":5604},"end":{"line":144,"column":163,"offset":5682},"indent":[]}},{"type":"inlineCode","value":"null","position":{"start":{"line":144,"column":163,"offset":5682},"end":{"line":144,"column":169,"offset":5688},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":144,"column":169,"offset":5688},"end":{"line":144,"column":174,"offset":5693},"indent":[]}},{"type":"inlineCode","value":"undefined","position":{"start":{"line":144,"column":174,"offset":5693},"end":{"line":144,"column":185,"offset":5704},"indent":[]}},{"type":"text","value":" become the global object. Primitives like ","position":{"start":{"line":144,"column":185,"offset":5704},"end":{"line":144,"column":228,"offset":5747},"indent":[]}},{"type":"inlineCode","value":"7","position":{"start":{"line":144,"column":228,"offset":5747},"end":{"line":144,"column":231,"offset":5750},"indent":[]}},{"type":"text","value":" or ","position":{"start":{"line":144,"column":231,"offset":5750},"end":{"line":144,"column":235,"offset":5754},"indent":[]}},{"type":"inlineCode","value":"'foo'","position":{"start":{"line":144,"column":235,"offset":5754},"end":{"line":144,"column":242,"offset":5761},"indent":[]}},{"type":"text","value":" will be converted to an Object using the related constructor, so the primitive number ","position":{"start":{"line":144,"column":242,"offset":5761},"end":{"line":144,"column":329,"offset":5848},"indent":[]}},{"type":"inlineCode","value":"7","position":{"start":{"line":144,"column":329,"offset":5848},"end":{"line":144,"column":332,"offset":5851},"indent":[]}},{"type":"text","value":" is converted to an object as if by ","position":{"start":{"line":144,"column":332,"offset":5851},"end":{"line":144,"column":368,"offset":5887},"indent":[]}},{"type":"inlineCode","value":"new Number(7)","position":{"start":{"line":144,"column":368,"offset":5887},"end":{"line":144,"column":383,"offset":5902},"indent":[]}},{"type":"text","value":" and the string ","position":{"start":{"line":144,"column":383,"offset":5902},"end":{"line":144,"column":399,"offset":5918},"indent":[]}},{"type":"inlineCode","value":"'foo'","position":{"start":{"line":144,"column":399,"offset":5918},"end":{"line":144,"column":406,"offset":5925},"indent":[]}},{"type":"text","value":" to an object as if by ","position":{"start":{"line":144,"column":406,"offset":5925},"end":{"line":144,"column":429,"offset":5948},"indent":[]}},{"type":"inlineCode","value":"new String('foo')","position":{"start":{"line":144,"column":429,"offset":5948},"end":{"line":144,"column":448,"offset":5967},"indent":[]}},{"type":"text","value":", e.g.","position":{"start":{"line":144,"column":448,"offset":5967},"end":{"line":144,"column":454,"offset":5973},"indent":[]}}],"position":{"start":{"line":144,"column":1,"offset":5520},"end":{"line":144,"column":454,"offset":5973},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"function bar() {\n  console.log(Object.prototype.toString.call(this));\n}\n\nbar.call(7);     // [object Number]\nbar.call('foo'); // [object String]\nbar.call(undefined); // [object global]","position":{"start":{"line":146,"column":1,"offset":5975},"end":{"line":152,"column":44,"offset":6183},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"The ","position":{"start":{"line":154,"column":5,"offset":6189},"end":{"line":154,"column":9,"offset":6193},"indent":[]}},{"type":"inlineCode","value":"bind","position":{"start":{"line":154,"column":9,"offset":6193},"end":{"line":154,"column":15,"offset":6199},"indent":[]}},{"type":"text","value":" method","position":{"start":{"line":154,"column":15,"offset":6199},"end":{"line":154,"column":22,"offset":6206},"indent":[]}}],"position":{"start":{"line":154,"column":1,"offset":6185},"end":{"line":154,"column":22,"offset":6206},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"ECMAScript 5 introduced ","position":{"start":{"line":156,"column":1,"offset":6208},"end":{"line":156,"column":25,"offset":6232},"indent":[]}},{"type":"link","title":null,"url":"../global_objects/function/bind","children":[{"type":"inlineCode","value":"Function.prototype.bind()","position":{"start":{"line":156,"column":26,"offset":6233},"end":{"line":156,"column":53,"offset":6260},"indent":[]}}],"position":{"start":{"line":156,"column":25,"offset":6232},"end":{"line":156,"column":87,"offset":6294},"indent":[]}},{"type":"text","value":". Calling ","position":{"start":{"line":156,"column":87,"offset":6294},"end":{"line":156,"column":97,"offset":6304},"indent":[]}},{"type":"inlineCode","value":"f.bind(someObject)","position":{"start":{"line":156,"column":97,"offset":6304},"end":{"line":156,"column":117,"offset":6324},"indent":[]}},{"type":"text","value":" creates a new function with the same body and scope as ","position":{"start":{"line":156,"column":117,"offset":6324},"end":{"line":156,"column":173,"offset":6380},"indent":[]}},{"type":"inlineCode","value":"f","position":{"start":{"line":156,"column":173,"offset":6380},"end":{"line":156,"column":176,"offset":6383},"indent":[]}},{"type":"text","value":", but where ","position":{"start":{"line":156,"column":176,"offset":6383},"end":{"line":156,"column":188,"offset":6395},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":156,"column":188,"offset":6395},"end":{"line":156,"column":194,"offset":6401},"indent":[]}},{"type":"text","value":" occurs in the original function, in the new function it is permanently bound to the first argument of ","position":{"start":{"line":156,"column":194,"offset":6401},"end":{"line":156,"column":297,"offset":6504},"indent":[]}},{"type":"inlineCode","value":"bind","position":{"start":{"line":156,"column":297,"offset":6504},"end":{"line":156,"column":303,"offset":6510},"indent":[]}},{"type":"text","value":", regardless of how the function is being used.","position":{"start":{"line":156,"column":303,"offset":6510},"end":{"line":156,"column":350,"offset":6557},"indent":[]}}],"position":{"start":{"line":156,"column":1,"offset":6208},"end":{"line":156,"column":350,"offset":6557},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"function f() {\n  return this.a;\n}\n\nvar g = f.bind({a: 'azerty'});\nconsole.log(g()); // azerty\n\nvar h = g.bind({a: 'yoo'}); // bind only works once!\nconsole.log(h()); // azerty\n\nvar o = {a: 37, f: f, g: g, h: h};\nconsole.log(o.a, o.f(), o.g(), o.h()); // 37,37, azerty, azerty","position":{"start":{"line":158,"column":1,"offset":6559},"end":{"line":169,"column":68,"offset":6870},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Arrow functions","position":{"start":{"line":171,"column":5,"offset":6876},"end":{"line":171,"column":20,"offset":6891},"indent":[]}}],"position":{"start":{"line":171,"column":1,"offset":6872},"end":{"line":171,"column":20,"offset":6891},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In ","position":{"start":{"line":173,"column":1,"offset":6893},"end":{"line":173,"column":4,"offset":6896},"indent":[]}},{"type":"link","title":null,"url":"../functions/arrow_functions","children":[{"type":"text","value":"arrow functions","position":{"start":{"line":173,"column":5,"offset":6897},"end":{"line":173,"column":20,"offset":6912},"indent":[]}}],"position":{"start":{"line":173,"column":4,"offset":6896},"end":{"line":173,"column":51,"offset":6943},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":173,"column":51,"offset":6943},"end":{"line":173,"column":53,"offset":6945},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":173,"column":53,"offset":6945},"end":{"line":173,"column":59,"offset":6951},"indent":[]}},{"type":"text","value":" retains the value of the enclosing lexical context's ","position":{"start":{"line":173,"column":59,"offset":6951},"end":{"line":173,"column":113,"offset":7005},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":173,"column":113,"offset":7005},"end":{"line":173,"column":119,"offset":7011},"indent":[]}},{"type":"text","value":". In global code, it will be set to the global object:","position":{"start":{"line":173,"column":119,"offset":7011},"end":{"line":173,"column":173,"offset":7065},"indent":[]}}],"position":{"start":{"line":173,"column":1,"offset":6893},"end":{"line":173,"column":173,"offset":7065},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"var globalObject = this;\nvar foo = (() => this);\nconsole.log(foo() === globalObject); // true","position":{"start":{"line":175,"column":1,"offset":7067},"end":{"line":177,"column":49,"offset":7172},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":179,"column":3,"offset":7176},"end":{"line":179,"column":8,"offset":7181},"indent":[]}}],"position":{"start":{"line":179,"column":1,"offset":7174},"end":{"line":179,"column":10,"offset":7183},"indent":[]}},{"type":"text","value":" If ","position":{"start":{"line":179,"column":10,"offset":7183},"end":{"line":179,"column":14,"offset":7187},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":179,"column":14,"offset":7187},"end":{"line":179,"column":20,"offset":7193},"indent":[]}},{"type":"text","value":" arg is passed to ","position":{"start":{"line":179,"column":20,"offset":7193},"end":{"line":179,"column":38,"offset":7211},"indent":[]}},{"type":"inlineCode","value":"call","position":{"start":{"line":179,"column":38,"offset":7211},"end":{"line":179,"column":44,"offset":7217},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":179,"column":44,"offset":7217},"end":{"line":179,"column":46,"offset":7219},"indent":[]}},{"type":"inlineCode","value":"bind","position":{"start":{"line":179,"column":46,"offset":7219},"end":{"line":179,"column":52,"offset":7225},"indent":[]}},{"type":"text","value":", or ","position":{"start":{"line":179,"column":52,"offset":7225},"end":{"line":179,"column":57,"offset":7230},"indent":[]}},{"type":"inlineCode","value":"apply","position":{"start":{"line":179,"column":57,"offset":7230},"end":{"line":179,"column":64,"offset":7237},"indent":[]}},{"type":"text","value":" on invocation of an arrow function it will be ignored. You can still prepend arguments to the call, but the first argument (","position":{"start":{"line":179,"column":64,"offset":7237},"end":{"line":179,"column":189,"offset":7362},"indent":[]}},{"type":"inlineCode","value":"thisArg","position":{"start":{"line":179,"column":189,"offset":7362},"end":{"line":179,"column":198,"offset":7371},"indent":[]}},{"type":"text","value":") should be set to ","position":{"start":{"line":179,"column":198,"offset":7371},"end":{"line":179,"column":217,"offset":7390},"indent":[]}},{"type":"inlineCode","value":"null","position":{"start":{"line":179,"column":217,"offset":7390},"end":{"line":179,"column":223,"offset":7396},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":179,"column":223,"offset":7396},"end":{"line":179,"column":224,"offset":7397},"indent":[]}}],"position":{"start":{"line":179,"column":1,"offset":7174},"end":{"line":179,"column":224,"offset":7397},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"// Call as a method of an object\nvar obj = {func: foo};\nconsole.log(obj.func() === globalObject); // true\n\n// Attempt to set this using call\nconsole.log(foo.call(obj) === globalObject); // true\n\n// Attempt to set this using bind\nfoo = foo.bind(obj);\nconsole.log(foo() === globalObject); // true","position":{"start":{"line":181,"column":1,"offset":7399},"end":{"line":190,"column":49,"offset":7725},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"No matter what, ","position":{"start":{"line":192,"column":1,"offset":7727},"end":{"line":192,"column":17,"offset":7743},"indent":[]}},{"type":"inlineCode","value":"foo","position":{"start":{"line":192,"column":17,"offset":7743},"end":{"line":192,"column":22,"offset":7748},"indent":[]}},{"type":"text","value":"'s ","position":{"start":{"line":192,"column":22,"offset":7748},"end":{"line":192,"column":25,"offset":7751},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":192,"column":25,"offset":7751},"end":{"line":192,"column":31,"offset":7757},"indent":[]}},{"type":"text","value":" is set to what it was when it was created (in the example above, the global object). The same applies to arrow functions created inside other functions: their ","position":{"start":{"line":192,"column":31,"offset":7757},"end":{"line":192,"column":191,"offset":7917},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":192,"column":191,"offset":7917},"end":{"line":192,"column":197,"offset":7923},"indent":[]}},{"type":"text","value":" remains that of the enclosing lexical context.","position":{"start":{"line":192,"column":197,"offset":7923},"end":{"line":192,"column":244,"offset":7970},"indent":[]}}],"position":{"start":{"line":192,"column":1,"offset":7727},"end":{"line":192,"column":244,"offset":7970},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"// Create obj with a method bar that returns a function that\n// returns its this. The returned function is created as\n// an arrow function, so its this is permanently bound to the\n// this of its enclosing function. The value of bar can be set\n// in the call, which in turn sets the value of the\n// returned function.\nvar obj = {\n  bar: function() {\n    var x = (() => this);\n    return x;\n  }\n};\n\n// Call bar as a method of obj, setting its this to obj\n// Assign a reference to the returned function to fn\nvar fn = obj.bar();\n\n// Call fn without setting this, would normally default\n// to the global object or undefined in strict mode\nconsole.log(fn() === obj); // true\n\n// But caution if you reference the method of obj without calling it\nvar fn2 = obj.bar;\n// Calling the arrow function's this from inside the bar method()\n// will now return window, because it follows the this from fn2.\nconsole.log(fn2()() == window); // true","position":{"start":{"line":194,"column":1,"offset":7972},"end":{"line":219,"column":44,"offset":8993},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In the above, the function (call it anonymous function A) assigned to ","position":{"start":{"line":221,"column":1,"offset":8995},"end":{"line":221,"column":71,"offset":9065},"indent":[]}},{"type":"inlineCode","value":"obj.bar","position":{"start":{"line":221,"column":71,"offset":9065},"end":{"line":221,"column":80,"offset":9074},"indent":[]}},{"type":"text","value":" returns another function (call it anonymous function B) that is created as an arrow function. As a result, function B's ","position":{"start":{"line":221,"column":80,"offset":9074},"end":{"line":221,"column":201,"offset":9195},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":221,"column":201,"offset":9195},"end":{"line":221,"column":207,"offset":9201},"indent":[]}},{"type":"text","value":" is permanently set to the ","position":{"start":{"line":221,"column":207,"offset":9201},"end":{"line":221,"column":234,"offset":9228},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":221,"column":234,"offset":9228},"end":{"line":221,"column":240,"offset":9234},"indent":[]}},{"type":"text","value":" of ","position":{"start":{"line":221,"column":240,"offset":9234},"end":{"line":221,"column":244,"offset":9238},"indent":[]}},{"type":"inlineCode","value":"obj.bar","position":{"start":{"line":221,"column":244,"offset":9238},"end":{"line":221,"column":253,"offset":9247},"indent":[]}},{"type":"text","value":" (function A) when called. When the returned function (function B) is called, its ","position":{"start":{"line":221,"column":253,"offset":9247},"end":{"line":221,"column":335,"offset":9329},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":221,"column":335,"offset":9329},"end":{"line":221,"column":341,"offset":9335},"indent":[]}},{"type":"text","value":" will always be what it was set to initially. In the above code example, function B's ","position":{"start":{"line":221,"column":341,"offset":9335},"end":{"line":221,"column":427,"offset":9421},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":221,"column":427,"offset":9421},"end":{"line":221,"column":433,"offset":9427},"indent":[]}},{"type":"text","value":" is set to function A's ","position":{"start":{"line":221,"column":433,"offset":9427},"end":{"line":221,"column":457,"offset":9451},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":221,"column":457,"offset":9451},"end":{"line":221,"column":463,"offset":9457},"indent":[]}},{"type":"text","value":" which is ","position":{"start":{"line":221,"column":463,"offset":9457},"end":{"line":221,"column":473,"offset":9467},"indent":[]}},{"type":"inlineCode","value":"obj","position":{"start":{"line":221,"column":473,"offset":9467},"end":{"line":221,"column":478,"offset":9472},"indent":[]}},{"type":"text","value":", so it remains set to ","position":{"start":{"line":221,"column":478,"offset":9472},"end":{"line":221,"column":501,"offset":9495},"indent":[]}},{"type":"inlineCode","value":"obj","position":{"start":{"line":221,"column":501,"offset":9495},"end":{"line":221,"column":506,"offset":9500},"indent":[]}},{"type":"text","value":" even when called in a manner that would normally set its ","position":{"start":{"line":221,"column":506,"offset":9500},"end":{"line":221,"column":564,"offset":9558},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":221,"column":564,"offset":9558},"end":{"line":221,"column":570,"offset":9564},"indent":[]}},{"type":"text","value":" to ","position":{"start":{"line":221,"column":570,"offset":9564},"end":{"line":221,"column":574,"offset":9568},"indent":[]}},{"type":"inlineCode","value":"undefined","position":{"start":{"line":221,"column":574,"offset":9568},"end":{"line":221,"column":585,"offset":9579},"indent":[]}},{"type":"text","value":" or the global object (or any other method as in the previous example in the global execution context).","position":{"start":{"line":221,"column":585,"offset":9579},"end":{"line":221,"column":688,"offset":9682},"indent":[]}}],"position":{"start":{"line":221,"column":1,"offset":8995},"end":{"line":221,"column":688,"offset":9682},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"As an object method","position":{"start":{"line":223,"column":5,"offset":9688},"end":{"line":223,"column":24,"offset":9707},"indent":[]}}],"position":{"start":{"line":223,"column":1,"offset":9684},"end":{"line":223,"column":24,"offset":9707},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"When a function is called as a method of an object, its ","position":{"start":{"line":225,"column":1,"offset":9709},"end":{"line":225,"column":57,"offset":9765},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":225,"column":57,"offset":9765},"end":{"line":225,"column":63,"offset":9771},"indent":[]}},{"type":"text","value":" is set to the object the method is called on.","position":{"start":{"line":225,"column":63,"offset":9771},"end":{"line":225,"column":109,"offset":9817},"indent":[]}}],"position":{"start":{"line":225,"column":1,"offset":9709},"end":{"line":225,"column":109,"offset":9817},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In the following example, when ","position":{"start":{"line":227,"column":1,"offset":9819},"end":{"line":227,"column":32,"offset":9850},"indent":[]}},{"type":"inlineCode","value":"o.f()","position":{"start":{"line":227,"column":32,"offset":9850},"end":{"line":227,"column":39,"offset":9857},"indent":[]}},{"type":"text","value":" is invoked, inside the function ","position":{"start":{"line":227,"column":39,"offset":9857},"end":{"line":227,"column":72,"offset":9890},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":227,"column":72,"offset":9890},"end":{"line":227,"column":78,"offset":9896},"indent":[]}},{"type":"text","value":" is bound to the ","position":{"start":{"line":227,"column":78,"offset":9896},"end":{"line":227,"column":95,"offset":9913},"indent":[]}},{"type":"inlineCode","value":"o","position":{"start":{"line":227,"column":95,"offset":9913},"end":{"line":227,"column":98,"offset":9916},"indent":[]}},{"type":"text","value":" object.","position":{"start":{"line":227,"column":98,"offset":9916},"end":{"line":227,"column":106,"offset":9924},"indent":[]}}],"position":{"start":{"line":227,"column":1,"offset":9819},"end":{"line":227,"column":106,"offset":9924},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"var o = {\n  prop: 37,\n  f: function() {\n    return this.prop;\n  }\n};\n\nconsole.log(o.f()); // 37","position":{"start":{"line":229,"column":1,"offset":9926},"end":{"line":236,"column":30,"offset":10049},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Note that this behavior is not at all affected by how or where the function was defined. In the previous example, we defined the function inline as the ","position":{"start":{"line":238,"column":1,"offset":10051},"end":{"line":238,"column":153,"offset":10203},"indent":[]}},{"type":"inlineCode","value":"f","position":{"start":{"line":238,"column":153,"offset":10203},"end":{"line":238,"column":156,"offset":10206},"indent":[]}},{"type":"text","value":" member during the definition of ","position":{"start":{"line":238,"column":156,"offset":10206},"end":{"line":238,"column":189,"offset":10239},"indent":[]}},{"type":"inlineCode","value":"o","position":{"start":{"line":238,"column":189,"offset":10239},"end":{"line":238,"column":192,"offset":10242},"indent":[]}},{"type":"text","value":". However, we could have just as easily defined the function first and later attached it to ","position":{"start":{"line":238,"column":192,"offset":10242},"end":{"line":238,"column":284,"offset":10334},"indent":[]}},{"type":"inlineCode","value":"o.f","position":{"start":{"line":238,"column":284,"offset":10334},"end":{"line":238,"column":289,"offset":10339},"indent":[]}},{"type":"text","value":". Doing so results in the same behavior:","position":{"start":{"line":238,"column":289,"offset":10339},"end":{"line":238,"column":329,"offset":10379},"indent":[]}}],"position":{"start":{"line":238,"column":1,"offset":10051},"end":{"line":238,"column":329,"offset":10379},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"var o = {prop: 37};\n\nfunction independent() {\n  return this.prop;\n}\n\no.f = independent;\n\nconsole.log(o.f()); // 37","position":{"start":{"line":240,"column":1,"offset":10381},"end":{"line":248,"column":30,"offset":10519},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This demonstrates that it matters only that the function was invoked from the ","position":{"start":{"line":250,"column":1,"offset":10521},"end":{"line":250,"column":79,"offset":10599},"indent":[]}},{"type":"inlineCode","value":"f","position":{"start":{"line":250,"column":79,"offset":10599},"end":{"line":250,"column":82,"offset":10602},"indent":[]}},{"type":"text","value":" member of ","position":{"start":{"line":250,"column":82,"offset":10602},"end":{"line":250,"column":93,"offset":10613},"indent":[]}},{"type":"inlineCode","value":"o","position":{"start":{"line":250,"column":93,"offset":10613},"end":{"line":250,"column":96,"offset":10616},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":250,"column":96,"offset":10616},"end":{"line":250,"column":97,"offset":10617},"indent":[]}}],"position":{"start":{"line":250,"column":1,"offset":10521},"end":{"line":250,"column":97,"offset":10617},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Similarly, the ","position":{"start":{"line":252,"column":1,"offset":10619},"end":{"line":252,"column":16,"offset":10634},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":252,"column":16,"offset":10634},"end":{"line":252,"column":22,"offset":10640},"indent":[]}},{"type":"text","value":" binding is only affected by the most immediate member reference. In the following example, when we invoke the function, we call it as a method ","position":{"start":{"line":252,"column":22,"offset":10640},"end":{"line":252,"column":166,"offset":10784},"indent":[]}},{"type":"inlineCode","value":"g","position":{"start":{"line":252,"column":166,"offset":10784},"end":{"line":252,"column":169,"offset":10787},"indent":[]}},{"type":"text","value":" of the object ","position":{"start":{"line":252,"column":169,"offset":10787},"end":{"line":252,"column":184,"offset":10802},"indent":[]}},{"type":"inlineCode","value":"o.b","position":{"start":{"line":252,"column":184,"offset":10802},"end":{"line":252,"column":189,"offset":10807},"indent":[]}},{"type":"text","value":". This time during execution, ","position":{"start":{"line":252,"column":189,"offset":10807},"end":{"line":252,"column":219,"offset":10837},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":252,"column":219,"offset":10837},"end":{"line":252,"column":225,"offset":10843},"indent":[]}},{"type":"text","value":" inside the function will refer to ","position":{"start":{"line":252,"column":225,"offset":10843},"end":{"line":252,"column":260,"offset":10878},"indent":[]}},{"type":"inlineCode","value":"o.b","position":{"start":{"line":252,"column":260,"offset":10878},"end":{"line":252,"column":265,"offset":10883},"indent":[]}},{"type":"text","value":". The fact that the object is itself a member of ","position":{"start":{"line":252,"column":265,"offset":10883},"end":{"line":252,"column":314,"offset":10932},"indent":[]}},{"type":"inlineCode","value":"o","position":{"start":{"line":252,"column":314,"offset":10932},"end":{"line":252,"column":317,"offset":10935},"indent":[]}},{"type":"text","value":" has no consequence; the most immediate reference is all that matters.","position":{"start":{"line":252,"column":317,"offset":10935},"end":{"line":252,"column":387,"offset":11005},"indent":[]}}],"position":{"start":{"line":252,"column":1,"offset":10619},"end":{"line":252,"column":387,"offset":11005},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"o.b = {g: independent, prop: 42};\nconsole.log(o.b.g()); // 42","position":{"start":{"line":254,"column":1,"offset":11007},"end":{"line":255,"column":32,"offset":11076},"indent":[1]}},{"type":"heading","depth":4,"children":[{"type":"inlineCode","value":"this","position":{"start":{"line":257,"column":6,"offset":11083},"end":{"line":257,"column":12,"offset":11089},"indent":[]}},{"type":"text","value":" on the object's prototype chain","position":{"start":{"line":257,"column":12,"offset":11089},"end":{"line":257,"column":44,"offset":11121},"indent":[]}}],"position":{"start":{"line":257,"column":1,"offset":11078},"end":{"line":257,"column":44,"offset":11121},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The same notion holds true for methods defined somewhere on the object's prototype chain. If the method is on an object's prototype chain, ","position":{"start":{"line":259,"column":1,"offset":11123},"end":{"line":259,"column":140,"offset":11262},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":259,"column":140,"offset":11262},"end":{"line":259,"column":146,"offset":11268},"indent":[]}},{"type":"text","value":" refers to the object the method was called on, as if the method were on the object.","position":{"start":{"line":259,"column":146,"offset":11268},"end":{"line":259,"column":230,"offset":11352},"indent":[]}}],"position":{"start":{"line":259,"column":1,"offset":11123},"end":{"line":259,"column":230,"offset":11352},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"var o = {f: function() { return this.a + this.b; }};\nvar p = Object.create(o);\np.a = 1;\np.b = 4;\n\nconsole.log(p.f()); // 5","position":{"start":{"line":261,"column":1,"offset":11354},"end":{"line":266,"column":29,"offset":11496},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In this example, the object assigned to the variable ","position":{"start":{"line":268,"column":1,"offset":11498},"end":{"line":268,"column":54,"offset":11551},"indent":[]}},{"type":"inlineCode","value":"p","position":{"start":{"line":268,"column":54,"offset":11551},"end":{"line":268,"column":57,"offset":11554},"indent":[]}},{"type":"text","value":" doesn't have its own ","position":{"start":{"line":268,"column":57,"offset":11554},"end":{"line":268,"column":79,"offset":11576},"indent":[]}},{"type":"inlineCode","value":"f","position":{"start":{"line":268,"column":79,"offset":11576},"end":{"line":268,"column":82,"offset":11579},"indent":[]}},{"type":"text","value":" property, it inherits it from its prototype. But it doesn't matter that the lookup for ","position":{"start":{"line":268,"column":82,"offset":11579},"end":{"line":268,"column":170,"offset":11667},"indent":[]}},{"type":"inlineCode","value":"f","position":{"start":{"line":268,"column":170,"offset":11667},"end":{"line":268,"column":173,"offset":11670},"indent":[]}},{"type":"text","value":" eventually finds a member with that name on ","position":{"start":{"line":268,"column":173,"offset":11670},"end":{"line":268,"column":218,"offset":11715},"indent":[]}},{"type":"inlineCode","value":"o","position":{"start":{"line":268,"column":218,"offset":11715},"end":{"line":268,"column":221,"offset":11718},"indent":[]}},{"type":"text","value":"; the lookup began as a reference to ","position":{"start":{"line":268,"column":221,"offset":11718},"end":{"line":268,"column":258,"offset":11755},"indent":[]}},{"type":"inlineCode","value":"p.f","position":{"start":{"line":268,"column":258,"offset":11755},"end":{"line":268,"column":263,"offset":11760},"indent":[]}},{"type":"text","value":", so ","position":{"start":{"line":268,"column":263,"offset":11760},"end":{"line":268,"column":268,"offset":11765},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":268,"column":268,"offset":11765},"end":{"line":268,"column":274,"offset":11771},"indent":[]}},{"type":"text","value":" inside the function takes the value of the object referred to as ","position":{"start":{"line":268,"column":274,"offset":11771},"end":{"line":268,"column":340,"offset":11837},"indent":[]}},{"type":"inlineCode","value":"p","position":{"start":{"line":268,"column":340,"offset":11837},"end":{"line":268,"column":343,"offset":11840},"indent":[]}},{"type":"text","value":". That is, since ","position":{"start":{"line":268,"column":343,"offset":11840},"end":{"line":268,"column":360,"offset":11857},"indent":[]}},{"type":"inlineCode","value":"f","position":{"start":{"line":268,"column":360,"offset":11857},"end":{"line":268,"column":363,"offset":11860},"indent":[]}},{"type":"text","value":" is called as a method of ","position":{"start":{"line":268,"column":363,"offset":11860},"end":{"line":268,"column":389,"offset":11886},"indent":[]}},{"type":"inlineCode","value":"p","position":{"start":{"line":268,"column":389,"offset":11886},"end":{"line":268,"column":392,"offset":11889},"indent":[]}},{"type":"text","value":", its ","position":{"start":{"line":268,"column":392,"offset":11889},"end":{"line":268,"column":398,"offset":11895},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":268,"column":398,"offset":11895},"end":{"line":268,"column":404,"offset":11901},"indent":[]}},{"type":"text","value":" refers to ","position":{"start":{"line":268,"column":404,"offset":11901},"end":{"line":268,"column":415,"offset":11912},"indent":[]}},{"type":"inlineCode","value":"p","position":{"start":{"line":268,"column":415,"offset":11912},"end":{"line":268,"column":418,"offset":11915},"indent":[]}},{"type":"text","value":". This is an interesting feature of JavaScript's prototype inheritance.","position":{"start":{"line":268,"column":418,"offset":11915},"end":{"line":268,"column":489,"offset":11986},"indent":[]}}],"position":{"start":{"line":268,"column":1,"offset":11498},"end":{"line":268,"column":489,"offset":11986},"indent":[]}},{"type":"heading","depth":4,"children":[{"type":"inlineCode","value":"this","position":{"start":{"line":270,"column":6,"offset":11993},"end":{"line":270,"column":12,"offset":11999},"indent":[]}},{"type":"text","value":" with a getter or setter","position":{"start":{"line":270,"column":12,"offset":11999},"end":{"line":270,"column":36,"offset":12023},"indent":[]}}],"position":{"start":{"line":270,"column":1,"offset":11988},"end":{"line":270,"column":36,"offset":12023},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Again, the same notion holds true when a function is invoked from a getter or a setter. A function used as getter or setter has its ","position":{"start":{"line":272,"column":1,"offset":12025},"end":{"line":272,"column":133,"offset":12157},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":272,"column":133,"offset":12157},"end":{"line":272,"column":139,"offset":12163},"indent":[]}},{"type":"text","value":" bound to the object from which the property is being set or gotten.","position":{"start":{"line":272,"column":139,"offset":12163},"end":{"line":272,"column":207,"offset":12231},"indent":[]}}],"position":{"start":{"line":272,"column":1,"offset":12025},"end":{"line":272,"column":207,"offset":12231},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"function sum() {\n  return this.a + this.b + this.c;\n}\n\nvar o = {\n  a: 1,\n  b: 2,\n  c: 3,\n  get average() {\n    return (this.a + this.b + this.c) / 3;\n  }\n};\n\nObject.defineProperty(o, 'sum', {\n    get: sum, enumerable: true, configurable: true});\n\nconsole.log(o.average, o.sum); // 2, 6","position":{"start":{"line":274,"column":1,"offset":12233},"end":{"line":290,"column":43,"offset":12574},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"As a constructor","position":{"start":{"line":292,"column":5,"offset":12580},"end":{"line":292,"column":21,"offset":12596},"indent":[]}}],"position":{"start":{"line":292,"column":1,"offset":12576},"end":{"line":292,"column":21,"offset":12596},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"When a function is used as a constructor (with the ","position":{"start":{"line":294,"column":1,"offset":12598},"end":{"line":294,"column":52,"offset":12649},"indent":[]}},{"type":"link","title":null,"url":"new","children":[{"type":"inlineCode","value":"new","position":{"start":{"line":294,"column":53,"offset":12650},"end":{"line":294,"column":58,"offset":12655},"indent":[]}}],"position":{"start":{"line":294,"column":52,"offset":12649},"end":{"line":294,"column":64,"offset":12661},"indent":[]}},{"type":"text","value":" keyword), its ","position":{"start":{"line":294,"column":64,"offset":12661},"end":{"line":294,"column":79,"offset":12676},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":294,"column":79,"offset":12676},"end":{"line":294,"column":85,"offset":12682},"indent":[]}},{"type":"text","value":" is bound to the new object being constructed.","position":{"start":{"line":294,"column":85,"offset":12682},"end":{"line":294,"column":131,"offset":12728},"indent":[]}}],"position":{"start":{"line":294,"column":1,"offset":12598},"end":{"line":294,"column":131,"offset":12728},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":296,"column":3,"offset":12732},"end":{"line":296,"column":8,"offset":12737},"indent":[]}}],"position":{"start":{"line":296,"column":1,"offset":12730},"end":{"line":296,"column":10,"offset":12739},"indent":[]}},{"type":"text","value":" While the default for a constructor is to return the object referenced by ","position":{"start":{"line":296,"column":10,"offset":12739},"end":{"line":296,"column":85,"offset":12814},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":296,"column":85,"offset":12814},"end":{"line":296,"column":91,"offset":12820},"indent":[]}},{"type":"text","value":", it can instead return some other object (if the return value isn't an object, then the ","position":{"start":{"line":296,"column":91,"offset":12820},"end":{"line":296,"column":180,"offset":12909},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":296,"column":180,"offset":12909},"end":{"line":296,"column":186,"offset":12915},"indent":[]}},{"type":"text","value":" object is returned).","position":{"start":{"line":296,"column":186,"offset":12915},"end":{"line":296,"column":207,"offset":12936},"indent":[]}}],"position":{"start":{"line":296,"column":1,"offset":12730},"end":{"line":296,"column":207,"offset":12936},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"/*\n * Constructors work like this:\n *\n * function MyConstructor(){\n *   // Actual function body code goes here.\n *   // Create properties on |this| as\n *   // desired by assigning to them.  E.g.,\n *   this.fum = \"nom\";\n *   // et cetera...\n *\n *   // If the function has a return statement that\n *   // returns an object, that object will be the\n *   // result of the |new| expression.  Otherwise,\n *   // the result of the expression is the object\n *   // currently bound to |this|\n *   // (i.e., the common case most usually seen).\n * }\n */\n\nfunction C() {\n  this.a = 37;\n}\n\nvar o = new C();\nconsole.log(o.a); // 37\n\nfunction C2() {\n  this.a = 37;\n  return {a: 38};\n}\n\no = new C2();\nconsole.log(o.a); // 38","position":{"start":{"line":298,"column":1,"offset":12938},"end":{"line":330,"column":28,"offset":13762},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In the last example (","position":{"start":{"line":332,"column":1,"offset":13764},"end":{"line":332,"column":22,"offset":13785},"indent":[]}},{"type":"inlineCode","value":"C2","position":{"start":{"line":332,"column":22,"offset":13785},"end":{"line":332,"column":26,"offset":13789},"indent":[]}},{"type":"text","value":"), because an object was returned during construction, the new object that ","position":{"start":{"line":332,"column":26,"offset":13789},"end":{"line":332,"column":101,"offset":13864},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":332,"column":101,"offset":13864},"end":{"line":332,"column":107,"offset":13870},"indent":[]}},{"type":"text","value":" was bound to gets discarded. (This essentially makes the statement \"","position":{"start":{"line":332,"column":107,"offset":13870},"end":{"line":332,"column":176,"offset":13939},"indent":[]}},{"type":"inlineCode","value":"this.a = 37;","position":{"start":{"line":332,"column":176,"offset":13939},"end":{"line":332,"column":190,"offset":13953},"indent":[]}},{"type":"text","value":"\" dead code. It's not exactly dead because it gets executed, but it can be eliminated with no outside effects.)","position":{"start":{"line":332,"column":190,"offset":13953},"end":{"line":332,"column":301,"offset":14064},"indent":[]}}],"position":{"start":{"line":332,"column":1,"offset":13764},"end":{"line":332,"column":301,"offset":14064},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"As a DOM event handler","position":{"start":{"line":334,"column":5,"offset":14070},"end":{"line":334,"column":27,"offset":14092},"indent":[]}}],"position":{"start":{"line":334,"column":1,"offset":14066},"end":{"line":334,"column":27,"offset":14092},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"When a function is used as an event handler, its ","position":{"start":{"line":336,"column":1,"offset":14094},"end":{"line":336,"column":50,"offset":14143},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":336,"column":50,"offset":14143},"end":{"line":336,"column":56,"offset":14149},"indent":[]}},{"type":"text","value":" is set to the element on which the listener is placed (some browsers do not follow this convention for listeners added dynamically with methods other than ","position":{"start":{"line":336,"column":56,"offset":14149},"end":{"line":336,"column":212,"offset":14305},"indent":[]}},{"type":"link","title":null,"url":"https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener","children":[{"type":"inlineCode","value":"addEventListener()","position":{"start":{"line":336,"column":213,"offset":14306},"end":{"line":336,"column":233,"offset":14326},"indent":[]}}],"position":{"start":{"line":336,"column":212,"offset":14305},"end":{"line":336,"column":313,"offset":14406},"indent":[]}},{"type":"text","value":").","position":{"start":{"line":336,"column":313,"offset":14406},"end":{"line":336,"column":315,"offset":14408},"indent":[]}}],"position":{"start":{"line":336,"column":1,"offset":14094},"end":{"line":336,"column":315,"offset":14408},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"// When called as a listener, turns the related element blue\nfunction bluify(e) {\n  // Always true\n  console.log(this === e.currentTarget);\n  // true when currentTarget and target are the same object\n  console.log(this === e.target);\n  this.style.backgroundColor = '#A5D9F3';\n}\n\n// Get a list of every element in the document\nvar elements = document.getElementsByTagName('*');\n\n// Add bluify as a click listener so when the\n// element is clicked on, it turns blue\nfor (var i = 0; i < elements.length; i++) {\n  elements[i].addEventListener('click', bluify, false);\n}","position":{"start":{"line":338,"column":1,"offset":14410},"end":{"line":354,"column":6,"offset":15035},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"In an inline event handler","position":{"start":{"line":356,"column":5,"offset":15041},"end":{"line":356,"column":31,"offset":15067},"indent":[]}}],"position":{"start":{"line":356,"column":1,"offset":15037},"end":{"line":356,"column":31,"offset":15067},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"When the code is called from an inline ","position":{"start":{"line":358,"column":1,"offset":15069},"end":{"line":358,"column":40,"offset":15108},"indent":[]}},{"type":"link","title":null,"url":"https://developer.mozilla.org/en-US/docs/Web/Events/Event_handlers","children":[{"type":"text","value":"on-event handler","position":{"start":{"line":358,"column":41,"offset":15109},"end":{"line":358,"column":57,"offset":15125},"indent":[]}}],"position":{"start":{"line":358,"column":40,"offset":15108},"end":{"line":358,"column":126,"offset":15194},"indent":[]}},{"type":"text","value":", its ","position":{"start":{"line":358,"column":126,"offset":15194},"end":{"line":358,"column":132,"offset":15200},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":358,"column":132,"offset":15200},"end":{"line":358,"column":138,"offset":15206},"indent":[]}},{"type":"text","value":" is set to the DOM element on which the listener is placed:","position":{"start":{"line":358,"column":138,"offset":15206},"end":{"line":358,"column":197,"offset":15265},"indent":[]}}],"position":{"start":{"line":358,"column":1,"offset":15069},"end":{"line":358,"column":197,"offset":15265},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"<button onclick=\"alert(this.tagName.toLowerCase());\">\n  Show this\n</button>","position":{"start":{"line":360,"column":1,"offset":15267},"end":{"line":362,"column":14,"offset":15354},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The above alert shows ","position":{"start":{"line":364,"column":1,"offset":15356},"end":{"line":364,"column":23,"offset":15378},"indent":[]}},{"type":"inlineCode","value":"button","position":{"start":{"line":364,"column":23,"offset":15378},"end":{"line":364,"column":31,"offset":15386},"indent":[]}},{"type":"text","value":". Note however that only the outer code has its ","position":{"start":{"line":364,"column":31,"offset":15386},"end":{"line":364,"column":79,"offset":15434},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":364,"column":79,"offset":15434},"end":{"line":364,"column":85,"offset":15440},"indent":[]}},{"type":"text","value":" set this way:","position":{"start":{"line":364,"column":85,"offset":15440},"end":{"line":364,"column":99,"offset":15454},"indent":[]}}],"position":{"start":{"line":364,"column":1,"offset":15356},"end":{"line":364,"column":99,"offset":15454},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"<button onclick=\"alert((function() { return this; })());\">\n  Show inner this\n</button>","position":{"start":{"line":366,"column":1,"offset":15456},"end":{"line":368,"column":14,"offset":15554},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In this case, the inner function's ","position":{"start":{"line":370,"column":1,"offset":15556},"end":{"line":370,"column":36,"offset":15591},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":370,"column":36,"offset":15591},"end":{"line":370,"column":42,"offset":15597},"indent":[]}},{"type":"text","value":" isn't set so it returns the global/window object (i.e. the default object in non-strict mode where ","position":{"start":{"line":370,"column":42,"offset":15597},"end":{"line":370,"column":142,"offset":15697},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":370,"column":142,"offset":15697},"end":{"line":370,"column":148,"offset":15703},"indent":[]}},{"type":"text","value":" isn't set by the call).","position":{"start":{"line":370,"column":148,"offset":15703},"end":{"line":370,"column":172,"offset":15727},"indent":[]}}],"position":{"start":{"line":370,"column":1,"offset":15556},"end":{"line":370,"column":172,"offset":15727},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"this in classes","position":{"start":{"line":372,"column":5,"offset":15733},"end":{"line":372,"column":20,"offset":15748},"indent":[]}}],"position":{"start":{"line":372,"column":1,"offset":15729},"end":{"line":372,"column":20,"offset":15748},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Just like with regular functions, the value of ","position":{"start":{"line":374,"column":1,"offset":15750},"end":{"line":374,"column":48,"offset":15797},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":374,"column":48,"offset":15797},"end":{"line":374,"column":54,"offset":15803},"indent":[]}},{"type":"text","value":" within methods depends on how they are called. Sometimes it is useful to override this behavior so that ","position":{"start":{"line":374,"column":54,"offset":15803},"end":{"line":374,"column":159,"offset":15908},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":374,"column":159,"offset":15908},"end":{"line":374,"column":165,"offset":15914},"indent":[]}},{"type":"text","value":" within classes always refers to the class instance. To achieve this, bind the class methods in the constructor:","position":{"start":{"line":374,"column":165,"offset":15914},"end":{"line":374,"column":277,"offset":16026},"indent":[]}}],"position":{"start":{"line":374,"column":1,"offset":15750},"end":{"line":374,"column":277,"offset":16026},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"class Car {\n  constructor() {\n    // Bind sayBye but not sayHi to show the difference\n    this.sayBye = this.sayBye.bind(this);\n  }\n  sayHi() {\n    console.log(`Hello from ${this.name}`);\n  }\n  sayBye() {\n    console.log(`Bye from ${this.name}`);\n  }\n  get name() {\n    return 'Ferrari';\n  }\n}\n\nclass Bird {\n  get name() {\n    return 'Tweety';\n  }\n}\n\nconst car = new Car();\nconst bird = new Bird();\n\n// The value of 'this' in methods depends on their caller\ncar.sayHi(); // Hello from Ferrari\nbird.sayHi = car.sayHi;\nbird.sayHi(); // Hello from Tweety\n\n// For bound methods, 'this' doesn't depend on the caller\nbird.sayBye = car.sayBye;\nbird.sayBye();  // Bye from Ferrari","position":{"start":{"line":376,"column":1,"offset":16028},"end":{"line":408,"column":40,"offset":16816},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":410,"column":3,"offset":16820},"end":{"line":410,"column":8,"offset":16825},"indent":[]}}],"position":{"start":{"line":410,"column":1,"offset":16818},"end":{"line":410,"column":10,"offset":16827},"indent":[]}},{"type":"text","value":" Classes are always strict mode code. Calling methods with an undefined ","position":{"start":{"line":410,"column":10,"offset":16827},"end":{"line":410,"column":82,"offset":16899},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":410,"column":82,"offset":16899},"end":{"line":410,"column":88,"offset":16905},"indent":[]}},{"type":"text","value":" will throw an error.","position":{"start":{"line":410,"column":88,"offset":16905},"end":{"line":410,"column":109,"offset":16926},"indent":[]}}],"position":{"start":{"line":410,"column":1,"offset":16818},"end":{"line":410,"column":109,"offset":16926},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":411,"column":1,"offset":16927}}}}