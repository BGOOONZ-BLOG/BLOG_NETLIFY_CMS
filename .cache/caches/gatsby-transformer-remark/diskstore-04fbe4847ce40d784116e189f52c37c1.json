{"expireTime":9007200904342771000,"key":"transformer-remark-markdown-html-dbdcb565842c7ac4305183f81cef7336--","val":"<h1>Math.abs()</h1>\n<p>The <code>Math.abs()</code> function returns the absolute value of a number. That is, it returns <code>x</code> if <code>x</code> is positive or zero, and the negation of <code>x</code> if <code>x</code> is negative.</p>\n<h2>Syntax</h2>\n<pre><code>Math.abs(x)\n</code></pre>\n<h3>Parameters</h3>\n<p><code>x</code><br>\nA number.</p>\n<h3>Return value</h3>\n<p>The absolute value of the given number.</p>\n<h2>Description</h2>\n<p>Because <code>abs()</code> is a static method of <code>Math</code>, you always use it as <code>Math.abs()</code>, rather than as a method of a <code>Math</code> object you created (<code>Math</code> is not a constructor).</p>\n<h2>Examples</h2>\n<h3>Behavior of Math.abs()</h3>\n<p>Passing an empty object, an array with more than one member, a non-numeric string or <a href=\"../undefined\"><code>undefined</code></a>/empty variable returns <a href=\"../nan\"><code>NaN</code></a>. Passing <a href=\"../null\"><code>null</code></a>, an empty string or an empty array returns 0.</p>\n<pre><code>Math.abs('-1');     // 1\nMath.abs(-2);       // 2\nMath.abs(null);     // 0\nMath.abs('');       // 0\nMath.abs([]);       // 0\nMath.abs([2]);      // 2\nMath.abs([1,2]);    // NaN\nMath.abs({});       // NaN\nMath.abs('string'); // NaN\nMath.abs();         // NaN\n</code></pre>"}