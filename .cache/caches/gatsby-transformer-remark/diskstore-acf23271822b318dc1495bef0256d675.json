{"expireTime":9007200904342770000,"key":"transformer-remark-markdown-html-ast-3d8c9e30124e8a07bdb7ca296f7648e9--","val":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Introduction","position":{"start":{"line":2,"column":4,"offset":4},"end":{"line":2,"column":16,"offset":16}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":16,"offset":16}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"ECMAScript 6, also known as ECMAScript 2015, is the latest version of the ECMAScript standard. ES6 is a significant update to the language, and the first update to the language since ES5 was standardized in 2009. Implementation of these features in major JavaScript engines is ","position":{"start":{"line":4,"column":1,"offset":18},"end":{"line":4,"column":278,"offset":295}}},{"type":"element","tagName":"a","properties":{"href":"http://kangax.github.io/es5-compat-table/es6/"},"children":[{"type":"text","value":"underway now","position":{"start":{"line":4,"column":279,"offset":296},"end":{"line":4,"column":291,"offset":308}}}],"position":{"start":{"line":4,"column":278,"offset":295},"end":{"line":4,"column":339,"offset":356}}},{"type":"text","value":".","position":{"start":{"line":4,"column":339,"offset":356},"end":{"line":4,"column":340,"offset":357}}}],"position":{"start":{"line":4,"column":1,"offset":18},"end":{"line":4,"column":340,"offset":357}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"See the ","position":{"start":{"line":6,"column":1,"offset":359},"end":{"line":6,"column":9,"offset":367}}},{"type":"element","tagName":"a","properties":{"href":"http://www.ecma-international.org/ecma-262/6.0/"},"children":[{"type":"text","value":"ES6 standard","position":{"start":{"line":6,"column":10,"offset":368},"end":{"line":6,"column":22,"offset":380}}}],"position":{"start":{"line":6,"column":9,"offset":367},"end":{"line":6,"column":72,"offset":430}}},{"type":"text","value":" for full specification of the ECMAScript 6 language.","position":{"start":{"line":6,"column":72,"offset":430},"end":{"line":6,"column":125,"offset":483}}}],"position":{"start":{"line":6,"column":1,"offset":359},"end":{"line":6,"column":125,"offset":483}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"ES6 includes the following new features:","position":{"start":{"line":8,"column":1,"offset":485},"end":{"line":8,"column":41,"offset":525}}}],"position":{"start":{"line":8,"column":1,"offset":485},"end":{"line":8,"column":41,"offset":525}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#arrows"},"children":[{"type":"text","value":"arrows","position":{"start":{"line":10,"column":4,"offset":530},"end":{"line":10,"column":10,"offset":536}}}],"position":{"start":{"line":10,"column":3,"offset":529},"end":{"line":10,"column":20,"offset":546}}}],"position":{"start":{"line":10,"column":1,"offset":527},"end":{"line":10,"column":20,"offset":546}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#classes"},"children":[{"type":"text","value":"classes","position":{"start":{"line":11,"column":4,"offset":550},"end":{"line":11,"column":11,"offset":557}}}],"position":{"start":{"line":11,"column":3,"offset":549},"end":{"line":11,"column":22,"offset":568}}}],"position":{"start":{"line":11,"column":1,"offset":547},"end":{"line":11,"column":22,"offset":568}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#enhanced-object-literals"},"children":[{"type":"text","value":"enhanced object literals","position":{"start":{"line":12,"column":4,"offset":572},"end":{"line":12,"column":28,"offset":596}}}],"position":{"start":{"line":12,"column":3,"offset":571},"end":{"line":12,"column":56,"offset":624}}}],"position":{"start":{"line":12,"column":1,"offset":569},"end":{"line":12,"column":56,"offset":624}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#template-strings"},"children":[{"type":"text","value":"template strings","position":{"start":{"line":13,"column":4,"offset":628},"end":{"line":13,"column":20,"offset":644}}}],"position":{"start":{"line":13,"column":3,"offset":627},"end":{"line":13,"column":40,"offset":664}}}],"position":{"start":{"line":13,"column":1,"offset":625},"end":{"line":13,"column":40,"offset":664}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#destructuring"},"children":[{"type":"text","value":"destructuring","position":{"start":{"line":14,"column":4,"offset":668},"end":{"line":14,"column":17,"offset":681}}}],"position":{"start":{"line":14,"column":3,"offset":667},"end":{"line":14,"column":34,"offset":698}}}],"position":{"start":{"line":14,"column":1,"offset":665},"end":{"line":14,"column":34,"offset":698}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#default--rest--spread"},"children":[{"type":"text","value":"default + rest + spread","position":{"start":{"line":15,"column":4,"offset":702},"end":{"line":15,"column":27,"offset":725}}}],"position":{"start":{"line":15,"column":3,"offset":701},"end":{"line":15,"column":52,"offset":750}}}],"position":{"start":{"line":15,"column":1,"offset":699},"end":{"line":15,"column":52,"offset":750}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#let--const"},"children":[{"type":"text","value":"let + const","position":{"start":{"line":16,"column":4,"offset":754},"end":{"line":16,"column":15,"offset":765}}}],"position":{"start":{"line":16,"column":3,"offset":753},"end":{"line":16,"column":29,"offset":779}}}],"position":{"start":{"line":16,"column":1,"offset":751},"end":{"line":16,"column":29,"offset":779}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#iterators--forof"},"children":[{"type":"text","value":"iterators + for..of","position":{"start":{"line":17,"column":4,"offset":783},"end":{"line":17,"column":23,"offset":802}}}],"position":{"start":{"line":17,"column":3,"offset":782},"end":{"line":17,"column":43,"offset":822}}}],"position":{"start":{"line":17,"column":1,"offset":780},"end":{"line":17,"column":43,"offset":822}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#generators"},"children":[{"type":"text","value":"generators","position":{"start":{"line":18,"column":4,"offset":826},"end":{"line":18,"column":14,"offset":836}}}],"position":{"start":{"line":18,"column":3,"offset":825},"end":{"line":18,"column":28,"offset":850}}}],"position":{"start":{"line":18,"column":1,"offset":823},"end":{"line":18,"column":28,"offset":850}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#unicode"},"children":[{"type":"text","value":"unicode","position":{"start":{"line":19,"column":4,"offset":854},"end":{"line":19,"column":11,"offset":861}}}],"position":{"start":{"line":19,"column":3,"offset":853},"end":{"line":19,"column":22,"offset":872}}}],"position":{"start":{"line":19,"column":1,"offset":851},"end":{"line":19,"column":22,"offset":872}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#modules"},"children":[{"type":"text","value":"modules","position":{"start":{"line":20,"column":4,"offset":876},"end":{"line":20,"column":11,"offset":883}}}],"position":{"start":{"line":20,"column":3,"offset":875},"end":{"line":20,"column":22,"offset":894}}}],"position":{"start":{"line":20,"column":1,"offset":873},"end":{"line":20,"column":22,"offset":894}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#module-loaders"},"children":[{"type":"text","value":"module loaders","position":{"start":{"line":21,"column":4,"offset":898},"end":{"line":21,"column":18,"offset":912}}}],"position":{"start":{"line":21,"column":3,"offset":897},"end":{"line":21,"column":36,"offset":930}}}],"position":{"start":{"line":21,"column":1,"offset":895},"end":{"line":21,"column":36,"offset":930}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#map--set--weakmap--weakset"},"children":[{"type":"text","value":"map + set + weakmap + weakset","position":{"start":{"line":22,"column":4,"offset":934},"end":{"line":22,"column":33,"offset":963}}}],"position":{"start":{"line":22,"column":3,"offset":933},"end":{"line":22,"column":63,"offset":993}}}],"position":{"start":{"line":22,"column":1,"offset":931},"end":{"line":22,"column":63,"offset":993}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#proxies"},"children":[{"type":"text","value":"proxies","position":{"start":{"line":23,"column":4,"offset":997},"end":{"line":23,"column":11,"offset":1004}}}],"position":{"start":{"line":23,"column":3,"offset":996},"end":{"line":23,"column":22,"offset":1015}}}],"position":{"start":{"line":23,"column":1,"offset":994},"end":{"line":23,"column":22,"offset":1015}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#symbols"},"children":[{"type":"text","value":"symbols","position":{"start":{"line":24,"column":4,"offset":1019},"end":{"line":24,"column":11,"offset":1026}}}],"position":{"start":{"line":24,"column":3,"offset":1018},"end":{"line":24,"column":22,"offset":1037}}}],"position":{"start":{"line":24,"column":1,"offset":1016},"end":{"line":24,"column":22,"offset":1037}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#subclassable-built-ins"},"children":[{"type":"text","value":"subclassable built-ins","position":{"start":{"line":25,"column":4,"offset":1041},"end":{"line":25,"column":26,"offset":1063}}}],"position":{"start":{"line":25,"column":3,"offset":1040},"end":{"line":25,"column":52,"offset":1089}}}],"position":{"start":{"line":25,"column":1,"offset":1038},"end":{"line":25,"column":52,"offset":1089}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#promises"},"children":[{"type":"text","value":"promises","position":{"start":{"line":26,"column":4,"offset":1093},"end":{"line":26,"column":12,"offset":1101}}}],"position":{"start":{"line":26,"column":3,"offset":1092},"end":{"line":26,"column":24,"offset":1113}}}],"position":{"start":{"line":26,"column":1,"offset":1090},"end":{"line":26,"column":24,"offset":1113}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#math--number--string--array--object-apis"},"children":[{"type":"text","value":"math + number + string + array + object APIs","position":{"start":{"line":27,"column":4,"offset":1117},"end":{"line":27,"column":48,"offset":1161}}}],"position":{"start":{"line":27,"column":3,"offset":1116},"end":{"line":27,"column":92,"offset":1205}}}],"position":{"start":{"line":27,"column":1,"offset":1114},"end":{"line":27,"column":92,"offset":1205}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#binary-and-octal-literals"},"children":[{"type":"text","value":"binary and octal literals","position":{"start":{"line":28,"column":4,"offset":1209},"end":{"line":28,"column":29,"offset":1234}}}],"position":{"start":{"line":28,"column":3,"offset":1208},"end":{"line":28,"column":58,"offset":1263}}}],"position":{"start":{"line":28,"column":1,"offset":1206},"end":{"line":28,"column":58,"offset":1263}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#reflect-api"},"children":[{"type":"text","value":"reflect api","position":{"start":{"line":29,"column":4,"offset":1267},"end":{"line":29,"column":15,"offset":1278}}}],"position":{"start":{"line":29,"column":3,"offset":1266},"end":{"line":29,"column":30,"offset":1293}}}],"position":{"start":{"line":29,"column":1,"offset":1264},"end":{"line":29,"column":30,"offset":1293}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#tail-calls"},"children":[{"type":"text","value":"tail calls","position":{"start":{"line":30,"column":4,"offset":1297},"end":{"line":30,"column":14,"offset":1307}}}],"position":{"start":{"line":30,"column":3,"offset":1296},"end":{"line":30,"column":28,"offset":1321}}}],"position":{"start":{"line":30,"column":1,"offset":1294},"end":{"line":30,"column":28,"offset":1321}}},{"type":"text","value":"\n"}],"position":{"start":{"line":10,"column":1,"offset":527},"end":{"line":30,"column":28,"offset":1321}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"ECMAScript 6 Features","position":{"start":{"line":32,"column":4,"offset":1326},"end":{"line":32,"column":25,"offset":1347}}}],"position":{"start":{"line":32,"column":1,"offset":1323},"end":{"line":32,"column":25,"offset":1347}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Arrows","position":{"start":{"line":34,"column":5,"offset":1353},"end":{"line":34,"column":11,"offset":1359}}}],"position":{"start":{"line":34,"column":1,"offset":1349},"end":{"line":34,"column":11,"offset":1359}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Arrows are a function shorthand using the ","position":{"start":{"line":36,"column":1,"offset":1361},"end":{"line":36,"column":43,"offset":1403}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"=>"}],"position":{"start":{"line":36,"column":43,"offset":1403},"end":{"line":36,"column":47,"offset":1407}}},{"type":"text","value":" syntax. They are syntactically similar to the related feature in C#, Java 8 and CoffeeScript. They support both statement block bodies as well as expression bodies which return the value of the expression. Unlike functions, arrows share the same lexical ","position":{"start":{"line":36,"column":47,"offset":1407},"end":{"line":36,"column":302,"offset":1662}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":36,"column":302,"offset":1662},"end":{"line":36,"column":308,"offset":1668}}},{"type":"text","value":" as their surrounding code.","position":{"start":{"line":36,"column":308,"offset":1668},"end":{"line":36,"column":335,"offset":1695}}}],"position":{"start":{"line":36,"column":1,"offset":1361},"end":{"line":36,"column":335,"offset":1695}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"// Expression bodies\nvar odds = evens.map(v => v + 1);\nvar nums = evens.map((v, i) => v + i);\nvar pairs = evens.map(v => ({even: v, odd: v + 1}));\n\n// Statement bodies\nnums.forEach(v => {\n  if (v % 5 === 0)\n    fives.push(v);\n});\n\n// Lexical this\nvar bob = {\n  _name: \"Bob\",\n  _friends: [],\n  printFriends() {\n    this._friends.forEach(f =>\n      console.log(this._name + \" knows \" + f));\n  }\n}\n"}],"position":{"start":{"line":38,"column":1,"offset":1697},"end":{"line":59,"column":4,"offset":2101}}}],"position":{"start":{"line":38,"column":1,"offset":1697},"end":{"line":59,"column":4,"offset":2101}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"More info: ","position":{"start":{"line":61,"column":1,"offset":2103},"end":{"line":61,"column":12,"offset":2114}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Functions/Arrow_functions"},"children":[{"type":"text","value":"MDN Arrow Functions","position":{"start":{"line":61,"column":13,"offset":2115},"end":{"line":61,"column":32,"offset":2134}}}],"position":{"start":{"line":61,"column":12,"offset":2114},"end":{"line":61,"column":123,"offset":2225}}}],"position":{"start":{"line":61,"column":1,"offset":2103},"end":{"line":61,"column":123,"offset":2225}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Classes","position":{"start":{"line":63,"column":5,"offset":2231},"end":{"line":63,"column":12,"offset":2238}}}],"position":{"start":{"line":63,"column":1,"offset":2227},"end":{"line":63,"column":12,"offset":2238}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"ES6 classes are a simple sugar over the prototype-based OO pattern. Having a single convenient declarative form makes class patterns easier to use, and encourages interoperability. Classes support prototype-based inheritance, super calls, instance and static methods and constructors.","position":{"start":{"line":65,"column":1,"offset":2240},"end":{"line":65,"column":285,"offset":2524}}}],"position":{"start":{"line":65,"column":1,"offset":2240},"end":{"line":65,"column":285,"offset":2524}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"class SkinnedMesh extends THREE.Mesh {\n  constructor(geometry, materials) {\n    super(geometry, materials);\n\n    this.idMatrix = SkinnedMesh.defaultMatrix();\n    this.bones = [];\n    this.boneMatrices = [];\n    //...\n  }\n  update(camera) {\n    //...\n    super.update();\n  }\n  get boneCount() {\n    return this.bones.length;\n  }\n  set matrixType(matrixType) {\n    this.idMatrix = SkinnedMesh[matrixType]();\n  }\n  static defaultMatrix() {\n    return new THREE.Matrix4();\n  }\n}\n"}],"position":{"start":{"line":67,"column":1,"offset":2526},"end":{"line":91,"column":4,"offset":3010}}}],"position":{"start":{"line":67,"column":1,"offset":2526},"end":{"line":91,"column":4,"offset":3010}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"More info: ","position":{"start":{"line":93,"column":1,"offset":3012},"end":{"line":93,"column":12,"offset":3023}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Classes"},"children":[{"type":"text","value":"MDN Classes","position":{"start":{"line":93,"column":13,"offset":3024},"end":{"line":93,"column":24,"offset":3035}}}],"position":{"start":{"line":93,"column":12,"offset":3023},"end":{"line":93,"column":97,"offset":3108}}}],"position":{"start":{"line":93,"column":1,"offset":3012},"end":{"line":93,"column":97,"offset":3108}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Enhanced Object Literals","position":{"start":{"line":95,"column":5,"offset":3114},"end":{"line":95,"column":29,"offset":3138}}}],"position":{"start":{"line":95,"column":1,"offset":3110},"end":{"line":95,"column":29,"offset":3138}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Object literals are extended to support setting the prototype at construction, shorthand for ","position":{"start":{"line":97,"column":1,"offset":3140},"end":{"line":97,"column":94,"offset":3233}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"foo: foo"}],"position":{"start":{"line":97,"column":94,"offset":3233},"end":{"line":97,"column":104,"offset":3243}}},{"type":"text","value":" assignments, defining methods, making super calls, and computing property names with expressions. Together, these also bring object literals and class declarations closer together, and let object-based design benefit from some of the same conveniences.","position":{"start":{"line":97,"column":104,"offset":3243},"end":{"line":97,"column":357,"offset":3496}}}],"position":{"start":{"line":97,"column":1,"offset":3140},"end":{"line":97,"column":357,"offset":3496}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"var obj = {\n    // __proto__\n    __proto__: theProtoObj,\n    // Shorthand for 'handler: handler'\n    handler,\n    // Methods\n    toString() {\n     // Super calls\n     return \"d \" + super.toString();\n    },\n    // Computed (dynamic) property names\n    [ 'prop_' + (() => 42)() ]: 42\n};\n"}],"position":{"start":{"line":99,"column":1,"offset":3498},"end":{"line":113,"column":4,"offset":3792}}}],"position":{"start":{"line":99,"column":1,"offset":3498},"end":{"line":113,"column":4,"offset":3792}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"More info: ","position":{"start":{"line":115,"column":1,"offset":3794},"end":{"line":115,"column":12,"offset":3805}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Grammar_and_types#Object_literals"},"children":[{"type":"text","value":"MDN Grammar and types: Object literals","position":{"start":{"line":115,"column":13,"offset":3806},"end":{"line":115,"column":51,"offset":3844}}}],"position":{"start":{"line":115,"column":12,"offset":3805},"end":{"line":115,"column":149,"offset":3942}}}],"position":{"start":{"line":115,"column":1,"offset":3794},"end":{"line":115,"column":149,"offset":3942}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Template Strings","position":{"start":{"line":117,"column":5,"offset":3948},"end":{"line":117,"column":21,"offset":3964}}}],"position":{"start":{"line":117,"column":1,"offset":3944},"end":{"line":117,"column":21,"offset":3964}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Template strings provide syntactic sugar for constructing strings. This is similar to string interpolation features in Perl, Python and more. Optionally, a tag can be added to allow the string construction to be customized, avoiding injection attacks or constructing higher level data structures from string contents.","position":{"start":{"line":119,"column":1,"offset":3966},"end":{"line":119,"column":318,"offset":4283}}}],"position":{"start":{"line":119,"column":1,"offset":3966},"end":{"line":119,"column":318,"offset":4283}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"// Basic literal string creation\n`In JavaScript '\\n' is a line-feed.`\n\n// Multiline strings\n`In JavaScript this is\n not legal.`\n\n// String interpolation\nvar name = \"Bob\", time = \"today\";\n`Hello ${name}, how are you ${time}?`\n\n// Construct an HTTP request prefix is used to interpret the replacements and construction\nPOST`http://foo.org/bar?a=${a}&b=${b}\n     Content-Type: application/json\n     X-Credentials: ${credentials}\n     { \"foo\": ${foo},\n       \"bar\": ${bar}}`(myOnReadyStateChangeHandler);\n"}],"position":{"start":{"line":121,"column":1,"offset":4285},"end":{"line":139,"column":4,"offset":4795}}}],"position":{"start":{"line":121,"column":1,"offset":4285},"end":{"line":139,"column":4,"offset":4795}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"More info: ","position":{"start":{"line":141,"column":1,"offset":4797},"end":{"line":141,"column":12,"offset":4808}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/template_strings"},"children":[{"type":"text","value":"MDN Template Strings","position":{"start":{"line":141,"column":13,"offset":4809},"end":{"line":141,"column":33,"offset":4829}}}],"position":{"start":{"line":141,"column":12,"offset":4808},"end":{"line":141,"column":118,"offset":4914}}}],"position":{"start":{"line":141,"column":1,"offset":4797},"end":{"line":141,"column":118,"offset":4914}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Destructuring","position":{"start":{"line":143,"column":5,"offset":4920},"end":{"line":143,"column":18,"offset":4933}}}],"position":{"start":{"line":143,"column":1,"offset":4916},"end":{"line":143,"column":18,"offset":4933}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Destructuring allows binding using pattern matching, with support for matching arrays and objects. Destructuring is fail-soft, similar to standard object lookup ","position":{"start":{"line":145,"column":1,"offset":4935},"end":{"line":145,"column":162,"offset":5096}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"foo[\"bar\"]"}],"position":{"start":{"line":145,"column":162,"offset":5096},"end":{"line":145,"column":174,"offset":5108}}},{"type":"text","value":", producing ","position":{"start":{"line":145,"column":174,"offset":5108},"end":{"line":145,"column":186,"offset":5120}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"undefined"}],"position":{"start":{"line":145,"column":186,"offset":5120},"end":{"line":145,"column":197,"offset":5131}}},{"type":"text","value":" values when not found.","position":{"start":{"line":145,"column":197,"offset":5131},"end":{"line":145,"column":220,"offset":5154}}}],"position":{"start":{"line":145,"column":1,"offset":4935},"end":{"line":145,"column":220,"offset":5154}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"// list matching\nvar [a, , b] = [1,2,3];\n\n// object matching\nvar { op: a, lhs: { op: b }, rhs: c }\n       = getASTNode()\n\n// object matching shorthand\n// binds `op`, `lhs` and `rhs` in scope\nvar {op, lhs, rhs} = getASTNode()\n\n// Can be used in parameter position\nfunction g({name: x}) {\n  console.log(x);\n}\ng({name: 5})\n\n// Fail-soft destructuring\nvar [a] = [];\na === undefined;\n\n// Fail-soft destructuring with defaults\nvar [a = 1] = [];\na === 1;\n"}],"position":{"start":{"line":147,"column":1,"offset":5156},"end":{"line":172,"column":4,"offset":5613}}}],"position":{"start":{"line":147,"column":1,"offset":5156},"end":{"line":172,"column":4,"offset":5613}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"More info: ","position":{"start":{"line":174,"column":1,"offset":5615},"end":{"line":174,"column":12,"offset":5626}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment"},"children":[{"type":"text","value":"MDN Destructuring assignment","position":{"start":{"line":174,"column":13,"offset":5627},"end":{"line":174,"column":41,"offset":5655}}}],"position":{"start":{"line":174,"column":12,"offset":5626},"end":{"line":174,"column":144,"offset":5758}}}],"position":{"start":{"line":174,"column":1,"offset":5615},"end":{"line":174,"column":144,"offset":5758}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Default + Rest + Spread","position":{"start":{"line":176,"column":5,"offset":5764},"end":{"line":176,"column":28,"offset":5787}}}],"position":{"start":{"line":176,"column":1,"offset":5760},"end":{"line":176,"column":28,"offset":5787}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Callee-evaluated default parameter values. Turn an array into consecutive arguments in a function call. Bind trailing parameters to an array. Rest replaces the need for ","position":{"start":{"line":178,"column":1,"offset":5789},"end":{"line":178,"column":170,"offset":5958}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"arguments"}],"position":{"start":{"line":178,"column":170,"offset":5958},"end":{"line":178,"column":181,"offset":5969}}},{"type":"text","value":" and addresses common cases more directly.","position":{"start":{"line":178,"column":181,"offset":5969},"end":{"line":178,"column":223,"offset":6011}}}],"position":{"start":{"line":178,"column":1,"offset":5789},"end":{"line":178,"column":223,"offset":6011}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":180,"column":1,"offset":6013},"end":{"line":180,"column":4,"offset":6016}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"function f(x, y=12) {\n  // y is 12 if not passed (or passed as undefined)\n  return x + y;\n}\nf(3) == 15\n"}],"position":{"start":{"line":183,"column":1,"offset":6019},"end":{"line":191,"column":4,"offset":6133}}}],"position":{"start":{"line":183,"column":1,"offset":6019},"end":{"line":191,"column":4,"offset":6133}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":193,"column":1,"offset":6135},"end":{"line":193,"column":4,"offset":6138}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"function f(x, ...y) {\n  // y is an Array\n  return x * y.length;\n}\nf(3, \"hello\", true) == 6\n"}],"position":{"start":{"line":196,"column":1,"offset":6141},"end":{"line":204,"column":4,"offset":6243}}}],"position":{"start":{"line":196,"column":1,"offset":6141},"end":{"line":204,"column":4,"offset":6243}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":206,"column":1,"offset":6245},"end":{"line":206,"column":4,"offset":6248}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"function f(x, y, z) {\n  return x + y + z;\n}\n// Pass each elem of array as argument\nf(...[1,2,3]) == 6\n"}],"position":{"start":{"line":209,"column":1,"offset":6251},"end":{"line":217,"column":4,"offset":6364}}}],"position":{"start":{"line":209,"column":1,"offset":6251},"end":{"line":217,"column":4,"offset":6364}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"More MDN info: ","position":{"start":{"line":219,"column":1,"offset":6366},"end":{"line":219,"column":16,"offset":6381}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Default_parameters"},"children":[{"type":"text","value":"Default parameters","position":{"start":{"line":219,"column":17,"offset":6382},"end":{"line":219,"column":35,"offset":6400}}}],"position":{"start":{"line":219,"column":16,"offset":6381},"end":{"line":219,"column":132,"offset":6497}}},{"type":"text","value":", ","position":{"start":{"line":219,"column":132,"offset":6497},"end":{"line":219,"column":134,"offset":6499}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters"},"children":[{"type":"text","value":"Rest parameters","position":{"start":{"line":219,"column":135,"offset":6500},"end":{"line":219,"column":150,"offset":6515}}}],"position":{"start":{"line":219,"column":134,"offset":6499},"end":{"line":219,"column":244,"offset":6609}}},{"type":"text","value":", ","position":{"start":{"line":219,"column":244,"offset":6609},"end":{"line":219,"column":246,"offset":6611}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator"},"children":[{"type":"text","value":"Spread Operator","position":{"start":{"line":219,"column":247,"offset":6612},"end":{"line":219,"column":262,"offset":6627}}}],"position":{"start":{"line":219,"column":246,"offset":6611},"end":{"line":219,"column":356,"offset":6721}}}],"position":{"start":{"line":219,"column":1,"offset":6366},"end":{"line":219,"column":356,"offset":6721}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Let + Const","position":{"start":{"line":221,"column":5,"offset":6727},"end":{"line":221,"column":16,"offset":6738}}}],"position":{"start":{"line":221,"column":1,"offset":6723},"end":{"line":221,"column":16,"offset":6738}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Block-scoped binding constructs. ","position":{"start":{"line":223,"column":1,"offset":6740},"end":{"line":223,"column":34,"offset":6773}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"let"}],"position":{"start":{"line":223,"column":34,"offset":6773},"end":{"line":223,"column":39,"offset":6778}}},{"type":"text","value":" is the new ","position":{"start":{"line":223,"column":39,"offset":6778},"end":{"line":223,"column":51,"offset":6790}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"var"}],"position":{"start":{"line":223,"column":51,"offset":6790},"end":{"line":223,"column":56,"offset":6795}}},{"type":"text","value":". ","position":{"start":{"line":223,"column":56,"offset":6795},"end":{"line":223,"column":58,"offset":6797}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}],"position":{"start":{"line":223,"column":58,"offset":6797},"end":{"line":223,"column":65,"offset":6804}}},{"type":"text","value":" is single-assignment. Static restrictions prevent use before assignment.","position":{"start":{"line":223,"column":65,"offset":6804},"end":{"line":223,"column":138,"offset":6877}}}],"position":{"start":{"line":223,"column":1,"offset":6740},"end":{"line":223,"column":138,"offset":6877}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":225,"column":1,"offset":6879},"end":{"line":225,"column":4,"offset":6882}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"function f() {\n  {\n    let x;\n    {\n      // okay, block scoped name\n      const x = \"sneaky\";\n      // error, const\n      x = \"foo\";\n    }\n    // error, already declared in block\n    let x = \"inner\";\n  }\n}\n"}],"position":{"start":{"line":228,"column":1,"offset":6885},"end":{"line":244,"column":4,"offset":7103}}}],"position":{"start":{"line":228,"column":1,"offset":6885},"end":{"line":244,"column":4,"offset":7103}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"More MDN info: ","position":{"start":{"line":246,"column":1,"offset":7105},"end":{"line":246,"column":16,"offset":7120}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let"},"children":[{"type":"text","value":"let statement","position":{"start":{"line":246,"column":17,"offset":7121},"end":{"line":246,"column":30,"offset":7134}}}],"position":{"start":{"line":246,"column":16,"offset":7120},"end":{"line":246,"column":113,"offset":7217}}},{"type":"text","value":", ","position":{"start":{"line":246,"column":113,"offset":7217},"end":{"line":246,"column":115,"offset":7219}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/const"},"children":[{"type":"text","value":"const statement","position":{"start":{"line":246,"column":116,"offset":7220},"end":{"line":246,"column":131,"offset":7235}}}],"position":{"start":{"line":246,"column":115,"offset":7219},"end":{"line":246,"column":216,"offset":7320}}}],"position":{"start":{"line":246,"column":1,"offset":7105},"end":{"line":246,"column":216,"offset":7320}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Iterators + For..Of","position":{"start":{"line":248,"column":5,"offset":7326},"end":{"line":248,"column":24,"offset":7345}}}],"position":{"start":{"line":248,"column":1,"offset":7322},"end":{"line":248,"column":24,"offset":7345}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Iterator objects enable custom iteration like CLR IEnumerable or Java Iterable. Generalize ","position":{"start":{"line":250,"column":1,"offset":7347},"end":{"line":250,"column":92,"offset":7438}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"for..in"}],"position":{"start":{"line":250,"column":92,"offset":7438},"end":{"line":250,"column":101,"offset":7447}}},{"type":"text","value":" to custom iterator-based iteration with ","position":{"start":{"line":250,"column":101,"offset":7447},"end":{"line":250,"column":142,"offset":7488}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"for..of"}],"position":{"start":{"line":250,"column":142,"offset":7488},"end":{"line":250,"column":151,"offset":7497}}},{"type":"text","value":". Don't require realizing an array, enabling lazy design patterns like LINQ.","position":{"start":{"line":250,"column":151,"offset":7497},"end":{"line":250,"column":227,"offset":7573}}}],"position":{"start":{"line":250,"column":1,"offset":7347},"end":{"line":250,"column":227,"offset":7573}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"let fibonacci = {\n  [Symbol.iterator]() {\n    let pre = 0, cur = 1;\n    return {\n      next() {\n        [pre, cur] = [cur, pre + cur];\n        return { done: false, value: cur }\n      }\n    }\n  }\n}\n\nfor (var n of fibonacci) {\n  // truncate the sequence at 1000\n  if (n > 1000)\n    break;\n  console.log(n);\n}\n"}],"position":{"start":{"line":252,"column":1,"offset":7575},"end":{"line":271,"column":4,"offset":7892}}}],"position":{"start":{"line":252,"column":1,"offset":7575},"end":{"line":271,"column":4,"offset":7892}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Iteration is based on these duck-typed interfaces (using ","position":{"start":{"line":273,"column":1,"offset":7894},"end":{"line":273,"column":58,"offset":7951}}},{"type":"element","tagName":"a","properties":{"href":"http://typescriptlang.org"},"children":[{"type":"text","value":"TypeScript","position":{"start":{"line":273,"column":59,"offset":7952},"end":{"line":273,"column":69,"offset":7962}}}],"position":{"start":{"line":273,"column":58,"offset":7951},"end":{"line":273,"column":97,"offset":7990}}},{"type":"text","value":" type syntax for exposition only):","position":{"start":{"line":273,"column":97,"offset":7990},"end":{"line":273,"column":131,"offset":8024}}}],"position":{"start":{"line":273,"column":1,"offset":7894},"end":{"line":273,"column":131,"offset":8024}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-TypeScript"]},"children":[{"type":"text","value":"interface IteratorResult {\n  done: boolean;\n  value: any;\n}\ninterface Iterator {\n  next(): IteratorResult;\n}\ninterface Iterable {\n  [Symbol.iterator](): Iterator\n}\n"}],"position":{"start":{"line":275,"column":1,"offset":8026},"end":{"line":286,"column":4,"offset":8207}}}],"position":{"start":{"line":275,"column":1,"offset":8026},"end":{"line":286,"column":4,"offset":8207}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"More info: ","position":{"start":{"line":288,"column":1,"offset":8209},"end":{"line":288,"column":12,"offset":8220}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...of"},"children":[{"type":"text","value":"MDN for...of","position":{"start":{"line":288,"column":13,"offset":8221},"end":{"line":288,"column":25,"offset":8233}}}],"position":{"start":{"line":288,"column":12,"offset":8220},"end":{"line":288,"column":113,"offset":8321}}}],"position":{"start":{"line":288,"column":1,"offset":8209},"end":{"line":288,"column":113,"offset":8321}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Generators","position":{"start":{"line":290,"column":5,"offset":8327},"end":{"line":290,"column":15,"offset":8337}}}],"position":{"start":{"line":290,"column":1,"offset":8323},"end":{"line":290,"column":15,"offset":8337}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Generators simplify iterator-authoring using ","position":{"start":{"line":292,"column":1,"offset":8339},"end":{"line":292,"column":46,"offset":8384}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"function*"}],"position":{"start":{"line":292,"column":46,"offset":8384},"end":{"line":292,"column":57,"offset":8395}}},{"type":"text","value":" and ","position":{"start":{"line":292,"column":57,"offset":8395},"end":{"line":292,"column":62,"offset":8400}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"yield"}],"position":{"start":{"line":292,"column":62,"offset":8400},"end":{"line":292,"column":69,"offset":8407}}},{"type":"text","value":". A function declared as function","position":{"start":{"line":292,"column":69,"offset":8407},"end":{"line":292,"column":102,"offset":8440}}},{"type":"text","value":"*","position":{"start":{"line":292,"column":102,"offset":8440},"end":{"line":292,"column":104,"offset":8442}}},{"type":"text","value":" returns a Generator instance. Generators are subtypes of iterators which include additional ","position":{"start":{"line":292,"column":104,"offset":8442},"end":{"line":292,"column":197,"offset":8535}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"next"}],"position":{"start":{"line":292,"column":197,"offset":8535},"end":{"line":292,"column":203,"offset":8541}}},{"type":"text","value":" and ","position":{"start":{"line":292,"column":203,"offset":8541},"end":{"line":292,"column":208,"offset":8546}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"throw"}],"position":{"start":{"line":292,"column":208,"offset":8546},"end":{"line":292,"column":215,"offset":8553}}},{"type":"text","value":". These enable values to flow back into the generator, so ","position":{"start":{"line":292,"column":215,"offset":8553},"end":{"line":292,"column":273,"offset":8611}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"yield"}],"position":{"start":{"line":292,"column":273,"offset":8611},"end":{"line":292,"column":280,"offset":8618}}},{"type":"text","value":" is an expression form which returns a value (or throws).","position":{"start":{"line":292,"column":280,"offset":8618},"end":{"line":292,"column":337,"offset":8675}}}],"position":{"start":{"line":292,"column":1,"offset":8339},"end":{"line":292,"column":337,"offset":8675}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Note: Can also be used to enable 'await'-like async programming, see also ES7 ","position":{"start":{"line":294,"column":1,"offset":8677},"end":{"line":294,"column":79,"offset":8755}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"await"}],"position":{"start":{"line":294,"column":79,"offset":8755},"end":{"line":294,"column":86,"offset":8762}}},{"type":"text","value":" proposal.","position":{"start":{"line":294,"column":86,"offset":8762},"end":{"line":294,"column":96,"offset":8772}}}],"position":{"start":{"line":294,"column":1,"offset":8677},"end":{"line":294,"column":96,"offset":8772}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"var fibonacci = {\n  [Symbol.iterator]: function*() {\n    var pre = 0, cur = 1;\n    for (;;) {\n      var temp = pre;\n      pre = cur;\n      cur += temp;\n      yield cur;\n    }\n  }\n}\n\nfor (var n of fibonacci) {\n  // truncate the sequence at 1000\n  if (n > 1000)\n    break;\n  console.log(n);\n}\n"}],"position":{"start":{"line":296,"column":1,"offset":8774},"end":{"line":315,"column":4,"offset":9074}}}],"position":{"start":{"line":296,"column":1,"offset":8774},"end":{"line":315,"column":4,"offset":9074}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The generator interface is (using ","position":{"start":{"line":317,"column":1,"offset":9076},"end":{"line":317,"column":35,"offset":9110}}},{"type":"element","tagName":"a","properties":{"href":"http://typescriptlang.org"},"children":[{"type":"text","value":"TypeScript","position":{"start":{"line":317,"column":36,"offset":9111},"end":{"line":317,"column":46,"offset":9121}}}],"position":{"start":{"line":317,"column":35,"offset":9110},"end":{"line":317,"column":74,"offset":9149}}},{"type":"text","value":" type syntax for exposition only):","position":{"start":{"line":317,"column":74,"offset":9149},"end":{"line":317,"column":108,"offset":9183}}}],"position":{"start":{"line":317,"column":1,"offset":9076},"end":{"line":317,"column":108,"offset":9183}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-TypeScript"]},"children":[{"type":"text","value":"interface Generator extends Iterator {\n    next(value?: any): IteratorResult;\n    throw(exception: any);\n}\n"}],"position":{"start":{"line":319,"column":1,"offset":9185},"end":{"line":324,"column":4,"offset":9309}}}],"position":{"start":{"line":319,"column":1,"offset":9185},"end":{"line":324,"column":4,"offset":9309}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"More info: ","position":{"start":{"line":326,"column":1,"offset":9311},"end":{"line":326,"column":12,"offset":9322}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols"},"children":[{"type":"text","value":"MDN Iteration protocols","position":{"start":{"line":326,"column":13,"offset":9323},"end":{"line":326,"column":36,"offset":9346}}}],"position":{"start":{"line":326,"column":12,"offset":9322},"end":{"line":326,"column":124,"offset":9434}}}],"position":{"start":{"line":326,"column":1,"offset":9311},"end":{"line":326,"column":124,"offset":9434}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Unicode","position":{"start":{"line":328,"column":5,"offset":9440},"end":{"line":328,"column":12,"offset":9447}}}],"position":{"start":{"line":328,"column":1,"offset":9436},"end":{"line":328,"column":12,"offset":9447}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Non-breaking additions to support full Unicode, including new Unicode literal form in strings and new RegExp ","position":{"start":{"line":330,"column":1,"offset":9449},"end":{"line":330,"column":110,"offset":9558}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"u"}],"position":{"start":{"line":330,"column":110,"offset":9558},"end":{"line":330,"column":113,"offset":9561}}},{"type":"text","value":" mode to handle code points, as well as new APIs to process strings at the 21bit code points level. These additions support building global apps in JavaScript.","position":{"start":{"line":330,"column":113,"offset":9561},"end":{"line":330,"column":272,"offset":9720}}}],"position":{"start":{"line":330,"column":1,"offset":9449},"end":{"line":330,"column":272,"offset":9720}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"// same as ES5.1\n\"𠮷\".length == 2\n\n// new RegExp behaviour, opt-in 'u'\n\"𠮷\".match(/./u)[0].length == 2\n\n// new form\n\"\\u{20BB7}\"==\"𠮷\"==\"\\uD842\\uDFB7\"\n\n// new String ops\n\"𠮷\".codePointAt(0) == 0x20BB7\n\n// for-of iterates code points\nfor(var c of \"𠮷\") {\n  console.log(c);\n}\n"}],"position":{"start":{"line":332,"column":1,"offset":9722},"end":{"line":349,"column":4,"offset":10004}}}],"position":{"start":{"line":332,"column":1,"offset":9722},"end":{"line":349,"column":4,"offset":10004}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"More info: ","position":{"start":{"line":351,"column":1,"offset":10006},"end":{"line":351,"column":12,"offset":10017}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/unicode"},"children":[{"type":"text","value":"MDN RegExp.prototype.unicode","position":{"start":{"line":351,"column":13,"offset":10018},"end":{"line":351,"column":41,"offset":10046}}}],"position":{"start":{"line":351,"column":12,"offset":10017},"end":{"line":351,"column":139,"offset":10144}}}],"position":{"start":{"line":351,"column":1,"offset":10006},"end":{"line":351,"column":139,"offset":10144}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Modules","position":{"start":{"line":353,"column":5,"offset":10150},"end":{"line":353,"column":12,"offset":10157}}}],"position":{"start":{"line":353,"column":1,"offset":10146},"end":{"line":353,"column":12,"offset":10157}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Language-level support for modules for component definition. Codifies patterns from popular JavaScript module loaders (AMD, CommonJS). Runtime behaviour defined by a host-defined default loader. Implicitly async model - no code executes until requested modules are available and processed.","position":{"start":{"line":355,"column":1,"offset":10159},"end":{"line":355,"column":290,"offset":10448}}}],"position":{"start":{"line":355,"column":1,"offset":10159},"end":{"line":355,"column":290,"offset":10448}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"// lib/math.js\nexport function sum(x, y) {\n  return x + y;\n}\nexport var pi = 3.141593;\n"}],"position":{"start":{"line":357,"column":1,"offset":10450},"end":{"line":363,"column":4,"offset":10546}}}],"position":{"start":{"line":357,"column":1,"offset":10450},"end":{"line":363,"column":4,"offset":10546}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"// app.js\nimport * as math from \"lib/math\";\nalert(\"2π = \" + math.sum(math.pi, math.pi));\n"}],"position":{"start":{"line":365,"column":1,"offset":10548},"end":{"line":369,"column":4,"offset":10646}}}],"position":{"start":{"line":365,"column":1,"offset":10548},"end":{"line":369,"column":4,"offset":10646}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"// otherApp.js\nimport {sum, pi} from \"lib/math\";\nalert(\"2π = \" + sum(pi, pi));\n"}],"position":{"start":{"line":371,"column":1,"offset":10648},"end":{"line":375,"column":4,"offset":10736}}}],"position":{"start":{"line":371,"column":1,"offset":10648},"end":{"line":375,"column":4,"offset":10736}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Some additional features include ","position":{"start":{"line":377,"column":1,"offset":10738},"end":{"line":377,"column":34,"offset":10771}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"export default"}],"position":{"start":{"line":377,"column":34,"offset":10771},"end":{"line":377,"column":50,"offset":10787}}},{"type":"text","value":" and ","position":{"start":{"line":377,"column":50,"offset":10787},"end":{"line":377,"column":55,"offset":10792}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"export *"}],"position":{"start":{"line":377,"column":55,"offset":10792},"end":{"line":377,"column":65,"offset":10802}}},{"type":"text","value":":","position":{"start":{"line":377,"column":65,"offset":10802},"end":{"line":377,"column":66,"offset":10803}}}],"position":{"start":{"line":377,"column":1,"offset":10738},"end":{"line":377,"column":66,"offset":10803}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"// lib/mathplusplus.js\nexport * from \"lib/math\";\nexport var e = 2.71828182846;\nexport default function(x) {\n    return Math.log(x);\n}\n"}],"position":{"start":{"line":379,"column":1,"offset":10805},"end":{"line":386,"column":4,"offset":10948}}}],"position":{"start":{"line":379,"column":1,"offset":10805},"end":{"line":386,"column":4,"offset":10948}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"// app.js\nimport ln, {pi, e} from \"lib/mathplusplus\";\nalert(\"2π = \" + ln(e)*pi*2);\n"}],"position":{"start":{"line":388,"column":1,"offset":10950},"end":{"line":392,"column":4,"offset":11042}}}],"position":{"start":{"line":388,"column":1,"offset":10950},"end":{"line":392,"column":4,"offset":11042}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"More MDN info: ","position":{"start":{"line":394,"column":1,"offset":11044},"end":{"line":394,"column":16,"offset":11059}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import"},"children":[{"type":"text","value":"import statement","position":{"start":{"line":394,"column":17,"offset":11060},"end":{"line":394,"column":33,"offset":11076}}}],"position":{"start":{"line":394,"column":16,"offset":11059},"end":{"line":394,"column":119,"offset":11162}}},{"type":"text","value":", ","position":{"start":{"line":394,"column":119,"offset":11162},"end":{"line":394,"column":121,"offset":11164}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/export"},"children":[{"type":"text","value":"export statement","position":{"start":{"line":394,"column":122,"offset":11165},"end":{"line":394,"column":138,"offset":11181}}}],"position":{"start":{"line":394,"column":121,"offset":11164},"end":{"line":394,"column":224,"offset":11267}}}],"position":{"start":{"line":394,"column":1,"offset":11044},"end":{"line":394,"column":224,"offset":11267}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Module Loaders","position":{"start":{"line":396,"column":5,"offset":11273},"end":{"line":396,"column":19,"offset":11287}}}],"position":{"start":{"line":396,"column":1,"offset":11269},"end":{"line":396,"column":19,"offset":11287}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Module loaders support:","position":{"start":{"line":398,"column":1,"offset":11289},"end":{"line":398,"column":24,"offset":11312}}}],"position":{"start":{"line":398,"column":1,"offset":11289},"end":{"line":398,"column":24,"offset":11312}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Dynamic loading","position":{"start":{"line":400,"column":3,"offset":11316},"end":{"line":400,"column":18,"offset":11331}}}],"position":{"start":{"line":400,"column":1,"offset":11314},"end":{"line":400,"column":18,"offset":11331}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"State isolation","position":{"start":{"line":401,"column":3,"offset":11334},"end":{"line":401,"column":18,"offset":11349}}}],"position":{"start":{"line":401,"column":1,"offset":11332},"end":{"line":401,"column":18,"offset":11349}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Global namespace isolation","position":{"start":{"line":402,"column":3,"offset":11352},"end":{"line":402,"column":29,"offset":11378}}}],"position":{"start":{"line":402,"column":1,"offset":11350},"end":{"line":402,"column":29,"offset":11378}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Compilation hooks","position":{"start":{"line":403,"column":3,"offset":11381},"end":{"line":403,"column":20,"offset":11398}}}],"position":{"start":{"line":403,"column":1,"offset":11379},"end":{"line":403,"column":20,"offset":11398}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Nested virtualization","position":{"start":{"line":404,"column":3,"offset":11401},"end":{"line":404,"column":24,"offset":11422}}}],"position":{"start":{"line":404,"column":1,"offset":11399},"end":{"line":404,"column":24,"offset":11422}}},{"type":"text","value":"\n"}],"position":{"start":{"line":400,"column":1,"offset":11314},"end":{"line":404,"column":24,"offset":11422}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The default module loader can be configured, and new loaders can be constructed to evaluate and load code in isolated or constrained contexts.","position":{"start":{"line":406,"column":1,"offset":11424},"end":{"line":406,"column":143,"offset":11566}}}],"position":{"start":{"line":406,"column":1,"offset":11424},"end":{"line":406,"column":143,"offset":11566}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"// Dynamic loading - 'System' is default loader\nSystem.import('lib/math').then(function(m) {\n  alert(\"2π = \" + m.sum(m.pi, m.pi));\n});\n\n// Create execution sandboxes - new Loaders\nvar loader = new Loader({\n  global: fixup(window) // replace 'console.log'\n});\nloader.eval(\"console.log('hello world!');\");\n\n// Directly manipulate module cache\nSystem.get('jquery');\nSystem.set('jquery', Module({$: $})); // WARNING: not yet finalized\n"}],"position":{"start":{"line":408,"column":1,"offset":11568},"end":{"line":423,"column":4,"offset":12008}}}],"position":{"start":{"line":408,"column":1,"offset":11568},"end":{"line":423,"column":4,"offset":12008}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Map + Set + WeakMap + WeakSet","position":{"start":{"line":425,"column":5,"offset":12014},"end":{"line":425,"column":34,"offset":12043}}}],"position":{"start":{"line":425,"column":1,"offset":12010},"end":{"line":425,"column":34,"offset":12043}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Efficient data structures for common algorithms. WeakMaps provides leak-free object-key'd side tables.","position":{"start":{"line":427,"column":1,"offset":12045},"end":{"line":427,"column":103,"offset":12147}}}],"position":{"start":{"line":427,"column":1,"offset":12045},"end":{"line":427,"column":103,"offset":12147}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"// Sets\nvar s = new Set();\ns.add(\"hello\").add(\"goodbye\").add(\"hello\");\ns.size === 2;\ns.has(\"hello\") === true;\n\n// Maps\nvar m = new Map();\nm.set(\"hello\", 42);\nm.set(s, 34);\nm.get(s) == 34;\n\n// Weak Maps\nvar wm = new WeakMap();\nwm.set(s, { extra: 42 });\nwm.size === undefined\n\n// Weak Sets\nvar ws = new WeakSet();\nws.add({ data: 42 });\n// Because the added object has no other references, it will not be held in the set\n"}],"position":{"start":{"line":429,"column":1,"offset":12149},"end":{"line":451,"column":4,"offset":12576}}}],"position":{"start":{"line":429,"column":1,"offset":12149},"end":{"line":451,"column":4,"offset":12576}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"More MDN info: ","position":{"start":{"line":453,"column":1,"offset":12578},"end":{"line":453,"column":16,"offset":12593}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map"},"children":[{"type":"text","value":"Map","position":{"start":{"line":453,"column":17,"offset":12594},"end":{"line":453,"column":20,"offset":12597}}}],"position":{"start":{"line":453,"column":16,"offset":12593},"end":{"line":453,"column":107,"offset":12684}}},{"type":"text","value":", ","position":{"start":{"line":453,"column":107,"offset":12684},"end":{"line":453,"column":109,"offset":12686}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set"},"children":[{"type":"text","value":"Set","position":{"start":{"line":453,"column":110,"offset":12687},"end":{"line":453,"column":113,"offset":12690}}}],"position":{"start":{"line":453,"column":109,"offset":12686},"end":{"line":453,"column":200,"offset":12777}}},{"type":"text","value":", ","position":{"start":{"line":453,"column":200,"offset":12777},"end":{"line":453,"column":202,"offset":12779}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap"},"children":[{"type":"text","value":"WeakMap","position":{"start":{"line":453,"column":203,"offset":12780},"end":{"line":453,"column":210,"offset":12787}}}],"position":{"start":{"line":453,"column":202,"offset":12779},"end":{"line":453,"column":301,"offset":12878}}},{"type":"text","value":", ","position":{"start":{"line":453,"column":301,"offset":12878},"end":{"line":453,"column":303,"offset":12880}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet"},"children":[{"type":"text","value":"WeakSet","position":{"start":{"line":453,"column":304,"offset":12881},"end":{"line":453,"column":311,"offset":12888}}}],"position":{"start":{"line":453,"column":303,"offset":12880},"end":{"line":453,"column":402,"offset":12979}}}],"position":{"start":{"line":453,"column":1,"offset":12578},"end":{"line":453,"column":402,"offset":12979}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Proxies","position":{"start":{"line":455,"column":5,"offset":12985},"end":{"line":455,"column":12,"offset":12992}}}],"position":{"start":{"line":455,"column":1,"offset":12981},"end":{"line":455,"column":12,"offset":12992}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Proxies enable creation of objects with the full range of behaviors available to host objects. Can be used for interception, object virtualization, logging/profiling, etc.","position":{"start":{"line":457,"column":1,"offset":12994},"end":{"line":457,"column":172,"offset":13165}}}],"position":{"start":{"line":457,"column":1,"offset":12994},"end":{"line":457,"column":172,"offset":13165}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"// Proxying a normal object\nvar target = {};\nvar handler = {\n  get: function (receiver, name) {\n    return `Hello, ${name}!`;\n  }\n};\n\nvar p = new Proxy(target, handler);\np.world === 'Hello, world!';\n"}],"position":{"start":{"line":459,"column":1,"offset":13167},"end":{"line":470,"column":4,"offset":13375}}}],"position":{"start":{"line":459,"column":1,"offset":13167},"end":{"line":470,"column":4,"offset":13375}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"// Proxying a function object\nvar target = function () { return 'I am the target'; };\nvar handler = {\n  apply: function (receiver, ...args) {\n    return 'I am the proxy';\n  }\n};\n\nvar p = new Proxy(target, handler);\np() === 'I am the proxy';\n"}],"position":{"start":{"line":472,"column":1,"offset":13377},"end":{"line":483,"column":4,"offset":13627}}}],"position":{"start":{"line":472,"column":1,"offset":13377},"end":{"line":483,"column":4,"offset":13627}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"There are traps available for all of the runtime-level meta-operations:","position":{"start":{"line":485,"column":1,"offset":13629},"end":{"line":485,"column":72,"offset":13700}}}],"position":{"start":{"line":485,"column":1,"offset":13629},"end":{"line":485,"column":72,"offset":13700}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"var handler =\n{\n  get:...,\n  set:...,\n  has:...,\n  deleteProperty:...,\n  apply:...,\n  construct:...,\n  getOwnPropertyDescriptor:...,\n  defineProperty:...,\n  getPrototypeOf:...,\n  setPrototypeOf:...,\n  enumerate:...,\n  ownKeys:...,\n  preventExtensions:...,\n  isExtensible:...\n}\n"}],"position":{"start":{"line":487,"column":1,"offset":13702},"end":{"line":505,"column":4,"offset":13988}}}],"position":{"start":{"line":487,"column":1,"offset":13702},"end":{"line":505,"column":4,"offset":13988}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"More info: ","position":{"start":{"line":507,"column":1,"offset":13990},"end":{"line":507,"column":12,"offset":14001}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy"},"children":[{"type":"text","value":"MDN Proxy","position":{"start":{"line":507,"column":13,"offset":14002},"end":{"line":507,"column":22,"offset":14011}}}],"position":{"start":{"line":507,"column":12,"offset":14001},"end":{"line":507,"column":111,"offset":14100}}}],"position":{"start":{"line":507,"column":1,"offset":13990},"end":{"line":507,"column":111,"offset":14100}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Symbols","position":{"start":{"line":509,"column":5,"offset":14106},"end":{"line":509,"column":12,"offset":14113}}}],"position":{"start":{"line":509,"column":1,"offset":14102},"end":{"line":509,"column":12,"offset":14113}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Symbols enable access control for object state. Symbols allow properties to be keyed by either ","position":{"start":{"line":511,"column":1,"offset":14115},"end":{"line":511,"column":96,"offset":14210}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"string"}],"position":{"start":{"line":511,"column":96,"offset":14210},"end":{"line":511,"column":104,"offset":14218}}},{"type":"text","value":" (as in ES5) or ","position":{"start":{"line":511,"column":104,"offset":14218},"end":{"line":511,"column":120,"offset":14234}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"symbol"}],"position":{"start":{"line":511,"column":120,"offset":14234},"end":{"line":511,"column":128,"offset":14242}}},{"type":"text","value":". Symbols are a new primitive type. Optional ","position":{"start":{"line":511,"column":128,"offset":14242},"end":{"line":511,"column":173,"offset":14287}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"description"}],"position":{"start":{"line":511,"column":173,"offset":14287},"end":{"line":511,"column":186,"offset":14300}}},{"type":"text","value":" parameter used in debugging - but is not part of identity. Symbols are unique (like gensym), but not private since they are exposed via reflection features like ","position":{"start":{"line":511,"column":186,"offset":14300},"end":{"line":511,"column":348,"offset":14462}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Object.getOwnPropertySymbols"}],"position":{"start":{"line":511,"column":348,"offset":14462},"end":{"line":511,"column":378,"offset":14492}}},{"type":"text","value":".","position":{"start":{"line":511,"column":378,"offset":14492},"end":{"line":511,"column":379,"offset":14493}}}],"position":{"start":{"line":511,"column":1,"offset":14115},"end":{"line":511,"column":379,"offset":14493}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"var MyClass = (function() {\n\n  // module scoped symbol\n  var key = Symbol(\"key\");\n\n  function MyClass(privateData) {\n    this[key] = privateData;\n  }\n\n  MyClass.prototype = {\n    doStuff: function() {\n      ... this[key] ...\n    }\n  };\n\n  return MyClass;\n})();\n\nvar c = new MyClass(\"hello\")\nc[\"key\"] === undefined\n"}],"position":{"start":{"line":513,"column":1,"offset":14495},"end":{"line":534,"column":4,"offset":14818}}}],"position":{"start":{"line":513,"column":1,"offset":14495},"end":{"line":534,"column":4,"offset":14818}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"More info: ","position":{"start":{"line":536,"column":1,"offset":14820},"end":{"line":536,"column":12,"offset":14831}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol"},"children":[{"type":"text","value":"MDN Symbol","position":{"start":{"line":536,"column":13,"offset":14832},"end":{"line":536,"column":23,"offset":14842}}}],"position":{"start":{"line":536,"column":12,"offset":14831},"end":{"line":536,"column":113,"offset":14932}}}],"position":{"start":{"line":536,"column":1,"offset":14820},"end":{"line":536,"column":113,"offset":14932}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Subclassable Built-ins","position":{"start":{"line":538,"column":5,"offset":14938},"end":{"line":538,"column":27,"offset":14960}}}],"position":{"start":{"line":538,"column":1,"offset":14934},"end":{"line":538,"column":27,"offset":14960}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In ES6, built-ins like ","position":{"start":{"line":540,"column":1,"offset":14962},"end":{"line":540,"column":24,"offset":14985}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Array"}],"position":{"start":{"line":540,"column":24,"offset":14985},"end":{"line":540,"column":31,"offset":14992}}},{"type":"text","value":", ","position":{"start":{"line":540,"column":31,"offset":14992},"end":{"line":540,"column":33,"offset":14994}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Date"}],"position":{"start":{"line":540,"column":33,"offset":14994},"end":{"line":540,"column":39,"offset":15000}}},{"type":"text","value":" and DOM ","position":{"start":{"line":540,"column":39,"offset":15000},"end":{"line":540,"column":48,"offset":15009}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Element"}],"position":{"start":{"line":540,"column":48,"offset":15009},"end":{"line":540,"column":57,"offset":15018}}},{"type":"text","value":"s can be subclassed.","position":{"start":{"line":540,"column":57,"offset":15018},"end":{"line":540,"column":77,"offset":15038}}}],"position":{"start":{"line":540,"column":1,"offset":14962},"end":{"line":540,"column":77,"offset":15038}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Object construction for a function named ","position":{"start":{"line":542,"column":1,"offset":15040},"end":{"line":542,"column":42,"offset":15081}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Ctor"}],"position":{"start":{"line":542,"column":42,"offset":15081},"end":{"line":542,"column":48,"offset":15087}}},{"type":"text","value":" now uses two-phases (both virtually dispatched):","position":{"start":{"line":542,"column":48,"offset":15087},"end":{"line":542,"column":97,"offset":15136}}}],"position":{"start":{"line":542,"column":1,"offset":15040},"end":{"line":542,"column":97,"offset":15136}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Call ","position":{"start":{"line":544,"column":3,"offset":15140},"end":{"line":544,"column":8,"offset":15145}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Ctor[@@create]"}],"position":{"start":{"line":544,"column":8,"offset":15145},"end":{"line":544,"column":24,"offset":15161}}},{"type":"text","value":" to allocate the object, installing any special behavior","position":{"start":{"line":544,"column":24,"offset":15161},"end":{"line":544,"column":80,"offset":15217}}}],"position":{"start":{"line":544,"column":1,"offset":15138},"end":{"line":544,"column":80,"offset":15217}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Invoke constructor on new instance to initialize","position":{"start":{"line":545,"column":3,"offset":15220},"end":{"line":545,"column":51,"offset":15268}}}],"position":{"start":{"line":545,"column":1,"offset":15218},"end":{"line":545,"column":51,"offset":15268}}},{"type":"text","value":"\n"}],"position":{"start":{"line":544,"column":1,"offset":15138},"end":{"line":545,"column":51,"offset":15268}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The known ","position":{"start":{"line":547,"column":1,"offset":15270},"end":{"line":547,"column":11,"offset":15280}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"@@create"}],"position":{"start":{"line":547,"column":11,"offset":15280},"end":{"line":547,"column":21,"offset":15290}}},{"type":"text","value":" symbol is available via ","position":{"start":{"line":547,"column":21,"offset":15290},"end":{"line":547,"column":46,"offset":15315}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Symbol.create"}],"position":{"start":{"line":547,"column":46,"offset":15315},"end":{"line":547,"column":61,"offset":15330}}},{"type":"text","value":". Built-ins now expose their ","position":{"start":{"line":547,"column":61,"offset":15330},"end":{"line":547,"column":90,"offset":15359}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"@@create"}],"position":{"start":{"line":547,"column":90,"offset":15359},"end":{"line":547,"column":100,"offset":15369}}},{"type":"text","value":" explicitly.","position":{"start":{"line":547,"column":100,"offset":15369},"end":{"line":547,"column":112,"offset":15381}}}],"position":{"start":{"line":547,"column":1,"offset":15270},"end":{"line":547,"column":112,"offset":15381}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"// Pseudo-code of Array\nclass Array {\n    constructor(...args) { /* ... */ }\n    static [Symbol.create]() {\n        // Install special [[DefineOwnProperty]]\n        // to magically update 'length'\n    }\n}\n\n// User code of Array subclass\nclass MyArray extends Array {\n    constructor(...args) { super(...args); }\n}\n\n// Two-phase 'new':\n// 1) Call @@create to allocate object\n// 2) Invoke constructor on new instance\nvar arr = new MyArray();\narr[1] = 12;\narr.length == 2\n"}],"position":{"start":{"line":549,"column":1,"offset":15383},"end":{"line":570,"column":4,"offset":15861}}}],"position":{"start":{"line":549,"column":1,"offset":15383},"end":{"line":570,"column":4,"offset":15861}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Math + Number + String + Array + Object APIs","position":{"start":{"line":572,"column":5,"offset":15867},"end":{"line":572,"column":49,"offset":15911}}}],"position":{"start":{"line":572,"column":1,"offset":15863},"end":{"line":572,"column":49,"offset":15911}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Many new library additions, including core Math libraries, Array conversion helpers, String helpers, and Object.assign for copying.","position":{"start":{"line":574,"column":1,"offset":15913},"end":{"line":574,"column":132,"offset":16044}}}],"position":{"start":{"line":574,"column":1,"offset":15913},"end":{"line":574,"column":132,"offset":16044}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"Number.EPSILON\nNumber.isInteger(Infinity) // false\nNumber.isNaN(\"NaN\") // false\n\nMath.acosh(3) // 1.762747174039086\nMath.hypot(3, 4) // 5\nMath.imul(Math.pow(2, 32) - 1, Math.pow(2, 32) - 2) // 2\n\n\"abcde\".includes(\"cd\") // true\n\"abc\".repeat(3) // \"abcabcabc\"\n\nArray.from(document.querySelectorAll('*')) // Returns a real Array\nArray.of(1, 2, 3) // Similar to new Array(...), but without special one-arg behavior\n[0, 0, 0].fill(7, 1) // [0,7,7]\n[1, 2, 3].find(x => x == 3) // 3\n[1, 2, 3].findIndex(x => x == 2) // 1\n[1, 2, 3, 4, 5].copyWithin(3, 0) // [1, 2, 3, 1, 2]\n[\"a\", \"b\", \"c\"].entries() // iterator [0, \"a\"], [1,\"b\"], [2,\"c\"]\n[\"a\", \"b\", \"c\"].keys() // iterator 0, 1, 2\n[\"a\", \"b\", \"c\"].values() // iterator \"a\", \"b\", \"c\"\n\nObject.assign(Point, { origin: new Point(0,0) })\n"}],"position":{"start":{"line":576,"column":1,"offset":16046},"end":{"line":599,"column":4,"offset":16830}}}],"position":{"start":{"line":576,"column":1,"offset":16046},"end":{"line":599,"column":4,"offset":16830}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"More MDN info: ","position":{"start":{"line":601,"column":1,"offset":16832},"end":{"line":601,"column":16,"offset":16847}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number"},"children":[{"type":"text","value":"Number","position":{"start":{"line":601,"column":17,"offset":16848},"end":{"line":601,"column":23,"offset":16854}}}],"position":{"start":{"line":601,"column":16,"offset":16847},"end":{"line":601,"column":113,"offset":16944}}},{"type":"text","value":", ","position":{"start":{"line":601,"column":113,"offset":16944},"end":{"line":601,"column":115,"offset":16946}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math"},"children":[{"type":"text","value":"Math","position":{"start":{"line":601,"column":116,"offset":16947},"end":{"line":601,"column":120,"offset":16951}}}],"position":{"start":{"line":601,"column":115,"offset":16946},"end":{"line":601,"column":208,"offset":17039}}},{"type":"text","value":", ","position":{"start":{"line":601,"column":208,"offset":17039},"end":{"line":601,"column":210,"offset":17041}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from"},"children":[{"type":"text","value":"Array.from","position":{"start":{"line":601,"column":211,"offset":17042},"end":{"line":601,"column":221,"offset":17052}}}],"position":{"start":{"line":601,"column":210,"offset":17041},"end":{"line":601,"column":315,"offset":17146}}},{"type":"text","value":", ","position":{"start":{"line":601,"column":315,"offset":17146},"end":{"line":601,"column":317,"offset":17148}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of"},"children":[{"type":"text","value":"Array.of","position":{"start":{"line":601,"column":318,"offset":17149},"end":{"line":601,"column":326,"offset":17157}}}],"position":{"start":{"line":601,"column":317,"offset":17148},"end":{"line":601,"column":418,"offset":17249}}},{"type":"text","value":", ","position":{"start":{"line":601,"column":418,"offset":17249},"end":{"line":601,"column":420,"offset":17251}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/copyWithin"},"children":[{"type":"text","value":"Array.prototype.copyWithin","position":{"start":{"line":601,"column":421,"offset":17252},"end":{"line":601,"column":447,"offset":17278}}}],"position":{"start":{"line":601,"column":420,"offset":17251},"end":{"line":601,"column":547,"offset":17378}}},{"type":"text","value":", ","position":{"start":{"line":601,"column":547,"offset":17378},"end":{"line":601,"column":549,"offset":17380}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign"},"children":[{"type":"text","value":"Object.assign","position":{"start":{"line":601,"column":550,"offset":17381},"end":{"line":601,"column":563,"offset":17394}}}],"position":{"start":{"line":601,"column":549,"offset":17380},"end":{"line":601,"column":660,"offset":17491}}}],"position":{"start":{"line":601,"column":1,"offset":16832},"end":{"line":601,"column":660,"offset":17491}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Binary and Octal Literals","position":{"start":{"line":603,"column":5,"offset":17497},"end":{"line":603,"column":30,"offset":17522}}}],"position":{"start":{"line":603,"column":1,"offset":17493},"end":{"line":603,"column":30,"offset":17522}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Two new numeric literal forms are added for binary (","position":{"start":{"line":605,"column":1,"offset":17524},"end":{"line":605,"column":53,"offset":17576}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"b"}],"position":{"start":{"line":605,"column":53,"offset":17576},"end":{"line":605,"column":56,"offset":17579}}},{"type":"text","value":") and octal (","position":{"start":{"line":605,"column":56,"offset":17579},"end":{"line":605,"column":69,"offset":17592}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"o"}],"position":{"start":{"line":605,"column":69,"offset":17592},"end":{"line":605,"column":72,"offset":17595}}},{"type":"text","value":").","position":{"start":{"line":605,"column":72,"offset":17595},"end":{"line":605,"column":74,"offset":17597}}}],"position":{"start":{"line":605,"column":1,"offset":17524},"end":{"line":605,"column":74,"offset":17597}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"0b111110111 === 503 // true\n0o767 === 503 // true\n"}],"position":{"start":{"line":607,"column":1,"offset":17599},"end":{"line":610,"column":4,"offset":17658}}}],"position":{"start":{"line":607,"column":1,"offset":17599},"end":{"line":610,"column":4,"offset":17658}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Promises","position":{"start":{"line":612,"column":5,"offset":17664},"end":{"line":612,"column":13,"offset":17672}}}],"position":{"start":{"line":612,"column":1,"offset":17660},"end":{"line":612,"column":13,"offset":17672}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Promises are a library for asynchronous programming. Promises are a first class representation of a value that may be made available in the future. Promises are used in many existing JavaScript libraries.","position":{"start":{"line":614,"column":1,"offset":17674},"end":{"line":614,"column":205,"offset":17878}}}],"position":{"start":{"line":614,"column":1,"offset":17674},"end":{"line":614,"column":205,"offset":17878}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":616,"column":1,"offset":17880},"end":{"line":616,"column":4,"offset":17883}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"function timeout(duration = 0) {\n    return new Promise((resolve, reject) => {\n        setTimeout(resolve, duration);\n    })\n}\n\nvar p = timeout(1000).then(() => {\n    return timeout(2000);\n}).then(() => {\n    throw new Error(\"hmm\");\n}).catch(err => {\n    return Promise.all([timeout(100), timeout(200)]);\n})\n"}],"position":{"start":{"line":619,"column":1,"offset":17886},"end":{"line":635,"column":4,"offset":18205}}}],"position":{"start":{"line":619,"column":1,"offset":17886},"end":{"line":635,"column":4,"offset":18205}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"More info: ","position":{"start":{"line":637,"column":1,"offset":18207},"end":{"line":637,"column":12,"offset":18218}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise"},"children":[{"type":"text","value":"MDN Promise","position":{"start":{"line":637,"column":13,"offset":18219},"end":{"line":637,"column":24,"offset":18230}}}],"position":{"start":{"line":637,"column":12,"offset":18218},"end":{"line":637,"column":115,"offset":18321}}}],"position":{"start":{"line":637,"column":1,"offset":18207},"end":{"line":637,"column":115,"offset":18321}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Reflect API","position":{"start":{"line":639,"column":5,"offset":18327},"end":{"line":639,"column":16,"offset":18338}}}],"position":{"start":{"line":639,"column":1,"offset":18323},"end":{"line":639,"column":16,"offset":18338}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Full reflection API exposing the runtime-level meta-operations on objects. This is effectively the inverse of the Proxy API, and allows making calls corresponding to the same meta-operations as the proxy traps. Especially useful for implementing proxies.","position":{"start":{"line":641,"column":1,"offset":18340},"end":{"line":641,"column":255,"offset":18594}}}],"position":{"start":{"line":641,"column":1,"offset":18340},"end":{"line":641,"column":255,"offset":18594}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"// No sample yet\n"}],"position":{"start":{"line":643,"column":1,"offset":18596},"end":{"line":645,"column":4,"offset":18622}}}],"position":{"start":{"line":643,"column":1,"offset":18596},"end":{"line":645,"column":4,"offset":18622}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"More info: ","position":{"start":{"line":647,"column":1,"offset":18624},"end":{"line":647,"column":12,"offset":18635}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect"},"children":[{"type":"text","value":"MDN Reflect","position":{"start":{"line":647,"column":13,"offset":18636},"end":{"line":647,"column":24,"offset":18647}}}],"position":{"start":{"line":647,"column":12,"offset":18635},"end":{"line":647,"column":115,"offset":18738}}}],"position":{"start":{"line":647,"column":1,"offset":18624},"end":{"line":647,"column":115,"offset":18738}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Tail Calls","position":{"start":{"line":649,"column":5,"offset":18744},"end":{"line":649,"column":15,"offset":18754}}}],"position":{"start":{"line":649,"column":1,"offset":18740},"end":{"line":649,"column":15,"offset":18754}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Calls in tail-position are guaranteed to not grow the stack unboundedly. Makes recursive algorithms safe in the face of unbounded inputs.","position":{"start":{"line":651,"column":1,"offset":18756},"end":{"line":651,"column":138,"offset":18893}}}],"position":{"start":{"line":651,"column":1,"offset":18756},"end":{"line":651,"column":138,"offset":18893}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":653,"column":1,"offset":18895},"end":{"line":653,"column":4,"offset":18898}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"function factorial(n, acc = 1) {\n    'use strict';\n    if (n <= 1) return acc;\n    return factorial(n - 1, n * acc);\n}\n\n// Stack overflow in most implementations today,\n// but safe on arbitrary inputs in ES6\nfactorial(100000)\n"}],"position":{"start":{"line":656,"column":1,"offset":18901},"end":{"line":668,"column":4,"offset":19138}}}],"position":{"start":{"line":656,"column":1,"offset":18901},"end":{"line":668,"column":4,"offset":19138}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":669,"column":1,"offset":19139}}}}