{"expireTime":9007200904342772000,"key":"transformer-remark-markdown-html-22d5c0c795c441939df73b04553f96c6--","val":"<p>Add Firebase to your JavaScript project <strong>Note:</strong> Upgrading from the version 8 Firebase SDK? Check out our <a href=\"https://firebase.google.com/docs/web/modular-upgrade\">upgrade guide</a>.<a href=\"\">#### <strong>Create a Firebase project</strong> </a><strong>Note:</strong> Using the v9 SDK is strongly recommended, especially for production apps. If you need support for other SDK management options, like <strong>window.firebase</strong>, see <a href=\"https://firebase.google.com/docs/web/modular-upgrade#window-compat\">Upgrade from version 8 to the modular Web SDK</a>.<strong>Note:</strong> You can skip this step if you are using a JavaScript framework CLI tool like the <a href=\"https://angular.io/cli\">Angular CLI</a>, <a href=\"https://nextjs.org/\">Next.js</a>, <a href=\"https://cli.vuejs.org/\">Vue CLI</a>, or <a href=\"https://reactjs.org/docs/create-a-new-react-app.html\">Create React App</a>. Check out <a href=\"https://firebase.google.com/docs/web/module-bundling\">our guide on module bundling</a> for more information.</p>\n<p>Follow this guide to use the Firebase JavaScript SDK in your web app or as a client for end-user access, for example, in a Node.js desktop or IoT application.</p>\n<h2><strong>Step 1</strong>: Create a Firebase project and register your app</h2>\n<p>Before you can add Firebase to your JavaScript app, you need to create a Firebase project and register your app with that project. When you register your app with Firebase, you'll get a Firebase configuration object that you'll use to connect your app with your Firebase project resources.</p>\n<p>Visit <a href=\"https://firebase.google.com/docs/projects/learn-more\">Understand Firebase Projects</a> to learn more about Firebase projects and best practices for adding apps to projects.</p>\n<p>If you don't already have a JavaScript project and just want to try out a Firebase product, you can download one of our <a href=\"https://firebase.google.com/docs/samples\">quickstart samples</a>.</p>\n<h2><strong>Step 2</strong>: Install the SDK and initialize Firebase</h2>\n<p>This page describes setup instructions for version 9 of the Firebase JS SDK, which uses a <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules\">JavaScript Module</a> format.</p>\n<p>This workflow uses npm and requires module bundlers or JavaScript framework tooling because the v9 SDK is optimized to work with <a href=\"https://firebase.google.com/docs/web/module-bundling\">module bundlers</a> to eliminate unused code (tree-shaking) and decrease SDK size.</p>\n<ol>\n<li>Install Firebase using npm:</li>\n<li>\n<p>Initialize Firebase in your app and create a Firebase App object:</p>\n<p>A Firebase App is a container-like object that stores common configuration and shares authentication across Firebase services. After you initialize a Firebase App object in your code, you can add and start using Firebase services.</p>\n<p>Do you use ESM and want to use browser modules? Replace all your</p>\n<p><strong>import</strong></p>\n<p>lines to use the following pattern:</p>\n<p><strong>import { } from '<a href=\"https://www.gstatic.com/firebasejs/9.0.2/firebase-SERVICE.js\">https://www.gstatic.com/firebasejs/9.0.2/firebase-SERVICE.js</a>'</strong></p>\n<p>(where</p>\n<p><strong>SERVICE</strong></p>\n<p>is an SDK name such as</p>\n<p><strong>firebase-firestore</strong></p>\n<p>).</p>\n<p>Using browser modules is a quick way to get started, but we recommend using a module bundler for production.</p>\n</li>\n</ol>\n<h2><strong>Step 3</strong>: Access Firebase in your app</h2>\n<p>Firebase services (like Cloud Firestore, Authentication, Realtime Database, Remote Config, and more) are available to import within individual sub-packages.</p>\n<p>The example below shows how you could use the Cloud Firestore Lite SDK to retrieve a list of data.</p>\n<h2><strong>Step 4</strong>: Use a module bundler (webpack/Rollup) for size reduction</h2>\n<p>The Firebase Web SDK is designed to work with module bundlers to remove any unused code (tree-shaking). We strongly recommend using this approach for production apps. Tools such as the <a href=\"https://angular.io/cli\">Angular CLI</a>, <a href=\"https://nextjs.org/\">Next.js</a>, <a href=\"https://cli.vuejs.org/\">Vue CLI</a>, or <a href=\"https://reactjs.org/docs/create-a-new-react-app.html\">Create React App</a> automatically handle module bundling for libraries installed through npm and imported into your codebase.</p>\n<p>See our guide <a href=\"https://firebase.google.com/docs/web/module-bundling\">Using module bundlers with Firebase</a> for more information.</p>"}