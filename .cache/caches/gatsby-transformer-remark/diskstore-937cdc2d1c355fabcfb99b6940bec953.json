{"expireTime":9007200904342769000,"key":"transformer-remark-markdown-ast-c629dc2112445253d7317894ccadd183--","val":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"AJAX and APIs - React","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":24,"offset":24},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":24,"offset":24},"indent":[]}},{"type":"blockquote","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"Excerpt","position":{"start":{"line":4,"column":6,"offset":31},"end":{"line":4,"column":13,"offset":38},"indent":[]}}],"position":{"start":{"line":4,"column":3,"offset":28},"end":{"line":4,"column":13,"offset":38},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A JavaScript library for building user interfaces","position":{"start":{"line":6,"column":3,"offset":43},"end":{"line":6,"column":52,"offset":92},"indent":[]}}],"position":{"start":{"line":6,"column":3,"offset":43},"end":{"line":6,"column":52,"offset":92},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":26},"end":{"line":6,"column":52,"offset":92},"indent":[1,1]}},{"type":"thematicBreak","position":{"start":{"line":8,"column":1,"offset":94},"end":{"line":8,"column":4,"offset":97},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","title":null,"url":"https://reactjs.org/docs/lists-and-keys.html#how-can-i-make-an-ajax-call","children":[],"position":{"start":{"line":10,"column":5,"offset":103},"end":{"line":10,"column":81,"offset":179},"indent":[]}},{"type":"text","value":"How can I make an AJAX call?","position":{"start":{"line":10,"column":81,"offset":179},"end":{"line":10,"column":109,"offset":207},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":99},"end":{"line":10,"column":109,"offset":207},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can use any AJAX library you like with React. Some popular ones are ","position":{"start":{"line":12,"column":1,"offset":209},"end":{"line":12,"column":73,"offset":281},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/axios/axios","children":[{"type":"text","value":"Axios","position":{"start":{"line":12,"column":74,"offset":282},"end":{"line":12,"column":79,"offset":287},"indent":[]}}],"position":{"start":{"line":12,"column":73,"offset":281},"end":{"line":12,"column":112,"offset":320},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":12,"column":112,"offset":320},"end":{"line":12,"column":114,"offset":322},"indent":[]}},{"type":"link","title":null,"url":"https://api.jquery.com/jQuery.ajax/","children":[{"type":"text","value":"jQuery AJAX","position":{"start":{"line":12,"column":115,"offset":323},"end":{"line":12,"column":126,"offset":334},"indent":[]}}],"position":{"start":{"line":12,"column":114,"offset":322},"end":{"line":12,"column":164,"offset":372},"indent":[]}},{"type":"text","value":", and the browser built-in ","position":{"start":{"line":12,"column":164,"offset":372},"end":{"line":12,"column":191,"offset":399},"indent":[]}},{"type":"link","title":null,"url":"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API","children":[{"type":"text","value":"window.fetch","position":{"start":{"line":12,"column":192,"offset":400},"end":{"line":12,"column":204,"offset":412},"indent":[]}}],"position":{"start":{"line":12,"column":191,"offset":399},"end":{"line":12,"column":265,"offset":473},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":12,"column":265,"offset":473},"end":{"line":12,"column":266,"offset":474},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":209},"end":{"line":12,"column":266,"offset":474},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","title":null,"url":"https://reactjs.org/docs/lists-and-keys.html#where-in-the-component-lifecycle-should-i-make-an-ajax-call","children":[],"position":{"start":{"line":14,"column":5,"offset":480},"end":{"line":14,"column":113,"offset":588},"indent":[]}},{"type":"text","value":"Where in the component lifecycle should I make an AJAX call?","position":{"start":{"line":14,"column":113,"offset":588},"end":{"line":14,"column":173,"offset":648},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":476},"end":{"line":14,"column":173,"offset":648},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You should populate data with AJAX calls in the ","position":{"start":{"line":16,"column":1,"offset":650},"end":{"line":16,"column":49,"offset":698},"indent":[]}},{"type":"link","title":null,"url":"https://reactjs.org/docs/react-component.html#mounting","children":[{"type":"inlineCode","value":"componentDidMount","position":{"start":{"line":16,"column":50,"offset":699},"end":{"line":16,"column":69,"offset":718},"indent":[]}}],"position":{"start":{"line":16,"column":49,"offset":698},"end":{"line":16,"column":126,"offset":775},"indent":[]}},{"type":"text","value":" lifecycle method. This is so you can use ","position":{"start":{"line":16,"column":126,"offset":775},"end":{"line":16,"column":168,"offset":817},"indent":[]}},{"type":"inlineCode","value":"setState","position":{"start":{"line":16,"column":168,"offset":817},"end":{"line":16,"column":178,"offset":827},"indent":[]}},{"type":"text","value":" to update your component when the data is retrieved.","position":{"start":{"line":16,"column":178,"offset":827},"end":{"line":16,"column":231,"offset":880},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":650},"end":{"line":16,"column":231,"offset":880},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","title":null,"url":"https://reactjs.org/docs/lists-and-keys.html#example-using-ajax-results-to-set-local-state","children":[],"position":{"start":{"line":18,"column":5,"offset":886},"end":{"line":18,"column":99,"offset":980},"indent":[]}},{"type":"text","value":"Example: Using AJAX results to set local state","position":{"start":{"line":18,"column":99,"offset":980},"end":{"line":18,"column":145,"offset":1026},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":882},"end":{"line":18,"column":145,"offset":1026},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The component below demonstrates how to make an AJAX call in ","position":{"start":{"line":20,"column":1,"offset":1028},"end":{"line":20,"column":62,"offset":1089},"indent":[]}},{"type":"inlineCode","value":"componentDidMount","position":{"start":{"line":20,"column":62,"offset":1089},"end":{"line":20,"column":81,"offset":1108},"indent":[]}},{"type":"text","value":" to populate local component state.","position":{"start":{"line":20,"column":81,"offset":1108},"end":{"line":20,"column":116,"offset":1143},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":1028},"end":{"line":20,"column":116,"offset":1143},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The example API returns a JSON object like this:","position":{"start":{"line":22,"column":1,"offset":1145},"end":{"line":22,"column":49,"offset":1193},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":1145},"end":{"line":22,"column":49,"offset":1193},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"{\n  \"items\": [\n    { \"id\": 1, \"name\": \"Apples\",  \"price\": \"$2\" },\n    { \"id\": 2, \"name\": \"Peaches\", \"price\": \"$5\" }\n  ]\n}","position":{"start":{"line":24,"column":1,"offset":1195},"end":{"line":31,"column":4,"offset":1326},"indent":[1,1,1,1,1,1,1]}},{"type":"code","lang":"js","meta":null,"value":"class MyComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            items: []\n        };\n    }\n\n    componentDidMount() {\n        fetch('https://api.example.com/items')\n            .then((res) => res.json())\n            .then(\n                (result) => {\n                    this.setState({\n                        isLoaded: true,\n                        items: result.items\n                    });\n                },\n\n                (error) => {\n                    this.setState({\n                        isLoaded: true,\n                        error\n                    });\n                }\n            );\n    }\n\n    render() {\n        const { error, isLoaded, items } = this.state;\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading...</div>;\n        } else {\n            return (\n                <ul>\n                    {items.map((item) => (\n                        <li key={item.id}>\n                            {item.name} {item.price}\n                        </li>\n                    ))}\n                </ul>\n            );\n        }\n    }\n}","position":{"start":{"line":33,"column":1,"offset":1328},"end":{"line":83,"column":4,"offset":2595},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Here is the equivalent with ","position":{"start":{"line":85,"column":1,"offset":2597},"end":{"line":85,"column":29,"offset":2625},"indent":[]}},{"type":"link","title":null,"url":"https://reactjs.org/docs/hooks-intro.html","children":[{"type":"text","value":"Hooks","position":{"start":{"line":85,"column":30,"offset":2626},"end":{"line":85,"column":35,"offset":2631},"indent":[]}}],"position":{"start":{"line":85,"column":29,"offset":2625},"end":{"line":85,"column":79,"offset":2675},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":85,"column":79,"offset":2675},"end":{"line":85,"column":80,"offset":2676},"indent":[]}}],"position":{"start":{"line":85,"column":1,"offset":2597},"end":{"line":85,"column":80,"offset":2676},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":87,"column":1,"offset":2678},"end":{"line":87,"column":4,"offset":2681},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"function MyComponent() {\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [items, setItems] = useState([]);\n\n    useEffect(() => {\n        fetch('https://api.example.com/items')\n            .then((res) => res.json())\n            .then(\n                (result) => {\n                    setIsLoaded(true);\n                    setItems(result);\n                },\n\n                (error) => {\n                    setIsLoaded(true);\n                    setError(error);\n                }\n            );\n    }, []);\n\n    if (error) {\n        return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n        return <div>Loading...</div>;\n    } else {\n        return (\n            <ul>\n                {items.map((item) => (\n                    <li key={item.id}>\n                        {item.name} {item.price}\n                    </li>\n                ))}\n            </ul>\n        );\n    }\n}","position":{"start":{"line":90,"column":1,"offset":2684},"end":{"line":130,"column":4,"offset":3659},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":131,"column":1,"offset":3660}}}}