{"expireTime":9007200904342770000,"key":"transformer-remark-markdown-html-ast-bb619977265832084a668eaa7f4009b5--","val":{"type":"root","children":[{"type":"raw","value":"<details>","position":{"start":{"line":5,"column":1,"offset":4},"end":{"line":5,"column":10,"offset":13}}},{"type":"text","value":"\n"},{"type":"raw","value":"<summary> Description</summary>   ","position":{"start":{"line":7,"column":1,"offset":15},"end":{"line":7,"column":35,"offset":49}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Excerpt","position":{"start":{"line":9,"column":6,"offset":56},"end":{"line":9,"column":13,"offset":63}}}],"position":{"start":{"line":9,"column":3,"offset":53},"end":{"line":9,"column":13,"offset":63}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The Fetch API provides a JavaScript interface for accessing and manipulating parts of the HTTP pipeline, such as requests and responses. It also provides a global fetch() method that provides an easy, logical way to fetch resources asynchronously across the network.","position":{"start":{"line":10,"column":3,"offset":66},"end":{"line":10,"column":269,"offset":332}}}],"position":{"start":{"line":10,"column":3,"offset":66},"end":{"line":10,"column":269,"offset":332}}},{"type":"text","value":"\n"}],"position":{"start":{"line":9,"column":1,"offset":51},"end":{"line":10,"column":269,"offset":332}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":12,"column":1,"offset":334},"end":{"line":12,"column":4,"offset":337}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The ","position":{"start":{"line":13,"column":1,"offset":338},"end":{"line":13,"column":5,"offset":342}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API"},"children":[{"type":"text","value":"Fetch API","position":{"start":{"line":13,"column":6,"offset":343},"end":{"line":13,"column":15,"offset":352}}}],"position":{"start":{"line":13,"column":5,"offset":342},"end":{"line":13,"column":76,"offset":413}}},{"type":"text","value":" provides a JavaScript interface for accessing and manipulating parts of the HTTP pipeline, such as requests and responses. It also provides a global ","position":{"start":{"line":13,"column":76,"offset":413},"end":{"line":13,"column":226,"offset":563}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/fetch"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch()"}],"position":{"start":{"line":13,"column":227,"offset":564},"end":{"line":13,"column":236,"offset":573}}}],"position":{"start":{"line":13,"column":226,"offset":563},"end":{"line":13,"column":293,"offset":630}}},{"type":"text","value":" method that provides an easy, logical way to fetch resources asynchronously across the network.","position":{"start":{"line":13,"column":293,"offset":630},"end":{"line":13,"column":389,"offset":726}}}],"position":{"start":{"line":13,"column":1,"offset":338},"end":{"line":13,"column":389,"offset":726}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This kind of functionality was previously achieved using ","position":{"start":{"line":15,"column":1,"offset":728},"end":{"line":15,"column":58,"offset":785}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"XMLHttpRequest"}],"position":{"start":{"line":15,"column":59,"offset":786},"end":{"line":15,"column":75,"offset":802}}}],"position":{"start":{"line":15,"column":58,"offset":785},"end":{"line":15,"column":141,"offset":868}}},{"type":"text","value":". Fetch provides a better alternative that can be easily used by other technologies such as ","position":{"start":{"line":15,"column":141,"offset":868},"end":{"line":15,"column":233,"offset":960}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API","title":"Service Workers"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Service Workers"}],"position":{"start":{"line":15,"column":234,"offset":961},"end":{"line":15,"column":251,"offset":978}}}],"position":{"start":{"line":15,"column":233,"offset":960},"end":{"line":15,"column":339,"offset":1066}}},{"type":"text","value":". Fetch also provides a single logical place to define other HTTP-related concepts such as ","position":{"start":{"line":15,"column":339,"offset":1066},"end":{"line":15,"column":430,"offset":1157}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS"},"children":[{"type":"text","value":"CORS","position":{"start":{"line":15,"column":431,"offset":1158},"end":{"line":15,"column":435,"offset":1162}}}],"position":{"start":{"line":15,"column":430,"offset":1157},"end":{"line":15,"column":492,"offset":1219}}},{"type":"text","value":" and extensions to HTTP.","position":{"start":{"line":15,"column":492,"offset":1219},"end":{"line":15,"column":516,"offset":1243}}}],"position":{"start":{"line":15,"column":1,"offset":728},"end":{"line":15,"column":516,"offset":1243}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The ","position":{"start":{"line":17,"column":1,"offset":1245},"end":{"line":17,"column":5,"offset":1249}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch"}],"position":{"start":{"line":17,"column":5,"offset":1249},"end":{"line":17,"column":12,"offset":1256}}},{"type":"text","value":" specification differs from ","position":{"start":{"line":17,"column":12,"offset":1256},"end":{"line":17,"column":40,"offset":1284}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"jQuery.ajax()"}],"position":{"start":{"line":17,"column":40,"offset":1284},"end":{"line":17,"column":55,"offset":1299}}},{"type":"text","value":" in the following significant ways:","position":{"start":{"line":17,"column":55,"offset":1299},"end":{"line":17,"column":90,"offset":1334}}}],"position":{"start":{"line":17,"column":1,"offset":1245},"end":{"line":17,"column":90,"offset":1334}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The Promise returned from ","position":{"start":{"line":19,"column":5,"offset":1340},"end":{"line":19,"column":31,"offset":1366}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch()"}],"position":{"start":{"line":19,"column":31,"offset":1366},"end":{"line":19,"column":40,"offset":1375}}},{"type":"text","value":" ","position":{"start":{"line":19,"column":40,"offset":1375},"end":{"line":19,"column":41,"offset":1376}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"won't reject on HTTP error status","position":{"start":{"line":19,"column":43,"offset":1378},"end":{"line":19,"column":76,"offset":1411}}}],"position":{"start":{"line":19,"column":41,"offset":1376},"end":{"line":19,"column":78,"offset":1413}}},{"type":"text","value":" even if the response is an HTTP 404 or 500. Instead, as soon as the server responds with headers, the Promise will resolve normally (with the ","position":{"start":{"line":19,"column":78,"offset":1413},"end":{"line":19,"column":221,"offset":1556}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Response/ok","title":"ok"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ok"}],"position":{"start":{"line":19,"column":222,"offset":1557},"end":{"line":19,"column":226,"offset":1561}}}],"position":{"start":{"line":19,"column":221,"offset":1556},"end":{"line":19,"column":294,"offset":1629}}},{"type":"text","value":" property of the response set to false if the response isn't in the range 200 -299), and it will only reject on network failure or if anything prevented the request from completing.","position":{"start":{"line":19,"column":294,"offset":1629},"end":{"line":19,"column":475,"offset":1810}}}],"position":{"start":{"line":19,"column":1,"offset":1336},"end":{"line":19,"column":475,"offset":1810}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch()"}],"position":{"start":{"line":20,"column":5,"offset":1815},"end":{"line":20,"column":14,"offset":1824}}},{"type":"text","value":" ","position":{"start":{"line":20,"column":14,"offset":1824},"end":{"line":20,"column":15,"offset":1825}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"won't send cross-origin cookies","position":{"start":{"line":20,"column":17,"offset":1827},"end":{"line":20,"column":48,"offset":1858}}}],"position":{"start":{"line":20,"column":15,"offset":1825},"end":{"line":20,"column":50,"offset":1860}}},{"type":"text","value":" unless you set the ","position":{"start":{"line":20,"column":50,"offset":1860},"end":{"line":20,"column":70,"offset":1880}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"credentials","position":{"start":{"line":20,"column":71,"offset":1881},"end":{"line":20,"column":82,"offset":1892}}}],"position":{"start":{"line":20,"column":70,"offset":1880},"end":{"line":20,"column":83,"offset":1893}}},{"type":"text","value":" ","position":{"start":{"line":20,"column":83,"offset":1893},"end":{"line":20,"column":84,"offset":1894}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/fetch#parameters"},"children":[{"type":"text","value":"init option","position":{"start":{"line":20,"column":85,"offset":1895},"end":{"line":20,"column":96,"offset":1906}}}],"position":{"start":{"line":20,"column":84,"offset":1894},"end":{"line":20,"column":164,"offset":1974}}},{"type":"text","value":". (Since ","position":{"start":{"line":20,"column":164,"offset":1974},"end":{"line":20,"column":173,"offset":1983}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/whatwg/fetch/pull/585"},"children":[{"type":"text","value":"April 2018","position":{"start":{"line":20,"column":174,"offset":1984},"end":{"line":20,"column":184,"offset":1994}}}],"position":{"start":{"line":20,"column":173,"offset":1983},"end":{"line":20,"column":227,"offset":2037}}},{"type":"text","value":". The spec changed the default credentials policy to ","position":{"start":{"line":20,"column":227,"offset":2037},"end":{"line":20,"column":280,"offset":2090}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"same-origin"}],"position":{"start":{"line":20,"column":280,"offset":2090},"end":{"line":20,"column":293,"offset":2103}}},{"type":"text","value":". Firefox changed since 61.0b13.)","position":{"start":{"line":20,"column":293,"offset":2103},"end":{"line":20,"column":326,"offset":2136}}}],"position":{"start":{"line":20,"column":1,"offset":1811},"end":{"line":20,"column":326,"offset":2136}}},{"type":"text","value":"\n"}],"position":{"start":{"line":19,"column":1,"offset":1336},"end":{"line":20,"column":326,"offset":2136}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A basic fetch request is really simple to set up. Have a look at the following code:","position":{"start":{"line":22,"column":1,"offset":2138},"end":{"line":22,"column":85,"offset":2222}}}],"position":{"start":{"line":22,"column":1,"offset":2138},"end":{"line":22,"column":85,"offset":2222}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"fetch('http://example.com/movies.json')\n  .then(response => response.json())\n  .then(data => console.log(data));\n"}],"position":{"start":{"line":24,"column":1,"offset":2224},"end":{"line":28,"column":4,"offset":2346}}}],"position":{"start":{"line":24,"column":1,"offset":2224},"end":{"line":28,"column":4,"offset":2346}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here we are fetching a JSON file across the network and printing it to the console. The simplest use of ","position":{"start":{"line":30,"column":1,"offset":2348},"end":{"line":30,"column":105,"offset":2452}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch()"}],"position":{"start":{"line":30,"column":105,"offset":2452},"end":{"line":30,"column":114,"offset":2461}}},{"type":"text","value":" takes one argument — the path to the resource you want to fetch — and does not directly return the JSON response body but instead returns a promise that resolves with a ","position":{"start":{"line":30,"column":114,"offset":2461},"end":{"line":30,"column":284,"offset":2631}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Response"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Response"}],"position":{"start":{"line":30,"column":285,"offset":2632},"end":{"line":30,"column":295,"offset":2642}}}],"position":{"start":{"line":30,"column":284,"offset":2631},"end":{"line":30,"column":355,"offset":2702}}},{"type":"text","value":" object.","position":{"start":{"line":30,"column":355,"offset":2702},"end":{"line":30,"column":363,"offset":2710}}}],"position":{"start":{"line":30,"column":1,"offset":2348},"end":{"line":30,"column":363,"offset":2710}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The ","position":{"start":{"line":32,"column":1,"offset":2712},"end":{"line":32,"column":5,"offset":2716}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Response"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Response"}],"position":{"start":{"line":32,"column":6,"offset":2717},"end":{"line":32,"column":16,"offset":2727}}}],"position":{"start":{"line":32,"column":5,"offset":2716},"end":{"line":32,"column":76,"offset":2787}}},{"type":"text","value":" object, in turn, does not directly contain the actual JSON response body but is instead a representation of the entire HTTP response. So, to extract the JSON body content from the ","position":{"start":{"line":32,"column":76,"offset":2787},"end":{"line":32,"column":257,"offset":2968}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Response"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Response"}],"position":{"start":{"line":32,"column":258,"offset":2969},"end":{"line":32,"column":268,"offset":2979}}}],"position":{"start":{"line":32,"column":257,"offset":2968},"end":{"line":32,"column":328,"offset":3039}}},{"type":"text","value":" object, we use the ","position":{"start":{"line":32,"column":328,"offset":3039},"end":{"line":32,"column":348,"offset":3059}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Response/json","title":"json()"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"json()"}],"position":{"start":{"line":32,"column":349,"offset":3060},"end":{"line":32,"column":357,"offset":3068}}}],"position":{"start":{"line":32,"column":348,"offset":3059},"end":{"line":32,"column":431,"offset":3142}}},{"type":"text","value":" method, which returns a second promise that resolves with the result of parsing the response body text as JSON.","position":{"start":{"line":32,"column":431,"offset":3142},"end":{"line":32,"column":543,"offset":3254}}}],"position":{"start":{"line":32,"column":1,"offset":2712},"end":{"line":32,"column":543,"offset":3254}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note:","position":{"start":{"line":34,"column":3,"offset":3258},"end":{"line":34,"column":8,"offset":3263}}}],"position":{"start":{"line":34,"column":1,"offset":3256},"end":{"line":34,"column":10,"offset":3265}}},{"type":"text","value":" See the ","position":{"start":{"line":34,"column":10,"offset":3265},"end":{"line":34,"column":19,"offset":3274}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#body"},"children":[{"type":"text","value":"Body","position":{"start":{"line":34,"column":20,"offset":3275},"end":{"line":34,"column":24,"offset":3279}}}],"position":{"start":{"line":34,"column":19,"offset":3274},"end":{"line":34,"column":102,"offset":3357}}},{"type":"text","value":" section for similar methods to extract other types of body content.","position":{"start":{"line":34,"column":102,"offset":3357},"end":{"line":34,"column":170,"offset":3425}}}],"position":{"start":{"line":34,"column":1,"offset":3256},"end":{"line":34,"column":170,"offset":3425}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Fetch requests are controlled by the ","position":{"start":{"line":36,"column":1,"offset":3427},"end":{"line":36,"column":38,"offset":3464}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"connect-src"}],"position":{"start":{"line":36,"column":38,"offset":3464},"end":{"line":36,"column":51,"offset":3477}}},{"type":"text","value":" directive of ","position":{"start":{"line":36,"column":51,"offset":3477},"end":{"line":36,"column":65,"offset":3491}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy"},"children":[{"type":"text","value":"Content Security Policy","position":{"start":{"line":36,"column":66,"offset":3492},"end":{"line":36,"column":89,"offset":3515}}}],"position":{"start":{"line":36,"column":65,"offset":3491},"end":{"line":36,"column":173,"offset":3599}}},{"type":"text","value":" rather than the directive of the resources it's retrieving.","position":{"start":{"line":36,"column":173,"offset":3599},"end":{"line":36,"column":233,"offset":3659}}}],"position":{"start":{"line":36,"column":1,"offset":3427},"end":{"line":36,"column":233,"offset":3659}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#supplying_request_options","title":"Permalink to Supplying request options"},"children":[{"type":"text","value":"Supplying request options","position":{"start":{"line":38,"column":6,"offset":3666},"end":{"line":38,"column":31,"offset":3691}}}],"position":{"start":{"line":38,"column":5,"offset":3665},"end":{"line":38,"column":171,"offset":3831}}}],"position":{"start":{"line":38,"column":1,"offset":3661},"end":{"line":38,"column":171,"offset":3831}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The ","position":{"start":{"line":40,"column":1,"offset":3833},"end":{"line":40,"column":5,"offset":3837}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch()"}],"position":{"start":{"line":40,"column":5,"offset":3837},"end":{"line":40,"column":14,"offset":3846}}},{"type":"text","value":" method can optionally accept a second parameter, an ","position":{"start":{"line":40,"column":14,"offset":3846},"end":{"line":40,"column":67,"offset":3899}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"init"}],"position":{"start":{"line":40,"column":67,"offset":3899},"end":{"line":40,"column":73,"offset":3905}}},{"type":"text","value":" object that allows you to control a number of different settings:","position":{"start":{"line":40,"column":73,"offset":3905},"end":{"line":40,"column":139,"offset":3971}}}],"position":{"start":{"line":40,"column":1,"offset":3833},"end":{"line":40,"column":139,"offset":3971}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"See ","position":{"start":{"line":42,"column":1,"offset":3973},"end":{"line":42,"column":5,"offset":3977}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/fetch"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch()"}],"position":{"start":{"line":42,"column":6,"offset":3978},"end":{"line":42,"column":15,"offset":3987}}}],"position":{"start":{"line":42,"column":5,"offset":3977},"end":{"line":42,"column":72,"offset":4044}}},{"type":"text","value":" for the full options available, and more details.","position":{"start":{"line":42,"column":72,"offset":4044},"end":{"line":42,"column":122,"offset":4094}}}],"position":{"start":{"line":42,"column":1,"offset":3973},"end":{"line":42,"column":122,"offset":4094}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"js\n// Example POST method implementation:\nasync function postData(url = '', data = {}) {\n  // Default options are marked with *\n  const response = await fetch(url, {\n    method: 'POST', // *GET, POST, PUT, DELETE, etc.\n    mode: 'cors', // no-cors, *cors, same-origin\n    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: 'same-origin', // include, *same-origin, omit\n    headers: {\n      'Content-Type': 'application/json'\n      // 'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    redirect: 'follow', // manual, *follow, error\n    referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n    body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n  });\n  return response.json(); // parses JSON response into native JavaScript objects\n}\n\npostData('https://example.com/answer', { answer: 42 })\n  .then(data => {\n    console.log(data); // JSON data parsed by `data.json()` call\n  });\n"}],"position":{"start":{"line":44,"column":1,"offset":4096},"end":{"line":69,"column":4,"offset":5195}}}],"position":{"start":{"line":44,"column":1,"offset":4096},"end":{"line":69,"column":4,"offset":5195}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Note that ","position":{"start":{"line":71,"column":1,"offset":5197},"end":{"line":71,"column":11,"offset":5207}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"mode: \"no-cors\""}],"position":{"start":{"line":71,"column":11,"offset":5207},"end":{"line":71,"column":28,"offset":5224}}},{"type":"text","value":" only allows a limited set of headers in the request:","position":{"start":{"line":71,"column":28,"offset":5224},"end":{"line":71,"column":81,"offset":5277}}}],"position":{"start":{"line":71,"column":1,"offset":5197},"end":{"line":71,"column":81,"offset":5277}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Accept"}],"position":{"start":{"line":73,"column":5,"offset":5283},"end":{"line":73,"column":13,"offset":5291}}}],"position":{"start":{"line":73,"column":1,"offset":5279},"end":{"line":73,"column":13,"offset":5291}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Accept-Language"}],"position":{"start":{"line":74,"column":5,"offset":5296},"end":{"line":74,"column":22,"offset":5313}}}],"position":{"start":{"line":74,"column":1,"offset":5292},"end":{"line":74,"column":22,"offset":5313}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Content-Language"}],"position":{"start":{"line":75,"column":5,"offset":5318},"end":{"line":75,"column":23,"offset":5336}}}],"position":{"start":{"line":75,"column":1,"offset":5314},"end":{"line":75,"column":23,"offset":5336}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Content-Type"}],"position":{"start":{"line":76,"column":5,"offset":5341},"end":{"line":76,"column":19,"offset":5355}}},{"type":"text","value":" with a value of ","position":{"start":{"line":76,"column":19,"offset":5355},"end":{"line":76,"column":36,"offset":5372}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"application/x-www-form-urlencoded"}],"position":{"start":{"line":76,"column":36,"offset":5372},"end":{"line":76,"column":71,"offset":5407}}},{"type":"text","value":", ","position":{"start":{"line":76,"column":71,"offset":5407},"end":{"line":76,"column":73,"offset":5409}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"multipart/form-data"}],"position":{"start":{"line":76,"column":73,"offset":5409},"end":{"line":76,"column":94,"offset":5430}}},{"type":"text","value":", or ","position":{"start":{"line":76,"column":94,"offset":5430},"end":{"line":76,"column":99,"offset":5435}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"text/plain"}],"position":{"start":{"line":76,"column":99,"offset":5435},"end":{"line":76,"column":111,"offset":5447}}}],"position":{"start":{"line":76,"column":1,"offset":5337},"end":{"line":76,"column":111,"offset":5447}}},{"type":"text","value":"\n"}],"position":{"start":{"line":73,"column":1,"offset":5279},"end":{"line":76,"column":111,"offset":5447}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#sending_a_request_with_credentials_included","title":"Permalink to Sending a request with credentials included"},"children":[{"type":"text","value":"Sending a request with credentials included","position":{"start":{"line":78,"column":6,"offset":5454},"end":{"line":78,"column":49,"offset":5497}}}],"position":{"start":{"line":78,"column":5,"offset":5453},"end":{"line":78,"column":225,"offset":5673}}}],"position":{"start":{"line":78,"column":1,"offset":5449},"end":{"line":78,"column":225,"offset":5673}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To cause browsers to send a request with credentials included on both same-origin and cross-origin calls, add ","position":{"start":{"line":80,"column":1,"offset":5675},"end":{"line":80,"column":111,"offset":5785}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"credentials: 'include'"}],"position":{"start":{"line":80,"column":111,"offset":5785},"end":{"line":80,"column":135,"offset":5809}}},{"type":"text","value":" to the ","position":{"start":{"line":80,"column":135,"offset":5809},"end":{"line":80,"column":143,"offset":5817}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"init"}],"position":{"start":{"line":80,"column":143,"offset":5817},"end":{"line":80,"column":149,"offset":5823}}},{"type":"text","value":" object you pass to the ","position":{"start":{"line":80,"column":149,"offset":5823},"end":{"line":80,"column":173,"offset":5847}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch()"}],"position":{"start":{"line":80,"column":173,"offset":5847},"end":{"line":80,"column":182,"offset":5856}}},{"type":"text","value":" method.","position":{"start":{"line":80,"column":182,"offset":5856},"end":{"line":80,"column":190,"offset":5864}}}],"position":{"start":{"line":80,"column":1,"offset":5675},"end":{"line":80,"column":190,"offset":5864}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"fetch('https://example.com', {\n  credentials: 'include'\n});\n"}],"position":{"start":{"line":82,"column":1,"offset":5866},"end":{"line":87,"column":4,"offset":5936}}}],"position":{"start":{"line":82,"column":1,"offset":5866},"end":{"line":87,"column":4,"offset":5936}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note:","position":{"start":{"line":89,"column":3,"offset":5940},"end":{"line":89,"column":8,"offset":5945}}}],"position":{"start":{"line":89,"column":1,"offset":5938},"end":{"line":89,"column":10,"offset":5947}}},{"type":"text","value":" ","position":{"start":{"line":89,"column":10,"offset":5947},"end":{"line":89,"column":11,"offset":5948}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Access-Control-Allow-Origin"}],"position":{"start":{"line":89,"column":11,"offset":5948},"end":{"line":89,"column":40,"offset":5977}}},{"type":"text","value":" is prohibited from using a wildcard for requests with ","position":{"start":{"line":89,"column":40,"offset":5977},"end":{"line":89,"column":95,"offset":6032}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"credentials: 'include'"}],"position":{"start":{"line":89,"column":95,"offset":6032},"end":{"line":89,"column":119,"offset":6056}}},{"type":"text","value":". In such cases, the exact origin must be provided; even if you are using a CORS unblocker extension, the requests will still fail.","position":{"start":{"line":89,"column":119,"offset":6056},"end":{"line":89,"column":250,"offset":6187}}}],"position":{"start":{"line":89,"column":1,"offset":5938},"end":{"line":89,"column":250,"offset":6187}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note:","position":{"start":{"line":91,"column":3,"offset":6191},"end":{"line":91,"column":8,"offset":6196}}}],"position":{"start":{"line":91,"column":1,"offset":6189},"end":{"line":91,"column":10,"offset":6198}}},{"type":"text","value":" Browsers should not send credentials in ","position":{"start":{"line":91,"column":10,"offset":6198},"end":{"line":91,"column":51,"offset":6239}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"preflight requests","position":{"start":{"line":91,"column":52,"offset":6240},"end":{"line":91,"column":70,"offset":6258}}}],"position":{"start":{"line":91,"column":51,"offset":6239},"end":{"line":91,"column":71,"offset":6259}}},{"type":"text","value":" irrespective of this setting. For more information see: ","position":{"start":{"line":91,"column":71,"offset":6259},"end":{"line":91,"column":128,"offset":6316}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#requests_with_credentials"},"children":[{"type":"text","value":"CORS > Requests with credentials","position":{"start":{"line":91,"column":129,"offset":6317},"end":{"line":91,"column":161,"offset":6349}}}],"position":{"start":{"line":91,"column":128,"offset":6316},"end":{"line":91,"column":244,"offset":6432}}},{"type":"text","value":".","position":{"start":{"line":91,"column":244,"offset":6432},"end":{"line":91,"column":245,"offset":6433}}}],"position":{"start":{"line":91,"column":1,"offset":6189},"end":{"line":91,"column":245,"offset":6433}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you only want to send credentials if the request URL is on the same origin as the calling script, add ","position":{"start":{"line":93,"column":1,"offset":6435},"end":{"line":93,"column":106,"offset":6540}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"credentials: 'same-origin'"}],"position":{"start":{"line":93,"column":106,"offset":6540},"end":{"line":93,"column":134,"offset":6568}}},{"type":"text","value":".","position":{"start":{"line":93,"column":134,"offset":6568},"end":{"line":93,"column":135,"offset":6569}}}],"position":{"start":{"line":93,"column":1,"offset":6435},"end":{"line":93,"column":135,"offset":6569}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"// The calling script is on the origin 'https://example.com'\n\nfetch('https://example.com', {\n  credentials: 'same-origin'\n});\n"}],"position":{"start":{"line":95,"column":1,"offset":6571},"end":{"line":102,"column":4,"offset":6707}}}],"position":{"start":{"line":95,"column":1,"offset":6571},"end":{"line":102,"column":4,"offset":6707}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To instead ensure browsers don't include credentials in the request, use ","position":{"start":{"line":104,"column":1,"offset":6709},"end":{"line":104,"column":74,"offset":6782}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"credentials: 'omit'"}],"position":{"start":{"line":104,"column":74,"offset":6782},"end":{"line":104,"column":95,"offset":6803}}},{"type":"text","value":".","position":{"start":{"line":104,"column":95,"offset":6803},"end":{"line":104,"column":96,"offset":6804}}}],"position":{"start":{"line":104,"column":1,"offset":6709},"end":{"line":104,"column":96,"offset":6804}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"fetch('https://example.com', {\n  credentials: 'omit'\n})\n"}],"position":{"start":{"line":106,"column":1,"offset":6806},"end":{"line":111,"column":4,"offset":6872}}}],"position":{"start":{"line":106,"column":1,"offset":6806},"end":{"line":111,"column":4,"offset":6872}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#uploading_json_data","title":"Permalink to Uploading JSON data"},"children":[{"type":"text","value":"Uploading JSON data","position":{"start":{"line":113,"column":6,"offset":6879},"end":{"line":113,"column":25,"offset":6898}}}],"position":{"start":{"line":113,"column":5,"offset":6878},"end":{"line":113,"column":153,"offset":7026}}}],"position":{"start":{"line":113,"column":1,"offset":6874},"end":{"line":113,"column":153,"offset":7026}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Use ","position":{"start":{"line":115,"column":1,"offset":7028},"end":{"line":115,"column":5,"offset":7032}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/fetch"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch()"}],"position":{"start":{"line":115,"column":6,"offset":7033},"end":{"line":115,"column":15,"offset":7042}}}],"position":{"start":{"line":115,"column":5,"offset":7032},"end":{"line":115,"column":72,"offset":7099}}},{"type":"text","value":" to POST JSON-encoded data.","position":{"start":{"line":115,"column":72,"offset":7099},"end":{"line":115,"column":99,"offset":7126}}}],"position":{"start":{"line":115,"column":1,"offset":7028},"end":{"line":115,"column":99,"offset":7126}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"const data = { username: 'example' };\n\nfetch('https://example.com/profile', {\n  method: 'POST', // or 'PUT'\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify(data),\n})\n.then(response => response.json())\n.then(data => {\n  console.log('Success:', data);\n})\n.catch((error) => {\n  console.error('Error:', error);\n});\n"}],"position":{"start":{"line":117,"column":1,"offset":7128},"end":{"line":135,"column":4,"offset":7482}}}],"position":{"start":{"line":117,"column":1,"offset":7128},"end":{"line":135,"column":4,"offset":7482}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#uploading_a_file","title":"Permalink to Uploading a file"},"children":[{"type":"text","value":"Uploading a file","position":{"start":{"line":137,"column":6,"offset":7489},"end":{"line":137,"column":22,"offset":7505}}}],"position":{"start":{"line":137,"column":5,"offset":7488},"end":{"line":137,"column":144,"offset":7627}}}],"position":{"start":{"line":137,"column":1,"offset":7484},"end":{"line":137,"column":144,"offset":7627}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Files can be uploaded using an HTML ","position":{"start":{"line":139,"column":1,"offset":7629},"end":{"line":139,"column":37,"offset":7665}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<input type=\"file\" />"}],"position":{"start":{"line":139,"column":37,"offset":7665},"end":{"line":139,"column":60,"offset":7688}}},{"type":"text","value":" input element, ","position":{"start":{"line":139,"column":60,"offset":7688},"end":{"line":139,"column":76,"offset":7704}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/FormData/FormData","title":"FormData()"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"FormData()"}],"position":{"start":{"line":139,"column":77,"offset":7705},"end":{"line":139,"column":89,"offset":7717}}}],"position":{"start":{"line":139,"column":76,"offset":7704},"end":{"line":139,"column":171,"offset":7799}}},{"type":"text","value":" and ","position":{"start":{"line":139,"column":171,"offset":7799},"end":{"line":139,"column":176,"offset":7804}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/fetch"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch()"}],"position":{"start":{"line":139,"column":177,"offset":7805},"end":{"line":139,"column":186,"offset":7814}}}],"position":{"start":{"line":139,"column":176,"offset":7804},"end":{"line":139,"column":243,"offset":7871}}},{"type":"text","value":".","position":{"start":{"line":139,"column":243,"offset":7871},"end":{"line":139,"column":244,"offset":7872}}}],"position":{"start":{"line":139,"column":1,"offset":7629},"end":{"line":139,"column":244,"offset":7872}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"const formData = new FormData();\nconst fileField = document.querySelector('input[type=\"file\"]');\n\nformData.append('username', 'abc123');\nformData.append('avatar', fileField.files[0]);\n\nfetch('https://example.com/profile/avatar', {\n  method: 'PUT',\n  body: formData\n})\n.then(response => response.json())\n.then(result => {\n  console.log('Success:', result);\n})\n.catch(error => {\n  console.error('Error:', error);\n});\n"}],"position":{"start":{"line":141,"column":1,"offset":7874},"end":{"line":160,"column":4,"offset":8299}}}],"position":{"start":{"line":141,"column":1,"offset":7874},"end":{"line":160,"column":4,"offset":8299}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#uploading_multiple_files","title":"Permalink to Uploading multiple files"},"children":[{"type":"text","value":"Uploading multiple files","position":{"start":{"line":162,"column":6,"offset":8306},"end":{"line":162,"column":30,"offset":8330}}}],"position":{"start":{"line":162,"column":5,"offset":8305},"end":{"line":162,"column":168,"offset":8468}}}],"position":{"start":{"line":162,"column":1,"offset":8301},"end":{"line":162,"column":168,"offset":8468}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Files can be uploaded using an HTML ","position":{"start":{"line":164,"column":1,"offset":8470},"end":{"line":164,"column":37,"offset":8506}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<input type=\"file\" multiple />"}],"position":{"start":{"line":164,"column":37,"offset":8506},"end":{"line":164,"column":69,"offset":8538}}},{"type":"text","value":" input element, ","position":{"start":{"line":164,"column":69,"offset":8538},"end":{"line":164,"column":85,"offset":8554}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/FormData/FormData","title":"FormData()"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"FormData()"}],"position":{"start":{"line":164,"column":86,"offset":8555},"end":{"line":164,"column":98,"offset":8567}}}],"position":{"start":{"line":164,"column":85,"offset":8554},"end":{"line":164,"column":180,"offset":8649}}},{"type":"text","value":" and ","position":{"start":{"line":164,"column":180,"offset":8649},"end":{"line":164,"column":185,"offset":8654}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/fetch"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch()"}],"position":{"start":{"line":164,"column":186,"offset":8655},"end":{"line":164,"column":195,"offset":8664}}}],"position":{"start":{"line":164,"column":185,"offset":8654},"end":{"line":164,"column":252,"offset":8721}}},{"type":"text","value":".","position":{"start":{"line":164,"column":252,"offset":8721},"end":{"line":164,"column":253,"offset":8722}}}],"position":{"start":{"line":164,"column":1,"offset":8470},"end":{"line":164,"column":253,"offset":8722}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"const formData = new FormData();\nconst photos = document.querySelector('input[type=\"file\"][multiple]');\n\nformData.append('title', 'My Vegas Vacation');\nfor (let i = 0; i < photos.files.length; i++) {\n  formData.append(`photos_${i}`, photos.files[i]);\n}\n\nfetch('https://example.com/posts', {\n  method: 'POST',\n  body: formData,\n})\n.then(response => response.json())\n.then(result => {\n  console.log('Success:', result);\n})\n.catch(error => {\n  console.error('Error:', error);\n});\n"}],"position":{"start":{"line":166,"column":1,"offset":8724},"end":{"line":187,"column":4,"offset":9211}}}],"position":{"start":{"line":166,"column":1,"offset":8724},"end":{"line":187,"column":4,"offset":9211}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#processing_a_text_file_line_by_line","title":"Permalink to Processing a text file line by line"},"children":[{"type":"text","value":"Processing a text file line by line","position":{"start":{"line":189,"column":6,"offset":9218},"end":{"line":189,"column":41,"offset":9253}}}],"position":{"start":{"line":189,"column":5,"offset":9217},"end":{"line":189,"column":201,"offset":9413}}}],"position":{"start":{"line":189,"column":1,"offset":9213},"end":{"line":189,"column":201,"offset":9413}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The chunks that are read from a response are not broken neatly at line boundaries and are Uint8Arrays, not strings. If you want to fetch a text file and process it line by line, it is up to you to handle these complications. The following example shows one way to do this by creating a line iterator (for simplicity, it assumes the text is UTF-8, and doesn't handle fetch errors).","position":{"start":{"line":191,"column":1,"offset":9415},"end":{"line":191,"column":381,"offset":9795}}}],"position":{"start":{"line":191,"column":1,"offset":9415},"end":{"line":191,"column":381,"offset":9795}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"async function* makeTextFileLineIterator(fileURL) {\n  const utf8Decoder = new TextDecoder('utf-8');\n  const response = await fetch(fileURL);\n  const reader = response.body.getReader();\n  let { value: chunk, done: readerDone } = await reader.read();\n  chunk = chunk ? utf8Decoder.decode(chunk) : '';\n\n  const re = /\\n|\\r|\\r\\n/gm;\n  let startIndex = 0;\n  let result;\n\n  for (;;) {\n    let result = re.exec(chunk);\n    if (!result) {\n      if (readerDone) {\n        break;\n      }\n      let remainder = chunk.substr(startIndex);\n      ({ value: chunk, done: readerDone } = await reader.read());\n      chunk = remainder + (chunk ? utf8Decoder.decode(chunk) : '');\n      startIndex = re.lastIndex = 0;\n      continue;\n    }\n    yield chunk.substring(startIndex, result.index);\n    startIndex = re.lastIndex;\n  }\n  if (startIndex < chunk.length) {\n    // last line didn't end in a newline char\n    yield chunk.substr(startIndex);\n  }\n}\n\nasync function run() {\n  for await (let line of makeTextFileLineIterator(urlOfFile)) {\n    processLine(line);\n  }\n}\n\nrun();\n"}],"position":{"start":{"line":193,"column":1,"offset":9797},"end":{"line":234,"column":4,"offset":10862}}}],"position":{"start":{"line":193,"column":1,"offset":9797},"end":{"line":234,"column":4,"offset":10862}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#checking_that_the_fetch_was_successful","title":"Permalink to Checking that the fetch was successful"},"children":[{"type":"text","value":"Checking that the fetch was successful","position":{"start":{"line":236,"column":6,"offset":10869},"end":{"line":236,"column":44,"offset":10907}}}],"position":{"start":{"line":236,"column":5,"offset":10868},"end":{"line":236,"column":210,"offset":11073}}}],"position":{"start":{"line":236,"column":1,"offset":10864},"end":{"line":236,"column":210,"offset":11073}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A ","position":{"start":{"line":238,"column":1,"offset":11075},"end":{"line":238,"column":3,"offset":11077}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/fetch"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch()"}],"position":{"start":{"line":238,"column":4,"offset":11078},"end":{"line":238,"column":13,"offset":11087}}}],"position":{"start":{"line":238,"column":3,"offset":11077},"end":{"line":238,"column":70,"offset":11144}}},{"type":"text","value":" promise will reject with a ","position":{"start":{"line":238,"column":70,"offset":11144},"end":{"line":238,"column":98,"offset":11172}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"TypeError"}],"position":{"start":{"line":238,"column":99,"offset":11173},"end":{"line":238,"column":110,"offset":11184}}}],"position":{"start":{"line":238,"column":98,"offset":11172},"end":{"line":238,"column":203,"offset":11277}}},{"type":"text","value":" when a network error is encountered or CORS is misconfigured on the server-side, although this usually means permission issues or similar — a 404 does not constitute a network error, for example. An accurate check for a successful ","position":{"start":{"line":238,"column":203,"offset":11277},"end":{"line":238,"column":435,"offset":11509}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch()"}],"position":{"start":{"line":238,"column":435,"offset":11509},"end":{"line":238,"column":444,"offset":11518}}},{"type":"text","value":" would include checking that the promise resolved, then checking that the ","position":{"start":{"line":238,"column":444,"offset":11518},"end":{"line":238,"column":518,"offset":11592}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Response/ok"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Response.ok"}],"position":{"start":{"line":238,"column":519,"offset":11593},"end":{"line":238,"column":532,"offset":11606}}}],"position":{"start":{"line":238,"column":518,"offset":11592},"end":{"line":238,"column":595,"offset":11669}}},{"type":"text","value":" property has a value of true. The code would look something like this:","position":{"start":{"line":238,"column":595,"offset":11669},"end":{"line":238,"column":666,"offset":11740}}}],"position":{"start":{"line":238,"column":1,"offset":11075},"end":{"line":238,"column":666,"offset":11740}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch('flowers.jpg')\n  .then(response => {\n    if (!response.ok) {\n      throw new Error('Network response was not OK');\n    }\n    return response.blob();\n  })\n  .then(myBlob => {\n    myImage.src = URL.createObjectURL(myBlob);\n  })\n  .catch(error => {\n    console.error('There has been a problem with your fetch operation:', error);\n  });\n"}],"position":{"start":{"line":240,"column":1,"offset":11742},"end":{"line":254,"column":4,"offset":12088}}}],"position":{"start":{"line":240,"column":1,"offset":11742},"end":{"line":254,"column":4,"offset":12088}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#supplying_your_own_request_object","title":"Permalink to Supplying your own request object"},"children":[{"type":"text","value":"Supplying your own request object","position":{"start":{"line":256,"column":6,"offset":12095},"end":{"line":256,"column":39,"offset":12128}}}],"position":{"start":{"line":256,"column":5,"offset":12094},"end":{"line":256,"column":195,"offset":12284}}}],"position":{"start":{"line":256,"column":1,"offset":12090},"end":{"line":256,"column":195,"offset":12284}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Instead of passing a path to the resource you want to request into the ","position":{"start":{"line":258,"column":1,"offset":12286},"end":{"line":258,"column":72,"offset":12357}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch()"}],"position":{"start":{"line":258,"column":72,"offset":12357},"end":{"line":258,"column":81,"offset":12366}}},{"type":"text","value":" call, you can create a request object using the ","position":{"start":{"line":258,"column":81,"offset":12366},"end":{"line":258,"column":130,"offset":12415}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Request/Request","title":"Request()"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Request()"}],"position":{"start":{"line":258,"column":131,"offset":12416},"end":{"line":258,"column":142,"offset":12427}}}],"position":{"start":{"line":258,"column":130,"offset":12415},"end":{"line":258,"column":221,"offset":12506}}},{"type":"text","value":" constructor, and pass that in as a ","position":{"start":{"line":258,"column":221,"offset":12506},"end":{"line":258,"column":257,"offset":12542}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch()"}],"position":{"start":{"line":258,"column":257,"offset":12542},"end":{"line":258,"column":266,"offset":12551}}},{"type":"text","value":" method argument:","position":{"start":{"line":258,"column":266,"offset":12551},"end":{"line":258,"column":283,"offset":12568}}}],"position":{"start":{"line":258,"column":1,"offset":12286},"end":{"line":258,"column":283,"offset":12568}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const myHeaders = new Headers();\n\nconst myRequest = new Request('flowers.jpg', {\n  method: 'GET',\n  headers: myHeaders,\n  mode: 'cors',\n  cache: 'default',\n});\n\nfetch(myRequest)\n  .then(response => response.blob())\n  .then(myBlob => {\n    myImage.src = URL.createObjectURL(myBlob);\n  });\n"}],"position":{"start":{"line":260,"column":1,"offset":12570},"end":{"line":275,"column":4,"offset":12865}}}],"position":{"start":{"line":260,"column":1,"offset":12570},"end":{"line":275,"column":4,"offset":12865}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Request()"}],"position":{"start":{"line":277,"column":1,"offset":12867},"end":{"line":277,"column":12,"offset":12878}}},{"type":"text","value":" accepts exactly the same parameters as the ","position":{"start":{"line":277,"column":12,"offset":12878},"end":{"line":277,"column":56,"offset":12922}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch()"}],"position":{"start":{"line":277,"column":56,"offset":12922},"end":{"line":277,"column":65,"offset":12931}}},{"type":"text","value":" method. You can even pass in an existing request object to create a copy of it:","position":{"start":{"line":277,"column":65,"offset":12931},"end":{"line":277,"column":145,"offset":13011}}}],"position":{"start":{"line":277,"column":1,"offset":12867},"end":{"line":277,"column":145,"offset":13011}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const anotherRequest = new Request(myRequest, myInit);\n"}],"position":{"start":{"line":279,"column":1,"offset":13013},"end":{"line":281,"column":4,"offset":13075}}}],"position":{"start":{"line":279,"column":1,"offset":13013},"end":{"line":281,"column":4,"offset":13075}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is pretty useful, as request and response bodies are one use only. Making a copy like this allows you to make use of the request/response again while varying the ","position":{"start":{"line":283,"column":1,"offset":13077},"end":{"line":283,"column":168,"offset":13244}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"init"}],"position":{"start":{"line":283,"column":168,"offset":13244},"end":{"line":283,"column":174,"offset":13250}}},{"type":"text","value":" options if desired. The copy must be made before the body is read, and reading the body in the copy will also mark it as read in the original request.","position":{"start":{"line":283,"column":174,"offset":13250},"end":{"line":283,"column":325,"offset":13401}}}],"position":{"start":{"line":283,"column":1,"offset":13077},"end":{"line":283,"column":325,"offset":13401}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note:","position":{"start":{"line":285,"column":3,"offset":13405},"end":{"line":285,"column":8,"offset":13410}}}],"position":{"start":{"line":285,"column":1,"offset":13403},"end":{"line":285,"column":10,"offset":13412}}},{"type":"text","value":" There is also a ","position":{"start":{"line":285,"column":10,"offset":13412},"end":{"line":285,"column":27,"offset":13429}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Request/clone","title":"clone()"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"clone()"}],"position":{"start":{"line":285,"column":28,"offset":13430},"end":{"line":285,"column":37,"offset":13439}}}],"position":{"start":{"line":285,"column":27,"offset":13429},"end":{"line":285,"column":112,"offset":13514}}},{"type":"text","value":" method that creates a copy. Both methods of creating a copy will fail if the body of the original request or response has already been read, but reading the body of a cloned response or request will not cause it to be marked as read in the original.","position":{"start":{"line":285,"column":112,"offset":13514},"end":{"line":285,"column":362,"offset":13764}}}],"position":{"start":{"line":285,"column":1,"offset":13403},"end":{"line":285,"column":362,"offset":13764}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The ","position":{"start":{"line":287,"column":1,"offset":13766},"end":{"line":287,"column":5,"offset":13770}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Headers"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Headers"}],"position":{"start":{"line":287,"column":6,"offset":13771},"end":{"line":287,"column":15,"offset":13780}}}],"position":{"start":{"line":287,"column":5,"offset":13770},"end":{"line":287,"column":74,"offset":13839}}},{"type":"text","value":" interface allows you to create your own headers object via the ","position":{"start":{"line":287,"column":74,"offset":13839},"end":{"line":287,"column":138,"offset":13903}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Headers/Headers","title":"Headers()"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Headers()"}],"position":{"start":{"line":287,"column":139,"offset":13904},"end":{"line":287,"column":150,"offset":13915}}}],"position":{"start":{"line":287,"column":138,"offset":13903},"end":{"line":287,"column":229,"offset":13994}}},{"type":"text","value":" constructor. A headers object is a simple multi-map of names to values:","position":{"start":{"line":287,"column":229,"offset":13994},"end":{"line":287,"column":301,"offset":14066}}}],"position":{"start":{"line":287,"column":1,"offset":13766},"end":{"line":287,"column":301,"offset":14066}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const content = 'Hello World';\nconst myHeaders = new Headers();\nmyHeaders.append('Content-Type', 'text/plain');\nmyHeaders.append('Content-Length', content.length.toString());\nmyHeaders.append('X-Custom-Header', 'ProcessThisImmediately');\n"}],"position":{"start":{"line":289,"column":1,"offset":14068},"end":{"line":295,"column":4,"offset":14313}}}],"position":{"start":{"line":289,"column":1,"offset":14068},"end":{"line":295,"column":4,"offset":14313}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The same can be achieved by passing an array of arrays or an object literal to the constructor:","position":{"start":{"line":297,"column":1,"offset":14315},"end":{"line":297,"column":96,"offset":14410}}}],"position":{"start":{"line":297,"column":1,"offset":14315},"end":{"line":297,"column":96,"offset":14410}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const myHeaders = new Headers({\n  'Content-Type': 'text/plain',\n  'Content-Length': content.length.toString(),\n  'X-Custom-Header': 'ProcessThisImmediately'\n});\n"}],"position":{"start":{"line":299,"column":1,"offset":14412},"end":{"line":305,"column":4,"offset":14580}}}],"position":{"start":{"line":299,"column":1,"offset":14412},"end":{"line":305,"column":4,"offset":14580}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The contents can be queried and retrieved:","position":{"start":{"line":307,"column":1,"offset":14582},"end":{"line":307,"column":43,"offset":14624}}}],"position":{"start":{"line":307,"column":1,"offset":14582},"end":{"line":307,"column":43,"offset":14624}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"console.log(myHeaders.has('Content-Type')); // true\nconsole.log(myHeaders.has('Set-Cookie')); // false\nmyHeaders.set('Content-Type', 'text/html');\nmyHeaders.append('X-Custom-Header', 'AnotherValue');\n\nconsole.log(myHeaders.get('Content-Length')); // 11\nconsole.log(myHeaders.get('X-Custom-Header')); // ['ProcessThisImmediately', 'AnotherValue']\n\nmyHeaders.delete('X-Custom-Header');\nconsole.log(myHeaders.get('X-Custom-Header')); // null\n"}],"position":{"start":{"line":309,"column":1,"offset":14626},"end":{"line":320,"column":4,"offset":15072}}}],"position":{"start":{"line":309,"column":1,"offset":14626},"end":{"line":320,"column":4,"offset":15072}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Some of these operations are only useful in ","position":{"start":{"line":322,"column":1,"offset":15074},"end":{"line":322,"column":45,"offset":15118}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API","title":"ServiceWorkers"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ServiceWorkers"}],"position":{"start":{"line":322,"column":46,"offset":15119},"end":{"line":322,"column":62,"offset":15135}}}],"position":{"start":{"line":322,"column":45,"offset":15118},"end":{"line":322,"column":149,"offset":15222}}},{"type":"text","value":", but they provide a much nicer API for manipulating headers.","position":{"start":{"line":322,"column":149,"offset":15222},"end":{"line":322,"column":210,"offset":15283}}}],"position":{"start":{"line":322,"column":1,"offset":15074},"end":{"line":322,"column":210,"offset":15283}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"All of the Headers methods throw a ","position":{"start":{"line":324,"column":1,"offset":15285},"end":{"line":324,"column":36,"offset":15320}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"TypeError"}],"position":{"start":{"line":324,"column":36,"offset":15320},"end":{"line":324,"column":47,"offset":15331}}},{"type":"text","value":" if a header name is used that is not a valid HTTP Header name. The mutation operations will throw a ","position":{"start":{"line":324,"column":47,"offset":15331},"end":{"line":324,"column":148,"offset":15432}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"TypeError"}],"position":{"start":{"line":324,"column":148,"offset":15432},"end":{"line":324,"column":159,"offset":15443}}},{"type":"text","value":" if there is an immutable guard (","position":{"start":{"line":324,"column":159,"offset":15443},"end":{"line":324,"column":192,"offset":15476}}},{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#guard"},"children":[{"type":"text","value":"see below","position":{"start":{"line":324,"column":193,"offset":15477},"end":{"line":324,"column":202,"offset":15486}}}],"position":{"start":{"line":324,"column":192,"offset":15476},"end":{"line":324,"column":281,"offset":15565}}},{"type":"text","value":"). Otherwise, they fail silently. For example:","position":{"start":{"line":324,"column":281,"offset":15565},"end":{"line":324,"column":327,"offset":15611}}}],"position":{"start":{"line":324,"column":1,"offset":15285},"end":{"line":324,"column":327,"offset":15611}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const myResponse = Response.error();\ntry {\n  myResponse.headers.set('Origin', 'http://mybank.com');\n} catch (e) {\n  console.log('Cannot pretend to be a bank!');\n}\n"}],"position":{"start":{"line":326,"column":1,"offset":15613},"end":{"line":333,"column":4,"offset":15783}}}],"position":{"start":{"line":326,"column":1,"offset":15613},"end":{"line":333,"column":4,"offset":15783}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A good use case for headers is checking whether the content type is correct before you process it further. For example:","position":{"start":{"line":335,"column":1,"offset":15785},"end":{"line":335,"column":120,"offset":15904}}}],"position":{"start":{"line":335,"column":1,"offset":15785},"end":{"line":335,"column":120,"offset":15904}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fetch(myRequest)\n  .then(response => {\n     const contentType = response.headers.get('content-type');\n     if (!contentType || !contentType.includes('application/json')) {\n       throw new TypeError(\"Oops, we haven't got JSON!\");\n     }\n     return response.json();\n  })\n  .then(data => {\n      /* process your data further */\n  })\n  .catch(error => console.error(error));\n"}],"position":{"start":{"line":337,"column":1,"offset":15906},"end":{"line":350,"column":4,"offset":16286}}}],"position":{"start":{"line":337,"column":1,"offset":15906},"end":{"line":350,"column":4,"offset":16286}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#guard","title":"Permalink to Guard"},"children":[{"type":"text","value":"Guard","position":{"start":{"line":352,"column":6,"offset":16293},"end":{"line":352,"column":11,"offset":16298}}}],"position":{"start":{"line":352,"column":5,"offset":16292},"end":{"line":352,"column":111,"offset":16398}}}],"position":{"start":{"line":352,"column":1,"offset":16288},"end":{"line":352,"column":111,"offset":16398}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Since headers can be sent in requests and received in responses, and have various limitations about what information can and should be mutable, headers' objects have a ","position":{"start":{"line":354,"column":1,"offset":16400},"end":{"line":354,"column":169,"offset":16568}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"guard","position":{"start":{"line":354,"column":170,"offset":16569},"end":{"line":354,"column":175,"offset":16574}}}],"position":{"start":{"line":354,"column":169,"offset":16568},"end":{"line":354,"column":176,"offset":16575}}},{"type":"text","value":" property. This is not exposed to the Web, but it affects which mutation operations are allowed on the headers object.","position":{"start":{"line":354,"column":176,"offset":16575},"end":{"line":354,"column":294,"offset":16693}}}],"position":{"start":{"line":354,"column":1,"offset":16400},"end":{"line":354,"column":294,"offset":16693}}},{"type":"text","value":"\n"},{"type":"raw","value":"</details>","position":{"start":{"line":358,"column":1,"offset":16697},"end":{"line":358,"column":11,"offset":16707}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Fetch","position":{"start":{"line":360,"column":3,"offset":16711},"end":{"line":360,"column":8,"offset":16716}}}],"position":{"start":{"line":360,"column":1,"offset":16709},"end":{"line":360,"column":8,"offset":16716}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"fetch('/data.json')  .then(response => response.json())  .then(data => {    console.log(data)  })  .catch(err => ...)\n"}],"position":{"start":{"line":362,"column":1,"offset":16718},"end":{"line":364,"column":4,"offset":16845}}}],"position":{"start":{"line":362,"column":1,"offset":16718},"end":{"line":364,"column":4,"offset":16845}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Response","position":{"start":{"line":366,"column":5,"offset":16851},"end":{"line":366,"column":13,"offset":16859}}}],"position":{"start":{"line":366,"column":1,"offset":16847},"end":{"line":366,"column":13,"offset":16859}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"fetch('/data.json').then(res => {  res.text()       // response body (=> Promise)  res.json()       // parse via JSON (=> Promise)  res.status       //=> 200  res.statusText   //=> 'OK'  res.redirected   //=> false  res.ok           //=> true  res.url          //=> 'http://site.com/data.json'  res.type         //=> 'basic'                   //   ('cors' 'default' 'error'                   //    'opaque' 'opaqueredirect')\n"}],"position":{"start":{"line":368,"column":1,"offset":16861},"end":{"line":370,"column":4,"offset":17295}}}],"position":{"start":{"line":368,"column":1,"offset":16861},"end":{"line":370,"column":4,"offset":17295}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"  res.headers.get('Content-Type')})\n"}],"position":{"start":{"line":372,"column":1,"offset":17297},"end":{"line":374,"column":4,"offset":17342}}}],"position":{"start":{"line":372,"column":1,"offset":17297},"end":{"line":374,"column":4,"offset":17342}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Request options","position":{"start":{"line":376,"column":5,"offset":17348},"end":{"line":376,"column":20,"offset":17363}}}],"position":{"start":{"line":376,"column":1,"offset":17344},"end":{"line":376,"column":20,"offset":17363}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"fetch('/data.json', {  method: 'post',  body: new FormData(form), // post body  body: JSON.stringify(...),\n"}],"position":{"start":{"line":378,"column":1,"offset":17365},"end":{"line":380,"column":4,"offset":17481}}}],"position":{"start":{"line":378,"column":1,"offset":17365},"end":{"line":380,"column":4,"offset":17481}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"  headers: {    'Accept': 'application/json'  },\n"}],"position":{"start":{"line":382,"column":1,"offset":17483},"end":{"line":384,"column":4,"offset":17541}}}],"position":{"start":{"line":382,"column":1,"offset":17483},"end":{"line":384,"column":4,"offset":17541}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"  credentials: 'same-origin', // send cookies  credentials: 'include',     // send cookies, even in CORS\n"}],"position":{"start":{"line":386,"column":1,"offset":17543},"end":{"line":388,"column":4,"offset":17657}}}],"position":{"start":{"line":386,"column":1,"offset":17543},"end":{"line":388,"column":4,"offset":17657}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"})\n"}],"position":{"start":{"line":390,"column":1,"offset":17659},"end":{"line":392,"column":4,"offset":17671}}}],"position":{"start":{"line":390,"column":1,"offset":17659},"end":{"line":392,"column":4,"offset":17671}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Catching errors","position":{"start":{"line":394,"column":5,"offset":17677},"end":{"line":394,"column":20,"offset":17692}}}],"position":{"start":{"line":394,"column":1,"offset":17673},"end":{"line":394,"column":20,"offset":17692}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"fetch('/data.json')  .then(checkStatus)\n"}],"position":{"start":{"line":396,"column":1,"offset":17694},"end":{"line":398,"column":4,"offset":17743}}}],"position":{"start":{"line":396,"column":1,"offset":17694},"end":{"line":398,"column":4,"offset":17743}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"function checkStatus (res) {  if (res.status >= 200 && res.status < 300) {    return res  } else {    let err = new Error(res.statusText)    err.response = res    throw err  }}\n"}],"position":{"start":{"line":400,"column":1,"offset":17745},"end":{"line":402,"column":4,"offset":17931}}}],"position":{"start":{"line":400,"column":1,"offset":17745},"end":{"line":402,"column":4,"offset":17931}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Non-2xx responses are still successful requests. Use another function to turn them to errors.","position":{"start":{"line":404,"column":1,"offset":17933},"end":{"line":404,"column":94,"offset":18026}}}],"position":{"start":{"line":404,"column":1,"offset":17933},"end":{"line":404,"column":94,"offset":18026}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Using with node.js","position":{"start":{"line":406,"column":5,"offset":18032},"end":{"line":406,"column":23,"offset":18050}}}],"position":{"start":{"line":406,"column":1,"offset":18028},"end":{"line":406,"column":23,"offset":18050}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"const fetch = require('isomorphic-fetch')\n"}],"position":{"start":{"line":408,"column":1,"offset":18052},"end":{"line":410,"column":4,"offset":18103}}}],"position":{"start":{"line":408,"column":1,"offset":18052},"end":{"line":410,"column":4,"offset":18103}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"See: ","position":{"start":{"line":412,"column":1,"offset":18105},"end":{"line":412,"column":6,"offset":18110}}},{"type":"element","tagName":"a","properties":{"href":"https://npmjs.com/package/isomorphic-fetch"},"children":[{"type":"text","value":"isomorphic-fetch","position":{"start":{"line":412,"column":7,"offset":18111},"end":{"line":412,"column":23,"offset":18127}}}],"position":{"start":{"line":412,"column":6,"offset":18110},"end":{"line":412,"column":68,"offset":18172}}},{"type":"text","value":" ","position":{"start":{"line":412,"column":68,"offset":18172},"end":{"line":412,"column":69,"offset":18173}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"(npmjs.com)","position":{"start":{"line":412,"column":70,"offset":18174},"end":{"line":412,"column":81,"offset":18185}}}],"position":{"start":{"line":412,"column":69,"offset":18173},"end":{"line":412,"column":82,"offset":18186}}}],"position":{"start":{"line":412,"column":1,"offset":18105},"end":{"line":412,"column":82,"offset":18186}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":413,"column":1,"offset":18187}}}}