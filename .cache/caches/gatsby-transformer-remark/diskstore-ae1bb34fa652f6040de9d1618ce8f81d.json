{"expireTime":9007200904342770000,"key":"transformer-remark-markdown-html-ast-3a22668f9f7d79a933ecb765d52dcc26--","val":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"What is a buffer?","position":{"start":{"line":2,"column":4,"offset":4},"end":{"line":2,"column":21,"offset":21}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":21,"offset":21}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A buffer is an area of memory. JavaScript developers are not familiar with this concept, much less than C, C++ or Go developers (or any programmer that uses a system programming language), which interact with memory every day.","position":{"start":{"line":4,"column":1,"offset":23},"end":{"line":4,"column":227,"offset":249}}}],"position":{"start":{"line":4,"column":1,"offset":23},"end":{"line":4,"column":227,"offset":249}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It represents a fixed-size chunk of memory (can't be resized) allocated outside of the V8 JavaScript engine.","position":{"start":{"line":6,"column":1,"offset":251},"end":{"line":6,"column":109,"offset":359}}}],"position":{"start":{"line":6,"column":1,"offset":251},"end":{"line":6,"column":109,"offset":359}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can think of a buffer like an array of integers, which each represent a byte of data.","position":{"start":{"line":8,"column":1,"offset":361},"end":{"line":8,"column":90,"offset":450}}}],"position":{"start":{"line":8,"column":1,"offset":361},"end":{"line":8,"column":90,"offset":450}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It is implemented by the Node.js ","position":{"start":{"line":10,"column":1,"offset":452},"end":{"line":10,"column":34,"offset":485}}},{"type":"element","tagName":"a","properties":{"href":"https://nodejs.org/api/buffer.html"},"children":[{"type":"text","value":"Buffer class","position":{"start":{"line":10,"column":35,"offset":486},"end":{"line":10,"column":47,"offset":498}}}],"position":{"start":{"line":10,"column":34,"offset":485},"end":{"line":10,"column":84,"offset":535}}},{"type":"text","value":".","position":{"start":{"line":10,"column":84,"offset":535},"end":{"line":10,"column":85,"offset":536}}}],"position":{"start":{"line":10,"column":1,"offset":452},"end":{"line":10,"column":85,"offset":536}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Why do we need a buffer?","position":{"start":{"line":12,"column":4,"offset":541},"end":{"line":12,"column":28,"offset":565}}}],"position":{"start":{"line":12,"column":1,"offset":538},"end":{"line":12,"column":28,"offset":565}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Buffers were introduced to help developers deal with binary data, in an ecosystem that traditionally only dealt with strings rather than binaries.","position":{"start":{"line":14,"column":1,"offset":567},"end":{"line":14,"column":147,"offset":713}}}],"position":{"start":{"line":14,"column":1,"offset":567},"end":{"line":14,"column":147,"offset":713}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Buffers are deeply linked with streams. When a stream processor receives data faster than it can digest, it puts the data in a buffer.","position":{"start":{"line":16,"column":1,"offset":715},"end":{"line":16,"column":135,"offset":849}}}],"position":{"start":{"line":16,"column":1,"offset":715},"end":{"line":16,"column":135,"offset":849}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A simple visualization of a buffer is when you are watching a YouTube video and the red line goes beyond your visualization point: you are downloading data faster than you're viewing it, and your browser buffers it.","position":{"start":{"line":18,"column":1,"offset":851},"end":{"line":18,"column":216,"offset":1066}}}],"position":{"start":{"line":18,"column":1,"offset":851},"end":{"line":18,"column":216,"offset":1066}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"How to create a buffer","position":{"start":{"line":20,"column":4,"offset":1071},"end":{"line":20,"column":26,"offset":1093}}}],"position":{"start":{"line":20,"column":1,"offset":1068},"end":{"line":20,"column":26,"offset":1093}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A buffer is created using the ","position":{"start":{"line":22,"column":1,"offset":1095},"end":{"line":22,"column":31,"offset":1125}}},{"type":"element","tagName":"a","properties":{"href":"https://nodejs.org/api/buffer.html#buffer_buffer_from_buffer_alloc_and_buffer_allocunsafe"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Buffer.from()"}],"position":{"start":{"line":22,"column":32,"offset":1126},"end":{"line":22,"column":47,"offset":1141}}}],"position":{"start":{"line":22,"column":31,"offset":1125},"end":{"line":22,"column":139,"offset":1233}}},{"type":"text","value":", ","position":{"start":{"line":22,"column":139,"offset":1233},"end":{"line":22,"column":141,"offset":1235}}},{"type":"element","tagName":"a","properties":{"href":"https://nodejs.org/api/buffer.html#buffer_class_method_buffer_alloc_size_fill_encoding"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Buffer.alloc()"}],"position":{"start":{"line":22,"column":142,"offset":1236},"end":{"line":22,"column":158,"offset":1252}}}],"position":{"start":{"line":22,"column":141,"offset":1235},"end":{"line":22,"column":247,"offset":1341}}},{"type":"text","value":", and ","position":{"start":{"line":22,"column":247,"offset":1341},"end":{"line":22,"column":253,"offset":1347}}},{"type":"element","tagName":"a","properties":{"href":"https://nodejs.org/api/buffer.html#buffer_class_method_buffer_allocunsafe_size"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Buffer.allocUnsafe()"}],"position":{"start":{"line":22,"column":254,"offset":1348},"end":{"line":22,"column":276,"offset":1370}}}],"position":{"start":{"line":22,"column":253,"offset":1347},"end":{"line":22,"column":357,"offset":1451}}},{"type":"text","value":" methods.","position":{"start":{"line":22,"column":357,"offset":1451},"end":{"line":22,"column":366,"offset":1460}}}],"position":{"start":{"line":22,"column":1,"offset":1095},"end":{"line":22,"column":366,"offset":1460}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"const buf = Buffer.from('Hey!');\n"}],"position":{"start":{"line":24,"column":1,"offset":1462},"end":{"line":26,"column":4,"offset":1504}}}],"position":{"start":{"line":24,"column":1,"offset":1462},"end":{"line":26,"column":4,"offset":1504}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://nodejs.org/api/buffer.html#buffer_class_method_buffer_from_array"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Buffer.from(array)"}],"position":{"start":{"line":28,"column":4,"offset":1509},"end":{"line":28,"column":24,"offset":1529}}}],"position":{"start":{"line":28,"column":3,"offset":1508},"end":{"line":28,"column":99,"offset":1604}}}],"position":{"start":{"line":28,"column":1,"offset":1506},"end":{"line":28,"column":99,"offset":1604}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://nodejs.org/api/buffer.html#buffer_class_method_buffer_from_arraybuffer_byteoffset_length"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Buffer.from(arrayBuffer[, byteOffset[, length]])"}],"position":{"start":{"line":29,"column":4,"offset":1608},"end":{"line":29,"column":54,"offset":1658}}}],"position":{"start":{"line":29,"column":3,"offset":1607},"end":{"line":29,"column":153,"offset":1757}}}],"position":{"start":{"line":29,"column":1,"offset":1605},"end":{"line":29,"column":153,"offset":1757}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://nodejs.org/api/buffer.html#buffer_class_method_buffer_from_buffer"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Buffer.from(buffer)"}],"position":{"start":{"line":30,"column":4,"offset":1761},"end":{"line":30,"column":25,"offset":1782}}}],"position":{"start":{"line":30,"column":3,"offset":1760},"end":{"line":30,"column":101,"offset":1858}}}],"position":{"start":{"line":30,"column":1,"offset":1758},"end":{"line":30,"column":101,"offset":1858}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://nodejs.org/api/buffer.html#buffer_class_method_buffer_from_string_encoding"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Buffer.from(string[, encoding])"}],"position":{"start":{"line":31,"column":4,"offset":1862},"end":{"line":31,"column":37,"offset":1895}}}],"position":{"start":{"line":31,"column":3,"offset":1861},"end":{"line":31,"column":122,"offset":1980}}}],"position":{"start":{"line":31,"column":1,"offset":1859},"end":{"line":31,"column":122,"offset":1980}}},{"type":"text","value":"\n"}],"position":{"start":{"line":28,"column":1,"offset":1506},"end":{"line":31,"column":122,"offset":1980}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can also just initialize the buffer passing the size. This creates a 1KB buffer:","position":{"start":{"line":33,"column":1,"offset":1982},"end":{"line":33,"column":85,"offset":2066}}}],"position":{"start":{"line":33,"column":1,"offset":1982},"end":{"line":33,"column":85,"offset":2066}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"const buf = Buffer.alloc(1024);\n//or\nconst buf = Buffer.allocUnsafe(1024);\n"}],"position":{"start":{"line":35,"column":1,"offset":2068},"end":{"line":39,"column":4,"offset":2152}}}],"position":{"start":{"line":35,"column":1,"offset":2068},"end":{"line":39,"column":4,"offset":2152}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"While both ","position":{"start":{"line":41,"column":1,"offset":2154},"end":{"line":41,"column":12,"offset":2165}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"alloc"}],"position":{"start":{"line":41,"column":12,"offset":2165},"end":{"line":41,"column":19,"offset":2172}}},{"type":"text","value":" and ","position":{"start":{"line":41,"column":19,"offset":2172},"end":{"line":41,"column":24,"offset":2177}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"allocUnsafe"}],"position":{"start":{"line":41,"column":24,"offset":2177},"end":{"line":41,"column":37,"offset":2190}}},{"type":"text","value":" allocate a ","position":{"start":{"line":41,"column":37,"offset":2190},"end":{"line":41,"column":49,"offset":2202}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Buffer"}],"position":{"start":{"line":41,"column":49,"offset":2202},"end":{"line":41,"column":57,"offset":2210}}},{"type":"text","value":" of the specified size in bytes, the ","position":{"start":{"line":41,"column":57,"offset":2210},"end":{"line":41,"column":94,"offset":2247}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Buffer"}],"position":{"start":{"line":41,"column":94,"offset":2247},"end":{"line":41,"column":102,"offset":2255}}},{"type":"text","value":" created by ","position":{"start":{"line":41,"column":102,"offset":2255},"end":{"line":41,"column":114,"offset":2267}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"alloc"}],"position":{"start":{"line":41,"column":114,"offset":2267},"end":{"line":41,"column":121,"offset":2274}}},{"type":"text","value":" will be ","position":{"start":{"line":41,"column":121,"offset":2274},"end":{"line":41,"column":130,"offset":2283}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"initialized","position":{"start":{"line":41,"column":131,"offset":2284},"end":{"line":41,"column":142,"offset":2295}}}],"position":{"start":{"line":41,"column":130,"offset":2283},"end":{"line":41,"column":143,"offset":2296}}},{"type":"text","value":" with zeroes and the one created by ","position":{"start":{"line":41,"column":143,"offset":2296},"end":{"line":41,"column":179,"offset":2332}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"allocUnsafe"}],"position":{"start":{"line":41,"column":179,"offset":2332},"end":{"line":41,"column":192,"offset":2345}}},{"type":"text","value":" will be ","position":{"start":{"line":41,"column":192,"offset":2345},"end":{"line":41,"column":201,"offset":2354}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"uninitialized","position":{"start":{"line":41,"column":202,"offset":2355},"end":{"line":41,"column":215,"offset":2368}}}],"position":{"start":{"line":41,"column":201,"offset":2354},"end":{"line":41,"column":216,"offset":2369}}},{"type":"text","value":". This means that while ","position":{"start":{"line":41,"column":216,"offset":2369},"end":{"line":41,"column":240,"offset":2393}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"allocUnsafe"}],"position":{"start":{"line":41,"column":240,"offset":2393},"end":{"line":41,"column":253,"offset":2406}}},{"type":"text","value":" would be quite fast in comparison to ","position":{"start":{"line":41,"column":253,"offset":2406},"end":{"line":41,"column":291,"offset":2444}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"alloc"}],"position":{"start":{"line":41,"column":291,"offset":2444},"end":{"line":41,"column":298,"offset":2451}}},{"type":"text","value":", the allocated segment of memory may contain old data which could potentially be sensitive.","position":{"start":{"line":41,"column":298,"offset":2451},"end":{"line":41,"column":390,"offset":2543}}}],"position":{"start":{"line":41,"column":1,"offset":2154},"end":{"line":41,"column":390,"offset":2543}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Older data, if present in the memory, can be accessed or leaked when the ","position":{"start":{"line":43,"column":1,"offset":2545},"end":{"line":43,"column":74,"offset":2618}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Buffer"}],"position":{"start":{"line":43,"column":74,"offset":2618},"end":{"line":43,"column":82,"offset":2626}}},{"type":"text","value":" memory is read. This is what really makes ","position":{"start":{"line":43,"column":82,"offset":2626},"end":{"line":43,"column":125,"offset":2669}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"allocUnsafe"}],"position":{"start":{"line":43,"column":125,"offset":2669},"end":{"line":43,"column":138,"offset":2682}}},{"type":"text","value":" unsafe and extra care must be taken while using it.","position":{"start":{"line":43,"column":138,"offset":2682},"end":{"line":43,"column":190,"offset":2734}}}],"position":{"start":{"line":43,"column":1,"offset":2545},"end":{"line":43,"column":190,"offset":2734}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Using a buffer","position":{"start":{"line":45,"column":4,"offset":2739},"end":{"line":45,"column":18,"offset":2753}}}],"position":{"start":{"line":45,"column":1,"offset":2736},"end":{"line":45,"column":18,"offset":2753}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Access the content of a buffer","position":{"start":{"line":47,"column":5,"offset":2759},"end":{"line":47,"column":35,"offset":2789}}}],"position":{"start":{"line":47,"column":1,"offset":2755},"end":{"line":47,"column":35,"offset":2789}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A buffer, being an array of bytes, can be accessed like an array:","position":{"start":{"line":49,"column":1,"offset":2791},"end":{"line":49,"column":66,"offset":2856}}}],"position":{"start":{"line":49,"column":1,"offset":2791},"end":{"line":49,"column":66,"offset":2856}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"const buf = Buffer.from('Hey!');\nconsole.log(buf[0]); //72\nconsole.log(buf[1]); //101\nconsole.log(buf[2]); //121\n"}],"position":{"start":{"line":51,"column":1,"offset":2858},"end":{"line":56,"column":4,"offset":2980}}}],"position":{"start":{"line":51,"column":1,"offset":2858},"end":{"line":56,"column":4,"offset":2980}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Those numbers are the Unicode Code that identifies the character in the buffer position (H => 72, e => 101, y => 121)","position":{"start":{"line":58,"column":1,"offset":2982},"end":{"line":58,"column":118,"offset":3099}}}],"position":{"start":{"line":58,"column":1,"offset":2982},"end":{"line":58,"column":118,"offset":3099}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can print the full content of the buffer using the ","position":{"start":{"line":60,"column":1,"offset":3101},"end":{"line":60,"column":56,"offset":3156}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"toString()"}],"position":{"start":{"line":60,"column":56,"offset":3156},"end":{"line":60,"column":68,"offset":3168}}},{"type":"text","value":" method:","position":{"start":{"line":60,"column":68,"offset":3168},"end":{"line":60,"column":76,"offset":3176}}}],"position":{"start":{"line":60,"column":1,"offset":3101},"end":{"line":60,"column":76,"offset":3176}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"console.log(buf.toString());\n"}],"position":{"start":{"line":62,"column":1,"offset":3178},"end":{"line":64,"column":4,"offset":3216}}}],"position":{"start":{"line":62,"column":1,"offset":3178},"end":{"line":64,"column":4,"offset":3216}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Notice that if you initialize a buffer with a number that sets its size, you'll get access to pre-initialized memory that will contain random data, not an empty buffer!","position":{"start":{"line":66,"column":3,"offset":3220},"end":{"line":66,"column":171,"offset":3388}}}],"position":{"start":{"line":66,"column":3,"offset":3220},"end":{"line":66,"column":171,"offset":3388}}},{"type":"text","value":"\n"}],"position":{"start":{"line":66,"column":1,"offset":3218},"end":{"line":66,"column":171,"offset":3388}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Get the length of a buffer","position":{"start":{"line":68,"column":5,"offset":3394},"end":{"line":68,"column":31,"offset":3420}}}],"position":{"start":{"line":68,"column":1,"offset":3390},"end":{"line":68,"column":31,"offset":3420}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Use the ","position":{"start":{"line":70,"column":1,"offset":3422},"end":{"line":70,"column":9,"offset":3430}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"length"}],"position":{"start":{"line":70,"column":9,"offset":3430},"end":{"line":70,"column":17,"offset":3438}}},{"type":"text","value":" property:","position":{"start":{"line":70,"column":17,"offset":3438},"end":{"line":70,"column":27,"offset":3448}}}],"position":{"start":{"line":70,"column":1,"offset":3422},"end":{"line":70,"column":27,"offset":3448}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"const buf = Buffer.from('Hey!');\nconsole.log(buf.length);\n"}],"position":{"start":{"line":72,"column":1,"offset":3450},"end":{"line":75,"column":4,"offset":3517}}}],"position":{"start":{"line":72,"column":1,"offset":3450},"end":{"line":75,"column":4,"offset":3517}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Iterate over the contents of a buffer","position":{"start":{"line":77,"column":5,"offset":3523},"end":{"line":77,"column":42,"offset":3560}}}],"position":{"start":{"line":77,"column":1,"offset":3519},"end":{"line":77,"column":42,"offset":3560}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"const buf = Buffer.from('Hey!');\nfor (const item of buf) {\n    console.log(item); //72 101 121 33\n}\n"}],"position":{"start":{"line":79,"column":1,"offset":3562},"end":{"line":84,"column":4,"offset":3671}}}],"position":{"start":{"line":79,"column":1,"offset":3562},"end":{"line":84,"column":4,"offset":3671}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Changing the content of a buffer","position":{"start":{"line":86,"column":5,"offset":3677},"end":{"line":86,"column":37,"offset":3709}}}],"position":{"start":{"line":86,"column":1,"offset":3673},"end":{"line":86,"column":37,"offset":3709}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can write to a buffer a whole string of data by using the ","position":{"start":{"line":88,"column":1,"offset":3711},"end":{"line":88,"column":63,"offset":3773}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"write()"}],"position":{"start":{"line":88,"column":63,"offset":3773},"end":{"line":88,"column":72,"offset":3782}}},{"type":"text","value":" method:","position":{"start":{"line":88,"column":72,"offset":3782},"end":{"line":88,"column":80,"offset":3790}}}],"position":{"start":{"line":88,"column":1,"offset":3711},"end":{"line":88,"column":80,"offset":3790}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"const buf = Buffer.alloc(4);\nbuf.write('Hey!');\n"}],"position":{"start":{"line":90,"column":1,"offset":3792},"end":{"line":93,"column":4,"offset":3849}}}],"position":{"start":{"line":90,"column":1,"offset":3792},"end":{"line":93,"column":4,"offset":3849}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Just like you can access a buffer with an array syntax, you can also set the contents of the buffer in the same way:","position":{"start":{"line":95,"column":1,"offset":3851},"end":{"line":95,"column":117,"offset":3967}}}],"position":{"start":{"line":95,"column":1,"offset":3851},"end":{"line":95,"column":117,"offset":3967}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"const buf = Buffer.from('Hey!');\nbuf[1] = 111; //o\nconsole.log(buf.toString()); //Hoy!\n"}],"position":{"start":{"line":97,"column":1,"offset":3969},"end":{"line":101,"column":4,"offset":4065}}}],"position":{"start":{"line":97,"column":1,"offset":3969},"end":{"line":101,"column":4,"offset":4065}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Copy a buffer","position":{"start":{"line":103,"column":5,"offset":4071},"end":{"line":103,"column":18,"offset":4084}}}],"position":{"start":{"line":103,"column":1,"offset":4067},"end":{"line":103,"column":18,"offset":4084}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Copying a buffer is possible using the ","position":{"start":{"line":105,"column":1,"offset":4086},"end":{"line":105,"column":40,"offset":4125}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"copy()"}],"position":{"start":{"line":105,"column":40,"offset":4125},"end":{"line":105,"column":48,"offset":4133}}},{"type":"text","value":" method:","position":{"start":{"line":105,"column":48,"offset":4133},"end":{"line":105,"column":56,"offset":4141}}}],"position":{"start":{"line":105,"column":1,"offset":4086},"end":{"line":105,"column":56,"offset":4141}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"const buf = Buffer.from('Hey!');\nlet bufcopy = Buffer.alloc(4); //allocate 4 bytes\nbuf.copy(bufcopy);\n"}],"position":{"start":{"line":107,"column":1,"offset":4143},"end":{"line":111,"column":4,"offset":4254}}}],"position":{"start":{"line":107,"column":1,"offset":4143},"end":{"line":111,"column":4,"offset":4254}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"By default you copy the whole buffer. 3 more parameters let you define the starting position, the ending position, and the new buffer length:","position":{"start":{"line":113,"column":1,"offset":4256},"end":{"line":113,"column":142,"offset":4397}}}],"position":{"start":{"line":113,"column":1,"offset":4256},"end":{"line":113,"column":142,"offset":4397}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"const buf = Buffer.from('Hey!');\nlet bufcopy = Buffer.alloc(2); //allocate 2 bytes\nbuf.copy(bufcopy, 0, 0, 2);\nbufcopy.toString(); //'He'\n"}],"position":{"start":{"line":115,"column":1,"offset":4399},"end":{"line":120,"column":4,"offset":4546}}}],"position":{"start":{"line":115,"column":1,"offset":4399},"end":{"line":120,"column":4,"offset":4546}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Slice a buffer","position":{"start":{"line":122,"column":5,"offset":4552},"end":{"line":122,"column":19,"offset":4566}}}],"position":{"start":{"line":122,"column":1,"offset":4548},"end":{"line":122,"column":19,"offset":4566}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you want to create a partial visualization of a buffer, you can create a slice. A slice is not a copy: the original buffer is still the source of truth. If that changes, your slice changes.","position":{"start":{"line":124,"column":1,"offset":4568},"end":{"line":124,"column":193,"offset":4760}}}],"position":{"start":{"line":124,"column":1,"offset":4568},"end":{"line":124,"column":193,"offset":4760}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Use the ","position":{"start":{"line":126,"column":1,"offset":4762},"end":{"line":126,"column":9,"offset":4770}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"slice()"}],"position":{"start":{"line":126,"column":9,"offset":4770},"end":{"line":126,"column":18,"offset":4779}}},{"type":"text","value":" method to create it. The first parameter is the starting position, and you can specify an optional second parameter with the end position:","position":{"start":{"line":126,"column":18,"offset":4779},"end":{"line":126,"column":157,"offset":4918}}}],"position":{"start":{"line":126,"column":1,"offset":4762},"end":{"line":126,"column":157,"offset":4918}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"const buf = Buffer.from('Hey!');\nbuf.slice(0).toString(); //Hey!\nconst slice = buf.slice(0, 2);\nconsole.log(slice.toString()); //He\nbuf[1] = 111; //o\nconsole.log(slice.toString()); //Ho\n"}],"position":{"start":{"line":128,"column":1,"offset":4920},"end":{"line":135,"column":4,"offset":5115}}}],"position":{"start":{"line":128,"column":1,"offset":4920},"end":{"line":135,"column":4,"offset":5115}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":136,"column":1,"offset":5116}}}}