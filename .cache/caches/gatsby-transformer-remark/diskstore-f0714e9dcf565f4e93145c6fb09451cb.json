{"expireTime":9007200904342769000,"key":"transformer-remark-markdown-ast-85f2bf481d5a21fafbd636c6f1fb96a0--","val":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"> ## Excerpt","position":{"start":{"line":2,"column":4,"offset":4},"end":{"line":2,"column":16,"offset":16},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":16,"offset":16},"indent":[]}},{"type":"blockquote","children":[],"position":{"start":{"line":4,"column":1,"offset":18},"end":{"line":4,"column":2,"offset":19},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":6,"column":1,"offset":21},"end":{"line":6,"column":4,"offset":24},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Lists and Keys - React","position":{"start":{"line":8,"column":3,"offset":28},"end":{"line":8,"column":25,"offset":50},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":26},"end":{"line":8,"column":25,"offset":50},"indent":[]}},{"type":"blockquote","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"Excerpt","position":{"start":{"line":10,"column":6,"offset":57},"end":{"line":10,"column":13,"offset":64},"indent":[]}}],"position":{"start":{"line":10,"column":3,"offset":54},"end":{"line":10,"column":13,"offset":64},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A JavaScript library for building user interfaces","position":{"start":{"line":12,"column":3,"offset":69},"end":{"line":12,"column":52,"offset":118},"indent":[]}}],"position":{"start":{"line":12,"column":3,"offset":69},"end":{"line":12,"column":52,"offset":118},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":52},"end":{"line":12,"column":52,"offset":118},"indent":[1,1]}},{"type":"thematicBreak","position":{"start":{"line":14,"column":1,"offset":120},"end":{"line":14,"column":4,"offset":123},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"First, let's review how you transform lists in JavaScript.","position":{"start":{"line":16,"column":1,"offset":125},"end":{"line":16,"column":59,"offset":183},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":125},"end":{"line":16,"column":59,"offset":183},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Given the code below, we use the ","position":{"start":{"line":18,"column":1,"offset":185},"end":{"line":18,"column":34,"offset":218},"indent":[]}},{"type":"link","title":null,"url":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map","children":[{"type":"inlineCode","value":"map()","position":{"start":{"line":18,"column":35,"offset":219},"end":{"line":18,"column":42,"offset":226},"indent":[]}}],"position":{"start":{"line":18,"column":34,"offset":218},"end":{"line":18,"column":135,"offset":319},"indent":[]}},{"type":"text","value":" function to take an array of ","position":{"start":{"line":18,"column":135,"offset":319},"end":{"line":18,"column":165,"offset":349},"indent":[]}},{"type":"inlineCode","value":"numbers","position":{"start":{"line":18,"column":165,"offset":349},"end":{"line":18,"column":174,"offset":358},"indent":[]}},{"type":"text","value":" and double their values. We assign the new array returned by ","position":{"start":{"line":18,"column":174,"offset":358},"end":{"line":18,"column":236,"offset":420},"indent":[]}},{"type":"inlineCode","value":"map()","position":{"start":{"line":18,"column":236,"offset":420},"end":{"line":18,"column":243,"offset":427},"indent":[]}},{"type":"text","value":" to the variable ","position":{"start":{"line":18,"column":243,"offset":427},"end":{"line":18,"column":260,"offset":444},"indent":[]}},{"type":"inlineCode","value":"doubled","position":{"start":{"line":18,"column":260,"offset":444},"end":{"line":18,"column":269,"offset":453},"indent":[]}},{"type":"text","value":" and log it:","position":{"start":{"line":18,"column":269,"offset":453},"end":{"line":18,"column":281,"offset":465},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":185},"end":{"line":18,"column":281,"offset":465},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"const numbers = [1, 2, 3, 4, 5];\nconst doubled = numbers.map((number) => number * 2);console.log(doubled);","position":{"start":{"line":20,"column":1,"offset":467},"end":{"line":23,"column":4,"offset":581},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This code logs ","position":{"start":{"line":25,"column":1,"offset":583},"end":{"line":25,"column":16,"offset":598},"indent":[]}},{"type":"inlineCode","value":"[2, 4, 6, 8, 10]","position":{"start":{"line":25,"column":16,"offset":598},"end":{"line":25,"column":34,"offset":616},"indent":[]}},{"type":"text","value":" to the console.","position":{"start":{"line":25,"column":34,"offset":616},"end":{"line":25,"column":50,"offset":632},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":583},"end":{"line":25,"column":50,"offset":632},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In React, transforming arrays into lists of ","position":{"start":{"line":27,"column":1,"offset":634},"end":{"line":27,"column":45,"offset":678},"indent":[]}},{"type":"link","title":null,"url":"https://reactjs.org/docs/rendering-elements.html","children":[{"type":"text","value":"elements","position":{"start":{"line":27,"column":46,"offset":679},"end":{"line":27,"column":54,"offset":687},"indent":[]}}],"position":{"start":{"line":27,"column":45,"offset":678},"end":{"line":27,"column":105,"offset":738},"indent":[]}},{"type":"text","value":" is nearly identical.","position":{"start":{"line":27,"column":105,"offset":738},"end":{"line":27,"column":126,"offset":759},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":634},"end":{"line":27,"column":126,"offset":759},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","title":null,"url":"https://reactjs.org/docs/lists-and-keys.html#rendering-multiple-components","children":[],"position":{"start":{"line":29,"column":5,"offset":765},"end":{"line":29,"column":83,"offset":843},"indent":[]}},{"type":"text","value":"Rendering Multiple Components","position":{"start":{"line":29,"column":83,"offset":843},"end":{"line":29,"column":112,"offset":872},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":761},"end":{"line":29,"column":112,"offset":872},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can build collections of elements and ","position":{"start":{"line":31,"column":1,"offset":874},"end":{"line":31,"column":43,"offset":916},"indent":[]}},{"type":"link","title":null,"url":"https://reactjs.org/docs/introducing-jsx.html#embedding-expressions-in-jsx","children":[{"type":"text","value":"include them in JSX","position":{"start":{"line":31,"column":44,"offset":917},"end":{"line":31,"column":63,"offset":936},"indent":[]}}],"position":{"start":{"line":31,"column":43,"offset":916},"end":{"line":31,"column":140,"offset":1013},"indent":[]}},{"type":"text","value":" using curly braces ","position":{"start":{"line":31,"column":140,"offset":1013},"end":{"line":31,"column":160,"offset":1033},"indent":[]}},{"type":"inlineCode","value":"{}","position":{"start":{"line":31,"column":160,"offset":1033},"end":{"line":31,"column":164,"offset":1037},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":31,"column":164,"offset":1037},"end":{"line":31,"column":165,"offset":1038},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":874},"end":{"line":31,"column":165,"offset":1038},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Below, we loop through the ","position":{"start":{"line":33,"column":1,"offset":1040},"end":{"line":33,"column":28,"offset":1067},"indent":[]}},{"type":"inlineCode","value":"numbers","position":{"start":{"line":33,"column":28,"offset":1067},"end":{"line":33,"column":37,"offset":1076},"indent":[]}},{"type":"text","value":" array using the JavaScript ","position":{"start":{"line":33,"column":37,"offset":1076},"end":{"line":33,"column":65,"offset":1104},"indent":[]}},{"type":"link","title":null,"url":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map","children":[{"type":"inlineCode","value":"map()","position":{"start":{"line":33,"column":66,"offset":1105},"end":{"line":33,"column":73,"offset":1112},"indent":[]}}],"position":{"start":{"line":33,"column":65,"offset":1104},"end":{"line":33,"column":166,"offset":1205},"indent":[]}},{"type":"text","value":" function. We return a ","position":{"start":{"line":33,"column":166,"offset":1205},"end":{"line":33,"column":189,"offset":1228},"indent":[]}},{"type":"inlineCode","value":"<li>","position":{"start":{"line":33,"column":189,"offset":1228},"end":{"line":33,"column":195,"offset":1234},"indent":[]}},{"type":"text","value":" element for each item. Finally, we assign the resulting array of elements to ","position":{"start":{"line":33,"column":195,"offset":1234},"end":{"line":33,"column":273,"offset":1312},"indent":[]}},{"type":"inlineCode","value":"listItems","position":{"start":{"line":33,"column":273,"offset":1312},"end":{"line":33,"column":284,"offset":1323},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":33,"column":284,"offset":1323},"end":{"line":33,"column":285,"offset":1324},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":1040},"end":{"line":33,"column":285,"offset":1324},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"const numbers = [1, 2, 3, 4, 5];\nconst listItems = numbers.map((number) =>  <li>{number}</li>);","position":{"start":{"line":35,"column":1,"offset":1326},"end":{"line":38,"column":4,"offset":1429},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"We include the entire ","position":{"start":{"line":40,"column":1,"offset":1431},"end":{"line":40,"column":23,"offset":1453},"indent":[]}},{"type":"inlineCode","value":"listItems","position":{"start":{"line":40,"column":23,"offset":1453},"end":{"line":40,"column":34,"offset":1464},"indent":[]}},{"type":"text","value":" array inside a ","position":{"start":{"line":40,"column":34,"offset":1464},"end":{"line":40,"column":50,"offset":1480},"indent":[]}},{"type":"inlineCode","value":"<ul>","position":{"start":{"line":40,"column":50,"offset":1480},"end":{"line":40,"column":56,"offset":1486},"indent":[]}},{"type":"text","value":" element, and ","position":{"start":{"line":40,"column":56,"offset":1486},"end":{"line":40,"column":70,"offset":1500},"indent":[]}},{"type":"link","title":null,"url":"https://reactjs.org/docs/rendering-elements.html#rendering-an-element-into-the-dom","children":[{"type":"text","value":"render it to the DOM","position":{"start":{"line":40,"column":71,"offset":1501},"end":{"line":40,"column":91,"offset":1521},"indent":[]}}],"position":{"start":{"line":40,"column":70,"offset":1500},"end":{"line":40,"column":176,"offset":1606},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":40,"column":176,"offset":1606},"end":{"line":40,"column":177,"offset":1607},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":1431},"end":{"line":40,"column":177,"offset":1607},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"ReactDOM.render(\n  <ul>{listItems}</ul>,  document.getElementById('root')\n);","position":{"start":{"line":42,"column":1,"offset":1609},"end":{"line":46,"column":4,"offset":1693},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://codepen.io/gaearon/pen/GjPyQr?editors=0011","children":[{"type":"strong","children":[{"type":"text","value":"Try it on CodePen","position":{"start":{"line":48,"column":4,"offset":1698},"end":{"line":48,"column":21,"offset":1715},"indent":[]}}],"position":{"start":{"line":48,"column":2,"offset":1696},"end":{"line":48,"column":23,"offset":1717},"indent":[]}}],"position":{"start":{"line":48,"column":1,"offset":1695},"end":{"line":48,"column":76,"offset":1770},"indent":[]}}],"position":{"start":{"line":48,"column":1,"offset":1695},"end":{"line":48,"column":76,"offset":1770},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This code displays a bullet list of numbers between 1 and 5.","position":{"start":{"line":50,"column":1,"offset":1772},"end":{"line":50,"column":61,"offset":1832},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":1772},"end":{"line":50,"column":61,"offset":1832},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","title":null,"url":"https://reactjs.org/docs/lists-and-keys.html#basic-list-component","children":[],"position":{"start":{"line":52,"column":5,"offset":1838},"end":{"line":52,"column":74,"offset":1907},"indent":[]}},{"type":"text","value":"Basic List Component","position":{"start":{"line":52,"column":74,"offset":1907},"end":{"line":52,"column":94,"offset":1927},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":1834},"end":{"line":52,"column":94,"offset":1927},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Usually you would render lists inside a ","position":{"start":{"line":54,"column":1,"offset":1929},"end":{"line":54,"column":41,"offset":1969},"indent":[]}},{"type":"link","title":null,"url":"https://reactjs.org/docs/components-and-props.html","children":[{"type":"text","value":"component","position":{"start":{"line":54,"column":42,"offset":1970},"end":{"line":54,"column":51,"offset":1979},"indent":[]}}],"position":{"start":{"line":54,"column":41,"offset":1969},"end":{"line":54,"column":104,"offset":2032},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":54,"column":104,"offset":2032},"end":{"line":54,"column":105,"offset":2033},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":1929},"end":{"line":54,"column":105,"offset":2033},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We can refactor the previous example into a component that accepts an array of ","position":{"start":{"line":56,"column":1,"offset":2035},"end":{"line":56,"column":80,"offset":2114},"indent":[]}},{"type":"inlineCode","value":"numbers","position":{"start":{"line":56,"column":80,"offset":2114},"end":{"line":56,"column":89,"offset":2123},"indent":[]}},{"type":"text","value":" and outputs a list of elements.","position":{"start":{"line":56,"column":89,"offset":2123},"end":{"line":56,"column":121,"offset":2155},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":2035},"end":{"line":56,"column":121,"offset":2155},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"function NumberList(props) {\n  const numbers = props.numbers;\n  const listItems = numbers.map((number) =>    <li>{number}</li>  );  return (\n    <ul>{listItems}</ul>  );\n}\n\nconst numbers = [1, 2, 3, 4, 5];\nReactDOM.render(\n  <NumberList numbers={numbers} />,  document.getElementById('root')\n);","position":{"start":{"line":58,"column":1,"offset":2157},"end":{"line":69,"column":4,"offset":2459},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"When you run this code, you'll be given a warning that a key should be provided for list items. A \"key\" is a special string attribute you need to include when creating lists of elements. We'll discuss why it's important in the next section.","position":{"start":{"line":71,"column":1,"offset":2461},"end":{"line":71,"column":241,"offset":2701},"indent":[]}}],"position":{"start":{"line":71,"column":1,"offset":2461},"end":{"line":71,"column":241,"offset":2701},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Let's assign a ","position":{"start":{"line":73,"column":1,"offset":2703},"end":{"line":73,"column":16,"offset":2718},"indent":[]}},{"type":"inlineCode","value":"key","position":{"start":{"line":73,"column":16,"offset":2718},"end":{"line":73,"column":21,"offset":2723},"indent":[]}},{"type":"text","value":" to our list items inside ","position":{"start":{"line":73,"column":21,"offset":2723},"end":{"line":73,"column":47,"offset":2749},"indent":[]}},{"type":"inlineCode","value":"numbers.map()","position":{"start":{"line":73,"column":47,"offset":2749},"end":{"line":73,"column":62,"offset":2764},"indent":[]}},{"type":"text","value":" and fix the missing key issue.","position":{"start":{"line":73,"column":62,"offset":2764},"end":{"line":73,"column":93,"offset":2795},"indent":[]}}],"position":{"start":{"line":73,"column":1,"offset":2703},"end":{"line":73,"column":93,"offset":2795},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"function NumberList(props) {\n  const numbers = props.numbers;\n  const listItems = numbers.map((number) =>\n    <li key={number.toString()}>      {number}\n    </li>\n  );\n  return (\n    <ul>{listItems}</ul>\n  );\n}\n\nconst numbers = [1, 2, 3, 4, 5];\nReactDOM.render(\n  <NumberList numbers={numbers} />,\n  document.getElementById('root')\n);","position":{"start":{"line":75,"column":1,"offset":2797},"end":{"line":92,"column":4,"offset":3139},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://codepen.io/gaearon/pen/jrXYRR?editors=0011","children":[{"type":"strong","children":[{"type":"text","value":"Try it on CodePen","position":{"start":{"line":94,"column":4,"offset":3144},"end":{"line":94,"column":21,"offset":3161},"indent":[]}}],"position":{"start":{"line":94,"column":2,"offset":3142},"end":{"line":94,"column":23,"offset":3163},"indent":[]}}],"position":{"start":{"line":94,"column":1,"offset":3141},"end":{"line":94,"column":76,"offset":3216},"indent":[]}}],"position":{"start":{"line":94,"column":1,"offset":3141},"end":{"line":94,"column":76,"offset":3216},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","title":null,"url":"https://reactjs.org/docs/lists-and-keys.html#keys","children":[],"position":{"start":{"line":96,"column":4,"offset":3221},"end":{"line":96,"column":57,"offset":3274},"indent":[]}},{"type":"text","value":"Keys","position":{"start":{"line":96,"column":57,"offset":3274},"end":{"line":96,"column":61,"offset":3278},"indent":[]}}],"position":{"start":{"line":96,"column":1,"offset":3218},"end":{"line":96,"column":61,"offset":3278},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Keys help React identify which items have changed, are added, or are removed. Keys should be given to the elements inside the array to give the elements a stable identity:","position":{"start":{"line":98,"column":1,"offset":3280},"end":{"line":98,"column":172,"offset":3451},"indent":[]}}],"position":{"start":{"line":98,"column":1,"offset":3280},"end":{"line":98,"column":172,"offset":3451},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"const numbers = [1, 2, 3, 4, 5];\nconst listItems = numbers.map((number) =>\n  <li key={number.toString()}>    {number}\n  </li>\n);","position":{"start":{"line":100,"column":1,"offset":3453},"end":{"line":106,"column":4,"offset":3589},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The best way to pick a key is to use a string that uniquely identifies a list item among its siblings. Most often you would use IDs from your data as keys:","position":{"start":{"line":108,"column":1,"offset":3591},"end":{"line":108,"column":156,"offset":3746},"indent":[]}}],"position":{"start":{"line":108,"column":1,"offset":3591},"end":{"line":108,"column":156,"offset":3746},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"const todoItems = todos.map((todo) =>\n  <li key={todo.id}>    {todo.text}\n  </li>\n);","position":{"start":{"line":110,"column":1,"offset":3748},"end":{"line":115,"column":4,"offset":3840},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"When you don't have stable IDs for rendered items, you may use the item index as a key as a last resort:","position":{"start":{"line":117,"column":1,"offset":3842},"end":{"line":117,"column":105,"offset":3946},"indent":[]}}],"position":{"start":{"line":117,"column":1,"offset":3842},"end":{"line":117,"column":105,"offset":3946},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"const todoItems = todos.map((todo, index) =>\n    <li key={index}>    {todo.text}\n  </li>\n);","position":{"start":{"line":119,"column":1,"offset":3948},"end":{"line":124,"column":4,"offset":4047},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"We don't recommend using indexes for keys if the order of items may change. This can negatively impact performance and may cause issues with component state. Check out Robin Pokorny's article for an ","position":{"start":{"line":126,"column":1,"offset":4049},"end":{"line":126,"column":200,"offset":4248},"indent":[]}},{"type":"link","title":null,"url":"https://medium.com/@robinpokorny/index-as-a-key-is-an-anti-pattern-e0349aece318","children":[{"type":"text","value":"in-depth explanation on the negative impacts of using an index as a key","position":{"start":{"line":126,"column":201,"offset":4249},"end":{"line":126,"column":272,"offset":4320},"indent":[]}}],"position":{"start":{"line":126,"column":200,"offset":4248},"end":{"line":126,"column":354,"offset":4402},"indent":[]}},{"type":"text","value":". If you choose not to assign an explicit key to list items then React will default to using indexes as keys.","position":{"start":{"line":126,"column":354,"offset":4402},"end":{"line":126,"column":463,"offset":4511},"indent":[]}}],"position":{"start":{"line":126,"column":1,"offset":4049},"end":{"line":126,"column":463,"offset":4511},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Here is an ","position":{"start":{"line":128,"column":1,"offset":4513},"end":{"line":128,"column":12,"offset":4524},"indent":[]}},{"type":"link","title":null,"url":"https://reactjs.org/docs/reconciliation.html#recursing-on-children","children":[{"type":"text","value":"in-depth explanation about why keys are necessary","position":{"start":{"line":128,"column":13,"offset":4525},"end":{"line":128,"column":62,"offset":4574},"indent":[]}}],"position":{"start":{"line":128,"column":12,"offset":4524},"end":{"line":128,"column":131,"offset":4643},"indent":[]}},{"type":"text","value":" if you're interested in learning more.","position":{"start":{"line":128,"column":131,"offset":4643},"end":{"line":128,"column":170,"offset":4682},"indent":[]}}],"position":{"start":{"line":128,"column":1,"offset":4513},"end":{"line":128,"column":170,"offset":4682},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Keys only make sense in the context of the surrounding array.","position":{"start":{"line":130,"column":1,"offset":4684},"end":{"line":130,"column":62,"offset":4745},"indent":[]}}],"position":{"start":{"line":130,"column":1,"offset":4684},"end":{"line":130,"column":62,"offset":4745},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For example, if you ","position":{"start":{"line":132,"column":1,"offset":4747},"end":{"line":132,"column":21,"offset":4767},"indent":[]}},{"type":"link","title":null,"url":"https://reactjs.org/docs/components-and-props.html#extracting-components","children":[{"type":"text","value":"extract","position":{"start":{"line":132,"column":22,"offset":4768},"end":{"line":132,"column":29,"offset":4775},"indent":[]}}],"position":{"start":{"line":132,"column":21,"offset":4767},"end":{"line":132,"column":104,"offset":4850},"indent":[]}},{"type":"text","value":" a ","position":{"start":{"line":132,"column":104,"offset":4850},"end":{"line":132,"column":107,"offset":4853},"indent":[]}},{"type":"inlineCode","value":"ListItem","position":{"start":{"line":132,"column":107,"offset":4853},"end":{"line":132,"column":117,"offset":4863},"indent":[]}},{"type":"text","value":" component, you should keep the key on the ","position":{"start":{"line":132,"column":117,"offset":4863},"end":{"line":132,"column":160,"offset":4906},"indent":[]}},{"type":"inlineCode","value":"<ListItem />","position":{"start":{"line":132,"column":160,"offset":4906},"end":{"line":132,"column":174,"offset":4920},"indent":[]}},{"type":"text","value":" elements in the array rather than on the ","position":{"start":{"line":132,"column":174,"offset":4920},"end":{"line":132,"column":216,"offset":4962},"indent":[]}},{"type":"inlineCode","value":"<li>","position":{"start":{"line":132,"column":216,"offset":4962},"end":{"line":132,"column":222,"offset":4968},"indent":[]}},{"type":"text","value":" element in the ","position":{"start":{"line":132,"column":222,"offset":4968},"end":{"line":132,"column":238,"offset":4984},"indent":[]}},{"type":"inlineCode","value":"ListItem","position":{"start":{"line":132,"column":238,"offset":4984},"end":{"line":132,"column":248,"offset":4994},"indent":[]}},{"type":"text","value":" itself.","position":{"start":{"line":132,"column":248,"offset":4994},"end":{"line":132,"column":256,"offset":5002},"indent":[]}}],"position":{"start":{"line":132,"column":1,"offset":4747},"end":{"line":132,"column":256,"offset":5002},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example: Incorrect Key Usage","position":{"start":{"line":134,"column":3,"offset":5006},"end":{"line":134,"column":31,"offset":5034},"indent":[]}}],"position":{"start":{"line":134,"column":1,"offset":5004},"end":{"line":134,"column":33,"offset":5036},"indent":[]}}],"position":{"start":{"line":134,"column":1,"offset":5004},"end":{"line":134,"column":33,"offset":5036},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"function ListItem(props) {\n  const value = props.value;\n  return (\n        <li key={value.toString()}>      {value}\n    </li>\n  );\n}\n\nfunction NumberList(props) {\n  const numbers = props.numbers;\n  const listItems = numbers.map((number) =>\n        <ListItem value={number} />  );\n  return (\n    <ul>\n      {listItems}\n    </ul>\n  );\n}\n\nconst numbers = [1, 2, 3, 4, 5];\nReactDOM.render(\n  <NumberList numbers={numbers} />,\n  document.getElementById('root')\n);","position":{"start":{"line":136,"column":1,"offset":5038},"end":{"line":161,"column":4,"offset":5504},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Example: Correct Key Usage","position":{"start":{"line":163,"column":3,"offset":5508},"end":{"line":163,"column":29,"offset":5534},"indent":[]}}],"position":{"start":{"line":163,"column":1,"offset":5506},"end":{"line":163,"column":31,"offset":5536},"indent":[]}}],"position":{"start":{"line":163,"column":1,"offset":5506},"end":{"line":163,"column":31,"offset":5536},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"function ListItem(props) {\n    return <li>{props.value}</li>;}\n\nfunction NumberList(props) {\n  const numbers = props.numbers;\n  const listItems = numbers.map((number) =>\n        <ListItem key={number.toString()} value={number} />  );\n  return (\n    <ul>\n      {listItems}\n    </ul>\n  );\n}\n\nconst numbers = [1, 2, 3, 4, 5];\nReactDOM.render(\n  <NumberList numbers={numbers} />,\n  document.getElementById('root')\n);","position":{"start":{"line":165,"column":1,"offset":5538},"end":{"line":185,"column":4,"offset":5958},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://codepen.io/gaearon/pen/ZXeOGM?editors=0010","children":[{"type":"strong","children":[{"type":"text","value":"Try it on CodePen","position":{"start":{"line":187,"column":4,"offset":5963},"end":{"line":187,"column":21,"offset":5980},"indent":[]}}],"position":{"start":{"line":187,"column":2,"offset":5961},"end":{"line":187,"column":23,"offset":5982},"indent":[]}}],"position":{"start":{"line":187,"column":1,"offset":5960},"end":{"line":187,"column":76,"offset":6035},"indent":[]}}],"position":{"start":{"line":187,"column":1,"offset":5960},"end":{"line":187,"column":76,"offset":6035},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A good rule of thumb is that elements inside the ","position":{"start":{"line":189,"column":1,"offset":6037},"end":{"line":189,"column":50,"offset":6086},"indent":[]}},{"type":"inlineCode","value":"map()","position":{"start":{"line":189,"column":50,"offset":6086},"end":{"line":189,"column":57,"offset":6093},"indent":[]}},{"type":"text","value":" call need keys.","position":{"start":{"line":189,"column":57,"offset":6093},"end":{"line":189,"column":73,"offset":6109},"indent":[]}}],"position":{"start":{"line":189,"column":1,"offset":6037},"end":{"line":189,"column":73,"offset":6109},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","title":null,"url":"https://reactjs.org/docs/lists-and-keys.html#keys-must-only-be-unique-among-siblings","children":[],"position":{"start":{"line":191,"column":5,"offset":6115},"end":{"line":191,"column":93,"offset":6203},"indent":[]}},{"type":"text","value":"Keys Must Only Be Unique Among Siblings","position":{"start":{"line":191,"column":93,"offset":6203},"end":{"line":191,"column":132,"offset":6242},"indent":[]}}],"position":{"start":{"line":191,"column":1,"offset":6111},"end":{"line":191,"column":132,"offset":6242},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Keys used within arrays should be unique among their siblings. However, they don't need to be globally unique. We can use the same keys when we produce two different arrays:","position":{"start":{"line":193,"column":1,"offset":6244},"end":{"line":193,"column":174,"offset":6417},"indent":[]}}],"position":{"start":{"line":193,"column":1,"offset":6244},"end":{"line":193,"column":174,"offset":6417},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"function Blog(props) {\n  const sidebar = (    <ul>\n      {props.posts.map((post) =>\n        <li key={post.id}>          {post.title}\n        </li>\n      )}\n    </ul>\n  );\n  const content = props.posts.map((post) =>    <div key={post.id}>      <h3>{post.title}</h3>\n      <p>{post.content}</p>\n    </div>\n  );\n  return (\n    <div>\n      {sidebar}      <hr />\n      {content}    </div>\n  );\n}\n\nconst posts = [\n  {id: 1, title: 'Hello World', content: 'Welcome to learning React!'},\n  {id: 2, title: 'Installation', content: 'You can install React from npm.'}\n];\nReactDOM.render(\n  <Blog posts={posts} />,\n  document.getElementById('root')\n);","position":{"start":{"line":195,"column":1,"offset":6419},"end":{"line":223,"column":4,"offset":7066},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://codepen.io/gaearon/pen/NRZYGN?editors=0010","children":[{"type":"strong","children":[{"type":"text","value":"Try it on CodePen","position":{"start":{"line":225,"column":4,"offset":7071},"end":{"line":225,"column":21,"offset":7088},"indent":[]}}],"position":{"start":{"line":225,"column":2,"offset":7069},"end":{"line":225,"column":23,"offset":7090},"indent":[]}}],"position":{"start":{"line":225,"column":1,"offset":7068},"end":{"line":225,"column":76,"offset":7143},"indent":[]}}],"position":{"start":{"line":225,"column":1,"offset":7068},"end":{"line":225,"column":76,"offset":7143},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Keys serve as a hint to React but they don't get passed to your components. If you need the same value in your component, pass it explicitly as a prop with a different name:","position":{"start":{"line":227,"column":1,"offset":7145},"end":{"line":227,"column":174,"offset":7318},"indent":[]}}],"position":{"start":{"line":227,"column":1,"offset":7145},"end":{"line":227,"column":174,"offset":7318},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"const content = posts.map((post) =>\n  <Post\n    key={post.id}    id={post.id}    title={post.title} />\n);","position":{"start":{"line":229,"column":1,"offset":7320},"end":{"line":234,"column":4,"offset":7433},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"With the example above, the ","position":{"start":{"line":236,"column":1,"offset":7435},"end":{"line":236,"column":29,"offset":7463},"indent":[]}},{"type":"inlineCode","value":"Post","position":{"start":{"line":236,"column":29,"offset":7463},"end":{"line":236,"column":35,"offset":7469},"indent":[]}},{"type":"text","value":" component can read ","position":{"start":{"line":236,"column":35,"offset":7469},"end":{"line":236,"column":55,"offset":7489},"indent":[]}},{"type":"inlineCode","value":"props.id","position":{"start":{"line":236,"column":55,"offset":7489},"end":{"line":236,"column":65,"offset":7499},"indent":[]}},{"type":"text","value":", but not ","position":{"start":{"line":236,"column":65,"offset":7499},"end":{"line":236,"column":75,"offset":7509},"indent":[]}},{"type":"inlineCode","value":"props.key","position":{"start":{"line":236,"column":75,"offset":7509},"end":{"line":236,"column":86,"offset":7520},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":236,"column":86,"offset":7520},"end":{"line":236,"column":87,"offset":7521},"indent":[]}}],"position":{"start":{"line":236,"column":1,"offset":7435},"end":{"line":236,"column":87,"offset":7521},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","title":null,"url":"https://reactjs.org/docs/lists-and-keys.html#embedding-map-in-jsx","children":[],"position":{"start":{"line":238,"column":5,"offset":7527},"end":{"line":238,"column":74,"offset":7596},"indent":[]}},{"type":"text","value":"Embedding map() in JSX","position":{"start":{"line":238,"column":74,"offset":7596},"end":{"line":238,"column":96,"offset":7618},"indent":[]}}],"position":{"start":{"line":238,"column":1,"offset":7523},"end":{"line":238,"column":96,"offset":7618},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In the examples above we declared a separate ","position":{"start":{"line":240,"column":1,"offset":7620},"end":{"line":240,"column":46,"offset":7665},"indent":[]}},{"type":"inlineCode","value":"listItems","position":{"start":{"line":240,"column":46,"offset":7665},"end":{"line":240,"column":57,"offset":7676},"indent":[]}},{"type":"text","value":" variable and included it in JSX:","position":{"start":{"line":240,"column":57,"offset":7676},"end":{"line":240,"column":90,"offset":7709},"indent":[]}}],"position":{"start":{"line":240,"column":1,"offset":7620},"end":{"line":240,"column":90,"offset":7709},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"function NumberList(props) {\n  const numbers = props.numbers;\n  const listItems = numbers.map((number) =>    <ListItem key={number.toString()}              value={number} />  );  return (\n    <ul>\n      {listItems}\n    </ul>\n  );\n}","position":{"start":{"line":242,"column":1,"offset":7711},"end":{"line":251,"column":4,"offset":7950},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"JSX allows ","position":{"start":{"line":253,"column":1,"offset":7952},"end":{"line":253,"column":12,"offset":7963},"indent":[]}},{"type":"link","title":null,"url":"https://reactjs.org/docs/introducing-jsx.html#embedding-expressions-in-jsx","children":[{"type":"text","value":"embedding any expression","position":{"start":{"line":253,"column":13,"offset":7964},"end":{"line":253,"column":37,"offset":7988},"indent":[]}}],"position":{"start":{"line":253,"column":12,"offset":7963},"end":{"line":253,"column":114,"offset":8065},"indent":[]}},{"type":"text","value":" in curly braces so we could inline the ","position":{"start":{"line":253,"column":114,"offset":8065},"end":{"line":253,"column":154,"offset":8105},"indent":[]}},{"type":"inlineCode","value":"map()","position":{"start":{"line":253,"column":154,"offset":8105},"end":{"line":253,"column":161,"offset":8112},"indent":[]}},{"type":"text","value":" result:","position":{"start":{"line":253,"column":161,"offset":8112},"end":{"line":253,"column":169,"offset":8120},"indent":[]}}],"position":{"start":{"line":253,"column":1,"offset":7952},"end":{"line":253,"column":169,"offset":8120},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":"function NumberList(props) {\n  const numbers = props.numbers;\n  return (\n    <ul>\n      {numbers.map((number) =>        <ListItem key={number.toString()}                  value={number} />      )}    </ul>\n  );\n}","position":{"start":{"line":255,"column":1,"offset":8122},"end":{"line":263,"column":4,"offset":8342},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://codepen.io/gaearon/pen/BLvYrB?editors=0010","children":[{"type":"strong","children":[{"type":"text","value":"Try it on CodePen","position":{"start":{"line":265,"column":4,"offset":8347},"end":{"line":265,"column":21,"offset":8364},"indent":[]}}],"position":{"start":{"line":265,"column":2,"offset":8345},"end":{"line":265,"column":23,"offset":8366},"indent":[]}}],"position":{"start":{"line":265,"column":1,"offset":8344},"end":{"line":265,"column":76,"offset":8419},"indent":[]}}],"position":{"start":{"line":265,"column":1,"offset":8344},"end":{"line":265,"column":76,"offset":8419},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Sometimes this results in clearer code, but this style can also be abused. Like in JavaScript, it is up to you to decide whether it is worth extracting a variable for readability. Keep in mind that if the ","position":{"start":{"line":267,"column":1,"offset":8421},"end":{"line":267,"column":206,"offset":8626},"indent":[]}},{"type":"inlineCode","value":"map()","position":{"start":{"line":267,"column":206,"offset":8626},"end":{"line":267,"column":213,"offset":8633},"indent":[]}},{"type":"text","value":" body is too nested, it might be a good time to ","position":{"start":{"line":267,"column":213,"offset":8633},"end":{"line":267,"column":261,"offset":8681},"indent":[]}},{"type":"link","title":null,"url":"https://reactjs.org/docs/components-and-props.html#extracting-components","children":[{"type":"text","value":"extract a component","position":{"start":{"line":267,"column":262,"offset":8682},"end":{"line":267,"column":281,"offset":8701},"indent":[]}}],"position":{"start":{"line":267,"column":261,"offset":8681},"end":{"line":267,"column":356,"offset":8776},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":267,"column":356,"offset":8776},"end":{"line":267,"column":357,"offset":8777},"indent":[]}}],"position":{"start":{"line":267,"column":1,"offset":8421},"end":{"line":267,"column":357,"offset":8777},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"So many times I have seen developers use the ","position":{"start":{"line":269,"column":1,"offset":8779},"end":{"line":269,"column":46,"offset":8824},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"index","position":{"start":{"line":269,"column":47,"offset":8825},"end":{"line":269,"column":52,"offset":8830},"indent":[]}}],"position":{"start":{"line":269,"column":46,"offset":8824},"end":{"line":269,"column":53,"offset":8831},"indent":[]}},{"type":"text","value":" of an item as its ","position":{"start":{"line":269,"column":53,"offset":8831},"end":{"line":269,"column":72,"offset":8850},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"key","position":{"start":{"line":269,"column":73,"offset":8851},"end":{"line":269,"column":76,"offset":8854},"indent":[]}}],"position":{"start":{"line":269,"column":72,"offset":8850},"end":{"line":269,"column":77,"offset":8855},"indent":[]}},{"type":"text","value":" when they render a list.","position":{"start":{"line":269,"column":77,"offset":8855},"end":{"line":269,"column":102,"offset":8880},"indent":[]}}],"position":{"start":{"line":269,"column":1,"offset":8779},"end":{"line":269,"column":102,"offset":8880},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"todos.map((todo, index) => (","position":{"start":{"line":271,"column":1,"offset":8882},"end":{"line":271,"column":29,"offset":8910},"indent":[]}},{"type":"break","position":{"start":{"line":271,"column":29,"offset":8910},"end":{"line":272,"column":1,"offset":8913},"indent":[1]}},{"type":"text","value":" <Todo {...todo} key={index} />","position":{"start":{"line":272,"column":1,"offset":8913},"end":{"line":272,"column":32,"offset":8944},"indent":[]}},{"type":"break","position":{"start":{"line":272,"column":32,"offset":8944},"end":{"line":273,"column":1,"offset":8947},"indent":[1]}},{"type":"text","value":" ));","position":{"start":{"line":273,"column":1,"offset":8947},"end":{"line":273,"column":5,"offset":8951},"indent":[]}},{"type":"break","position":{"start":{"line":273,"column":5,"offset":8951},"end":{"line":274,"column":1,"offset":8954},"indent":[1]}},{"type":"text","value":"}","position":{"start":{"line":274,"column":1,"offset":8954},"end":{"line":274,"column":2,"offset":8955},"indent":[]}}],"position":{"start":{"line":271,"column":1,"offset":8882},"end":{"line":274,"column":2,"offset":8955},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"It looks elegant and it does get rid of the warning (which was the ‘real' issue, right?). What is the danger here?","position":{"start":{"line":276,"column":1,"offset":8957},"end":{"line":276,"column":115,"offset":9071},"indent":[]}}],"position":{"start":{"line":276,"column":1,"offset":8957},"end":{"line":276,"column":115,"offset":9071},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"It may break your application and display wrong data!","position":{"start":{"line":278,"column":3,"offset":9075},"end":{"line":278,"column":56,"offset":9128},"indent":[]}}],"position":{"start":{"line":278,"column":3,"offset":9075},"end":{"line":278,"column":56,"offset":9128},"indent":[]}}],"position":{"start":{"line":278,"column":1,"offset":9073},"end":{"line":278,"column":56,"offset":9128},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Let me explain, a ","position":{"start":{"line":280,"column":1,"offset":9130},"end":{"line":280,"column":19,"offset":9148},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"key","position":{"start":{"line":280,"column":20,"offset":9149},"end":{"line":280,"column":23,"offset":9152},"indent":[]}}],"position":{"start":{"line":280,"column":19,"offset":9148},"end":{"line":280,"column":24,"offset":9153},"indent":[]}},{"type":"text","value":" is the only thing React uses to identify DOM elements. What happens if you push an item to the list or remove something in the middle? If the ","position":{"start":{"line":280,"column":24,"offset":9153},"end":{"line":280,"column":167,"offset":9296},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"key","position":{"start":{"line":280,"column":168,"offset":9297},"end":{"line":280,"column":171,"offset":9300},"indent":[]}}],"position":{"start":{"line":280,"column":167,"offset":9296},"end":{"line":280,"column":172,"offset":9301},"indent":[]}},{"type":"text","value":" is same as before React assumes that the DOM element represents the same component as before. But that is no longer true.","position":{"start":{"line":280,"column":172,"offset":9301},"end":{"line":280,"column":294,"offset":9423},"indent":[]}}],"position":{"start":{"line":280,"column":1,"offset":9130},"end":{"line":280,"column":294,"offset":9423},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://miro.medium.com/max/27/1*9N62zUlyJcQet8kr7e_FVg.png?q=20","alt":null,"position":{"start":{"line":282,"column":1,"offset":9425},"end":{"line":282,"column":70,"offset":9494},"indent":[]}}],"position":{"start":{"line":282,"column":1,"offset":9425},"end":{"line":282,"column":70,"offset":9494},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://miro.medium.com/max/630/1*9N62zUlyJcQet8kr7e_FVg.png","alt":null,"position":{"start":{"line":284,"column":1,"offset":9496},"end":{"line":284,"column":66,"offset":9561},"indent":[]}}],"position":{"start":{"line":284,"column":1,"offset":9496},"end":{"line":284,"column":66,"offset":9561},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Stephen describes the problem he run into on ","position":{"start":{"line":286,"column":1,"offset":9563},"end":{"line":286,"column":46,"offset":9608},"indent":[]}},{"type":"link","title":null,"url":"https://egghead.io/forums/lesson-discussion/topics/break-up-components-into-smaller-pieces-using-functional-components#post-6310","children":[{"type":"text","value":"egghead.io","position":{"start":{"line":286,"column":47,"offset":9609},"end":{"line":286,"column":57,"offset":9619},"indent":[]}}],"position":{"start":{"line":286,"column":46,"offset":9608},"end":{"line":286,"column":188,"offset":9750},"indent":[]}}],"position":{"start":{"line":286,"column":1,"offset":9563},"end":{"line":286,"column":188,"offset":9750},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To demonstrate the potential danger I created ","position":{"start":{"line":288,"column":1,"offset":9752},"end":{"line":288,"column":47,"offset":9798},"indent":[]}},{"type":"link","title":null,"url":"https://jsbin.com/wohima/edit?output","children":[{"type":"text","value":"a simple example","position":{"start":{"line":288,"column":48,"offset":9799},"end":{"line":288,"column":64,"offset":9815},"indent":[]}}],"position":{"start":{"line":288,"column":47,"offset":9798},"end":{"line":288,"column":103,"offset":9854},"indent":[]}},{"type":"text","value":" (","position":{"start":{"line":288,"column":103,"offset":9854},"end":{"line":288,"column":105,"offset":9856},"indent":[]}},{"type":"link","title":null,"url":"http://jsbin.com/wohima/edit?js,output","children":[{"type":"text","value":"with source","position":{"start":{"line":288,"column":106,"offset":9857},"end":{"line":288,"column":117,"offset":9868},"indent":[]}}],"position":{"start":{"line":288,"column":105,"offset":9856},"end":{"line":288,"column":158,"offset":9909},"indent":[]}},{"type":"text","value":").","position":{"start":{"line":288,"column":158,"offset":9909},"end":{"line":288,"column":160,"offset":9911},"indent":[]}}],"position":{"start":{"line":288,"column":1,"offset":9752},"end":{"line":288,"column":160,"offset":9911},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://miro.medium.com/max/630/1*GFYGPdDFLYcLFzx-E-GEcw.jpeg","alt":null,"position":{"start":{"line":290,"column":1,"offset":9913},"end":{"line":290,"column":67,"offset":9979},"indent":[]}}],"position":{"start":{"line":290,"column":1,"offset":9913},"end":{"line":290,"column":67,"offset":9979},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Screenshot of the example showing the danger of using the index as key.","position":{"start":{"line":292,"column":1,"offset":9981},"end":{"line":292,"column":72,"offset":10052},"indent":[]}}],"position":{"start":{"line":292,"column":1,"offset":9981},"end":{"line":292,"column":72,"offset":10052},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"It turns out, when nothing is passed React uses the ","position":{"start":{"line":294,"column":1,"offset":10054},"end":{"line":294,"column":53,"offset":10106},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"index","position":{"start":{"line":294,"column":54,"offset":10107},"end":{"line":294,"column":59,"offset":10112},"indent":[]}}],"position":{"start":{"line":294,"column":53,"offset":10106},"end":{"line":294,"column":60,"offset":10113},"indent":[]}},{"type":"text","value":" as ","position":{"start":{"line":294,"column":60,"offset":10113},"end":{"line":294,"column":64,"offset":10117},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"key","position":{"start":{"line":294,"column":65,"offset":10118},"end":{"line":294,"column":68,"offset":10121},"indent":[]}}],"position":{"start":{"line":294,"column":64,"offset":10117},"end":{"line":294,"column":69,"offset":10122},"indent":[]}},{"type":"text","value":" because it is the best guess at the moment. Moreover, it will warn you that it is suboptimal (it says that in a bit confusing words, yes). If you provide it by yourself React just thinks that you know what you are doing which — remember the example — can lead to unpredictable results.","position":{"start":{"line":294,"column":69,"offset":10122},"end":{"line":294,"column":355,"offset":10408},"indent":[]}}],"position":{"start":{"line":294,"column":1,"offset":10054},"end":{"line":294,"column":355,"offset":10408},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Better","position":{"start":{"line":296,"column":4,"offset":10413},"end":{"line":296,"column":10,"offset":10419},"indent":[]}}],"position":{"start":{"line":296,"column":1,"offset":10410},"end":{"line":296,"column":10,"offset":10419},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Each such item should have a ","position":{"start":{"line":298,"column":1,"offset":10421},"end":{"line":298,"column":30,"offset":10450},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"permanent","position":{"start":{"line":298,"column":31,"offset":10451},"end":{"line":298,"column":40,"offset":10460},"indent":[]}}],"position":{"start":{"line":298,"column":30,"offset":10450},"end":{"line":298,"column":41,"offset":10461},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":298,"column":41,"offset":10461},"end":{"line":298,"column":46,"offset":10466},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"unique","position":{"start":{"line":298,"column":47,"offset":10467},"end":{"line":298,"column":53,"offset":10473},"indent":[]}}],"position":{"start":{"line":298,"column":46,"offset":10466},"end":{"line":298,"column":54,"offset":10474},"indent":[]}},{"type":"text","value":" property. Ideally, it should be assigned when the item is created. Of course, I am speaking about an ","position":{"start":{"line":298,"column":54,"offset":10474},"end":{"line":298,"column":156,"offset":10576},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"id","position":{"start":{"line":298,"column":157,"offset":10577},"end":{"line":298,"column":159,"offset":10579},"indent":[]}}],"position":{"start":{"line":298,"column":156,"offset":10576},"end":{"line":298,"column":160,"offset":10580},"indent":[]}},{"type":"text","value":". Then we can use it the following way:","position":{"start":{"line":298,"column":160,"offset":10580},"end":{"line":298,"column":199,"offset":10619},"indent":[]}}],"position":{"start":{"line":298,"column":1,"offset":10421},"end":{"line":298,"column":199,"offset":10619},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"{","position":{"start":{"line":300,"column":1,"offset":10621},"end":{"line":300,"column":2,"offset":10622},"indent":[]}},{"type":"break","position":{"start":{"line":300,"column":2,"offset":10622},"end":{"line":301,"column":1,"offset":10625},"indent":[1]}},{"type":"text","value":" todos.map((todo) => (","position":{"start":{"line":301,"column":1,"offset":10625},"end":{"line":301,"column":23,"offset":10647},"indent":[]}},{"type":"break","position":{"start":{"line":301,"column":23,"offset":10647},"end":{"line":302,"column":1,"offset":10650},"indent":[1]}},{"type":"text","value":" <Todo {...todo} key={todo.id} />","position":{"start":{"line":302,"column":1,"offset":10650},"end":{"line":302,"column":34,"offset":10683},"indent":[]}},{"type":"break","position":{"start":{"line":302,"column":34,"offset":10683},"end":{"line":303,"column":1,"offset":10686},"indent":[1]}},{"type":"text","value":" ));","position":{"start":{"line":303,"column":1,"offset":10686},"end":{"line":303,"column":5,"offset":10690},"indent":[]}},{"type":"break","position":{"start":{"line":303,"column":5,"offset":10690},"end":{"line":304,"column":1,"offset":10693},"indent":[1]}},{"type":"text","value":"}","position":{"start":{"line":304,"column":1,"offset":10693},"end":{"line":304,"column":2,"offset":10694},"indent":[]}}],"position":{"start":{"line":300,"column":1,"offset":10621},"end":{"line":304,"column":2,"offset":10694},"indent":[1,1,1,1]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Note:","position":{"start":{"line":306,"column":5,"offset":10700},"end":{"line":306,"column":10,"offset":10705},"indent":[]}}],"position":{"start":{"line":306,"column":3,"offset":10698},"end":{"line":306,"column":12,"offset":10707},"indent":[]}},{"type":"text","value":" First look at the existing properties of the items. It is possible they already have something that can be used as an ","position":{"start":{"line":306,"column":12,"offset":10707},"end":{"line":306,"column":131,"offset":10826},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"id","position":{"start":{"line":306,"column":132,"offset":10827},"end":{"line":306,"column":134,"offset":10829},"indent":[]}}],"position":{"start":{"line":306,"column":131,"offset":10826},"end":{"line":306,"column":135,"offset":10830},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":306,"column":135,"offset":10830},"end":{"line":306,"column":136,"offset":10831},"indent":[]}}],"position":{"start":{"line":306,"column":3,"offset":10698},"end":{"line":306,"column":136,"offset":10831},"indent":[]}}],"position":{"start":{"line":306,"column":1,"offset":10696},"end":{"line":306,"column":136,"offset":10831},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"One way to do so it to just move the numbering one step up in the abstraction. Using a global index makes sure any two items would have different ","position":{"start":{"line":308,"column":1,"offset":10833},"end":{"line":308,"column":147,"offset":10979},"indent":[]}},{"type":"text","value":"_","position":{"start":{"line":308,"column":147,"offset":10979},"end":{"line":308,"column":149,"offset":10981},"indent":[]}},{"type":"text","value":"id_s.","position":{"start":{"line":308,"column":149,"offset":10981},"end":{"line":308,"column":154,"offset":10986},"indent":[]}}],"position":{"start":{"line":308,"column":1,"offset":10833},"end":{"line":308,"column":154,"offset":10986},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"let todoCounter = 1;const createNewTodo = (text) => ({","position":{"start":{"line":310,"column":1,"offset":10988},"end":{"line":310,"column":55,"offset":11042},"indent":[]}},{"type":"break","position":{"start":{"line":310,"column":55,"offset":11042},"end":{"line":311,"column":1,"offset":11045},"indent":[1]}},{"type":"text","value":" completed: false,","position":{"start":{"line":311,"column":1,"offset":11045},"end":{"line":311,"column":19,"offset":11063},"indent":[]}},{"type":"break","position":{"start":{"line":311,"column":19,"offset":11063},"end":{"line":312,"column":1,"offset":11066},"indent":[1]}},{"type":"text","value":" id: todoCounter++,","position":{"start":{"line":312,"column":1,"offset":11066},"end":{"line":312,"column":20,"offset":11085},"indent":[]}},{"type":"break","position":{"start":{"line":312,"column":20,"offset":11085},"end":{"line":313,"column":1,"offset":11088},"indent":[1]}},{"type":"text","value":" text","position":{"start":{"line":313,"column":1,"offset":11088},"end":{"line":313,"column":6,"offset":11093},"indent":[]}},{"type":"break","position":{"start":{"line":313,"column":6,"offset":11093},"end":{"line":314,"column":1,"offset":11096},"indent":[1]}},{"type":"text","value":"}","position":{"start":{"line":314,"column":1,"offset":11096},"end":{"line":314,"column":2,"offset":11097},"indent":[]}}],"position":{"start":{"line":310,"column":1,"offset":10988},"end":{"line":314,"column":2,"offset":11097},"indent":[1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Much better","position":{"start":{"line":316,"column":4,"offset":11102},"end":{"line":316,"column":15,"offset":11113},"indent":[]}}],"position":{"start":{"line":316,"column":1,"offset":11099},"end":{"line":316,"column":15,"offset":11113},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A production solution should use a more robust approach that would handle a distributed creation of items. For such, I recommend ","position":{"start":{"line":318,"column":1,"offset":11115},"end":{"line":318,"column":130,"offset":11244},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/ai/nanoid/","children":[{"type":"text","value":"nanoid","position":{"start":{"line":318,"column":131,"offset":11245},"end":{"line":318,"column":137,"offset":11251},"indent":[]}}],"position":{"start":{"line":318,"column":130,"offset":11244},"end":{"line":318,"column":169,"offset":11283},"indent":[]}},{"type":"text","value":". It quickly generates short non-sequential url-friendly unique ids. The code could look like the following:","position":{"start":{"line":318,"column":169,"offset":11283},"end":{"line":318,"column":277,"offset":11391},"indent":[]}}],"position":{"start":{"line":318,"column":1,"offset":11115},"end":{"line":318,"column":277,"offset":11391},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"import { nanoid } from 'nanoid';const createNewTodo = (text) => ({","position":{"start":{"line":320,"column":1,"offset":11393},"end":{"line":320,"column":67,"offset":11459},"indent":[]}},{"type":"break","position":{"start":{"line":320,"column":67,"offset":11459},"end":{"line":321,"column":1,"offset":11462},"indent":[1]}},{"type":"text","value":" completed: false,","position":{"start":{"line":321,"column":1,"offset":11462},"end":{"line":321,"column":19,"offset":11480},"indent":[]}},{"type":"break","position":{"start":{"line":321,"column":19,"offset":11480},"end":{"line":322,"column":1,"offset":11483},"indent":[1]}},{"type":"text","value":" id: nanoid(),","position":{"start":{"line":322,"column":1,"offset":11483},"end":{"line":322,"column":15,"offset":11497},"indent":[]}},{"type":"break","position":{"start":{"line":322,"column":15,"offset":11497},"end":{"line":323,"column":1,"offset":11500},"indent":[1]}},{"type":"text","value":" text","position":{"start":{"line":323,"column":1,"offset":11500},"end":{"line":323,"column":6,"offset":11505},"indent":[]}},{"type":"break","position":{"start":{"line":323,"column":6,"offset":11505},"end":{"line":324,"column":1,"offset":11508},"indent":[1]}},{"type":"text","value":"}","position":{"start":{"line":324,"column":1,"offset":11508},"end":{"line":324,"column":2,"offset":11509},"indent":[]}}],"position":{"start":{"line":320,"column":1,"offset":11393},"end":{"line":324,"column":2,"offset":11509},"indent":[1,1,1,1]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"TL;DR:","position":{"start":{"line":326,"column":5,"offset":11515},"end":{"line":326,"column":11,"offset":11521},"indent":[]}}],"position":{"start":{"line":326,"column":3,"offset":11513},"end":{"line":326,"column":13,"offset":11523},"indent":[]}},{"type":"text","value":" Generate a unique ","position":{"start":{"line":326,"column":13,"offset":11523},"end":{"line":326,"column":32,"offset":11542},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"id","position":{"start":{"line":326,"column":33,"offset":11543},"end":{"line":326,"column":35,"offset":11545},"indent":[]}}],"position":{"start":{"line":326,"column":32,"offset":11542},"end":{"line":326,"column":36,"offset":11546},"indent":[]}},{"type":"text","value":" for every item and use it as ","position":{"start":{"line":326,"column":36,"offset":11546},"end":{"line":326,"column":66,"offset":11576},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"key","position":{"start":{"line":326,"column":67,"offset":11577},"end":{"line":326,"column":70,"offset":11580},"indent":[]}}],"position":{"start":{"line":326,"column":66,"offset":11576},"end":{"line":326,"column":71,"offset":11581},"indent":[]}},{"type":"text","value":" when rendering the list.","position":{"start":{"line":326,"column":71,"offset":11581},"end":{"line":326,"column":96,"offset":11606},"indent":[]}}],"position":{"start":{"line":326,"column":3,"offset":11513},"end":{"line":326,"column":96,"offset":11606},"indent":[]}}],"position":{"start":{"line":326,"column":1,"offset":11511},"end":{"line":326,"column":96,"offset":11606},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Update: Exception from the rule","position":{"start":{"line":328,"column":4,"offset":11611},"end":{"line":328,"column":35,"offset":11642},"indent":[]}}],"position":{"start":{"line":328,"column":1,"offset":11608},"end":{"line":328,"column":35,"offset":11642},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Many people asked if they always, ","position":{"start":{"line":330,"column":1,"offset":11644},"end":{"line":330,"column":35,"offset":11678},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"always","position":{"start":{"line":330,"column":36,"offset":11679},"end":{"line":330,"column":42,"offset":11685},"indent":[]}}],"position":{"start":{"line":330,"column":35,"offset":11678},"end":{"line":330,"column":43,"offset":11686},"indent":[]}},{"type":"text","value":" have to generate ids. Others have suggested use cases when using the index as a key seems justifiable.","position":{"start":{"line":330,"column":43,"offset":11686},"end":{"line":330,"column":146,"offset":11789},"indent":[]}}],"position":{"start":{"line":330,"column":1,"offset":11644},"end":{"line":330,"column":146,"offset":11789},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"It is true that sometimes generating new ids is redundant and may be avoided. For example translation of license terms or list of contributors.","position":{"start":{"line":332,"column":1,"offset":11791},"end":{"line":332,"column":144,"offset":11934},"indent":[]}}],"position":{"start":{"line":332,"column":1,"offset":11791},"end":{"line":332,"column":144,"offset":11934},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To help you decide, I put together three conditions which these examples have in common:","position":{"start":{"line":334,"column":1,"offset":11936},"end":{"line":334,"column":89,"offset":12024},"indent":[]}}],"position":{"start":{"line":334,"column":1,"offset":11936},"end":{"line":334,"column":89,"offset":12024},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"the list and items are static-they are not computed and do not change;","position":{"start":{"line":336,"column":5,"offset":12030},"end":{"line":336,"column":75,"offset":12100},"indent":[]}}],"position":{"start":{"line":336,"column":5,"offset":12030},"end":{"line":336,"column":75,"offset":12100},"indent":[]}}],"position":{"start":{"line":336,"column":1,"offset":12026},"end":{"line":336,"column":75,"offset":12100},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"the items in the list have no ids;","position":{"start":{"line":337,"column":5,"offset":12105},"end":{"line":337,"column":39,"offset":12139},"indent":[]}}],"position":{"start":{"line":337,"column":5,"offset":12105},"end":{"line":337,"column":39,"offset":12139},"indent":[]}}],"position":{"start":{"line":337,"column":1,"offset":12101},"end":{"line":337,"column":39,"offset":12139},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"the list is ","position":{"start":{"line":338,"column":5,"offset":12144},"end":{"line":338,"column":17,"offset":12156},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"never","position":{"start":{"line":338,"column":18,"offset":12157},"end":{"line":338,"column":23,"offset":12162},"indent":[]}}],"position":{"start":{"line":338,"column":17,"offset":12156},"end":{"line":338,"column":24,"offset":12163},"indent":[]}},{"type":"text","value":" reordered or filtered.","position":{"start":{"line":338,"column":24,"offset":12163},"end":{"line":338,"column":47,"offset":12186},"indent":[]}}],"position":{"start":{"line":338,"column":5,"offset":12144},"end":{"line":338,"column":47,"offset":12186},"indent":[]}}],"position":{"start":{"line":338,"column":1,"offset":12140},"end":{"line":338,"column":47,"offset":12186},"indent":[]}}],"position":{"start":{"line":336,"column":1,"offset":12026},"end":{"line":338,"column":47,"offset":12186},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"When ","position":{"start":{"line":340,"column":1,"offset":12188},"end":{"line":340,"column":6,"offset":12193},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"all","position":{"start":{"line":340,"column":7,"offset":12194},"end":{"line":340,"column":10,"offset":12197},"indent":[]}}],"position":{"start":{"line":340,"column":6,"offset":12193},"end":{"line":340,"column":11,"offset":12198},"indent":[]}},{"type":"text","value":" of them are met, you ","position":{"start":{"line":340,"column":11,"offset":12198},"end":{"line":340,"column":33,"offset":12220},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"may safely use the index as a key","position":{"start":{"line":340,"column":35,"offset":12222},"end":{"line":340,"column":68,"offset":12255},"indent":[]}}],"position":{"start":{"line":340,"column":33,"offset":12220},"end":{"line":340,"column":70,"offset":12257},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":340,"column":70,"offset":12257},"end":{"line":340,"column":71,"offset":12258},"indent":[]}}],"position":{"start":{"line":340,"column":1,"offset":12188},"end":{"line":340,"column":71,"offset":12258},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Update 2: React, Preact, and ","position":{"start":{"line":342,"column":4,"offset":12263},"end":{"line":342,"column":33,"offset":12292},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":342,"column":33,"offset":12292},"end":{"line":342,"column":35,"offset":12294},"indent":[]}},{"type":"text","value":"react","position":{"start":{"line":342,"column":35,"offset":12294},"end":{"line":342,"column":40,"offset":12299},"indent":[]}}],"position":{"start":{"line":342,"column":1,"offset":12260},"end":{"line":342,"column":40,"offset":12299},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Although in this article I write about React, the problem is not exclusive to it. In similar libraries, like Preact, the danger is present, too. However, the effects can be different.","position":{"start":{"line":344,"column":1,"offset":12301},"end":{"line":344,"column":184,"offset":12484},"indent":[]}}],"position":{"start":{"line":344,"column":1,"offset":12301},"end":{"line":344,"column":184,"offset":12484},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"See the following StackOverflow question, where the last element disappears. Also please note the explanation in the answers provided by the creator of Preact,","position":{"start":{"line":346,"column":1,"offset":12486},"end":{"line":346,"column":160,"offset":12645},"indent":[]}}],"position":{"start":{"line":346,"column":1,"offset":12486},"end":{"line":346,"column":160,"offset":12645},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":347,"column":1,"offset":12646}}}}